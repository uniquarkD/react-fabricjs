{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///react-fabric.min.js","webpack:///webpack/bootstrap eeb7f14a8a4c32a1b0be","webpack:///./node_modules/fabric/dist/fabric.js","webpack:///./node_modules/prop-types/index.js","webpack:///./node_modules/node-libs-browser/node_modules/process/browser.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/base/Object.jsx","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/readable-stream/lib/_stream_duplex.js","webpack:///./node_modules/core-util-is/lib/util.js","webpack:///./node_modules/process-nextick-args/index.js","webpack:///external \"react\"","webpack:///./node_modules/fbjs/lib/emptyFunction.js","webpack:///./node_modules/fbjs/lib/invariant.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./node_modules/safe-buffer/index.js","webpack:///./src/StaticCanvas.jsx","webpack:///./node_modules/fbjs/lib/warning.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/url/url.js","webpack:///./node_modules/stream-http/index.js","webpack:///./node_modules/stream-http/lib/capability.js","webpack:///./node_modules/readable-stream/readable-browser.js","webpack:///./node_modules/readable-stream/lib/_stream_readable.js","webpack:///./node_modules/events/events.js","webpack:///./node_modules/readable-stream/lib/internal/streams/stream-browser.js","webpack:///./node_modules/readable-stream/lib/internal/streams/destroy.js","webpack:///./node_modules/readable-stream/lib/_stream_writable.js","webpack:///./node_modules/node-libs-browser/node_modules/string_decoder/index.js","webpack:///./node_modules/readable-stream/lib/_stream_transform.js","webpack:///./node_modules/deep-diff/index.es.js","webpack:///./src/mixin/observable.js","webpack:///./src/shape/Path.jsx","webpack:///./src/Text.jsx","webpack:///./src/react-fabric.js","webpack:///./node_modules/prop-types/factoryWithTypeCheckers.js","webpack:///./node_modules/object-assign/index.js","webpack:///./node_modules/prop-types/checkPropTypes.js","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/punycode/punycode.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/url/util.js","webpack:///./node_modules/querystring-es3/index.js","webpack:///./node_modules/querystring-es3/decode.js","webpack:///./node_modules/querystring-es3/encode.js","webpack:///./node_modules/stream-http/lib/request.js","webpack:///./node_modules/stream-http/lib/response.js","webpack:///./node_modules/readable-stream/lib/internal/streams/BufferList.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./node_modules/util-deprecate/browser.js","webpack:///./node_modules/readable-stream/lib/_stream_passthrough.js","webpack:///./node_modules/to-arraybuffer/index.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./node_modules/builtin-status-codes/browser.js","webpack:///./node_modules/https-browserify/index.js","webpack:///./src/mixin/collection.js","webpack:///./src/Canvas.jsx","webpack:///./src/shape/Circle.jsx","webpack:///./src/shape/Ellipse.jsx","webpack:///./src/shape/Line.jsx","webpack:///./src/shape/PathGroup.jsx","webpack:///./src/shape/Polygon.jsx","webpack:///./src/shape/Polyline.jsx","webpack:///./src/shape/Rect.jsx","webpack:///./src/shape/Triangle.jsx","webpack:///./src/Image.jsx","webpack:///./src/IText.jsx","webpack:///./src/ImageFilters.js","webpack:///./src/Color.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_10__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Buffer","process","fabric","version","document","window","jsdom","decodeURIComponent","createWindow","parentWindow","isTouchSupported","isLikelyNode","SHARED_ATTRIBUTES","DPI","reNum","fontPaths","iMatrix","canvasModule","perfLimitSizeTotal","maxCacheSideLimit","minCacheSideLimit","charWidthsCache","devicePixelRatio","webkitDevicePixelRatio","mozDevicePixelRatio","_removeEventListener","eventName","handler","__eventListeners","eventListener","indexOf","util","array","fill","observe","arguments","length","prop","on","push","stopObserving","fire","options","listenersForEvent","len","filter","value","Observable","off","trigger","Collection","_objects","add","apply","_onObjectAdded","renderOnAddRemove","renderAll","insertAt","index","nonSplicing","objects","getObjects","splice","remove","somethingRemoved","_onObjectRemoved","forEachObject","callback","context","type","item","isEmpty","size","contains","complexity","reduce","memo","current","CommonMethods","_setOptions","set","_initGradient","filler","colorStops","Gradient","_initPattern","source","Pattern","_initClipping","clipTo","functionBody","getFunctionBody","Function","_setObject","obj","_set","key","toggle","global","sqrt","Math","atan2","pow","abs","PiBy180","PI","removeFromArray","idx","getRandomInt","min","max","floor","random","degreesToRadians","degrees","radiansToDegrees","radians","rotatePoint","point","origin","subtractEquals","v","rotateVector","Point","x","y","addEquals","vector","sin","cos","transformPoint","t","ignoreOffset","makeBoundingBoxFromPoints","points","xPoints","minX","maxX","width","yPoints","minY","maxY","left","top","height","invertTransform","a","r","toFixed","number","fractionDigits","parseFloat","Number","parseUnit","fontSize","unit","exec","Text","DEFAULT_SVG_FONT_SIZE","falseFunction","getKlass","namespace","string","camelize","charAt","toUpperCase","slice","resolveNamespace","parts","split","loadImage","url","crossOrigin","img","createImage","onload","onerror","log","src","enlivenObjects","reviver","onLoaded","numLoadedObjects","numTotalObjects","enlivenedObjects","forEach","fromObject","error","enlivenPatterns","patterns","numLoadedPatterns","numPatterns","enlivenedPatterns","pattern","groupSVGElements","elements","path","PathGroup","sourcePath","populateWithProperties","destination","properties","toString","drawDashedLine","ctx","x2","y2","da","dx","dy","rot","dc","di","draw","save","translate","moveTo","rotate","restore","createCanvasElement","canvasEl","createElement","getContext","G_vmlCanvasManager","initElement","createAccessors","klass","propName","capitalizedPropName","setterName","getterName","proto","stateProperties","clipContext","receiver","beginPath","clip","multiplyTransformMatrices","b","is2x2","qrDecompose","angle","denom","scaleX","scaleY","skewX","skewY","translateX","translateY","customTransformMatrix","skewMatrixX","tan","scaleMatrix","resetObjectTransform","target","flipX","flipY","setAngle","fn","String","match","isTransparent","tolerance","temp","_isTransparent","imageData","getImageData","data","parsePreserveAspectRatioAttribute","attribute","align","meetOrSlice","alignX","alignY","aspectRatioAttrs","pop","clearFabricFontCache","fontFamily","limitDimsByArea","ar","maximumArea","roughWidth","perfLimitSizeY","capValue","arcToSegments","toX","toY","rx","ry","large","sweep","rotateX","argsString","_join","arcToSegmentsCache","th","sinTh","cosTh","fromX","fromY","px","py","rx2","ry2","py2","px2","pl","cx","cy","cx1","cy1","mTheta","calcVectorAngle","dtheta","segments","ceil","result","mDelta","mT","th3","segmentToBezier","th2","argsString2","segmentToBezierCache","costh2","sinth2","costh3","sinth3","cp1X","cp1Y","cp2X","cp2Y","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","x0","y0","x1","y1","x3","y3","boundsOfCurveCache","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","j","jlen","Array","join","drawArc","fx","fy","coords","tx","ty","segs","segsNorm","bezierCurveTo","getBoundsOfArc","bound","invoke","method","args","byProperty","find","value1","value2","k","condition","searchElement","TypeError","POSITIVE_INFINITY","NEGATIVE_INFINITY","map","every","some","val","rv","extend","deep","Element","clone","replace","character","capitalize","firstLetterOnly","toLowerCase","escapeXml","trim","Dummy","bind","thisArg","_this","concat","Subclass","callSuper","methodName","parentMethod","constructor","superclass","superClassMethod","console","createClass","initialize","parent","shift","subclasses","addMethods","emptyFunction","IS_DONTENUM_BUGGY","returnValue","valueOf","areHostMethods","methodNames","test","createListener","uid","wrappedHandler","createWrappedHandler","e","getElement","event","createDispatcher","handlers","handlersForEvent","getPointer","element","srcElement","unknown","scroll","getScrollLeftTop","pointerX","pointerY","_getPointer","pageProp","clientProp","touchProp","setElement","getUniqueId","__uniqueID","addListener","removeListener","shouldUseAddListenerRemoveListener","documentElement","shouldUseAttachEventDetachEvent","listeners","addEventListener","removeEventListener","listener","attachEvent","detachEvent","existingHandler","clientX","clientY","setStyle","styles","elementStyle","style","cssText","setOpacity","normalizedProperty","styleFloat","parseEl","supportsOpacity","opacity","supportsFilters","reOpacity","es","currentStyle","hasLayout","zoom","getById","id","getElementById","makeElement","tagName","attributes","el","className","htmlFor","setAttribute","addClass","wrapElement","wrapper","parentNode","replaceChild","appendChild","docElement","body","scrollLeft","scrollTop","host","nodeType","getElementStyle","getElementOffset","docElem","scrollLeftTop","doc","ownerDocument","box","offset","offsetAttributes","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","attr","parseInt","getBoundingClientRect","clientLeft","clientTop","sliceCanConvertNodelists","_slice","toArray","arrayLike","childNodes","err","arr","defaultView","getComputedStyle","undefined","makeElementUnselectable","onselectstart","selectProp","unselectable","makeElementSelectable","getScript","headEl","getElementsByTagName","scriptEl","loading","onreadystatechange","readyState","addParamToUrl","param","emptyFn","request","onComplete","xhr","makeXHR","parameters","open","setRequestHeader","send","factories","ActiveXObject","XMLHttpRequest","warn","noop","animate","requestAnimFrame","timestamp","time","start","Date","duration","finish","onChange","abort","easing","startValue","endValue","byValue","onStart","tick","ticktime","currentTime","timePerc","valuePerc","_requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","calculateColor","begin","end","pos","color","animateColor","fromColor","toColor","startColor","Color","getSource","endColor","colorEasing","normalize","asin","elastic","opts","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","ease","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","normalizeAttr","attributesMap","normalizeValue","parentAttributes","parsed","isArray","transformMatrix","parseTransformAttribute","visible","isNaN","_setStrokeFillOpacity","colorAttributes","setAlpha","getAlpha","toRgba","_getMultipleNodes","nodeNames","nodeName","nodeList","nodeArray","parseStyleString","oStyle","chunk","pair","parseStyleObject","getGlobalStylesForElement","svgUid","rule","cssRules","elementMatchesRule","selectors","firstMatching","parentMatching","selectorMatches","doesSomeParentMatch","selector","matcher","classNames","getAttribute","RegExp","elementById","node","nodelist","parseUseDirectives","attrs","xlink","substr","el2","cloneNode","currentTrans","oldLength","applyViewboxTransform","el3","nodeValue","firstChild","removeAttribute","viewBoxWidth","viewBoxHeight","matrix","viewBoxAttr","widthAttr","heightAttr","preserveAspectRatio","missingViewBox","reViewBoxTagNames","reViewBoxAttrValue","missingDimAttr","toBeParsed","parsedDim","translateMatrix","hasAncestorWithNodeName","reAllowedSVGTagNames","reNotAllowedAncestors","reAllowedParents","display","visibility","transform","fill-opacity","fill-rule","font-family","font-size","font-style","font-weight","stroke-dasharray","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-decoration","text-anchor","stroke","gradientDefs","rotateMatrix","multiplierX","multiplierY","skewMatrix","commaWsp","scale","transforms","transformList","reTransformList","reTransform","attributeValue","matrices","operation","combinedMatrix","parseSVGDocument","parsingOptions","__uid","descendants","selectNodes","getGradientDefs","getCSSRules","parseElements","instances","reFontDeclaration","parseFontDeclaration","fontStyle","fontWeight","lineHeight","tagArray","elList","idsToXlinkMap","parseAttributes","ownAttributes","parseStyleAttribute","normalizedAttr","normalizedValue","normalizedStyle","font","mergedAttrs","ElementsParser","parse","parsePointsAttribute","parsedPoints","rules","allRules","styleContents","textContent","text","ruleObj","declaration","propertyValuePairs","_rule","loadSVGFromURL","xml","responseXML","responseText","async","loadXML","results","_options","loadSVGFromString","DOMParser","parser","parseFromString","numElements","createObjects","_obj","createObject","fromElement","_createObject","checkIfDone","createCallback","resolveGradient","instanceFillValue","gradientId","that","scalarAdd","scalar","scalarAddEquals","subtract","scalarSubtract","scalarSubtractEquals","multiply","multiplyEquals","divide","divideEquals","eq","lt","lte","gt","gte","lerp","distanceFrom","midPointFrom","setXY","setX","setY","setFromPoint","swap","Intersection","status","appendPoint","appendPoints","intersectLineLine","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","intersectLinePolygon","inter","intersectPolygonPolygon","points1","points2","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","inter1","inter2","inter3","inter4","_tryParsingColor","setSource","hue2rgb","q","colorNameMap","sourceFromHex","sourceFromRgb","sourceFromHsl","_rgbToHsl","g","h","round","_source","toRgb","toHsl","hsl","toHsla","toHex","toHexa","alpha","toGrayscale","average","currentAlpha","toBlackWhite","threshold","overlayWith","otherColor","otherSource","reRGBa","reHSLa","reHex","aqua","black","blue","fuchsia","gray","grey","green","lime","maroon","navy","olive","orange","purple","red","silver","teal","white","yellow","fromRgb","fromSource","fromRgba","fromHsl","fromHsla","fromHex","isShortNotation","isRGBa","substring","oColor","getColorStop","colorAlpha","keyValuePairs","getLinearCoords","getRadialCoords","_convertPercentUnitsToValues","gradientUnits","propValue","addFactor","multFactor","ellipseMatrix","scaleFactor","offsetX","offsetY","gradientTransform","addColorStop","position","toObject","propertiesToInclude","toSVG","markup","commonAttributes","needsSwap","sort","group","reverse","minRadius","maxRadius","percentageShift","colorStop","toLive","gradient","createLinearGradient","createRadialGradient","instance","colorStopEls","forObject","repeat","setOptions","NUM_FRACTION_DIGITS","toDataURL","patternSource","patternWidth","patternHeight","patternOffsetX","patternOffsetY","patternImgSrc","complete","naturalWidth","naturalHeight","createPattern","Shadow","blur","affectStroke","includeDefaultValues","_parseShadow","shadow","shadowStr","offsetsAndBlur","reOffsetsAndBlur","fBoxX","fBoxY","StaticCanvas","CANVAS_INIT_ERROR","Error","_initStatic","backgroundColor","backgroundImage","overlayColor","overlayImage","stateful","controlsAboveOverlay","allowTouchScrolling","imageSmoothingEnabled","viewportTransform","backgroundVpt","overlayVpt","onBeforeScaleRotate","enableRetinaScaling","vptCoords","skipOffscreen","cb","_createLowerCanvas","_initOptions","_setImageSmoothing","interactive","_initRetinaScaling","setOverlayImage","setBackgroundImage","setBackgroundColor","setOverlayColor","calcOffset","_isRetinaScaling","getRetinaScaling","lowerCanvasEl","contextContainer","_offset","image","__setBgOverlayImage","__setBgOverlayColor","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","Image","_createCanvasElement","_applyCanvasStyle","getWidth","getHeight","setWidth","setDimensions","setHeight","dimensions","cssValue","cssOnly","_setBackstoreDimension","backstoreOnly","_setCssDimension","upperCanvasEl","cacheCanvasEl","wrapperEl","getZoom","setViewportTransform","vpt","activeGroup","_activeGroup","setCoords","calcViewportBoundaries","zoomToPoint","before","after","setZoom","absolutePan","relativePan","setupState","canvas","clearContext","clearRect","clear","_hasITextHandlers","_mouseUpITextHandler","_iTextInstances","canvasToDrawOn","renderCanvas","iVpt","tl","br","tr","bl","_renderBackground","_renderObjects","drawControls","_renderOverlay","render","_renderBackgroundOrOverlay","fillStyle","fillRect","getCenter","centerObjectH","_centerObject","getCenterPoint","centerObjectV","centerObject","center","viewportCenterObject","vpCenter","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","setPositionByOrigin","toDatalessJSON","toDatalessObject","_toObjectMethod","_toObjects","__serializeBgOverlay","excludeFromExport","_toObject","originalValue","bgImage","overlay","background","svgViewportTransformation","_setSVGPreamble","_setSVGHeader","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","encoding","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","row","rowIndex","_char","charIndex","fontList","_setSVGObject","sendToBack","objs","unshift","bringToFront","sendBackwards","intersecting","newIdx","objsMoved","_findNewLowerIndex","intersectsWithObject","isContainedWithinObject","bringForward","_findNewUpperIndex","dispose","DataURLExporter","EMPTY_JSON","supports","setLineDash","toJSON","BaseBrush","strokeLineCap","strokeLineJoin","strokeDashArray","setShadow","_setBrushStyles","contextTop","strokeStyle","lineWidth","lineCap","lineJoin","_setShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","_resetShadow","PencilBrush","_points","onMouseDown","pointer","_prepareForDrawing","_captureDrawingPath","_render","onMouseMove","onMouseUp","_finalizeAndAddPath","_reset","_addPoint","pointerPoint","p1","p2","midPoint","quadraticCurveTo","lineTo","convertPointsToSVGPath","createPath","pathData","Path","strokeWidth","translateToGivenOrigin","originX","originY","closePath","CircleBrush","drawDot","addPoint","arc","radius","originalRenderOnAddRemove","circles","circle","Circle","Group","circleRadius","circleColor","SprayBrush","density","dotWidth","dotWidthVariance","randomOpacity","optimizeOverlapping","sprayChunks","addSprayChunk","rects","ilen","sprayChunk","rect","Rect","_getOptimizedRects","uniqueRects","uniqueRectsArray","sprayChunkPoints","globalAlpha","PatternBrush","getPatternSrc","patternCanvas","patternCtx","getPatternSrcFunction","getPattern","topLeft","_getLeftTopCoords","supportLineDash","Canvas","_initInteractive","_createCacheCanvas","uniScaleTransform","uniScaleKey","centeredScaling","centeredRotation","centeredKey","altActionKey","selection","selectionKey","altSelectionKey","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","hoverCursor","moveCursor","defaultCursor","freeDrawingCursor","rotationCursor","containerClass","perPixelTargetFind","targetFindTolerance","skipTargetFind","isDrawingMode","preserveObjectStacking","snapAngle","snapThreshold","stopContextMenu","fireRightClick","fireMiddleClick","_currentTransform","_groupSelector","_initWrapperElement","_createUpperCanvas","_initEventListeners","freeDrawingBrush","_chooseObjectsToRender","getActiveGroup","activeObject","getActiveObject","objsToRender","activeGroupObjects","contextTopDirty","renderTop","_drawSelection","_resetCurrentTransform","original","_shouldCenterTransform","action","_setOriginToCenter","mouseXSign","mouseYSign","containsPoint","xy","_normalizePointer","_findTargetCorner","calcTransformMatrix","invertedM","vptPointer","restorePointerVpt","isTargetTransparent","hasBorders","transparentCorners","contextCache","originalColor","selectionBackgroundColor","active","_renderControls","_shouldClearSelection","evented","selectable","centerTransform","altKey","_getOriginFromCorner","corner","_getActionFromCorner","_setupCurrentTransform","ex","ey","lastX","lastY","theta","shiftKey","_translateObject","newLeft","newTop","moveX","moveY","_changeSkewTransformOrigin","mouseMove","by","origins","0","skew","originA","originB","flipSign","skewSign","_skewObject","skewed","lockSkewingX","lockSkewingY","actualMouseByOrigin","constraintPosition","actualMouseByCenter","toLocalPoint","lastMouseByCenter","dim","_getTransformedDimensions","translateToOriginPoint","_setObjectSkew","localMouse","_dim","newValue","newDim","dimNoSkew","otherBy","_otherBy","_by","newDimMouse","atan","_scaleObject","lockScalingX","lockScalingY","lockScalingFlip","scaled","_setLocalMouse","_setObjectScale","changeX","changeY","forbidScalingX","forbidScalingY","_scaleObjectEqually","newScaleX","newScaleY","_flipObject","dist","lastDist","signX","signY","padding","_rotateObject","lastAngle","curAngle","hasRoated","rightAngleLocked","leftAngleLocked","setCursor","cursor","_resetObjectTransform","groupSelector","aleft","atop","_setLineDash","strokeRect","findTarget","skipGroup","activeTarget","activeTargetSubs","targets","_searchPossibleTargets","_fireOverOutEvents","overOpt","outOpt","hoveredTarget","_hoveredTarget","previousTarget","nextTarget","_checkTarget","isEditing","normalizedPointer","subTarget","subTargetCheck","ignoreZoom","cssScale","boundsWidth","boundsHeight","bottom","right","lowerCanvasClass","_copyCanvasStyle","class","touch-action","fromEl","toEl","getSelectionContext","getSelectionElement","_setActiveObject","_activeObject","onDeselect","setActiveObject","currentActiveObject","_discardActiveObject","discardActiveObject","_setActiveGroup","setActiveGroup","_discardActiveGroup","destroy","discardActiveGroup","deactivateAll","allObjects","deactivateAllWithDispatch","removeListeners","removeChild","_drawObjectsControls","originalProperties","_realizeGroupTransformOnObject","_unwindGroupTransformOnObject","originalValues","realizeTransform","_setCursorFromEvent","checkClick","which","button","cursorOffset","mr","mb","ml","cursorMap","_bindEvents","_onResize","_onMouseDown","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","passive","eventjs","_onGesture","_onDrag","_onOrientationChange","_onShake","_onLongPress","eventsBinded","_onMouseUp","self","__onTransformGesture","__onDrag","__onMouseWheel","hiddenTextarea","focus","__onOrientationChange","__onShake","__onLongPress","stopPropagation","preventDefault","__onMouseDown","__onMouseUp","__onMouseMove","_shouldRender","isMoving","_previousPointer","_handleEvent","_isCurrentlyDrawing","_onMouseUpInDrawingMode","searchTarget","isClick","_finalizeCurrentTransform","actionPerformed","shouldRender","_maybeGroupObjects","__corner","eventType","targetObj","subTargets","_scaling","_restoreOriginXY","hasStateChanged","_previousOriginX","_previousOriginY","originPoint","_onMouseDownInDrawingMode","_onMouseMoveInDrawingMode","shouldGroup","_shouldGroup","_handleGrouping","_beforeTransform","saveState","_setCenterToOrigin","touches","_transformObject","reset","_beforeScaleTransform","_performTransformAction","_fire","_onScale","currentAction","_setCornerCursor","_getRotatedCornerCursor","hasRotatingPoint","getAngle","_updateActiveGroup","_createActiveGroup","saveCoords","removeWithUpdate","addWithUpdate","_createGroup","isActiveLower","groupObjects","exitEditing","_groupSelectedObjects","_collectObjects","currentObject","selectionX1Y1","selectionX2Y2","intersectsWithRect","isContainedWithinRect","setObjectsCoords","supportQuality","format","quality","multiplier","cropping","__toDataURLWithMultiplier","origWidth","origHeight","scaledWidth","scaledHeight","newZoom","vp","newVp","originalInteractive","__toDataURL","toDataURLWithMultiplier","loadFromDatalessJSON","json","loadFromJSON","serialized","JSON","_enlivenObjects","_setBgOverlay","loaded","cbIfLoaded","__setBgOverlay","enlivedObject","_toDataURL","_toDataURLWithMultiplier","stringify","cloneWithoutData","backgroundImageOpacity","backgroundImageStretch","supportsLineDash","objectCaching","cornerSize","borderColor","borderDashArray","cornerColor","cornerStrokeColor","cornerStyle","cornerDashArray","fillRule","globalCompositeOperation","strokeMiterLimit","borderOpacityWhenMoving","borderScaleFactor","minScaleLimit","hasControls","rotatingPointOffset","lockMovementX","lockMovementY","lockRotation","lockUniScaling","statefullCache","noScaleCache","dirty","cacheProperties","_cacheProperties","_cacheCanvas","_cacheContext","_updateCacheCanvas","_limitCacheSize","dims","maximumSide","cacheSideLimit","limitedDims","zoomX","zoomY","_getCacheCanvasDimensions","objectScale","getObjectScaling","_getNonTransformedDimensions","retina","minCacheSize","dimensionsChanged","cacheWidth","cacheHeight","zoomChanged","shouldRedraw","additionalWidth","additionalHeight","shouldResizeCanvas","canvasWidth","canvasHeight","sizeGrowing","sizeShrinking","cacheTranslationX","cacheTranslationY","setTransform","fromLeft","_transformDone","_removeDefaultValues","scaling","_constrainScale","setOnGroup","setSourcePath","getViewportTransform","isNotVisible","noTransform","isOnScreen","_setupCompositeOperation","drawSelectionBackground","_setOpacity","shouldCache","isCacheDirty","propertySet","drawObject","drawCacheOnCanvas","needsItsOwnCache","isCaching","willDrawShadow","_setStrokeStyles","_setFillStyles","drawImage","skipCanvas","_removeShadow","miterLimit","dashArray","alternative","drawBordersInGroup","drawBorders","multX","multY","_applyPatternGradientTransform","patternTransform","_renderFill","_renderStroke","_renderDashedStroke","cloneAsImage","dataUrl","boundingRect","getBoundingRect","origParams","getLeft","getTop","originalCanvas","isType","setGradient","setPatternFill","setColor","shouldCenterOrigin","_resetOrigin","centerH","viewportCenterH","centerV","viewportCenterV","viewportCenter","getLocalPointer","pClicked","objectLeftTop","_fromObject","forceAsync","extraParam","originXOffset","originYOffset","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","leftTop","getPointByOrigin","adjustPosition","to","offsetFrom","offsetTo","hypotFull","xFull","yFull","_originalOriginX","_originalOriginY","getCoords","multiplyMatrices","oCoords","aCoords","absolute","calculate","calcCoords","pointTL","pointBR","other","lines","_getImageLines","_findCrossPoints","centerPoint","topline","rightline","bottomline","leftline","xi","iLine","xcount","lineKey","getBoundingRectWidth","getBoundingRectHeight","scaleToWidth","boundingRectFactor","scaleToHeight","_calculateCurrentDimensions","currentWidth","currentHeight","_angle","_hypotenuse","mtr","skipAbsolute","_setCornerCoords","_calcRotateMatrix","dimensionMatrix","_calcDimensionsTransformMatrix","flipping","bbox","dimX","dimY","getSvgColorString","str","getSvgStyles","skipShadow","getSvgFilter","getSvgId","getSvgTransform","getSkewX","getSkewY","translatePart","anglePart","scalePart","skewXPart","skewYPart","addTranslateX","flipXPart","addTranslateY","getSvgTransformMatrix","_createBaseSVGMarkup","saveProps","props","tmpObj","_isEqual","origValue","currentValue","firstPass","keys","dashedPropertySet","isVML","_controlsVisibility","isControlVisible","newTheta","cornerHypotenuse","cosHalfOffset","sinHalfOffset","wh","rotateHeight","scaleOffset","_drawControl","control","controlName","_getControlsVisibility","setControlVisible","setControlsVisibility","FX_DURATION","fxCenterObjectH","callbacks","empty","fxCenterObjectV","fxRemove","skipCallbacks","propsToAnimate","_animate","propPair","from","valueProgress","timeProgress","makeEdgeToOriginGetter","propertyNames","originValues","axis1","axis2","dimension","nearest","farthest","coordProps","Line","_setWidthHeight","_getLeftToOriginX","_getTopToOriginY","cp","calcLinePoints","origStrokeStyle","xMult","yMult","ATTRIBUTE_NAMES","parsedAttributes","_callback","line","isValidRadius","pi","startAngle","endAngle","setRadius","startX","startY","endX","endY","largeFlag","getRadiusX","getRadiusY","Triangle","widthBy2","heightBy2","piBy2","Ellipse","getRx","getRy","ellipse","_initRxRy","w","isRounded","Polyline","_calcDimensions","pathOffset","diffX","diffY","commonRender","Polygon","_toString","commandLengths","repeatedCommands","M","fromArray","_parsePath","_setPositionDimensions","calcDim","_parseDimensions","_renderPathCommands","tempX","tempY","previous","subpathStartX","subpathStartY","controlX","controlY","chunks","addTransform","currentPath","coordsStr","coordsParsed","re","command","commandLength","repeatedCommand","klen","aX","aY","pathUrl","paths","parseDimensionsFromPaths","xC","yC","parentCache","caching","isSameColor","pathsToObject","originalDefaults","firstPathFill","pathFill","total","originalPaths","pathGroup","_lockProperties","isAlreadyGrouped","_updateObjectsCoords","_calcBounds","skipCoordsChange","_updateObjectCoords","__origHasControls","objectLeft","objectTop","_restoreObjectsState","_setObjectActive","delegatedProperties","textDecoration","textAlign","objsToObject","_renderObject","originalHasRotatingPoint","_restoreObjectState","_originalLeft","_originalTop","hasMoved","onlyWidthHeight","iLen","jLen","_getBounds","minXY","maxXY","_lastScaleX","_lastScaleY","minimumScaleTrigger","filters","resizeFilters","_initElement","_element","_originalElement","_initConfig","applyFilters","_filteredEl","setCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","getSvgSrc","origFill","filtered","_src","setSrc","imgElement","forResizing","replacement","retinaScaling","minimumScale","applyTo","toBuffer","pngCompression","elementToDraw","imageMargins","_findMargins","_needsResize","marginX","marginY","scales","_resetWidthHeight","CSS_CANVAS","_initFilters","fromURL","imgOptions","preserveAR","_getAngleValueForStraighten","straighten","fxStraighten","straightenObject","fxStraightenObject","BaseFilter","Brightness","brightness","putImageData","Convolute","opaque","dstOff","scx","scy","srcOff","wt","weights","pixels","side","halfSide","sw","sh","output","createImageData","dst","alphaFac","GradientTransparency","Grayscale","Invert","Mask","mask","channel","maskEl","maskCanvasEl","maskImageData","maskData","Noise","noise","rand","Pixelate","blocksize","_i","_ilen","_j","_jlen","RemoveWhite","distance","limit","Sepia","avg","Sepia2","Tint","tintR","tintG","tintB","alpha1","Multiply","Blend","mode","tg","_r","_g","_b","isImage","_el","tmpCanvas","Resize","resizeType","lanczosLobes","rcpScaleX","rcpScaleY","oW","oH","dW","dH","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","multW","multH","signW","signH","doneW","doneH","stepW","stepH","tmpCtx","u","weight","fX","fY","ratioX","icenter","ratioY","range2X","cacheLanc","range2Y","lanczos","rcpRatioX","rcpRatioY","srcData","destData","destImg","srcImg","lobes","xx","xDiff","yDiff","chnl","origPix","w4","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","centerY","yy","centerX","w0","ColorMatrix","Contrast","contrast","contrastF","Saturate","saturate","adjust","_dimensionAffectingProps","_reNewline","_reSpacesAndTabs","textBackgroundColor","_fontSizeFraction","_fontSizeMult","charSpacing","__skipDimension","_initDimensions","_setTextStyles","_textLines","_splitTextIntoLines","_clearCache","_getTextWidth","cursorWidth","_getTextHeight","_renderTextLinesBackground","_renderText","_renderTextDecoration","_renderTextFill","_renderTextStroke","textBaseline","_getFontDeclaration","_getHeightOfSingleLine","_getHeightOfLine","maxWidth","_getLineWidth","currentLineWidth","_renderChars","chars","shortM","additionalSpace","_getWidthOfCharSpacing","measureText","_renderTextLine","lineIndex","word","words","charOffset","wordsWidth","_getWidthOfWords","widthDiff","numSpaces","spaceWidth","leftOffset","charCount","_getLeftOffset","_getTopOffset","isEmptyStyles","_renderTextCommon","lineHeights","heightOfLine","maxHeight","_getLineLeftOffset","lineLeftOffset","lineTopOffset","originalFill","__lineWidths","__lineHeights","_shouldClearDimensionCache","shouldClear","_forceClearCache","wordCount","_measureLine","finalWidth","halfOfVerticalBox","offsets","oLen","additionalProperties","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","textBgRects","textSpans","textTopOffset","textLeftOffset","_setSVGBg","_setSVGTextLineBg","_setSVGTextLineText","yPos","_setSVGTextLineJustifed","_getFillAttributes","fillColor","textHeightScaleFactor","lineHeightDiff","scaledDiff","textHeight","offX","IText","selectionStart","selectionEnd","editable","editingBorderColor","cursorColor","cursorDelay","cursorDuration","_reSpace","_currentCursorOpacity","_selectionDirection","_abortCursorAnimation","__widthOfSpace","initBehavior","p3","setSelectionStart","_updateAndFire","setSelectionEnd","_fireSelectionChanged","_updateTextarea","getSelectionStyles","startIndex","endIndex","loc","get2DCursorLocation","_getStyleDeclaration","setSelectionStyles","_extendStyles","_getLineStyle","_setLineStyle","_setStyleDeclaration","clearContextTop","cursorOffsetCache","renderCursorOrSelection","_clearTextArea","boundaries","_getCursorBoundaries","renderCursor","renderSelection","getCurrentCharStyle","getCurrentCharFontSize","getCurrentCharColor","typeOfBoundaries","_getCursorBoundariesOffsets","lineLeft","topOffset","_getWidthOfChar","cursorLocation","charHeight","__isMousedown","startLine","endLine","lineOffset","realLineHeight","boxWidth","j2","j2len","_renderCharsFast","prevStyle","thisStyle","charsToRender","_hasStyleChanged","_renderChar","skipFillStrokeCheck","charWidth","shouldFill","shouldStroke","_charWidth","decl","_getHeightOfChar","_applyCharStylesGetWidth","jChar","fillText","strokeText","_renderCharDecoration","decoration","decorationWeight","positions","underline","line-through","overline","decorations","leftCache","topCache","widthCache","heightCache","colorCache","_getWidthOfCharsAt","_getCacheProp","styleDeclaration","_getFontCache","cacheProp","charDecl","_applyFontStyles","returnCloneOrEmpty","_deleteStyleDeclaration","_deleteLineStyle","_isMeasuring","_getWidthOfSpace","currentCharHeight","initAddedHandler","initRemovedHandler","initCursorSelectionHandlers","initDoubleClickSimulation","mouseMoveHandler","selected","_initCanvasHandlers","_removeCanvasHandlers","_tick","_currentTickState","_animateCursor","targetOpacity","completeMethod","tickState","isAborted","_onTickComplete","_cursorTimeout1","clearTimeout","_currentTickCompleteState","initDelayedCursor","restart","delay","abortCursorAnimation","_cursorTimeout2","selectAll","getSelectedText","findWordBoundaryLeft","startFrom","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","getNumNewLinesInSelectedText","selectedText","numNewLines","searchWordBoundary","direction","reNonWord","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditing","exitEditingOnOthers","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","initMouseMoveHandler","getSelectionStartFromPointer","currentStart","currentEnd","__selectionStartOnMouseDown","restartCursorIfNeeded","inCompositionMode","_calcTextareaPosition","upperCanvas","_savedProps","_restoreEditingProps","overCursor","isTextChanged","_removeExtraneousStyles","_removeCharsFromTo","_removeSingleCharAndStyle","isBeginningOfLine","indexStyle","removeStyleObject","insertChars","_chars","useCopiedStyle","insertChar","copiedTextStyle","skipUpdate","styleObject","isEndOfLine","insertStyleObjects","insertNewlineStyleObject","shiftLineStyles","currentCharStyle","newLineStyles","somethingAdded","numIndex","insertCharStyleObject","currentLineStyles","currentLineStylesCloned","numericIndex","newStyle","clonedStyles","numericLine","_removeStyleObject","_getTextOnPreviousLine","lIndex","textOnPreviousLine","newCharIndexOnPrevLine","insertNewline","setSelectionStartEndWithShift","newSelection","setSelectionInBoundaries","__lastClickTime","__lastLastClickTime","__lastPointer","__newClickTime","newPointer","isTripleClick","_stopEvent","isDoubleClick","__lastIsEditing","__lastSelected","initMousedownHandler","initMouseupHandler","initClicks","__mousedownX","__mousedownY","setCursorByClick","_isObjectMoved","mouseOffset","prevWidth","widthOfLine","_getNewSelectionStartFromOffset","distanceBtwLastCharAndCursor","distanceBtwNextCharAndCursor","onKeyDown","onKeyUp","onInput","copy","cut","paste","onCompositionStart","onCompositionUpdate","onCompositionEnd","_clickHandlerInitialized","onClick","keysMap","8","9","27","13","33","34","35","36","37","38","39","40","46","ctrlKeysMapUp","67","88","ctrlKeysMapDown","65","keyCode","ctrlKey","metaKey","stopImmediatePropagation","_copyDone","diff","charsToInsert","offsetEnd","textLength","newTextLength","prevCompositionLength","compositionStart","forwardDelete","moveCursorRight","removeChars","clipboardData","_getClipboardData","setData","copiedText","getData","_getWidthBeforeCursor","textBeforeCursor","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","getUpCursorOffset","foundMatch","textOnLine","widthOfCharsOnLine","indexOnLine","widthOfChar","leftEdge","rightEdge","offsetFromLeftEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","_moveLeft","_moveRight","moveCursorLeftWithoutShift","change","moveCursorLeftWithShift","actionName","moveCursorRightWithShift","moveCursorRightWithoutShift","changed","_removeCharsNearCursor","leftLineBoundary","leftWordBoundary","_setSVGTextLineChars","_getSVGLineTopOffset","styleDecl","_createTextCharSpan","_createTextCharBg","lastHeight","fillStyles","Textbox","minWidth","dynamicMinWidth","__cachedLines","getTextboxControlVisibility","_generateStyleMap","realLineCount","realLineCharCount","_styleMap","_wrapText","wrapped","_wrapLine","_measureText","wordWidth","infixWidth","largestWordWidth","lineJustStarted","originalAlign","__oldScaleX","numLines","removed","lineLen","lineChars","getMinWidth","setObjectScaleOverridden","_refreshControlsVisibility","override","tmp","oURL","URL","port","protocol","reqHandler","HTTPS","HTTP","req","hostname","response","setEncoding","statusCode","errno","ECONNREFUSED","message","requestFs","readFile","createImageAndCallBack","eval","createCanvasForNode","nodeCanvasOptions","nodeCanvas","nodeCacheCanvas","FabricCanvas","fabricCanvas","Font","originaInitStatic","createPNGStream","createJPEGStream","origSetBackstoreDimension","env","NODE_ENV","REACT_ELEMENT_TYPE","Symbol","for","isValidElement","$$typeof","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","run","Item","nextTick","title","browser","argv","versions","once","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","_interopRequireDefault","default","_classCallCheck","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","writable","setPrototypeOf","__proto__","_createClass","defineProperties","descriptor","protoProps","staticProps","_react","_react2","_propTypes","_propTypes2","_fabric","_deepDiff","_deepDiff2","_observable","_observable2","FabricObject","_React$Component","getPrototypeOf","state","getClipTo","getFill","getFlipX","getFlipY","getOpacity","getOriginX","getOriginY","getScaleX","getScaleY","getShadow","getStrokeWidth","getTransformMatrix","getVisible","renderf","setClipTo","setFill","setFlipX","setFlipY","setLeft","setOriginX","setOriginY","setScaleX","setScaleY","setStroke","setStrokeWidth","setTop","setTransformMatrix","setVisible","getObject","nextProps","_this2","difference","comparsion","rhs","eventChanged","_this3","setState","initEvent","onAdded","onRemoved","onSelected","onDeSelected","onModified","onRotating","onScaling","onMoving","onSkewing","onMousedown","onMouseup","onMouseover","onMouseout","onMousewheel","onMousedbclick","Component","propTypes","bool","func","oneOf","oneOfType","instanceOf","defaultProps","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","RangeError","Uint8Array","arg","encodingOrOffset","allocUnsafe","ArrayBuffer","fromArrayBuffer","fromString","assertSize","alloc","checked","isEncoding","byteLength","actual","write","fromArrayLike","byteOffset","isBuffer","buffer","isnan","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","bidirectionalIndexOf","arrayIndexOf","lastIndexOf","read","buf","indexSize","readUInt16BE","arrLength","valLength","foundIndex","found","hexWrite","remaining","strLen","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","fromByteArray","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","ret","out","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","stringtrim","INVALID_BASE64_RE","units","Infinity","leadSurrogate","charCodeAt","byteArray","hi","lo","toByteArray","INSPECT_MAX_BYTES","foo","subarray","poolSize","_augment","species","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","code","ctor","superCtor","super_","TempCtor","Duplex","Readable","Writable","readable","allowHalfOpen","onend","_writableState","ended","processNextTick","onEndNT","objectKeys","inherits","_readableState","destroyed","_destroy","objectToString","isBoolean","isNull","isNullOrUndefined","isNumber","isString","isSymbol","isUndefined","isRegExp","isObject","isDate","isError","isFunction","isPrimitive","arg1","arg2","arg3","makeEmptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","invariant","f","validateFormat","argIndex","framesToPop","copyProps","SafeBuffer","_collection","_collection2","allOnTop","getChild","ref","prevRef","prevProps","prevState","_this4","Children","children","child","doNotAdd","beforeRender","beforeSelectionCleared","afterRender","onCanvasCleared","onMouseOver","onMouseOut","onMouseDbclick","onObjectAdded","onObjectModified","onObjectRemoved","onObjectRotating","onObjectMoving","onObjectScaling","onObjectSelected","onPathCreated","onSelectionCleared","_this5","_props","cloneElement","emptyJSON","warning","printWarning","_len","_key","_len2","_key2","Url","slashes","auth","hash","search","query","pathname","href","urlParse","parseQueryString","slashesDenoteHost","urlFormat","urlResolve","relative","resolve","urlResolveObject","resolveObject","punycode","protocolPattern","portPattern","simplePathPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","javascript:","hostlessProtocol","slashedProtocol","http","https","ftp","gopher","file","http:","https:","ftp:","gopher:","file:","querystring","queryIndex","splitter","uSplit","slashRegex","rest","simplePath","lowerProto","hostEnd","hec","atSign","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","toASCII","ae","esc","encodeURIComponent","escape","qm","rel","tkeys","tk","tkey","rkeys","rk","rkey","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","authInHost","last","hasTrailingSlash","up","isAbsolute","ClientRequest","statusCodes","defaultProtocol","location","headers","Agent","defaultMaxSockets","STATUS_CODES","METHODS","getXHR","XDomainRequest","checkTypeSupport","responseType","fetch","ReadableStream","blobConstructor","Blob","haveArrayBuffer","haveSlice","arraybuffer","msstream","mozchunkedarraybuffer","overrideMimeType","vbArray","VBArray","Stream","Transform","PassThrough","_uint8ArrayToBuffer","_isUint8Array","OurUint8Array","emitter","_events","ReadableState","stream","objectMode","readableObjectMode","hwm","highWaterMark","defaultHwm","BufferList","pipes","pipesCount","flowing","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","defaultEncoding","awaitDrain","readingMore","decoder","StringDecoder","_read","readableAddChunk","addToFront","skipChunkCheck","onEofChunk","er","chunkInvalid","addChunk","maybeReadMore","needMoreData","emitReadable","computeNewHighWaterMark","MAX_HWM","howMuchToRead","head","debug","emitReadable_","flow","maybeReadMore_","pipeOnDrain","EElistenerCount","nReadingNextTick","resume","resume_","fromList","fromListPartial","hasStrings","copyFromBufferString","copyFromBuffer","next","nb","tail","endReadable","endReadableNT","xs","EventEmitter","debugUtil","debuglog","destroyImpl","kProxyEvents","_undestroy","undestroy","isPaused","enc","nOrig","doRead","pipe","dest","pipeOpts","onunpipe","unpipeInfo","hasUnpiped","cleanup","onclose","onfinish","ondrain","unpipe","ondata","cleanedUp","needDrain","increasedAwaitDrain","pause","doEnd","stdout","stderr","endFn","dests","ev","wrap","paused","_fromList","_maxListeners","defaultMaxListeners","setMaxListeners","newListener","warned","trace","fired","listenerCount","evlistener","readableDestroyed","writableDestroyed","errorEmitted","emitErrorNT","ending","finished","setImmediate","CorkedRequest","entry","onCorkedFinish","nop","WritableState","writableObjectMode","finalCalled","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writecb","writelen","bufferedRequest","lastBufferedRequest","pendingcb","prefinished","bufferedRequestCount","corkedRequestsFree","realHasInstance","_write","writev","_writev","final","_final","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","isBuf","newChunk","doWrite","onwriteError","finishMaybe","onwriteStateUpdate","needFinish","clearBuffer","asyncWrite","afterWrite","onwriteDrain","holder","count","allBuffers","callFinal","prefinish","need","endWritable","corkReq","internalUtil","deprecate","getBuffer","_","hasInstance","cork","uncork","setDefaultEncoding","assertEncoding","isBufferEncoding","passThroughWrite","utf16DetectIncompleteChar","charReceived","charLength","base64DetectIncompleteChar","surrogateSize","detectIncompleteChar","charBuffer","charStr","available","charCode","cr","TransformState","afterTransform","needTransform","transforming","writechunk","writeencoding","ts","_transformState","rs","_transform","flush","_flush","done","ws","err2","__webpack_exports__","Diff","kind","DiffEdit","DiffNew","DiffDeleted","DiffArray","arrayRemove","realTypeOf","subject","deepDiff","lhs","changes","prefilter","stack","alt","ltype","rtype","ldefined","rdefined","akeys","pkeys","accumulateDiff","accum","applyArrayChange","it","applyChange","revertArrayChange","revertChange","applyDiff","$scope","conflict","conflictResolution","DeepDiff","observableDiff","isConflict","noConflict","observableMixin","delgete","_get","desc","getOwnPropertyDescriptor","_Object","_Object2","_FabricObject","assign","defaultSvgFontSize","imageFilter","Itext","_StaticCanvas2","_StaticCanvas3","_Canvas2","_Canvas3","_Circle2","_Circle3","_Ellipse2","_Ellipse3","_Line2","_Line3","_Path2","_Path3","_PathGroup2","_PathGroup3","_Polygon2","_Polygon3","_Polyline2","_Polyline3","_Rect2","_Rect3","_Triangle2","_Triangle3","_Image2","_Image3","_Text2","_Text3","_IText","_IText2","_ImageFilters","_ImageFilters2","_Color","_Color2","ReactPropTypesSecret","checkPropTypes","throwOnDirectAccess","getIteratorFn","maybeIterable","iteratorFn","ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","is","PropTypeError","createChainableTypeChecker","validate","checkType","isRequired","componentName","propFullName","secret","ANONYMOUS","cacheKey","manualPropTypeCallCache","manualPropTypeWarningCount","chainedCheckType","createPrimitiveTypeChecker","expectedType","getPropType","getPreciseType","createArrayOfTypeChecker","typeChecker","createInstanceTypeChecker","expectedClass","expectedClassName","getClassName","createEnumTypeChecker","expectedValues","createObjectOfTypeChecker","propType","createUnionTypeChecker","arrayOfTypeCheckers","checker","getPostfixForTypeWarning","createShapeTypeChecker","shapeTypes","createStrictShapeTypeChecker","allKeys","isNode","step","iterator","entries","ReactPropTypes","symbol","any","arrayOf","objectOf","shape","exact","PropTypes","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","test1","getOwnPropertyNames","test2","test3","letter","symbols","typeSpecs","values","getStack","typeSpecName","loggedTypeFailures","shim","getShim","placeHoldersCount","b64","placeHolders","Arr","L","revLookup","tripletToBase64","num","lookup","encodeChunk","uint8","extraBytes","len2","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","__WEBPACK_AMD_DEFINE_RESULT__","errors","mapDomain","regexSeparators","ucs2decode","extra","counter","ucs2encode","stringFromCharCode","basicToDigit","base","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","damp","baseMinusTMin","tMax","decode","input","basic","oldi","baseMinusT","inputLength","initialN","bias","initialBias","delimiter","maxInt","tMin","encode","handledCPCount","basicLength","handledCPCountPlusOne","qMinusT","toUnicode","regexPunycode","regexNonASCII","freeGlobal","overflow","not-basic","invalid-input","ucs2","webpackPolyfill","qs","sep","regexp","maxKeys","kstr","vstr","stringifyPrimitive","ks","decideMode","preferBinary","useFetch","capability","statusValid","toArrayBuffer","IncomingMessage","rStates","readyStates","_opts","_body","_headers","setHeader","_mode","_onFinish","lowerName","unsafeHeaders","getHeader","header","removeHeader","_destroyed","headersObj","headersList","keyName","credentials","withCredentials","then","_fetchResponse","_connect","reason","_xhr","ontimeout","_response","LOADING","DONE","_onXHRProgress","onprogress","flushHeaders","setNoDelay","setSocketKeepAlive","UNSENT","OPENED","HEADERS_RECEIVED","reader","catch","rawHeaders","trailers","rawTrailers","statusMessage","statusText","getReader","_pos","responseURL","getAllResponseHeaders","matches","_charset","mimeType","charsetMatch","responseBody","newData","MSStreamReader","readAsArrayBuffer","copyBuffer","Timeout","clearFn","_id","_clearFn","setInterval","clearInterval","close","unref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","_onTimeout","clearImmediate","task","tasksByHandle","nextHandle","registerImmediate","handle","runIfPresent","currentlyRunningATask","attachTo","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","messagePrefix","onGlobalMessage","MessageChannel","port1","port2","html","script","msg","deprecated","config","localStorage","arrayCopy","100","101","102","200","201","202","203","204","205","206","207","208","226","300","301","302","303","304","305","307","308","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","421","422","423","424","425","426","428","429","431","451","500","501","502","503","504","505","506","507","508","509","510","511","params","scheme","collectionMixin","_delgete$state$canvas","_delgete$state$canvas2","_StaticCanvas","_Path","css","_Text","onChanged","onSelectionChanged","onEditingEntered","onEditingExited"],"mappings":"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","file":"react-fabric.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-fabricjs\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"react-fabricjs\"] = factory(root[\"react\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_10__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-fabricjs\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"react-fabricjs\"] = factory(root[\"react\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_10__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/assets/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 34);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(Buffer, process) {/* build: `node build.js modules=ALL exclude=json,gestures minifier=uglifyjs` */\n /*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\nvar fabric = fabric || { version: \"1.7.19\" };\nif (true) {\n  exports.fabric = fabric;\n}\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  fabric.document = document;\n  fabric.window = window;\n  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n  window.fabric = fabric;\n}\nelse {\n  // assume we're running under node.js when document/window are not present\n  fabric.document = __webpack_require__(41)\n    .jsdom(\n      decodeURIComponent(\"%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E\")\n    );\n\n  if (fabric.document.createWindow) {\n    fabric.window = fabric.document.createWindow();\n  } else {\n    fabric.window = fabric.document.parentWindow;\n  }\n}\n\n/**\n * True when in environment that supports touch events\n * @type boolean\n */\n\nfabric.isTouchSupported = 'ontouchstart' in fabric.window;\n\n/**\n * True when in environment that's probably Node.js\n * @type boolean\n */\nfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n                      typeof window === 'undefined';\n\n/* _FROM_SVG_START_ */\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nfabric.SHARED_ATTRIBUTES = [\n  \"display\",\n  \"transform\",\n  \"fill\", \"fill-opacity\", \"fill-rule\",\n  \"opacity\",\n  \"stroke\", \"stroke-dasharray\", \"stroke-linecap\",\n  \"stroke-linejoin\", \"stroke-miterlimit\",\n  \"stroke-opacity\", \"stroke-width\",\n  \"id\"\n];\n/* _FROM_SVG_END_ */\n\n/**\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n */\nfabric.DPI = 96;\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)';\nfabric.fontPaths = { };\nfabric.iMatrix = [1, 0, 0, 1, 0, 0];\nfabric.canvasModule = 'canvas';\n\n/**\n * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.perfLimitSizeTotal = 2097152;\n\n/**\n * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.maxCacheSideLimit = 4096;\n\n/**\n * Lowest pixel limit for cache canvases, set at 256PX\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.minCacheSideLimit = 256;\n\n/**\n * Cache Object for widths of chars in text rendering.\n */\nfabric.charWidthsCache = { };\n\n/**\n * Device Pixel Ratio\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n */\nfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n                          fabric.window.webkitDevicePixelRatio ||\n                          fabric.window.mozDevicePixelRatio ||\n                          1;\n\n\n(function() {\n\n  /**\n   * @private\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  function _removeEventListener(eventName, handler) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n    var eventListener = this.__eventListeners[eventName];\n    if (handler) {\n      eventListener[eventListener.indexOf(handler)] = false;\n    }\n    else {\n      fabric.util.array.fill(eventListener, false);\n    }\n  }\n\n  /**\n   * Observes specified event\n   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n   * @memberOf fabric.Observable\n   * @alias on\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function observe(eventName, handler) {\n    if (!this.__eventListeners) {\n      this.__eventListeners = { };\n    }\n    // one object with key/value pairs was passed\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        this.on(prop, eventName[prop]);\n      }\n    }\n    else {\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n      this.__eventListeners[eventName].push(handler);\n    }\n    return this;\n  }\n\n  /**\n   * Stops event observing for a particular event handler. Calling this method\n   * without arguments removes all handlers for all events\n   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n   * @memberOf fabric.Observable\n   * @alias off\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function to be deleted from EventListeners\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function stopObserving(eventName, handler) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (arguments.length === 0) {\n      for (eventName in this.__eventListeners) {\n        _removeEventListener.call(this, eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n      for (var prop in eventName) {\n        _removeEventListener.call(this, prop, eventName[prop]);\n      }\n    }\n    else {\n      _removeEventListener.call(this, eventName, handler);\n    }\n    return this;\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n   * @memberOf fabric.Observable\n   * @alias trigger\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function fire(eventName, options) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    var listenersForEvent = this.__eventListeners[eventName];\n    if (!listenersForEvent) {\n      return;\n    }\n\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n    }\n    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n      return value !== false;\n    });\n    return this;\n  }\n\n  /**\n   * @namespace fabric.Observable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n   * @see {@link http://fabricjs.com/events|Events demo}\n   */\n  fabric.Observable = {\n    observe: observe,\n    stopObserving: stopObserving,\n    fire: fire,\n\n    on: observe,\n    off: stopObserving,\n    trigger: fire\n  };\n})();\n\n\n/**\n * @namespace fabric.Collection\n */\nfabric.Collection = {\n\n  _objects: [],\n\n  /**\n   * Adds objects to collection, Canvas or Group, then renders canvas\n   * (if `renderOnAddRemove` is not `false`).\n   * in case of Group no changes to bounding box are made.\n   * Objects should be instances of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the add method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  add: function () {\n    this._objects.push.apply(this._objects, arguments);\n    if (this._onObjectAdded) {\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        this._onObjectAdded(arguments[i]);\n      }\n    }\n    this.renderOnAddRemove && this.renderAll();\n    return this;\n  },\n\n  /**\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * An object should be an instance of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the insertAt method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {Object} object Object to insert\n   * @param {Number} index Index to insert object at\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  insertAt: function (object, index, nonSplicing) {\n    var objects = this.getObjects();\n    if (nonSplicing) {\n      objects[index] = object;\n    }\n    else {\n      objects.splice(index, 0, object);\n    }\n    this._onObjectAdded && this._onObjectAdded(object);\n    this.renderOnAddRemove && this.renderAll();\n    return this;\n  },\n\n  /**\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  remove: function() {\n    var objects = this.getObjects(),\n        index, somethingRemoved = false;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      index = objects.indexOf(arguments[i]);\n\n      // only call onObjectRemoved if an object was actually removed\n      if (index !== -1) {\n        somethingRemoved = true;\n        objects.splice(index, 1);\n        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && somethingRemoved && this.renderAll();\n    return this;\n  },\n\n  /**\n   * Executes given function for each object in this group\n   * @param {Function} callback\n   *                   Callback invoked with current object as first argument,\n   *                   index - as second and an array of all objects - as third.\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n   *                   when no `context` argument is given\n   *\n   * @param {Object} context Context (aka thisObject)\n   * @return {Self} thisArg\n   * @chainable\n   */\n  forEachObject: function(callback, context) {\n    var objects = this.getObjects();\n    for (var i = 0, len = objects.length; i < len; i++) {\n      callback.call(context, objects[i], i, objects);\n    }\n    return this;\n  },\n\n  /**\n   * Returns an array of children objects of this instance\n   * Type parameter introduced in 1.3.10\n   * @param {String} [type] When specified, only objects of this type are returned\n   * @return {Array}\n   */\n  getObjects: function(type) {\n    if (typeof type === 'undefined') {\n      return this._objects;\n    }\n    return this._objects.filter(function(o) {\n      return o.type === type;\n    });\n  },\n\n  /**\n   * Returns object at specified index\n   * @param {Number} index\n   * @return {Self} thisArg\n   */\n  item: function (index) {\n    return this.getObjects()[index];\n  },\n\n  /**\n   * Returns true if collection contains no objects\n   * @return {Boolean} true if collection is empty\n   */\n  isEmpty: function () {\n    return this.getObjects().length === 0;\n  },\n\n  /**\n   * Returns a size of a collection (i.e: length of an array containing its objects)\n   * @return {Number} Collection size\n   */\n  size: function() {\n    return this.getObjects().length;\n  },\n\n  /**\n   * Returns true if collection contains an object\n   * @param {Object} object Object to check against\n   * @return {Boolean} `true` if collection contains an object\n   */\n  contains: function(object) {\n    return this.getObjects().indexOf(object) > -1;\n  },\n\n  /**\n   * Returns number representation of a collection complexity\n   * @return {Number} complexity\n   */\n  complexity: function () {\n    return this.getObjects().reduce(function (memo, current) {\n      memo += current.complexity ? current.complexity() : 0;\n      return memo;\n    }, 0);\n  }\n};\n\n\n/**\n * @namespace fabric.CommonMethods\n */\nfabric.CommonMethods = {\n\n  /**\n   * Sets object's properties from options\n   * @param {Object} [options] Options object\n   */\n  _setOptions: function(options) {\n    for (var prop in options) {\n      this.set(prop, options[prop]);\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Gradient to\n   */\n  _initGradient: function(filler, property) {\n    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n      this.set(property, new fabric.Gradient(filler));\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Pattern to\n   * @param {Function} [callback] callback to invoke after pattern load\n   */\n  _initPattern: function(filler, property, callback) {\n    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n      this.set(property, new fabric.Pattern(filler, callback));\n    }\n    else {\n      callback && callback();\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [options] Options object\n   */\n  _initClipping: function(options) {\n    if (!options.clipTo || typeof options.clipTo !== 'string') {\n      return;\n    }\n\n    var functionBody = fabric.util.getFunctionBody(options.clipTo);\n    if (typeof functionBody !== 'undefined') {\n      this.clipTo = new Function('ctx', functionBody);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _setObject: function(obj) {\n    for (var prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  },\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  set: function(key, value) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    }\n    else {\n      if (typeof value === 'function' && key !== 'clipTo') {\n        this._set(key, value(this.get(key)));\n      }\n      else {\n        this._set(key, value);\n      }\n    }\n    return this;\n  },\n\n  _set: function(key, value) {\n    this[key] = value;\n  },\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  toggle: function(property) {\n    var value = this.get(property);\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n    return this;\n  },\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get: function(property) {\n    return this[property];\n  }\n};\n\n\n(function(global) {\n\n  var sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      pow = Math.pow,\n      abs = Math.abs,\n      PiBy180 = Math.PI / 180;\n\n  /**\n   * @namespace fabric.util\n   */\n  fabric.util = {\n\n    /**\n     * Removes value from an array.\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} array\n     * @param {*} value\n     * @return {Array} original array\n     */\n    removeFromArray: function(array, value) {\n      var idx = array.indexOf(value);\n      if (idx !== -1) {\n        array.splice(idx, 1);\n      }\n      return array;\n    },\n\n    /**\n     * Returns random number between 2 specified ones.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} min lower limit\n     * @param {Number} max upper limit\n     * @return {Number} random value (between min and max)\n     */\n    getRandomInt: function(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\n     * Transforms degrees to radians.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} degrees value in degrees\n     * @return {Number} value in radians\n     */\n    degreesToRadians: function(degrees) {\n      return degrees * PiBy180;\n    },\n\n    /**\n     * Transforms radians to degrees.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} radians value in radians\n     * @return {Number} value in degrees\n     */\n    radiansToDegrees: function(radians) {\n      return radians / PiBy180;\n    },\n\n    /**\n     * Rotates `point` around `origin` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Point} point The point to rotate\n     * @param {fabric.Point} origin The origin of the rotation\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {fabric.Point} The new rotated point\n     */\n    rotatePoint: function(point, origin, radians) {\n      point.subtractEquals(origin);\n      var v = fabric.util.rotateVector(point, radians);\n      return new fabric.Point(v.x, v.y).addEquals(origin);\n    },\n\n    /**\n     * Rotates `vector` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} vector The vector to rotate (x and y)\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {Object} The new rotated point\n     */\n    rotateVector: function(vector, radians) {\n      var sin = Math.sin(radians),\n          cos = Math.cos(radians),\n          rx = vector.x * cos - vector.y * sin,\n          ry = vector.x * sin + vector.y * cos;\n      return {\n        x: rx,\n        y: ry\n      };\n    },\n\n    /**\n     * Apply transform t to point p\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Point} p The point to transform\n     * @param  {Array} t The transform\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n     * @return {fabric.Point} The transformed point\n     */\n    transformPoint: function(p, t, ignoreOffset) {\n      if (ignoreOffset) {\n        return new fabric.Point(\n          t[0] * p.x + t[2] * p.y,\n          t[1] * p.x + t[3] * p.y\n        );\n      }\n      return new fabric.Point(\n        t[0] * p.x + t[2] * p.y + t[4],\n        t[1] * p.x + t[3] * p.y + t[5]\n      );\n    },\n\n    /**\n     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n     * @param {Array} points 4 points array\n     * @return {Object} Object with left, top, width, height properties\n     */\n    makeBoundingBoxFromPoints: function(points) {\n      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n          minX = fabric.util.array.min(xPoints),\n          maxX = fabric.util.array.max(xPoints),\n          width = Math.abs(minX - maxX),\n          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n          minY = fabric.util.array.min(yPoints),\n          maxY = fabric.util.array.max(yPoints),\n          height = Math.abs(minY - maxY);\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Invert transformation t\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} t The transform\n     * @return {Array} The inverted transform\n     */\n    invertTransform: function(t) {\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n      r[4] = -o.x;\n      r[5] = -o.y;\n      return r;\n    },\n\n    /**\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number|String} number number to operate on\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n     * @return {Number}\n     */\n    toFixed: function(number, fractionDigits) {\n      return parseFloat(Number(number).toFixed(fractionDigits));\n    },\n\n    /**\n     * Converts from attribute value to pixel value if applicable.\n     * Returns converted pixels or original value not converted.\n     * @param {Number|String} value number to operate on\n     * @param {Number} fontSize\n     * @return {Number|String}\n     */\n    parseUnit: function(value, fontSize) {\n      var unit = /\\D{0,2}$/.exec(value),\n          number = parseFloat(value);\n      if (!fontSize) {\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      }\n      switch (unit[0]) {\n        case 'mm':\n          return number * fabric.DPI / 25.4;\n\n        case 'cm':\n          return number * fabric.DPI / 2.54;\n\n        case 'in':\n          return number * fabric.DPI;\n\n        case 'pt':\n          return number * fabric.DPI / 72; // or * 4 / 3\n\n        case 'pc':\n          return number * fabric.DPI / 72 * 12; // or * 16\n\n        case 'em':\n          return number * fontSize;\n\n        default:\n          return number;\n      }\n    },\n\n    /**\n     * Function which always returns `false`.\n     * @static\n     * @memberOf fabric.util\n     * @return {Boolean}\n     */\n    falseFunction: function() {\n      return false;\n    },\n\n    /**\n     * Returns klass \"Class\" object of given namespace\n     * @memberOf fabric.util\n     * @param {String} type Type of object (eg. 'circle')\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @return {Object} klass \"Class\"\n     */\n    getKlass: function(type, namespace) {\n      // capitalize first letter only\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n      return fabric.util.resolveNamespace(namespace)[type];\n    },\n\n    /**\n     * Returns object of given namespace\n     * @memberOf fabric.util\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n     * @return {Object} Object for given namespace (default fabric)\n     */\n    resolveNamespace: function(namespace) {\n      if (!namespace) {\n        return fabric;\n      }\n\n      var parts = namespace.split('.'),\n          len = parts.length, i,\n          obj = global || fabric.window;\n\n      for (i = 0; i < len; ++i) {\n        obj = obj[parts[i]];\n      }\n\n      return obj;\n    },\n\n    /**\n     * Loads image element from given url and passes it to a callback\n     * @memberOf fabric.util\n     * @param {String} url URL representing an image\n     * @param {Function} callback Callback; invoked with loaded image\n     * @param {*} [context] Context to invoke callback in\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n     */\n    loadImage: function(url, callback, context, crossOrigin) {\n      if (!url) {\n        callback && callback.call(context, url);\n        return;\n      }\n\n      var img = fabric.util.createImage();\n\n      /** @ignore */\n      img.onload = function () {\n        callback && callback.call(context, img);\n        img = img.onload = img.onerror = null;\n      };\n\n      /** @ignore */\n      img.onerror = function() {\n        fabric.log('Error loading ' + img.src);\n        callback && callback.call(context, null, true);\n        img = img.onload = img.onerror = null;\n      };\n\n      // data-urls appear to be buggy with crossOrigin\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n      if (url.indexOf('data') !== 0 && crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      img.src = url;\n    },\n\n    /**\n     * Creates corresponding fabric instances from their object representations\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenObjects: function(objects, callback, namespace, reviver) {\n      objects = objects || [];\n\n      function onLoaded() {\n        if (++numLoadedObjects === numTotalObjects) {\n          callback && callback(enlivenedObjects);\n        }\n      }\n\n      var enlivenedObjects = [],\n          numLoadedObjects = 0,\n          numTotalObjects = objects.length,\n          forceAsync = true;\n\n      if (!numTotalObjects) {\n        callback && callback(enlivenedObjects);\n        return;\n      }\n\n      objects.forEach(function (o, index) {\n        // if sparse array\n        if (!o || !o.type) {\n          onLoaded();\n          return;\n        }\n        var klass = fabric.util.getKlass(o.type, namespace);\n        klass.fromObject(o, function (obj, error) {\n          error || (enlivenedObjects[index] = obj);\n          reviver && reviver(o, obj, error);\n          onLoaded();\n        }, forceAsync);\n      });\n    },\n\n    /**\n     * Create and wait for loading of patterns\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenPatterns: function(patterns, callback) {\n      patterns = patterns || [];\n\n      function onLoaded() {\n        if (++numLoadedPatterns === numPatterns) {\n          callback && callback(enlivenedPatterns);\n        }\n      }\n\n      var enlivenedPatterns = [],\n          numLoadedPatterns = 0,\n          numPatterns = patterns.length;\n\n      if (!numPatterns) {\n        callback && callback(enlivenedPatterns);\n        return;\n      }\n\n      patterns.forEach(function (p, index) {\n        if (p && p.source) {\n          new fabric.Pattern(p, function(pattern) {\n            enlivenedPatterns[index] = pattern;\n            onLoaded();\n          });\n        }\n        else {\n          enlivenedPatterns[index] = p;\n          onLoaded();\n        }\n      });\n    },\n\n    /**\n     * Groups SVG elements (usually those retrieved from SVG document)\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} elements SVG elements to group\n     * @param {Object} [options] Options object\n     * @param {String} path Value to set sourcePath to\n     * @return {fabric.Object|fabric.PathGroup}\n     */\n    groupSVGElements: function(elements, options, path) {\n      var object;\n\n      object = new fabric.PathGroup(elements, options);\n\n      if (typeof path !== 'undefined') {\n        object.sourcePath = path;\n      }\n      return object;\n    },\n\n    /**\n     * Populates an object with properties of another object\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} source Source object\n     * @param {Object} destination Destination object\n     * @return {Array} properties Propertie names to include\n     */\n    populateWithProperties: function(source, destination, properties) {\n      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n        for (var i = 0, len = properties.length; i < len; i++) {\n          if (properties[i] in source) {\n            destination[properties[i]] = source[properties[i]];\n          }\n        }\n      }\n    },\n\n    /**\n     * Draws a dashed line between two points\n     *\n     * This method is used to draw dashed line around selection area.\n     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n     *\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x  start x coordinate\n     * @param {Number} y start y coordinate\n     * @param {Number} x2 end x coordinate\n     * @param {Number} y2 end y coordinate\n     * @param {Array} da dash array pattern\n     */\n    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n      var dx = x2 - x,\n          dy = y2 - y,\n          len = sqrt(dx * dx + dy * dy),\n          rot = atan2(dy, dx),\n          dc = da.length,\n          di = 0,\n          draw = true;\n\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.moveTo(0, 0);\n      ctx.rotate(rot);\n\n      x = 0;\n      while (len > x) {\n        x += da[di++ % dc];\n        if (x > len) {\n          x = len;\n        }\n        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n        draw = !draw;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Creates canvas element and initializes it via excanvas if necessary\n     * @static\n     * @memberOf fabric.util\n     * @param {CanvasElement} [canvasEl] optional canvas element to initialize;\n     * when not given, element is created implicitly\n     * @return {CanvasElement} initialized canvas element\n     */\n    createCanvasElement: function(canvasEl) {\n      canvasEl || (canvasEl = fabric.document.createElement('canvas'));\n      /* eslint-disable camelcase */\n      if (!canvasEl.getContext && typeof G_vmlCanvasManager !== 'undefined') {\n        G_vmlCanvasManager.initElement(canvasEl);\n      }\n      /* eslint-enable camelcase */\n      return canvasEl;\n    },\n\n    /**\n     * Creates image element (works on client and node)\n     * @static\n     * @memberOf fabric.util\n     * @return {HTMLImageElement} HTML image element\n     */\n    createImage: function() {\n      return fabric.isLikelyNode\n        ? new (__webpack_require__(14).Image)()\n        : fabric.document.createElement('img');\n    },\n\n    /**\n     * Creates accessors (getXXX, setXXX) for a \"class\", based on \"stateProperties\" array\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} klass \"Class\" to create accessors for\n     */\n    createAccessors: function(klass) {\n      var proto = klass.prototype, i, propName,\n          capitalizedPropName, setterName, getterName;\n\n      for (i = proto.stateProperties.length; i--; ) {\n\n        propName = proto.stateProperties[i];\n        capitalizedPropName = propName.charAt(0).toUpperCase() + propName.slice(1);\n        setterName = 'set' + capitalizedPropName;\n        getterName = 'get' + capitalizedPropName;\n\n        // using `new Function` for better introspection\n        if (!proto[getterName]) {\n          proto[getterName] = (function(property) {\n            return new Function('return this.get(\"' + property + '\")');\n          })(propName);\n        }\n        if (!proto[setterName]) {\n          proto[setterName] = (function(property) {\n            return new Function('value', 'return this.set(\"' + property + '\", value)');\n          })(propName);\n        }\n      }\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Object} receiver Object implementing `clipTo` method\n     * @param {CanvasRenderingContext2D} ctx Context to clip\n     */\n    clipContext: function(receiver, ctx) {\n      ctx.save();\n      ctx.beginPath();\n      receiver.clipTo(ctx);\n      ctx.clip();\n    },\n\n    /**\n     * Multiply matrix A by matrix B to nest transformations\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a First transformMatrix\n     * @param  {Array} b Second transformMatrix\n     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n     * @return {Array} The product of the two transform matrices\n     */\n    multiplyTransformMatrices: function(a, b, is2x2) {\n      // Matrix multiply a * b\n      return [\n        a[0] * b[0] + a[2] * b[1],\n        a[1] * b[0] + a[3] * b[1],\n        a[0] * b[2] + a[2] * b[3],\n        a[1] * b[2] + a[3] * b[3],\n        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n      ];\n    },\n\n    /**\n     * Decomposes standard 2x2 matrix into transform componentes\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a transformMatrix\n     * @return {Object} Components of transform\n     */\n    qrDecompose: function(a) {\n      var angle = atan2(a[1], a[0]),\n          denom = pow(a[0], 2) + pow(a[1], 2),\n          scaleX = sqrt(denom),\n          scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\n          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n      return {\n        angle: angle  / PiBy180,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX / PiBy180,\n        skewY: 0,\n        translateX: a[4],\n        translateY: a[5]\n      };\n    },\n\n    customTransformMatrix: function(scaleX, scaleY, skewX) {\n      var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],\n          scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];\n      return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\n    },\n\n    resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.flipX = false;\n      target.flipY = false;\n      target.setAngle(0);\n    },\n\n    /**\n     * Returns string representation of function body\n     * @param {Function} fn Function to get body of\n     * @return {String} Function body\n     */\n    getFunctionBody: function(fn) {\n      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n    },\n\n    /**\n     * Returns true if context has transparent pixel\n     * at specified location (taking tolerance into account)\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Number} tolerance Tolerance\n     */\n    isTransparent: function(ctx, x, y, tolerance) {\n\n      // If tolerance is > 0 adjust start coords to take into account.\n      // If moves off Canvas fix to 0\n      if (tolerance > 0) {\n        if (x > tolerance) {\n          x -= tolerance;\n        }\n        else {\n          x = 0;\n        }\n        if (y > tolerance) {\n          y -= tolerance;\n        }\n        else {\n          y = 0;\n        }\n      }\n\n      var _isTransparent = true, i, temp,\n          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\n          l = imageData.data.length;\n\n      // Split image data - for tolerance > 1, pixelDataSize = 4;\n      for (i = 3; i < l; i += 4) {\n        temp = imageData.data[i];\n        _isTransparent = temp <= 0;\n        if (_isTransparent === false) {\n          break; // Stop if colour found\n        }\n      }\n\n      imageData = null;\n\n      return _isTransparent;\n    },\n\n    /**\n     * Parse preserveAspectRatio attribute from element\n     * @param {string} attribute to be parsed\n     * @return {Object} an object containing align and meetOrSlice attribute\n     */\n    parsePreserveAspectRatioAttribute: function(attribute) {\n      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n          aspectRatioAttrs = attribute.split(' '), align;\n\n      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n        meetOrSlice = aspectRatioAttrs.pop();\n        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n          align = meetOrSlice;\n          meetOrSlice = 'meet';\n        }\n        else if (aspectRatioAttrs.length) {\n          align = aspectRatioAttrs.pop();\n        }\n      }\n      //divide align in alignX and alignY\n      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n      return {\n        meetOrSlice: meetOrSlice,\n        alignX: alignX,\n        alignY: alignY\n      };\n    },\n\n    /**\n     * Clear char widths cache for a font family.\n     * @memberOf fabric.util\n     * @param {String} [fontFamily] font family to clear\n     */\n    clearFabricFontCache: function(fontFamily) {\n      if (!fontFamily) {\n        fabric.charWidthsCache = { };\n      }\n      else if (fabric.charWidthsCache[fontFamily]) {\n        delete fabric.charWidthsCache[fontFamily];\n      }\n    },\n\n    /**\n     * Clear char widths cache for a font family.\n     * @memberOf fabric.util\n     * @param {Number} ar aspect ratio\n     * @param {Number} maximumArea Maximum area you want to achieve\n     * @param {Number} maximumSide biggest side allowed\n     * @return {Object.x} Limited dimensions by X\n     * @return {Object.y} Limited dimensions by Y\n     */\n    limitDimsByArea: function(ar, maximumArea) {\n      var roughWidth = Math.sqrt(maximumArea * ar),\n          perfLimitSizeY = Math.floor(maximumArea / roughWidth);\n      return { x: Math.floor(roughWidth), y: perfLimitSizeY };\n    },\n\n    capValue: function(min, value, max) {\n      return Math.max(min, Math.min(value, max));\n    }\n  };\n\n})( true ? exports : this);\n\n\n(function() {\n\n  var arcToSegmentsCache = { },\n      segmentToBezierCache = { },\n      boundsOfCurveCache = { },\n      _join = Array.prototype.join;\n\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n   * http://mozilla.org/MPL/2.0/\n   */\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n    var argsString = _join.call(arguments);\n    if (arcToSegmentsCache[argsString]) {\n      return arcToSegmentsCache[argsString];\n    }\n\n    var PI = Math.PI, th = rotateX * PI / 180,\n        sinTh = Math.sin(th),\n        cosTh = Math.cos(th),\n        fromX = 0, fromY = 0;\n\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n        root = 0;\n\n    if (pl < 0) {\n      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n      rx *= s;\n      ry *= s;\n    }\n    else {\n      root = (large === sweep ? -1.0 : 1.0) *\n              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\n    }\n\n    var cx = root * rx * py / ry,\n        cy = -root * ry * px / rx,\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\n    if (sweep === 0 && dtheta > 0) {\n      dtheta -= 2 * PI;\n    }\n    else if (sweep === 1 && dtheta < 0) {\n      dtheta += 2 * PI;\n    }\n\n    // Convert into cubic bezier segments <= 90deg\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n        result = [], mDelta = dtheta / segments,\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n        th3 = mTheta + mDelta;\n\n    for (var i = 0; i < segments; i++) {\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n      fromX = result[i][4];\n      fromY = result[i][5];\n      mTheta = th3;\n      th3 += mDelta;\n    }\n    arcToSegmentsCache[argsString] = result;\n    return result;\n  }\n\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n    var argsString2 = _join.call(arguments);\n    if (segmentToBezierCache[argsString2]) {\n      return segmentToBezierCache[argsString2];\n    }\n\n    var costh2 = Math.cos(th2),\n        sinth2 = Math.sin(th2),\n        costh3 = Math.cos(th3),\n        sinth3 = Math.sin(th3),\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\n        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\n        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\n    segmentToBezierCache[argsString2] = [\n      cp1X, cp1Y,\n      cp2X, cp2Y,\n      toX, toY\n    ];\n    return segmentToBezierCache[argsString2];\n  }\n\n  /*\n   * Private\n   */\n  function calcVectorAngle(ux, uy, vx, vy) {\n    var ta = Math.atan2(uy, ux),\n        tb = Math.atan2(vy, vx);\n    if (tb >= ta) {\n      return tb - ta;\n    }\n    else {\n      return 2 * Math.PI - (ta - tb);\n    }\n  }\n\n  /**\n   * Draws arc\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Array} coords\n   */\n  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n    var rx = coords[0],\n        ry = coords[1],\n        rot = coords[2],\n        large = coords[3],\n        sweep = coords[4],\n        tx = coords[5],\n        ty = coords[6],\n        segs = [[], [], [], []],\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\n      segs[i][0] = segsNorm[i][0] + fx;\n      segs[i][1] = segsNorm[i][1] + fy;\n      segs[i][2] = segsNorm[i][2] + fx;\n      segs[i][3] = segsNorm[i][3] + fy;\n      segs[i][4] = segsNorm[i][4] + fx;\n      segs[i][5] = segsNorm[i][5] + fy;\n      ctx.bezierCurveTo.apply(ctx, segs[i]);\n    }\n  };\n\n  /**\n   * Calculate bounding box of a elliptic-arc\n   * @param {Number} fx start point of arc\n   * @param {Number} fy\n   * @param {Number} rx horizontal radius\n   * @param {Number} ry vertical radius\n   * @param {Number} rot angle of horizontal axe\n   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n   * @param {Number} tx end point of arc\n   * @param {Number} ty\n   */\n  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\n    var fromX = 0, fromY = 0, bound, bounds = [],\n        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segs.length; i < len; i++) {\n      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n      bounds.push({ x: bound[0].x + fx, y: bound[0].y + fy });\n      bounds.push({ x: bound[1].x + fx, y: bound[1].y + fy });\n      fromX = segs[i][4];\n      fromY = segs[i][5];\n    }\n    return bounds;\n  };\n\n  /**\n   * Calculate bounding box of a beziercurve\n   * @param {Number} x0 starting point\n   * @param {Number} y0\n   * @param {Number} x1 first control point\n   * @param {Number} y1\n   * @param {Number} x2 secondo control point\n   * @param {Number} y2\n   * @param {Number} x3 end of beizer\n   * @param {Number} y3\n   */\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var argsString = _join.call(arguments);\n    if (boundsOfCurveCache[argsString]) {\n      return boundsOfCurveCache[argsString];\n    }\n\n    var sqrt = Math.sqrt,\n        min = Math.min, max = Math.max,\n        abs = Math.abs, tvalues = [],\n        bounds = [[], []],\n        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n    b = 6 * x0 - 12 * x1 + 6 * x2;\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n    c = 3 * x1 - 3 * x0;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i > 0) {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      if (b2ac < 0) {\n        continue;\n      }\n      sqrtb2ac = sqrt(b2ac);\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x, y, j = tvalues.length, jlen = j, mt;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n      bounds[0][j] = x;\n\n      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n      bounds[1][j] = y;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    var result = [\n      {\n        x: min.apply(null, bounds[0]),\n        y: min.apply(null, bounds[1])\n      },\n      {\n        x: max.apply(null, bounds[0]),\n        y: max.apply(null, bounds[1])\n      }\n    ];\n    boundsOfCurveCache[argsString] = result;\n    return result;\n  }\n\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice;\n\n  /* _ES5_COMPAT_START_ */\n\n  if (!Array.prototype.indexOf) {\n    /**\n     * Finds index of an element in an array\n     * @param {*} searchElement\n     * @return {Number}\n     */\n    Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n      if (this === void 0 || this === null) {\n        throw new TypeError();\n      }\n      var t = Object(this), len = t.length >>> 0;\n      if (len === 0) {\n        return -1;\n      }\n      var n = 0;\n      if (arguments.length > 0) {\n        n = Number(arguments[1]);\n        if (n !== n) { // shortcut for verifying if it's NaN\n          n = 0;\n        }\n        else if (n !== 0 && n !== Number.POSITIVE_INFINITY && n !== Number.NEGATIVE_INFINITY) {\n          n = (n > 0 || -1) * Math.floor(Math.abs(n));\n        }\n      }\n      if (n >= len) {\n        return -1;\n      }\n      var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n      for (; k < len; k++) {\n        if (k in t && t[k] === searchElement) {\n          return k;\n        }\n      }\n      return -1;\n    };\n  }\n\n  if (!Array.prototype.forEach) {\n    /**\n     * Iterates an array, invoking callback for each element\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Array}\n     */\n    Array.prototype.forEach = function(fn, context) {\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this) {\n          fn.call(context, this[i], i, this);\n        }\n      }\n    };\n  }\n\n  if (!Array.prototype.map) {\n    /**\n     * Returns a result of iterating over an array, invoking callback for each element\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Array}\n     */\n    Array.prototype.map = function(fn, context) {\n      var result = [];\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this) {\n          result[i] = fn.call(context, this[i], i, this);\n        }\n      }\n      return result;\n    };\n  }\n\n  if (!Array.prototype.every) {\n    /**\n     * Returns true if a callback returns truthy value for all elements in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Boolean}\n     */\n    Array.prototype.every = function(fn, context) {\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this && !fn.call(context, this[i], i, this)) {\n          return false;\n        }\n      }\n      return true;\n    };\n  }\n\n  if (!Array.prototype.some) {\n    /**\n     * Returns true if a callback returns truthy value for at least one element in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Boolean}\n     */\n    Array.prototype.some = function(fn, context) {\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this && fn.call(context, this[i], i, this)) {\n          return true;\n        }\n      }\n      return false;\n    };\n  }\n\n  if (!Array.prototype.filter) {\n    /**\n     * Returns the result of iterating over elements in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Array}\n     */\n    Array.prototype.filter = function(fn, context) {\n      var result = [], val;\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this) {\n          val = this[i]; // in case fn mutates this\n          if (fn.call(context, val, i, this)) {\n            result.push(val);\n          }\n        }\n      }\n      return result;\n    };\n  }\n\n  if (!Array.prototype.reduce) {\n    /**\n     * Returns \"folded\" (reduced) result of iterating over elements in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @return {*}\n     */\n    Array.prototype.reduce = function(fn /*, initial*/) {\n      var len = this.length >>> 0,\n          i = 0,\n          rv;\n\n      if (arguments.length > 1) {\n        rv = arguments[1];\n      }\n      else {\n        do {\n          if (i in this) {\n            rv = this[i++];\n            break;\n          }\n          // if array contains no values, no initial value to return\n          if (++i >= len) {\n            throw new TypeError();\n          }\n        }\n        while (true);\n      }\n      for (; i < len; i++) {\n        if (i in this) {\n          rv = fn.call(null, rv, this[i], i, this);\n        }\n      }\n      return rv;\n    };\n  }\n\n  /* _ES5_COMPAT_END_ */\n\n  /**\n   * Invokes method on all items in a given array\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} method Name of a method to invoke\n   * @return {Array}\n   */\n  function invoke(array, method) {\n    var args = slice.call(arguments, 2), result = [];\n    for (var i = 0, len = array.length; i < len; i++) {\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n    }\n    return result;\n  }\n\n  /**\n   * Finds maximum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function max(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 >= value2;\n    });\n  }\n\n  /**\n   * Finds minimum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function min(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 < value2;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function fill(array, value) {\n    var k = array.length;\n    while (k--) {\n      array[k] = value;\n    }\n    return array;\n  }\n\n  /**\n   * @private\n   */\n  function find(array, byProperty, condition) {\n    if (!array || array.length === 0) {\n      return;\n    }\n\n    var i = array.length - 1,\n        result = byProperty ? array[i][byProperty] : array[i];\n    if (byProperty) {\n      while (i--) {\n        if (condition(array[i][byProperty], result)) {\n          result = array[i][byProperty];\n        }\n      }\n    }\n    else {\n      while (i--) {\n        if (condition(array[i], result)) {\n          result = array[i];\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @namespace fabric.util.array\n   */\n  fabric.util.array = {\n    fill: fill,\n    invoke: invoke,\n    min: min,\n    max: max\n  };\n\n})();\n\n\n(function() {\n  /**\n   * Copies all enumerable properties of one js object to another\n   * Does not clone or extend fabric.Object subclasses.\n   * @memberOf fabric.util.object\n   * @param {Object} destination Where to copy to\n   * @param {Object} source Where to copy from\n   * @return {Object}\n   */\n\n  function extend(destination, source, deep) {\n    // JScript DontEnum bug is not taken care of\n    // the deep clone is for internal use, is not meant to avoid\n    // javascript traps or cloning html element or self referenced objects.\n    if (deep) {\n      if (!fabric.isLikelyNode && source instanceof Element) {\n        // avoid cloning deep images, canvases,\n        destination = source;\n      }\n      else if (source instanceof Array) {\n        destination = [];\n        for (var i = 0, len = source.length; i < len; i++) {\n          destination[i] = extend({ }, source[i], deep);\n        }\n      }\n      else if (source && typeof source === 'object') {\n        for (var property in source) {\n          if (source.hasOwnProperty(property)) {\n            destination[property] = extend({ }, source[property], deep);\n          }\n        }\n      }\n      else {\n        // this sounds odd for an extend but is ok for recursive use\n        destination = source;\n      }\n    }\n    else {\n      for (var property in source) {\n        destination[property] = source[property];\n      }\n    }\n    return destination;\n  }\n\n  /**\n   * Creates an empty object and copies all enumerable properties of another object to it\n   * @memberOf fabric.util.object\n   * @param {Object} object Object to clone\n   * @return {Object}\n   */\n  function clone(object, deep) {\n    return extend({ }, object, deep);\n  }\n\n  /** @namespace fabric.util.object */\n  fabric.util.object = {\n    extend: extend,\n    clone: clone\n  };\n\n})();\n\n\n(function() {\n\n  /* _ES5_COMPAT_START_ */\n  if (!String.prototype.trim) {\n    /**\n     * Trims a string (removing whitespace from the beginning and the end)\n     * @function external:String#trim\n     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/Trim\">String#trim on MDN</a>\n     */\n    String.prototype.trim = function () {\n      // this trim is not fully ES3 or ES5 compliant, but it should cover most cases for now\n      return this.replace(/^[\\s\\xA0]+/, '').replace(/[\\s\\xA0]+$/, '');\n    };\n  }\n  /* _ES5_COMPAT_END_ */\n\n  /**\n   * Camelizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to camelize\n   * @return {String} Camelized version of a string\n   */\n  function camelize(string) {\n    return string.replace(/-+(.)?/g, function(match, character) {\n      return character ? character.toUpperCase() : '';\n    });\n  }\n\n  /**\n   * Capitalizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to capitalize\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n   * and other letters stay untouched, if false first letter is capitalized\n   * and other letters are converted to lowercase.\n   * @return {String} Capitalized version of a string\n   */\n  function capitalize(string, firstLetterOnly) {\n    return string.charAt(0).toUpperCase() +\n      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n  }\n\n  /**\n   * Escapes XML in a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to escape\n   * @return {String} Escaped version of a string\n   */\n  function escapeXml(string) {\n    return string.replace(/&/g, '&amp;')\n       .replace(/\"/g, '&quot;')\n       .replace(/'/g, '&apos;')\n       .replace(/</g, '&lt;')\n       .replace(/>/g, '&gt;');\n  }\n\n  /**\n   * String utilities\n   * @namespace fabric.util.string\n   */\n  fabric.util.string = {\n    camelize: camelize,\n    capitalize: capitalize,\n    escapeXml: escapeXml\n  };\n})();\n\n\n/* _ES5_COMPAT_START_ */\n(function() {\n\n  var slice = Array.prototype.slice,\n      apply = Function.prototype.apply,\n      Dummy = function() { };\n\n  if (!Function.prototype.bind) {\n    /**\n     * Cross-browser approximation of ES5 Function.prototype.bind (not fully spec conforming)\n     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind\">Function#bind on MDN</a>\n     * @param {Object} thisArg Object to bind function to\n     * @param {Any[]} Values to pass to a bound function\n     * @return {Function}\n     */\n    Function.prototype.bind = function(thisArg) {\n      var _this = this, args = slice.call(arguments, 1), bound;\n      if (args.length) {\n        bound = function() {\n          return apply.call(_this, this instanceof Dummy ? this : thisArg, args.concat(slice.call(arguments)));\n        };\n      }\n      else {\n        /** @ignore */\n        bound = function() {\n          return apply.call(_this, this instanceof Dummy ? this : thisArg, arguments);\n        };\n      }\n      Dummy.prototype = this.prototype;\n      bound.prototype = new Dummy();\n\n      return bound;\n    };\n  }\n\n})();\n/* _ES5_COMPAT_END_ */\n\n\n(function() {\n\n  var slice = Array.prototype.slice, emptyFunction = function() { },\n\n      IS_DONTENUM_BUGGY = (function() {\n        for (var p in { toString: 1 }) {\n          if (p === 'toString') {\n            return false;\n          }\n        }\n        return true;\n      })(),\n\n      /** @ignore */\n      addMethods = function(klass, source, parent) {\n        for (var property in source) {\n\n          if (property in klass.prototype &&\n              typeof klass.prototype[property] === 'function' &&\n              (source[property] + '').indexOf('callSuper') > -1) {\n\n            klass.prototype[property] = (function(property) {\n              return function() {\n\n                var superclass = this.constructor.superclass;\n                this.constructor.superclass = parent;\n                var returnValue = source[property].apply(this, arguments);\n                this.constructor.superclass = superclass;\n\n                if (property !== 'initialize') {\n                  return returnValue;\n                }\n              };\n            })(property);\n          }\n          else {\n            klass.prototype[property] = source[property];\n          }\n\n          if (IS_DONTENUM_BUGGY) {\n            if (source.toString !== Object.prototype.toString) {\n              klass.prototype.toString = source.toString;\n            }\n            if (source.valueOf !== Object.prototype.valueOf) {\n              klass.prototype.valueOf = source.valueOf;\n            }\n          }\n        }\n      };\n\n  function Subclass() { }\n\n  function callSuper(methodName) {\n    var parentMethod = null,\n        _this = this;\n\n    // climb prototype chain to find method not equal to callee's method\n    while (_this.constructor.superclass) {\n      var superClassMethod = _this.constructor.superclass.prototype[methodName];\n      if (_this[methodName] !== superClassMethod) {\n        parentMethod = superClassMethod;\n        break;\n      }\n      // eslint-disable-next-line\n      _this = _this.constructor.superclass.prototype;\n    }\n\n    if (!parentMethod) {\n      return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\n    }\n\n    return (arguments.length > 1)\n      ? parentMethod.apply(this, slice.call(arguments, 1))\n      : parentMethod.call(this);\n  }\n\n  /**\n   * Helper for creation of \"classes\".\n   * @memberOf fabric.util\n   * @param {Function} [parent] optional \"Class\" to inherit from\n   * @param {Object} [properties] Properties shared by all instances of this class\n   *                  (be careful modifying objects defined here as this would affect all instances)\n   */\n  function createClass() {\n    var parent = null,\n        properties = slice.call(arguments, 0);\n\n    if (typeof properties[0] === 'function') {\n      parent = properties.shift();\n    }\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      Subclass.prototype = parent.prototype;\n      klass.prototype = new Subclass();\n      parent.subclasses.push(klass);\n    }\n    for (var i = 0, length = properties.length; i < length; i++) {\n      addMethods(klass, properties[i], parent);\n    }\n    if (!klass.prototype.initialize) {\n      klass.prototype.initialize = emptyFunction;\n    }\n    klass.prototype.constructor = klass;\n    klass.prototype.callSuper = callSuper;\n    return klass;\n  }\n\n  fabric.util.createClass = createClass;\n})();\n\n\n(function () {\n\n  var unknown = 'unknown';\n\n  /* EVENT HANDLING */\n\n  function areHostMethods(object) {\n    var methodNames = Array.prototype.slice.call(arguments, 1),\n        t, i, len = methodNames.length;\n    for (i = 0; i < len; i++) {\n      t = typeof object[methodNames[i]];\n      if (!(/^(?:function|object|unknown)$/).test(t)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /** @ignore */\n  var getElement,\n      setElement,\n      getUniqueId = (function () {\n        var uid = 0;\n        return function (element) {\n          return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);\n        };\n      })();\n\n  (function () {\n    var elements = { };\n    /** @ignore */\n    getElement = function (uid) {\n      return elements[uid];\n    };\n    /** @ignore */\n    setElement = function (uid, element) {\n      elements[uid] = element;\n    };\n  })();\n\n  function createListener(uid, handler) {\n    return {\n      handler: handler,\n      wrappedHandler: createWrappedHandler(uid, handler)\n    };\n  }\n\n  function createWrappedHandler(uid, handler) {\n    return function (e) {\n      handler.call(getElement(uid), e || fabric.window.event);\n    };\n  }\n\n  function createDispatcher(uid, eventName) {\n    return function (e) {\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          handlersForEvent[i].call(this, e || fabric.window.event);\n        }\n      }\n    };\n  }\n\n  var shouldUseAddListenerRemoveListener = (\n        areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') &&\n        areHostMethods(fabric.window, 'addEventListener', 'removeEventListener')),\n\n      shouldUseAttachEventDetachEvent = (\n        areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') &&\n        areHostMethods(fabric.window, 'attachEvent', 'detachEvent')),\n\n      // IE branch\n      listeners = { },\n\n      // DOM L0 branch\n      handlers = { },\n\n      addListener, removeListener;\n\n  if (shouldUseAddListenerRemoveListener) {\n    /** @ignore */\n    addListener = function (element, eventName, handler, options) {\n      // since ie10 or ie9 can use addEventListener but they do not support options, i need to check\n      element && element.addEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler, options) {\n      element && element.removeEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n  }\n\n  else if (shouldUseAttachEventDetachEvent) {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      setElement(uid, element);\n      if (!listeners[uid]) {\n        listeners[uid] = { };\n      }\n      if (!listeners[uid][eventName]) {\n        listeners[uid][eventName] = [];\n\n      }\n      var listener = createListener(uid, handler);\n      listeners[uid][eventName].push(listener);\n      element.attachEvent('on' + eventName, listener.wrappedHandler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element), listener;\n      if (listeners[uid] && listeners[uid][eventName]) {\n        for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\n          listener = listeners[uid][eventName][i];\n          if (listener && listener.handler === handler) {\n            element.detachEvent('on' + eventName, listener.wrappedHandler);\n            listeners[uid][eventName][i] = null;\n          }\n        }\n      }\n    };\n  }\n  else {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      if (!handlers[uid]) {\n        handlers[uid] = { };\n      }\n      if (!handlers[uid][eventName]) {\n        handlers[uid][eventName] = [];\n        var existingHandler = element['on' + eventName];\n        if (existingHandler) {\n          handlers[uid][eventName].push(existingHandler);\n        }\n        element['on' + eventName] = createDispatcher(uid, eventName);\n      }\n      handlers[uid][eventName].push(handler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          if (handlersForEvent[i] === handler) {\n            handlersForEvent.splice(i, 1);\n          }\n        }\n      }\n    };\n  }\n\n  /**\n   * Adds an event listener to an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.addListener = addListener;\n\n  /**\n   * Removes an event listener from an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.removeListener = removeListener;\n\n  /**\n   * Cross-browser wrapper for getting event's coordinates\n   * @memberOf fabric.util\n   * @param {Event} event Event object\n   */\n  function getPointer(event) {\n    event || (event = fabric.window.event);\n\n    var element = event.target ||\n                  (typeof event.srcElement !== unknown ? event.srcElement : null),\n\n        scroll = fabric.util.getScrollLeftTop(element);\n\n    return {\n      x: pointerX(event) + scroll.left,\n      y: pointerY(event) + scroll.top\n    };\n  }\n\n  var pointerX = function(event) {\n    // looks like in IE (<9) clientX at certain point (apparently when mouseup fires on VML element)\n    // is represented as COM object, with all the consequences, like \"unknown\" type and error on [[Get]]\n    // need to investigate later\n        return (typeof event.clientX !== unknown ? event.clientX : 0);\n      },\n\n      pointerY = function(event) {\n        return (typeof event.clientY !== unknown ? event.clientY : 0);\n      };\n\n  function _getPointer(event, pageProp, clientProp) {\n    var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';\n\n    return (event[touchProp] && event[touchProp][0]\n      ? (event[touchProp][0][pageProp] - (event[touchProp][0][pageProp] - event[touchProp][0][clientProp]))\n        || event[clientProp]\n      : event[clientProp]);\n  }\n\n  if (fabric.isTouchSupported) {\n    pointerX = function(event) {\n      return _getPointer(event, 'pageX', 'clientX');\n    };\n    pointerY = function(event) {\n      return _getPointer(event, 'pageY', 'clientY');\n    };\n  }\n\n  fabric.util.getPointer = getPointer;\n\n  fabric.util.object.extend(fabric.util, fabric.Observable);\n\n})();\n\n\n(function () {\n\n  /**\n   * Cross-browser wrapper for setting element's style\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {HTMLElement} Element that was passed as a first argument\n   */\n  function setStyle(element, styles) {\n    var elementStyle = element.style;\n    if (!elementStyle) {\n      return element;\n    }\n    if (typeof styles === 'string') {\n      element.style.cssText += ';' + styles;\n      return styles.indexOf('opacity') > -1\n        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n        : element;\n    }\n    for (var property in styles) {\n      if (property === 'opacity') {\n        setOpacity(element, styles[property]);\n      }\n      else {\n        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n          : property;\n        elementStyle[normalizedProperty] = styles[property];\n      }\n    }\n    return element;\n  }\n\n  var parseEl = fabric.document.createElement('div'),\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\n      supportsFilters = typeof parseEl.style.filter === 'string',\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\n      /** @ignore */\n      setOpacity = function (element) { return element; };\n\n  if (supportsOpacity) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      element.style.opacity = value;\n      return element;\n    };\n  }\n  else if (supportsFilters) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      var es = element.style;\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\n        es.zoom = 1;\n      }\n      if (reOpacity.test(es.filter)) {\n        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n        es.filter = es.filter.replace(reOpacity, value);\n      }\n      else {\n        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n      }\n      return element;\n    };\n  }\n\n  fabric.util.setStyle = setStyle;\n\n})();\n\n\n(function() {\n\n  var _slice = Array.prototype.slice;\n\n  /**\n   * Takes id and returns an element with that id (if one exists in a document)\n   * @memberOf fabric.util\n   * @param {String|HTMLElement} id\n   * @return {HTMLElement|null}\n   */\n  function getById(id) {\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n  }\n\n  var sliceCanConvertNodelists,\n      /**\n       * Converts an array-like object (e.g. arguments or NodeList) to an array\n       * @memberOf fabric.util\n       * @param {Object} arrayLike\n       * @return {Array}\n       */\n      toArray = function(arrayLike) {\n        return _slice.call(arrayLike, 0);\n      };\n\n  try {\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n  }\n  catch (err) { }\n\n  if (!sliceCanConvertNodelists) {\n    toArray = function(arrayLike) {\n      var arr = new Array(arrayLike.length), i = arrayLike.length;\n      while (i--) {\n        arr[i] = arrayLike[i];\n      }\n      return arr;\n    };\n  }\n\n  /**\n   * Creates specified element with specified attributes\n   * @memberOf fabric.util\n   * @param {String} tagName Type of an element to create\n   * @param {Object} [attributes] Attributes to set on an element\n   * @return {HTMLElement} Newly created element\n   */\n  function makeElement(tagName, attributes) {\n    var el = fabric.document.createElement(tagName);\n    for (var prop in attributes) {\n      if (prop === 'class') {\n        el.className = attributes[prop];\n      }\n      else if (prop === 'for') {\n        el.htmlFor = attributes[prop];\n      }\n      else {\n        el.setAttribute(prop, attributes[prop]);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Adds class to an element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to add class to\n   * @param {String} className Class to add to an element\n   */\n  function addClass(element, className) {\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n      element.className += (element.className ? ' ' : '') + className;\n    }\n  }\n\n  /**\n   * Wraps element with another element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to wrap\n   * @param {HTMLElement|String} wrapper Element to wrap with\n   * @param {Object} [attributes] Attributes to set on a wrapper\n   * @return {HTMLElement} wrapper\n   */\n  function wrapElement(element, wrapper, attributes) {\n    if (typeof wrapper === 'string') {\n      wrapper = makeElement(wrapper, attributes);\n    }\n    if (element.parentNode) {\n      element.parentNode.replaceChild(wrapper, element);\n    }\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n\n  /**\n   * Returns element scroll offsets\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to operate on\n   * @return {Object} Object with left/top values\n   */\n  function getScrollLeftTop(element) {\n\n    var left = 0,\n        top = 0,\n        docElement = fabric.document.documentElement,\n        body = fabric.document.body || {\n          scrollLeft: 0, scrollTop: 0\n        };\n\n    // While loop checks (and then sets element to) .parentNode OR .host\n    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n    while (element && (element.parentNode || element.host)) {\n\n      // Set element to element parent, or 'host' in case of ShadowDOM\n      element = element.parentNode || element.host;\n\n      if (element === fabric.document) {\n        left = body.scrollLeft || docElement.scrollLeft || 0;\n        top = body.scrollTop ||  docElement.scrollTop || 0;\n      }\n      else {\n        left += element.scrollLeft || 0;\n        top += element.scrollTop || 0;\n      }\n\n      if (element.nodeType === 1 &&\n          fabric.util.getElementStyle(element, 'position') === 'fixed') {\n        break;\n      }\n    }\n\n    return { left: left, top: top };\n  }\n\n  /**\n   * Returns offset for a given element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get offset for\n   * @return {Object} Object with \"left\" and \"top\" properties\n   */\n  function getElementOffset(element) {\n    var docElem,\n        doc = element && element.ownerDocument,\n        box = { left: 0, top: 0 },\n        offset = { left: 0, top: 0 },\n        scrollLeftTop,\n        offsetAttributes = {\n          borderLeftWidth: 'left',\n          borderTopWidth:  'top',\n          paddingLeft:     'left',\n          paddingTop:      'top'\n        };\n\n    if (!doc) {\n      return offset;\n    }\n\n    for (var attr in offsetAttributes) {\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n    }\n\n    docElem = doc.documentElement;\n    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n      box = element.getBoundingClientRect();\n    }\n\n    scrollLeftTop = getScrollLeftTop(element);\n\n    return {\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n    };\n  }\n\n  /**\n   * Returns style attribute value of a given element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get style attribute for\n   * @param {String} attr Style attribute to get for element\n   * @return {String} Style attribute value of the given element.\n   */\n  var getElementStyle;\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n    getElementStyle = function(element, attr) {\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\n      return style ? style[attr] : undefined;\n    };\n  }\n  else {\n    getElementStyle = function(element, attr) {\n      var value = element.style[attr];\n      if (!value && element.currentStyle) {\n        value = element.currentStyle[attr];\n      }\n      return value;\n    };\n  }\n\n  (function () {\n    var style = fabric.document.documentElement.style,\n        selectProp = 'userSelect' in style\n          ? 'userSelect'\n          : 'MozUserSelect' in style\n            ? 'MozUserSelect'\n            : 'WebkitUserSelect' in style\n              ? 'WebkitUserSelect'\n              : 'KhtmlUserSelect' in style\n                ? 'KhtmlUserSelect'\n                : '';\n\n    /**\n     * Makes element unselectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make unselectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementUnselectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = fabric.util.falseFunction;\n      }\n      if (selectProp) {\n        element.style[selectProp] = 'none';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = 'on';\n      }\n      return element;\n    }\n\n    /**\n     * Makes element selectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make selectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementSelectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = null;\n      }\n      if (selectProp) {\n        element.style[selectProp] = '';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = '';\n      }\n      return element;\n    }\n\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\n    fabric.util.makeElementSelectable = makeElementSelectable;\n  })();\n\n  (function() {\n\n    /**\n     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n     * @memberOf fabric.util\n     * @param {String} url URL of a script to load\n     * @param {Function} callback Callback to execute when script is finished loading\n     */\n    function getScript(url, callback) {\n      var headEl = fabric.document.getElementsByTagName('head')[0],\n          scriptEl = fabric.document.createElement('script'),\n          loading = true;\n\n      /** @ignore */\n      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n        if (loading) {\n          if (typeof this.readyState === 'string' &&\n              this.readyState !== 'loaded' &&\n              this.readyState !== 'complete') {\n            return;\n          }\n          loading = false;\n          callback(e || fabric.window.event);\n          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n        }\n      };\n      scriptEl.src = url;\n      headEl.appendChild(scriptEl);\n      // causes issue in Opera\n      // headEl.removeChild(scriptEl);\n    }\n\n    fabric.util.getScript = getScript;\n  })();\n\n  fabric.util.getById = getById;\n  fabric.util.toArray = toArray;\n  fabric.util.makeElement = makeElement;\n  fabric.util.addClass = addClass;\n  fabric.util.wrapElement = wrapElement;\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\n  fabric.util.getElementOffset = getElementOffset;\n  fabric.util.getElementStyle = getElementStyle;\n\n})();\n\n\n(function() {\n\n  function addParamToUrl(url, param) {\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\n  }\n\n  var makeXHR = (function() {\n    var factories = [\n      function() { return new ActiveXObject('Microsoft.XMLHTTP'); },\n      function() { return new ActiveXObject('Msxml2.XMLHTTP'); },\n      function() { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); },\n      function() { return new XMLHttpRequest(); }\n    ];\n    for (var i = factories.length; i--; ) {\n      try {\n        var req = factories[i]();\n        if (req) {\n          return factories[i];\n        }\n      }\n      catch (err) { }\n    }\n  })();\n\n  function emptyFn() { }\n\n  /**\n   * Cross-browser abstraction for sending XMLHttpRequest\n   * @memberOf fabric.util\n   * @param {String} url URL to send XMLHttpRequest to\n   * @param {Object} [options] Options object\n   * @param {String} [options.method=\"GET\"]\n   * @param {String} [options.parameters] parameters to append to url in GET or in body\n   * @param {String} [options.body] body to send with POST or PUT request\n   * @param {Function} options.onComplete Callback to invoke when request is completed\n   * @return {XMLHttpRequest} request\n   */\n  function request(url, options) {\n\n    options || (options = { });\n\n    var method = options.method ? options.method.toUpperCase() : 'GET',\n        onComplete = options.onComplete || function() { },\n        xhr = makeXHR(),\n        body = options.body || options.parameters;\n\n    /** @ignore */\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        onComplete(xhr);\n        xhr.onreadystatechange = emptyFn;\n      }\n    };\n\n    if (method === 'GET') {\n      body = null;\n      if (typeof options.parameters === 'string') {\n        url = addParamToUrl(url, options.parameters);\n      }\n    }\n\n    xhr.open(method, url, true);\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.send(body);\n    return xhr;\n  }\n\n  fabric.util.request = request;\n})();\n\n\n/**\n * Wrapper around `console.log` (when available)\n * @param {*} [values] Values to log\n */\nfabric.log = function() { };\n\n/**\n * Wrapper around `console.warn` (when available)\n * @param {*} [values] Values to log as a warning\n */\nfabric.warn = function() { };\n\n/* eslint-disable */\nif (typeof console !== 'undefined') {\n\n  ['log', 'warn'].forEach(function(methodName) {\n\n    if (typeof console[methodName] !== 'undefined' &&\n        typeof console[methodName].apply === 'function') {\n\n      fabric[methodName] = function() {\n        return console[methodName].apply(console, arguments);\n      };\n    }\n  });\n}\n/* eslint-enable */\n\n\n(function() {\n\n  function noop() {\n    return false;\n  }\n\n  /**\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Number} [options.startValue=0] Starting value\n   * @param {Number} [options.endValue=100] Ending value\n   * @param {Number} [options.byValue=100] Value to modify the property by\n   * @param {Function} [options.easing] Easing function\n   * @param {Number} [options.duration=500] Duration of change (in ms)\n   */\n  function animate(options) {\n\n    requestAnimFrame(function(timestamp) {\n      options || (options = { });\n\n      var start = timestamp || +new Date(),\n          duration = options.duration || 500,\n          finish = start + duration, time,\n          onChange = options.onChange || noop,\n          abort = options.abort || noop,\n          onComplete = options.onComplete || noop,\n          easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},\n          startValue = 'startValue' in options ? options.startValue : 0,\n          endValue = 'endValue' in options ? options.endValue : 100,\n          byValue = options.byValue || endValue - startValue;\n\n      options.onStart && options.onStart();\n\n      (function tick(ticktime) {\n        if (abort()) {\n          onComplete(endValue, 1, 1);\n          return;\n        }\n        time = ticktime || +new Date();\n        var currentTime = time > finish ? duration : (time - start),\n            timePerc = currentTime / duration,\n            current = easing(currentTime, startValue, byValue, duration),\n            valuePerc = Math.abs((current - startValue) / byValue);\n        onChange(current, valuePerc, timePerc);\n        if (time > finish) {\n          options.onComplete && options.onComplete();\n          return;\n        }\n        requestAnimFrame(tick);\n      })(start);\n    });\n\n  }\n\n  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n                          fabric.window.webkitRequestAnimationFrame ||\n                          fabric.window.mozRequestAnimationFrame    ||\n                          fabric.window.oRequestAnimationFrame      ||\n                          fabric.window.msRequestAnimationFrame     ||\n                          function(callback) {\n                            fabric.window.setTimeout(callback, 1000 / 60);\n                          };\n\n  /**\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n   * @memberOf fabric.util\n   * @param {Function} callback Callback to invoke\n   * @param {DOMElement} element optional Element to associate with animation\n   */\n  function requestAnimFrame() {\n    return _requestAnimFrame.apply(fabric.window, arguments);\n  }\n\n  fabric.util.animate = animate;\n  fabric.util.requestAnimFrame = requestAnimFrame;\n\n})();\n\n\n(function() {\n  // Calculate an in-between color. Returns a \"rgba()\" string.\n  // Credit: Edwin Martin <edwin@bitstorm.org>\n  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\n  function calculateColor(begin, end, pos) {\n    var color = 'rgba('\n        + parseInt((begin[0] + pos * (end[0] - begin[0])), 10) + ','\n        + parseInt((begin[1] + pos * (end[1] - begin[1])), 10) + ','\n        + parseInt((begin[2] + pos * (end[2] - begin[2])), 10);\n\n    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n    color += ')';\n    return color;\n  }\n\n  /**\n   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {String} fromColor The starting color in hex or rgb(a) format.\n   * @param {String} toColor The starting color in hex or rgb(a) format.\n   * @param {Number} [duration] Duration of change (in ms).\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\n   */\n  function animateColor(fromColor, toColor, duration, options) {\n    var startColor = new fabric.Color(fromColor).getSource(),\n        endColor = new fabric.Color(toColor).getSource();\n\n    options = options || {};\n\n    fabric.util.animate(fabric.util.object.extend(options, {\n      duration: duration || 500,\n      startValue: startColor,\n      endValue: endColor,\n      byValue: endColor,\n      easing: function (currentTime, startValue, byValue, duration) {\n        var posValue = options.colorEasing\n              ? options.colorEasing(currentTime, duration)\n              : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n        return calculateColor(startValue, byValue, posValue);\n      }\n    }));\n  }\n\n  fabric.util.animateColor = animateColor;\n\n})();\n\n\n(function() {\n\n  function normalize(a, c, p, s) {\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    }\n    else {\n      //handle the 0/0 case:\n      if (c === 0 && a === 0) {\n        s = p / (2 * Math.PI) * Math.asin(1);\n      }\n      else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n    }\n    return { a: a, c: c, p: p, s: s };\n  }\n\n  function elastic(opts, t, d) {\n    return opts.a *\n      Math.pow(2, 10 * (t -= 1)) *\n      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n  }\n\n  /**\n   * Cubic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n\n  /**\n   * Cubic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCubic(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n\n  /**\n   * Quartic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n  /**\n   * Quartic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n\n  /**\n   * Quartic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuart(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n\n  /**\n   * Quintic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n\n  /**\n   * Quintic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n\n  /**\n   * Quintic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuint(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n\n  /**\n   * Sinusoidal easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Sinusoidal easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n\n  /**\n   * Sinusoidal easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n\n  /**\n   * Exponential easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInExpo(t, b, c, d) {\n    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n\n  /**\n   * Exponential easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutExpo(t, b, c, d) {\n    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n\n  /**\n   * Exponential easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  /**\n   * Circular easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n\n  /**\n   * Circular easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n\n  /**\n   * Circular easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCirc(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n\n  /**\n   * Elastic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return -elastic(opts, t, d) + b;\n  }\n\n  /**\n   * Elastic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n  }\n\n  /**\n   * Elastic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d / 2;\n    if (t === 2) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n    var opts = normalize(a, c, p, s);\n    if (t < 1) {\n      return -0.5 * elastic(opts, t, d) + b;\n    }\n    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n  }\n\n  /**\n   * Backwards easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n\n  /**\n   * Backwards easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n\n  /**\n   * Backwards easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n    }\n    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n  }\n\n  /**\n   * Bouncing easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBounce(t, b, c, d) {\n    return c - easeOutBounce (d - t, 0, c, d) + b;\n  }\n\n  /**\n   * Bouncing easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBounce(t, b, c, d) {\n    if ((t /= d) < (1 / 2.75)) {\n      return c * (7.5625 * t * t) + b;\n    }\n    else if (t < (2 / 2.75)) {\n      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n    }\n    else if (t < (2.5 / 2.75)) {\n      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n    }\n    else {\n      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n    }\n  }\n\n  /**\n   * Bouncing easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n    }\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n\n  /**\n   * Easing functions\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n   * @namespace fabric.util.ease\n   */\n  fabric.util.ease = {\n\n    /**\n     * Quadratic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInQuad: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n\n    /**\n     * Quadratic easing out\n     * @memberOf fabric.util.ease\n     */\n    easeOutQuad: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n\n    /**\n     * Quadratic easing in and out\n     * @memberOf fabric.util.ease\n     */\n    easeInOutQuad: function(t, b, c, d) {\n      t /= (d / 2);\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    },\n\n    /**\n     * Cubic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInCubic: function(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n\n    easeOutCubic: easeOutCubic,\n    easeInOutCubic: easeInOutCubic,\n    easeInQuart: easeInQuart,\n    easeOutQuart: easeOutQuart,\n    easeInOutQuart: easeInOutQuart,\n    easeInQuint: easeInQuint,\n    easeOutQuint: easeOutQuint,\n    easeInOutQuint: easeInOutQuint,\n    easeInSine: easeInSine,\n    easeOutSine: easeOutSine,\n    easeInOutSine: easeInOutSine,\n    easeInExpo: easeInExpo,\n    easeOutExpo: easeOutExpo,\n    easeInOutExpo: easeInOutExpo,\n    easeInCirc: easeInCirc,\n    easeOutCirc: easeOutCirc,\n    easeInOutCirc: easeInOutCirc,\n    easeInElastic: easeInElastic,\n    easeOutElastic: easeOutElastic,\n    easeInOutElastic: easeInOutElastic,\n    easeInBack: easeInBack,\n    easeOutBack: easeOutBack,\n    easeInOutBack: easeInOutBack,\n    easeInBounce: easeInBounce,\n    easeOutBounce: easeOutBounce,\n    easeInOutBounce: easeInOutBounce\n  };\n\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  /**\n   * @name fabric\n   * @namespace\n   */\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      parseUnit = fabric.util.parseUnit,\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\n      reAllowedSVGTagNames = /^(path|circle|polygon|polyline|ellipse|rect|line|image|text)$/i,\n      reViewBoxTagNames = /^(symbol|image|marker|pattern|view|svg)$/i,\n      reNotAllowedAncestors = /^(?:pattern|defs|symbol|metadata|clipPath|mask)$/i,\n      reAllowedParents = /^(symbol|g|a|svg)$/i,\n\n      attributesMap = {\n        cx:                   'left',\n        x:                    'left',\n        r:                    'radius',\n        cy:                   'top',\n        y:                    'top',\n        display:              'visible',\n        visibility:           'visible',\n        transform:            'transformMatrix',\n        'fill-opacity':       'fillOpacity',\n        'fill-rule':          'fillRule',\n        'font-family':        'fontFamily',\n        'font-size':          'fontSize',\n        'font-style':         'fontStyle',\n        'font-weight':        'fontWeight',\n        'stroke-dasharray':   'strokeDashArray',\n        'stroke-linecap':     'strokeLineCap',\n        'stroke-linejoin':    'strokeLineJoin',\n        'stroke-miterlimit':  'strokeMiterLimit',\n        'stroke-opacity':     'strokeOpacity',\n        'stroke-width':       'strokeWidth',\n        'text-decoration':    'textDecoration',\n        'text-anchor':        'originX',\n        opacity:              'opacity'\n      },\n\n      colorAttributes = {\n        stroke: 'strokeOpacity',\n        fill:   'fillOpacity'\n      };\n\n  fabric.cssRules = { };\n  fabric.gradientDefs = { };\n\n  function normalizeAttr(attr) {\n    // transform attribute names\n    if (attr in attributesMap) {\n      return attributesMap[attr];\n    }\n    return attr;\n  }\n\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\n    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n        parsed;\n\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n      value = '';\n    }\n    else if (attr === 'strokeDashArray') {\n      if (value === 'none') {\n        value = null;\n      }\n      else {\n        value = value.replace(/,/g, ' ').split(/\\s+/).map(function(n) {\n          return parseFloat(n);\n        });\n      }\n    }\n    else if (attr === 'transformMatrix') {\n      if (parentAttributes && parentAttributes.transformMatrix) {\n        value = multiplyTransformMatrices(\n          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n      }\n      else {\n        value = fabric.parseTransformAttribute(value);\n      }\n    }\n    else if (attr === 'visible') {\n      value = (value === 'none' || value === 'hidden') ? false : true;\n      // display=none on parent element always takes precedence over child element\n      if (parentAttributes && parentAttributes.visible === false) {\n        value = false;\n      }\n    }\n    else if (attr === 'opacity') {\n      value = parseFloat(value);\n      if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n        value *= parentAttributes.opacity;\n      }\n    }\n    else if (attr === 'originX' /* text-anchor */) {\n      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n    }\n    else {\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n    }\n\n    return (!isArray && isNaN(parsed) ? value : parsed);\n  }\n\n  /**\n   * @private\n   * @param {Object} attributes Array of attributes to parse\n   */\n  function _setStrokeFillOpacity(attributes) {\n    for (var attr in colorAttributes) {\n\n      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n        continue;\n      }\n\n      if (typeof attributes[attr] === 'undefined') {\n        if (!fabric.Object.prototype[attr]) {\n          continue;\n        }\n        attributes[attr] = fabric.Object.prototype[attr];\n      }\n\n      if (attributes[attr].indexOf('url(') === 0) {\n        continue;\n      }\n\n      var color = new fabric.Color(attributes[attr]);\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n    }\n    return attributes;\n  }\n\n  /**\n   * @private\n   */\n  function _getMultipleNodes(doc, nodeNames) {\n    var nodeName, nodeArray = [], nodeList;\n    for (var i = 0; i < nodeNames.length; i++) {\n      nodeName = nodeNames[i];\n      nodeList = doc.getElementsByTagName(nodeName);\n      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n    }\n    return nodeArray;\n  }\n\n  /**\n   * Parses \"transform\" attribute, returning an array of values\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {String} attributeValue String containing attribute value\n   * @return {Array} Array of 6 elements representing transformation matrix\n   */\n  fabric.parseTransformAttribute = (function() {\n    function rotateMatrix(matrix, args) {\n      var cos = Math.cos(args[0]), sin = Math.sin(args[0]),\n          x = 0, y = 0;\n      if (args.length === 3) {\n        x = args[1];\n        y = args[2];\n      }\n\n      matrix[0] = cos;\n      matrix[1] = sin;\n      matrix[2] = -sin;\n      matrix[3] = cos;\n      matrix[4] = x - (cos * x - sin * y);\n      matrix[5] = y - (sin * x + cos * y);\n    }\n\n    function scaleMatrix(matrix, args) {\n      var multiplierX = args[0],\n          multiplierY = (args.length === 2) ? args[1] : args[0];\n\n      matrix[0] = multiplierX;\n      matrix[3] = multiplierY;\n    }\n\n    function skewMatrix(matrix, args, pos) {\n      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function translateMatrix(matrix, args) {\n      matrix[4] = args[0];\n      if (args.length === 2) {\n        matrix[5] = args[1];\n      }\n    }\n\n    // identity matrix\n    var iMatrix = [\n          1, // a\n          0, // b\n          0, // c\n          1, // d\n          0, // e\n          0  // f\n        ],\n\n        // == begin transform regexp\n        number = fabric.reNum,\n\n        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + ')' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' +\n                  '\\\\s*\\\\))',\n\n        transform = '(?:' +\n                    matrix + '|' +\n                    translate + '|' +\n                    scale + '|' +\n                    rotate + '|' +\n                    skewX + '|' +\n                    skewY +\n                    ')',\n\n        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n        reTransformList = new RegExp(transformList),\n        // == end transform regexp\n\n        reTransform = new RegExp(transform, 'g');\n\n    return function(attributeValue) {\n\n      // start with identity matrix\n      var matrix = iMatrix.concat(),\n          matrices = [];\n\n      // return if no argument was given or\n      // an argument does not match transform attribute regexp\n      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n        return matrix;\n      }\n\n      attributeValue.replace(reTransform, function(match) {\n\n        var m = new RegExp(transform).exec(match).filter(function (match) {\n              // match !== '' && match != null\n              return (!!match);\n            }),\n            operation = m[1],\n            args = m.slice(2).map(parseFloat);\n\n        switch (operation) {\n          case 'translate':\n            translateMatrix(matrix, args);\n            break;\n          case 'rotate':\n            args[0] = fabric.util.degreesToRadians(args[0]);\n            rotateMatrix(matrix, args);\n            break;\n          case 'scale':\n            scaleMatrix(matrix, args);\n            break;\n          case 'skewX':\n            skewMatrix(matrix, args, 2);\n            break;\n          case 'skewY':\n            skewMatrix(matrix, args, 1);\n            break;\n          case 'matrix':\n            matrix = args;\n            break;\n        }\n\n        // snapshot current matrix into matrices array\n        matrices.push(matrix.concat());\n        // reset\n        matrix = iMatrix.concat();\n      });\n\n      var combinedMatrix = matrices[0];\n      while (matrices.length > 1) {\n        matrices.shift();\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n      }\n      return combinedMatrix;\n    };\n  })();\n\n  /**\n   * @private\n   */\n  function parseStyleString(style, oStyle) {\n    var attr, value;\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n      var pair = chunk.split(':');\n\n      attr = pair[0].trim().toLowerCase();\n      value =  pair[1].trim();\n\n      oStyle[attr] = value;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function parseStyleObject(style, oStyle) {\n    var attr, value;\n    for (var prop in style) {\n      if (typeof style[prop] === 'undefined') {\n        continue;\n      }\n\n      attr = prop.toLowerCase();\n      value = style[prop];\n\n      oStyle[attr] = value;\n    }\n  }\n\n  /**\n   * @private\n   */\n  function getGlobalStylesForElement(element, svgUid) {\n    var styles = { };\n    for (var rule in fabric.cssRules[svgUid]) {\n      if (elementMatchesRule(element, rule.split(' '))) {\n        for (var property in fabric.cssRules[svgUid][rule]) {\n          styles[property] = fabric.cssRules[svgUid][rule][property];\n        }\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * @private\n   */\n  function elementMatchesRule(element, selectors) {\n    var firstMatching, parentMatching = true;\n    //start from rightmost selector.\n    firstMatching = selectorMatches(element, selectors.pop());\n    if (firstMatching && selectors.length) {\n      parentMatching = doesSomeParentMatch(element, selectors);\n    }\n    return firstMatching && parentMatching && (selectors.length === 0);\n  }\n\n  function doesSomeParentMatch(element, selectors) {\n    var selector, parentMatching = true;\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n      if (parentMatching) {\n        selector = selectors.pop();\n      }\n      element = element.parentNode;\n      parentMatching = selectorMatches(element, selector);\n    }\n    return selectors.length === 0;\n  }\n\n  /**\n   * @private\n   */\n  function selectorMatches(element, selector) {\n    var nodeName = element.nodeName,\n        classNames = element.getAttribute('class'),\n        id = element.getAttribute('id'), matcher;\n    // i check if a selector matches slicing away part from it.\n    // if i get empty string i should match\n    matcher = new RegExp('^' + nodeName, 'i');\n    selector = selector.replace(matcher, '');\n    if (id && selector.length) {\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n      selector = selector.replace(matcher, '');\n    }\n    if (classNames && selector.length) {\n      classNames = classNames.split(' ');\n      for (var i = classNames.length; i--;) {\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n        selector = selector.replace(matcher, '');\n      }\n    }\n    return selector.length === 0;\n  }\n\n  /**\n   * @private\n   * to support IE8 missing getElementById on SVGdocument\n   */\n  function elementById(doc, id) {\n    var el;\n    doc.getElementById && (el = doc.getElementById(id));\n    if (el) {\n      return el;\n    }\n    var node, i, nodelist = doc.getElementsByTagName('*');\n    for (i = 0; i < nodelist.length; i++) {\n      node = nodelist[i];\n      if (id === node.getAttribute('id')) {\n        return node;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function parseUseDirectives(doc) {\n    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\n\n    while (nodelist.length && i < nodelist.length) {\n      var el = nodelist[i],\n          xlink = el.getAttribute('xlink:href').substr(1),\n          x = el.getAttribute('x') || 0,\n          y = el.getAttribute('y') || 0,\n          el2 = elementById(doc, xlink).cloneNode(true),\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n          parentNode, oldLength = nodelist.length, attr, j, attrs, l;\n\n      applyViewboxTransform(el2);\n      if (/^svg$/i.test(el2.nodeName)) {\n        var el3 = el2.ownerDocument.createElement('g');\n        for (j = 0, attrs = el2.attributes, l = attrs.length; j < l; j++) {\n          attr = attrs.item(j);\n          el3.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n        // el2.firstChild != null\n        while (el2.firstChild) {\n          el3.appendChild(el2.firstChild);\n        }\n        el2 = el3;\n      }\n\n      for (j = 0, attrs = el.attributes, l = attrs.length; j < l; j++) {\n        attr = attrs.item(j);\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' || attr.nodeName === 'xlink:href') {\n          continue;\n        }\n\n        if (attr.nodeName === 'transform') {\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\n        }\n        else {\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n      }\n\n      el2.setAttribute('transform', currentTrans);\n      el2.setAttribute('instantiated_by_use', '1');\n      el2.removeAttribute('id');\n      parentNode = el.parentNode;\n      parentNode.replaceChild(el2, el);\n      // some browsers do not shorten nodelist after replaceChild (IE8)\n      if (nodelist.length === oldLength) {\n        i++;\n      }\n    }\n  }\n\n  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  // matches, e.g.: +14.56e-12, etc.\n  var reViewBoxAttrValue = new RegExp(\n    '^' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n    '$'\n  );\n\n  /**\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n   */\n  function applyViewboxTransform(element) {\n\n    var viewBoxAttr = element.getAttribute('viewBox'),\n        scaleX = 1,\n        scaleY = 1,\n        minX = 0,\n        minY = 0,\n        viewBoxWidth, viewBoxHeight, matrix, el,\n        widthAttr = element.getAttribute('width'),\n        heightAttr = element.getAttribute('height'),\n        x = element.getAttribute('x') || 0,\n        y = element.getAttribute('y') || 0,\n        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n        missingViewBox = (!viewBoxAttr || !reViewBoxTagNames.test(element.nodeName)\n                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n        toBeParsed = missingViewBox && missingDimAttr,\n        parsedDim = { }, translateMatrix = '';\n\n    parsedDim.width = 0;\n    parsedDim.height = 0;\n    parsedDim.toBeParsed = toBeParsed;\n\n    if (toBeParsed) {\n      return parsedDim;\n    }\n\n    if (missingViewBox) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      return parsedDim;\n    }\n\n    minX = -parseFloat(viewBoxAttr[1]);\n    minY = -parseFloat(viewBoxAttr[2]);\n    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n\n    if (!missingDimAttr) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      scaleX = parsedDim.width / viewBoxWidth;\n      scaleY = parsedDim.height / viewBoxHeight;\n    }\n    else {\n      parsedDim.width = viewBoxWidth;\n      parsedDim.height = viewBoxHeight;\n    }\n\n    // default is to preserve aspect ratio\n    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n    if (preserveAspectRatio.alignX !== 'none') {\n      //translate all container for the effect of Mid, Min, Max\n      scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n    }\n\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n      return parsedDim;\n    }\n\n    if (x || y) {\n      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n    }\n\n    matrix = translateMatrix + ' matrix(' + scaleX +\n                  ' 0' +\n                  ' 0 ' +\n                  scaleY + ' ' +\n                  (minX * scaleX) + ' ' +\n                  (minY * scaleY) + ') ';\n\n    if (element.nodeName === 'svg') {\n      el = element.ownerDocument.createElement('g');\n      // element.firstChild != null\n      while (element.firstChild) {\n        el.appendChild(element.firstChild);\n      }\n      element.appendChild(el);\n    }\n    else {\n      el = element;\n      matrix = el.getAttribute('transform') + matrix;\n    }\n\n    el.setAttribute('transform', matrix);\n    return parsedDim;\n  }\n\n  function hasAncestorWithNodeName(element, nodeName) {\n    while (element && (element = element.parentNode)) {\n      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\n        && !element.getAttribute('instantiated_by_use')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {SVGDocument} doc SVG document to parse\n   * @param {Function} callback Callback to call when parsing is finished;\n   * It's being passed an array of elements (parsed from a document).\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n   * @param {Object} [parsingOptions] options for parsing document\n   * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\n   */\n  fabric.parseSVGDocument = function(doc, callback, reviver, parsingOptions) {\n    if (!doc) {\n      return;\n    }\n\n    parseUseDirectives(doc);\n\n    var svgUid =  fabric.Object.__uid++,\n        options = applyViewboxTransform(doc),\n        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n    options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\n    options.svgUid = svgUid;\n\n    if (descendants.length === 0 && fabric.isLikelyNode) {\n      // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n      // https://github.com/ajaxorg/node-o3-xml/issues/21\n      descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n      var arr = [];\n      for (var i = 0, len = descendants.length; i < len; i++) {\n        arr[i] = descendants[i];\n      }\n      descendants = arr;\n    }\n\n    var elements = descendants.filter(function(el) {\n      applyViewboxTransform(el);\n      return reAllowedSVGTagNames.test(el.nodeName.replace('svg:', '')) &&\n            !hasAncestorWithNodeName(el, reNotAllowedAncestors); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n    });\n\n    if (!elements || (elements && !elements.length)) {\n      callback && callback([], {});\n      return;\n    }\n\n    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n    // Precedence of rules:   style > class > attribute\n    fabric.parseElements(elements, function(instances) {\n      if (callback) {\n        callback(instances, options);\n      }\n    }, clone(options), reviver, parsingOptions);\n  };\n\n  var reFontDeclaration = new RegExp(\n    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n      fabric.reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\n  extend(fabric, {\n    /**\n     * Parses a short font declaration, building adding its properties to a style object\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {String} value font declaration\n     * @param {Object} oStyle definition\n     */\n    parseFontDeclaration: function(value, oStyle) {\n      var match = value.match(reFontDeclaration);\n\n      if (!match) {\n        return;\n      }\n      var fontStyle = match[1],\n          // font variant is not used\n          // fontVariant = match[2],\n          fontWeight = match[3],\n          fontSize = match[4],\n          lineHeight = match[5],\n          fontFamily = match[6];\n\n      if (fontStyle) {\n        oStyle.fontStyle = fontStyle;\n      }\n      if (fontWeight) {\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n      }\n      if (fontSize) {\n        oStyle.fontSize = parseUnit(fontSize);\n      }\n      if (fontFamily) {\n        oStyle.fontFamily = fontFamily;\n      }\n      if (lineHeight) {\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n      }\n    },\n\n    /**\n     * Parses an SVG document, returning all of the gradient declarations found in it\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n     */\n    getGradientDefs: function(doc) {\n      var tagArray = [\n            'linearGradient',\n            'radialGradient',\n            'svg:linearGradient',\n            'svg:radialGradient'],\n          elList = _getMultipleNodes(doc, tagArray),\n          el, j = 0, id, xlink,\n          gradientDefs = { }, idsToXlinkMap = { };\n\n      j = elList.length;\n\n      while (j--) {\n        el = elList[j];\n        xlink = el.getAttribute('xlink:href');\n        id = el.getAttribute('id');\n        if (xlink) {\n          idsToXlinkMap[id] = xlink.substr(1);\n        }\n        gradientDefs[id] = el;\n      }\n\n      for (id in idsToXlinkMap) {\n        var el2 = gradientDefs[idsToXlinkMap[id]].cloneNode(true);\n        el = gradientDefs[id];\n        while (el2.firstChild) {\n          el.appendChild(el2.firstChild);\n        }\n      }\n      return gradientDefs;\n    },\n\n    /**\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\n     * Parses parent \"g\" nodes recursively upwards.\n     * @static\n     * @memberOf fabric\n     * @param {DOMElement} element Element to parse\n     * @param {Array} attributes Array of attributes to parse\n     * @return {Object} object containing parsed attributes' names/values\n     */\n    parseAttributes: function(element, attributes, svgUid) {\n\n      if (!element) {\n        return;\n      }\n\n      var value,\n          parentAttributes = { },\n          fontSize;\n\n      if (typeof svgUid === 'undefined') {\n        svgUid = element.getAttribute('svgUid');\n      }\n      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n      if (element.parentNode && reAllowedParents.test(element.parentNode.nodeName)) {\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n      }\n      fontSize = (parentAttributes && parentAttributes.fontSize ) ||\n                 element.getAttribute('font-size') || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\n      var ownAttributes = attributes.reduce(function(memo, attr) {\n        value = element.getAttribute(attr);\n        if (value) { // eslint-disable-line\n          memo[attr] = value;\n        }\n        return memo;\n      }, { });\n      // add values parsed from style, which take precedence over attributes\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n      ownAttributes = extend(ownAttributes,\n        extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n\n      var normalizedAttr, normalizedValue, normalizedStyle = {};\n      for (var attr in ownAttributes) {\n        normalizedAttr = normalizeAttr(attr);\n        normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\n        normalizedStyle[normalizedAttr] = normalizedValue;\n      }\n      if (normalizedStyle && normalizedStyle.font) {\n        fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\n      }\n      var mergedAttrs = extend(parentAttributes, normalizedStyle);\n      return reAllowedParents.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\n    },\n\n    /**\n     * Transforms an array of svg elements to corresponding fabric.* instances\n     * @static\n     * @memberOf fabric\n     * @param {Array} elements Array of elements to parse\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n     * @param {Object} [options] Options object\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    parseElements: function(elements, callback, options, reviver, parsingOptions) {\n      new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\n    },\n\n    /**\n     * Parses \"style\" attribute, retuning an object with values\n     * @static\n     * @memberOf fabric\n     * @param {SVGElement} element Element to parse\n     * @return {Object} Objects with values parsed from style attribute of an element\n     */\n    parseStyleAttribute: function(element) {\n      var oStyle = { },\n          style = element.getAttribute('style');\n\n      if (!style) {\n        return oStyle;\n      }\n\n      if (typeof style === 'string') {\n        parseStyleString(style, oStyle);\n      }\n      else {\n        parseStyleObject(style, oStyle);\n      }\n\n      return oStyle;\n    },\n\n    /**\n     * Parses \"points\" attribute, returning an array of values\n     * @static\n     * @memberOf fabric\n     * @param {String} points points attribute string\n     * @return {Array} array of points\n     */\n    parsePointsAttribute: function(points) {\n\n      // points attribute is required and must not be empty\n      if (!points) {\n        return null;\n      }\n\n      // replace commas with whitespace and remove bookending whitespace\n      points = points.replace(/,/g, ' ').trim();\n\n      points = points.split(/\\s+/);\n      var parsedPoints = [], i, len;\n\n      i = 0;\n      len = points.length;\n      for (; i < len; i += 2) {\n        parsedPoints.push({\n          x: parseFloat(points[i]),\n          y: parseFloat(points[i + 1])\n        });\n      }\n\n      // odd number of points is an error\n      // if (parsedPoints.length % 2 !== 0) {\n      //   return null;\n      // }\n\n      return parsedPoints;\n    },\n\n    /**\n     * Returns CSS rules for a given SVG document\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} CSS rules of this document\n     */\n    getCSSRules: function(doc) {\n      var styles = doc.getElementsByTagName('style'),\n          allRules = { }, rules;\n\n      // very crude parsing of style contents\n      for (var i = 0, len = styles.length; i < len; i++) {\n        // IE9 doesn't support textContent, but provides text instead.\n        var styleContents = styles[i].textContent || styles[i].text;\n\n        // remove comments\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n        if (styleContents.trim() === '') {\n          continue;\n        }\n        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n        rules = rules.map(function(rule) { return rule.trim(); });\n        rules.forEach(function(rule) {\n\n          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n              ruleObj = { }, declaration = match[2].trim(),\n              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\n          for (var i = 0, len = propertyValuePairs.length; i < len; i++) {\n            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n                property = pair[0],\n                value = pair[1];\n            ruleObj[property] = value;\n          }\n          rule = match[1];\n          rule.split(',').forEach(function(_rule) {\n            _rule = _rule.replace(/^svg/i, '').trim();\n            if (_rule === '') {\n              return;\n            }\n            if (allRules[_rule]) {\n              fabric.util.object.extend(allRules[_rule], ruleObj);\n            }\n            else {\n              allRules[_rule] = fabric.util.object.clone(ruleObj);\n            }\n          });\n        });\n      }\n      return allRules;\n    },\n\n    /**\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n     * @memberOf fabric\n     * @param {String} url\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromURL: function(url, callback, reviver, options) {\n\n      url = url.replace(/^\\n\\s*/, '').trim();\n      new fabric.util.request(url, {\n        method: 'get',\n        onComplete: onComplete\n      });\n\n      function onComplete(r) {\n\n        var xml = r.responseXML;\n        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n          xml = new ActiveXObject('Microsoft.XMLDOM');\n          xml.async = 'false';\n          //IE chokes on DOCTYPE\n          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n        }\n        if (!xml || !xml.documentElement) {\n          callback && callback(null);\n        }\n\n        fabric.parseSVGDocument(xml.documentElement, function (results, _options) {\n          callback && callback(results, _options);\n        }, reviver, options);\n      }\n    },\n\n    /**\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n     * @memberOf fabric\n     * @param {String} string\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromString: function(string, callback, reviver, options) {\n      string = string.trim();\n      var doc;\n      if (typeof DOMParser !== 'undefined') {\n        var parser = new DOMParser();\n        if (parser && parser.parseFromString) {\n          doc = parser.parseFromString(string, 'text/xml');\n        }\n      }\n      else if (fabric.window.ActiveXObject) {\n        doc = new ActiveXObject('Microsoft.XMLDOM');\n        doc.async = 'false';\n        // IE chokes on DOCTYPE\n        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n      }\n\n      fabric.parseSVGDocument(doc.documentElement, function (results, _options) {\n        callback(results, _options);\n      }, reviver, options);\n    }\n  });\n\n})( true ? exports : this);\n\n\nfabric.ElementsParser = function(elements, callback, options, reviver, parsingOptions) {\n  this.elements = elements;\n  this.callback = callback;\n  this.options = options;\n  this.reviver = reviver;\n  this.svgUid = (options && options.svgUid) || 0;\n  this.parsingOptions = parsingOptions;\n};\n\nfabric.ElementsParser.prototype.parse = function() {\n  this.instances = new Array(this.elements.length);\n  this.numElements = this.elements.length;\n\n  this.createObjects();\n};\n\nfabric.ElementsParser.prototype.createObjects = function() {\n  for (var i = 0, len = this.elements.length; i < len; i++) {\n    this.elements[i].setAttribute('svgUid', this.svgUid);\n    (function(_obj, i) {\n      setTimeout(function() {\n        _obj.createObject(_obj.elements[i], i);\n      }, 0);\n    })(this, i);\n  }\n};\n\nfabric.ElementsParser.prototype.createObject = function(el, index) {\n  var klass = fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n  if (klass && klass.fromElement) {\n    try {\n      this._createObject(klass, el, index);\n    }\n    catch (err) {\n      fabric.log(err);\n    }\n  }\n  else {\n    this.checkIfDone();\n  }\n};\n\nfabric.ElementsParser.prototype._createObject = function(klass, el, index) {\n  if (klass.async) {\n    klass.fromElement(el, this.createCallback(index, el), this.options);\n  }\n  else {\n    var obj = klass.fromElement(el, this.options);\n    this.resolveGradient(obj, 'fill');\n    this.resolveGradient(obj, 'stroke');\n    this.reviver && this.reviver(el, obj);\n    this.instances[index] = obj;\n    this.checkIfDone();\n  }\n};\n\nfabric.ElementsParser.prototype.createCallback = function(index, el) {\n  var _this = this;\n  return function(obj) {\n    _this.resolveGradient(obj, 'fill');\n    _this.resolveGradient(obj, 'stroke');\n    _this.reviver && _this.reviver(el, obj);\n    _this.instances[index] = obj;\n    _this.checkIfDone();\n  };\n};\n\nfabric.ElementsParser.prototype.resolveGradient = function(obj, property) {\n\n  var instanceFillValue = obj.get(property);\n  if (!(/^url\\(/).test(instanceFillValue)) {\n    return;\n  }\n  var gradientId = instanceFillValue.slice(5, instanceFillValue.length - 1);\n  if (fabric.gradientDefs[this.svgUid][gradientId]) {\n    obj.set(property,\n      fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][gradientId], obj));\n  }\n};\n\nfabric.ElementsParser.prototype.checkIfDone = function() {\n  if (--this.numElements === 0) {\n    this.instances = this.instances.filter(function(el) {\n      // eslint-disable-next-line no-eq-null, eqeqeq\n      return el != null;\n    });\n    this.callback(this.instances);\n  }\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Point) {\n    fabric.warn('fabric.Point is already defined');\n    return;\n  }\n\n  fabric.Point = Point;\n\n  /**\n   * Point class\n   * @class fabric.Point\n   * @memberOf fabric\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @return {fabric.Point} thisArg\n   */\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype = /** @lends fabric.Point.prototype */ {\n\n    type: 'point',\n\n    constructor: Point,\n\n    /**\n     * Adds another point to this one and returns another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point instance with added values\n     */\n    add: function (that) {\n      return new Point(this.x + that.x, this.y + that.y);\n    },\n\n    /**\n     * Adds another point to this one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    addEquals: function (that) {\n      this.x += that.x;\n      this.y += that.y;\n      return this;\n    },\n\n    /**\n     * Adds value to this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point} new Point with added value\n     */\n    scalarAdd: function (scalar) {\n      return new Point(this.x + scalar, this.y + scalar);\n    },\n\n    /**\n     * Adds value to this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarAddEquals: function (scalar) {\n      this.x += scalar;\n      this.y += scalar;\n      return this;\n    },\n\n    /**\n     * Subtracts another point from this point and returns a new one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point object with subtracted values\n     */\n    subtract: function (that) {\n      return new Point(this.x - that.x, this.y - that.y);\n    },\n\n    /**\n     * Subtracts another point from this point\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    subtractEquals: function (that) {\n      this.x -= that.x;\n      this.y -= that.y;\n      return this;\n    },\n\n    /**\n     * Subtracts value from this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    scalarSubtract: function (scalar) {\n      return new Point(this.x - scalar, this.y - scalar);\n    },\n\n    /**\n     * Subtracts value from this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarSubtractEquals: function (scalar) {\n      this.x -= scalar;\n      this.y -= scalar;\n      return this;\n    },\n\n    /**\n     * Miltiplies this point by a value and returns a new one\n     * TODO: rename in scalarMultiply in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    multiply: function (scalar) {\n      return new Point(this.x * scalar, this.y * scalar);\n    },\n\n    /**\n     * Miltiplies this point by a value\n     * TODO: rename in scalarMultiplyEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    multiplyEquals: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n\n    /**\n     * Divides this point by a value and returns a new one\n     * TODO: rename in scalarDivide in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    divide: function (scalar) {\n      return new Point(this.x / scalar, this.y / scalar);\n    },\n\n    /**\n     * Divides this point by a value\n     * TODO: rename in scalarDivideEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    divideEquals: function (scalar) {\n      this.x /= scalar;\n      this.y /= scalar;\n      return this;\n    },\n\n    /**\n     * Returns true if this point is equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    eq: function (that) {\n      return (this.x === that.x && this.y === that.y);\n    },\n\n    /**\n     * Returns true if this point is less than another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lt: function (that) {\n      return (this.x < that.x && this.y < that.y);\n    },\n\n    /**\n     * Returns true if this point is less than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lte: function (that) {\n      return (this.x <= that.x && this.y <= that.y);\n    },\n\n    /**\n\n     * Returns true if this point is greater another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gt: function (that) {\n      return (this.x > that.x && this.y > that.y);\n    },\n\n    /**\n     * Returns true if this point is greater than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gte: function (that) {\n      return (this.x >= that.x && this.y >= that.y);\n    },\n\n    /**\n     * Returns new point which is the result of linear interpolation with this one and another one\n     * @param {fabric.Point} that\n     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n     * @return {fabric.Point}\n     */\n    lerp: function (that, t) {\n      if (typeof t === 'undefined') {\n        t = 0.5;\n      }\n      t = Math.max(Math.min(1, t), 0);\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n    },\n\n    /**\n     * Returns distance from this point and another one\n     * @param {fabric.Point} that\n     * @return {Number}\n     */\n    distanceFrom: function (that) {\n      var dx = this.x - that.x,\n          dy = this.y - that.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /**\n     * Returns the point between this point and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    midPointFrom: function (that) {\n      return this.lerp(that);\n    },\n\n    /**\n     * Returns a new point which is the min of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    min: function (that) {\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n    },\n\n    /**\n     * Returns a new point which is the max of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    max: function (that) {\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n    },\n\n    /**\n     * Returns string representation of this point\n     * @return {String}\n     */\n    toString: function () {\n      return this.x + ',' + this.y;\n    },\n\n    /**\n     * Sets x/y of this point\n     * @param {Number} x\n     * @param {Number} y\n     * @chainable\n     */\n    setXY: function (x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x of this point\n     * @param {Number} x\n     * @chainable\n     */\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n\n    /**\n     * Sets y of this point\n     * @param {Number} y\n     * @chainable\n     */\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x/y of this point from another point\n     * @param {fabric.Point} that\n     * @chainable\n     */\n    setFromPoint: function (that) {\n      this.x = that.x;\n      this.y = that.y;\n      return this;\n    },\n\n    /**\n     * Swaps x/y of this point and another point\n     * @param {fabric.Point} that\n     */\n    swap: function (that) {\n      var x = this.x,\n          y = this.y;\n      this.x = that.x;\n      this.y = that.y;\n      that.x = x;\n      that.y = y;\n    },\n\n    /**\n     * return a cloned instance of the point\n     * @return {fabric.Point}\n     */\n    clone: function () {\n      return new Point(this.x, this.y);\n    }\n  };\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Intersection) {\n    fabric.warn('fabric.Intersection is already defined');\n    return;\n  }\n\n  /**\n   * Intersection class\n   * @class fabric.Intersection\n   * @memberOf fabric\n   * @constructor\n   */\n  function Intersection(status) {\n    this.status = status;\n    this.points = [];\n  }\n\n  fabric.Intersection = Intersection;\n\n  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\n    constructor: Intersection,\n\n    /**\n     * Appends a point to intersection\n     * @param {fabric.Point} point\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoint: function (point) {\n      this.points.push(point);\n      return this;\n    },\n\n    /**\n     * Appends points to intersection\n     * @param {Array} points\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoints: function (points) {\n      this.points = this.points.concat(points);\n      return this;\n    }\n  };\n\n  /**\n   * Checks if one line intersects another\n   * TODO: rename in intersectSegmentSegment\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {fabric.Point} b1\n   * @param {fabric.Point} b2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n    var result,\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n    if (uB !== 0) {\n      var ua = uaT / uB,\n          ub = ubT / uB;\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n        result = new Intersection('Intersection');\n        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n      }\n      else {\n        result = new Intersection();\n      }\n    }\n    else {\n      if (uaT === 0 || ubT === 0) {\n        result = new Intersection('Coincident');\n      }\n      else {\n        result = new Intersection('Parallel');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Checks if line intersects polygon\n   * TODO: rename in intersectSegmentPolygon\n   * fix detection of coincident\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {Array} points\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n    var result = new Intersection(),\n        length = points.length,\n        b1, b2, inter;\n\n    for (var i = 0; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects another polygon\n   * @static\n   * @param {Array} points1\n   * @param {Array} points2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n    var result = new Intersection(),\n        length = points1.length;\n\n    for (var i = 0; i < length; i++) {\n      var a1 = points1[i],\n          a2 = points1[(i + 1) % length],\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @param {Array} points\n   * @param {fabric.Point} r1\n   * @param {fabric.Point} r2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n    var min = r1.min(r2),\n        max = r1.max(r2),\n        topRight = new fabric.Point(max.x, min.y),\n        bottomLeft = new fabric.Point(min.x, max.y),\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n        result = new Intersection();\n\n    result.appendPoints(inter1.points);\n    result.appendPoints(inter2.points);\n    result.appendPoints(inter3.points);\n    result.appendPoints(inter4.points);\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Color) {\n    fabric.warn('fabric.Color is already defined.');\n    return;\n  }\n\n  /**\n   * Color class\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n   *\n   * @class fabric.Color\n   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n   * @return {fabric.Color} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n   */\n  function Color(color) {\n    if (!color) {\n      this.setSource([0, 0, 0, 1]);\n    }\n    else {\n      this._tryParsingColor(color);\n    }\n  }\n\n  fabric.Color = Color;\n\n  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\n    /**\n     * @private\n     * @param {String|Array} color Color value to parse\n     */\n    _tryParsingColor: function(color) {\n      var source;\n\n      if (color in Color.colorNameMap) {\n        color = Color.colorNameMap[color];\n      }\n\n      if (color === 'transparent') {\n        source = [255, 255, 255, 0];\n      }\n\n      if (!source) {\n        source = Color.sourceFromHex(color);\n      }\n      if (!source) {\n        source = Color.sourceFromRgb(color);\n      }\n      if (!source) {\n        source = Color.sourceFromHsl(color);\n      }\n      if (!source) {\n        //if color is not recognize let's make black as canvas does\n        source = [0, 0, 0, 1];\n      }\n      if (source) {\n        this.setSource(source);\n      }\n    },\n\n    /**\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n     * @private\n     * @param {Number} r Red color value\n     * @param {Number} g Green color value\n     * @param {Number} b Blue color value\n     * @return {Array} Hsl color\n     */\n    _rgbToHsl: function(r, g, b) {\n      r /= 255; g /= 255; b /= 255;\n\n      var h, s, l,\n          max = fabric.util.array.max([r, g, b]),\n          min = fabric.util.array.min([r, g, b]);\n\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      }\n      else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n\n      return [\n        Math.round(h * 360),\n        Math.round(s * 100),\n        Math.round(l * 100)\n      ];\n    },\n\n    /**\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @return {Array}\n     */\n    getSource: function() {\n      return this._source;\n    },\n\n    /**\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @param {Array} source\n     */\n    setSource: function(source) {\n      this._source = source;\n    },\n\n    /**\n     * Returns color representation in RGB format\n     * @return {String} ex: rgb(0-255,0-255,0-255)\n     */\n    toRgb: function() {\n      var source = this.getSource();\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n    },\n\n    /**\n     * Returns color representation in RGBA format\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n     */\n    toRgba: function() {\n      var source = this.getSource();\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HSL format\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n     */\n    toHsl: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n    },\n\n    /**\n     * Returns color representation in HSLA format\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n     */\n    toHsla: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HEX format\n     * @return {String} ex: FF5555\n     */\n    toHex: function() {\n      var source = this.getSource(), r, g, b;\n\n      r = source[0].toString(16);\n      r = (r.length === 1) ? ('0' + r) : r;\n\n      g = source[1].toString(16);\n      g = (g.length === 1) ? ('0' + g) : g;\n\n      b = source[2].toString(16);\n      b = (b.length === 1) ? ('0' + b) : b;\n\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n    },\n\n    /**\n     * Returns color representation in HEXA format\n     * @return {String} ex: FF5555CC\n     */\n    toHexa: function() {\n      var source = this.getSource(), a;\n\n      a = source[3] * 255;\n      a = a.toString(16);\n      a = (a.length === 1) ? ('0' + a) : a;\n\n      return this.toHex() + a.toUpperCase();\n    },\n\n    /**\n     * Gets value of alpha channel for this color\n     * @return {Number} 0-1\n     */\n    getAlpha: function() {\n      return this.getSource()[3];\n    },\n\n    /**\n     * Sets value of alpha channel for this color\n     * @param {Number} alpha Alpha value 0-1\n     * @return {fabric.Color} thisArg\n     */\n    setAlpha: function(alpha) {\n      var source = this.getSource();\n      source[3] = alpha;\n      this.setSource(source);\n      return this;\n    },\n\n    /**\n     * Transforms color to its grayscale representation\n     * @return {fabric.Color} thisArg\n     */\n    toGrayscale: function() {\n      var source = this.getSource(),\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n          currentAlpha = source[3];\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Transforms color to its black and white representation\n     * @param {Number} threshold\n     * @return {fabric.Color} thisArg\n     */\n    toBlackWhite: function(threshold) {\n      var source = this.getSource(),\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n          currentAlpha = source[3];\n\n      threshold = threshold || 127;\n\n      average = (Number(average) < Number(threshold)) ? 0 : 255;\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Overlays color with another color\n     * @param {String|fabric.Color} otherColor\n     * @return {fabric.Color} thisArg\n     */\n    overlayWith: function(otherColor) {\n      if (!(otherColor instanceof Color)) {\n        otherColor = new Color(otherColor);\n      }\n\n      var result = [],\n          alpha = this.getAlpha(),\n          otherAlpha = 0.5,\n          source = this.getSource(),\n          otherSource = otherColor.getSource();\n\n      for (var i = 0; i < 3; i++) {\n        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n      }\n\n      result[3] = alpha;\n      this.setSource(result);\n      return this;\n    }\n  };\n\n  /**\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n   // eslint-disable-next-line max-len\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/;\n\n  /**\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\n  /**\n   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n\n  /**\n   * Map of the 17 basic color names with HEX code\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   * @see: http://www.w3.org/TR/CSS2/syndata.html#color-units\n   */\n  fabric.Color.colorNameMap = {\n    aqua:    '#00FFFF',\n    black:   '#000000',\n    blue:    '#0000FF',\n    fuchsia: '#FF00FF',\n    gray:    '#808080',\n    grey:    '#808080',\n    green:   '#008000',\n    lime:    '#00FF00',\n    maroon:  '#800000',\n    navy:    '#000080',\n    olive:   '#808000',\n    orange:  '#FFA500',\n    purple:  '#800080',\n    red:     '#FF0000',\n    silver:  '#C0C0C0',\n    teal:    '#008080',\n    white:   '#FFFFFF',\n    yellow:  '#FFFF00'\n  };\n\n  /**\n   * @private\n   * @param {Number} p\n   * @param {Number} q\n   * @param {Number} t\n   * @return {Number}\n   */\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n    if (t > 1) {\n      t -= 1;\n    }\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n      return q;\n    }\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgb = function(color) {\n    return Color.fromSource(Color.sourceFromRgb(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromRgb = function(color) {\n    var match = color.match(Color.reRGBa);\n    if (match) {\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\n      return [\n        parseInt(r, 10),\n        parseInt(g, 10),\n        parseInt(b, 10),\n        match[4] ? parseFloat(match[4]) : 1\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgba = Color.fromRgb;\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf fabric.Color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsl = function(color) {\n    return Color.fromSource(Color.sourceFromHsl(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {Array} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  fabric.Color.sourceFromHsl = function(color) {\n    var match = color.match(Color.reHSLa);\n    if (!match) {\n      return;\n    }\n\n    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n        r, g, b;\n\n    if (s === 0) {\n      r = g = b = l;\n    }\n    else {\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n          p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      match[4] ? parseFloat(match[4]) : 1\n    ];\n  };\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsla = Color.fromHsl;\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: FF5555\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHex = function(color) {\n    return Color.fromSource(Color.sourceFromHex(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromHex = function(color) {\n    if (color.match(Color.reHex)) {\n      var value = color.slice(color.indexOf('#') + 1),\n          isShortNotation = (value.length === 3 || value.length === 4),\n          isRGBa = (value.length === 8 || value.length === 4),\n          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\n          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\n\n      return [\n        parseInt(r, 16),\n        parseInt(g, 16),\n        parseInt(b, 16),\n        parseFloat((parseInt(a, 16) / 255).toFixed(2))\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n   * @static\n   * @memberOf fabric.Color\n   * @param {Array} source\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromSource = function(source) {\n    var oColor = new Color();\n    oColor.setSource(source);\n    return oColor;\n  };\n\n})( true ? exports : this);\n\n\n(function() {\n\n  /* _FROM_SVG_START_ */\n  function getColorStop(el) {\n    var style = el.getAttribute('style'),\n        offset = el.getAttribute('offset') || 0,\n        color, colorAlpha, opacity;\n\n    // convert percents to absolute values\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n    if (style) {\n      var keyValuePairs = style.split(/\\s*;\\s*/);\n\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n        keyValuePairs.pop();\n      }\n\n      for (var i = keyValuePairs.length; i--; ) {\n\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n            key = split[0].trim(),\n            value = split[1].trim();\n\n        if (key === 'stop-color') {\n          color = value;\n        }\n        else if (key === 'stop-opacity') {\n          opacity = value;\n        }\n      }\n    }\n\n    if (!color) {\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n    }\n    if (!opacity) {\n      opacity = el.getAttribute('stop-opacity');\n    }\n\n    color = new fabric.Color(color);\n    colorAlpha = color.getAlpha();\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n    opacity *= colorAlpha;\n\n    return {\n      offset: offset,\n      color: color.toRgb(),\n      opacity: opacity\n    };\n  }\n\n  function getLinearCoords(el) {\n    return {\n      x1: el.getAttribute('x1') || 0,\n      y1: el.getAttribute('y1') || 0,\n      x2: el.getAttribute('x2') || '100%',\n      y2: el.getAttribute('y2') || 0\n    };\n  }\n\n  function getRadialCoords(el) {\n    return {\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n      r1: 0,\n      x2: el.getAttribute('cx') || '50%',\n      y2: el.getAttribute('cy') || '50%',\n      r2: el.getAttribute('r') || '50%'\n    };\n  }\n  /* _FROM_SVG_END_ */\n\n  var clone = fabric.util.object.clone;\n\n  /**\n   * Gradient class\n   * @class fabric.Gradient\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n   * @see {@link fabric.Gradient#initialize} for constructor definition\n   */\n  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\n    /**\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\n     * @return {fabric.Gradient} thisArg\n     */\n    initialize: function(options) {\n      options || (options = { });\n\n      var coords = { };\n\n      this.id = fabric.Object.__uid++;\n      this.type = options.type || 'linear';\n\n      coords = {\n        x1: options.coords.x1 || 0,\n        y1: options.coords.y1 || 0,\n        x2: options.coords.x2 || 0,\n        y2: options.coords.y2 || 0\n      };\n\n      if (this.type === 'radial') {\n        coords.r1 = options.coords.r1 || 0;\n        coords.r2 = options.coords.r2 || 0;\n      }\n      this.coords = coords;\n      this.colorStops = options.colorStops.slice();\n      if (options.gradientTransform) {\n        this.gradientTransform = options.gradientTransform;\n      }\n      this.offsetX = options.offsetX || this.offsetX;\n      this.offsetY = options.offsetY || this.offsetY;\n    },\n\n    /**\n     * Adds another colorStop\n     * @param {Object} colorStop Object with offset and color\n     * @return {fabric.Gradient} thisArg\n     */\n    addColorStop: function(colorStops) {\n      for (var position in colorStops) {\n        var color = new fabric.Color(colorStops[position]);\n        this.colorStops.push({\n          offset: parseFloat(position),\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n      return this;\n    },\n\n    /**\n     * Returns object representation of a gradient\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object}\n     */\n    toObject: function(propertiesToInclude) {\n      var object = {\n        type: this.type,\n        coords: this.coords,\n        colorStops: this.colorStops,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY,\n        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an gradient\n     * @param {Object} object Object to create a gradient for\n     * @return {String} SVG representation of an gradient (linear/radial)\n     */\n    toSVG: function(object) {\n      var coords = clone(this.coords, true),\n          markup, commonAttributes, colorStops = clone(this.colorStops, true),\n          needsSwap = coords.r1 > coords.r2;\n      // colorStops must be sorted ascending\n      colorStops.sort(function(a, b) {\n        return a.offset - b.offset;\n      });\n\n      if (!(object.group && object.group.type === 'path-group')) {\n        for (var prop in coords) {\n          if (prop === 'x1' || prop === 'x2') {\n            coords[prop] += this.offsetX - object.width / 2;\n          }\n          else if (prop === 'y1' || prop === 'y2') {\n            coords[prop] += this.offsetY - object.height / 2;\n          }\n        }\n      }\n\n      commonAttributes = 'id=\"SVGID_' + this.id +\n                     '\" gradientUnits=\"userSpaceOnUse\"';\n      if (this.gradientTransform) {\n        commonAttributes += ' gradientTransform=\"matrix(' + this.gradientTransform.join(' ') + ')\" ';\n      }\n      if (this.type === 'linear') {\n        markup = [\n          '<linearGradient ',\n          commonAttributes,\n          ' x1=\"', coords.x1,\n          '\" y1=\"', coords.y1,\n          '\" x2=\"', coords.x2,\n          '\" y2=\"', coords.y2,\n          '\">\\n'\n        ];\n      }\n      else if (this.type === 'radial') {\n        // svg radial gradient has just 1 radius. the biggest.\n        markup = [\n          '<radialGradient ',\n          commonAttributes,\n          ' cx=\"', needsSwap ? coords.x1 : coords.x2,\n          '\" cy=\"', needsSwap ? coords.y1 : coords.y2,\n          '\" r=\"', needsSwap ? coords.r1 : coords.r2,\n          '\" fx=\"', needsSwap ? coords.x2 : coords.x1,\n          '\" fy=\"', needsSwap ? coords.y2 : coords.y1,\n          '\">\\n'\n        ];\n      }\n\n      if (this.type === 'radial') {\n        if (needsSwap) {\n          // svg goes from internal to external radius. if radius are inverted, swap color stops.\n          colorStops = colorStops.concat();\n          colorStops.reverse();\n          for (var i = 0; i < colorStops.length; i++) {\n            colorStops[i].offset = 1 - colorStops[i].offset;\n          }\n        }\n        var minRadius = Math.min(coords.r1, coords.r2);\n        if (minRadius > 0) {\n          // i have to shift all colorStops and add new one in 0.\n          var maxRadius = Math.max(coords.r1, coords.r2),\n              percentageShift = minRadius / maxRadius;\n          for (var i = 0; i < colorStops.length; i++) {\n            colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\n          }\n        }\n      }\n\n      for (var i = 0; i < colorStops.length; i++) {\n        var colorStop = colorStops[i];\n        markup.push(\n          '<stop ',\n            'offset=\"', (colorStop.offset * 100) + '%',\n            '\" style=\"stop-color:', colorStop.color,\n            (colorStop.opacity !== null ? ';stop-opacity: ' + colorStop.opacity : ';'),\n          '\"/>\\n'\n        );\n      }\n\n      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\n      return markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns an instance of CanvasGradient\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} object\n     * @return {CanvasGradient}\n     */\n    toLive: function(ctx, object) {\n      var gradient, prop, coords = fabric.util.object.clone(this.coords);\n\n      if (!this.type) {\n        return;\n      }\n\n      if (object.group && object.group.type === 'path-group') {\n        for (prop in coords) {\n          if (prop === 'x1' || prop === 'x2') {\n            coords[prop] += -this.offsetX + object.width / 2;\n          }\n          else if (prop === 'y1' || prop === 'y2') {\n            coords[prop] += -this.offsetY + object.height / 2;\n          }\n        }\n      }\n\n      if (this.type === 'linear') {\n        gradient = ctx.createLinearGradient(\n          coords.x1, coords.y1, coords.x2, coords.y2);\n      }\n      else if (this.type === 'radial') {\n        gradient = ctx.createRadialGradient(\n          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n      }\n\n      for (var i = 0, len = this.colorStops.length; i < len; i++) {\n        var color = this.colorStops[i].color,\n            opacity = this.colorStops[i].opacity,\n            offset = this.colorStops[i].offset;\n\n        if (typeof opacity !== 'undefined') {\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n        }\n        gradient.addColorStop(offset, color);\n      }\n\n      return gradient;\n    }\n  });\n\n  fabric.util.object.extend(fabric.Gradient, {\n\n    /* _FROM_SVG_START_ */\n    /**\n     * Returns {@link fabric.Gradient} instance from an SVG element\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {SVGGradientElement} el SVG gradient element\n     * @param {fabric.Object} instance\n     * @return {fabric.Gradient} Gradient instance\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n     */\n    fromElement: function(el, instance) {\n\n      /**\n       *  @example:\n       *\n       *  <linearGradient id=\"linearGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <linearGradient id=\"linearGrad2\">\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *  </radialGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad2\">\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n       *  </radialGradient>\n       *\n       */\n\n      var colorStopEls = el.getElementsByTagName('stop'),\n          type,\n          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\n          gradientTransform = el.getAttribute('gradientTransform'),\n          colorStops = [],\n          coords, ellipseMatrix;\n\n      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n        type = 'linear';\n      }\n      else {\n        type = 'radial';\n      }\n\n      if (type === 'linear') {\n        coords = getLinearCoords(el);\n      }\n      else if (type === 'radial') {\n        coords = getRadialCoords(el);\n      }\n\n      for (var i = colorStopEls.length; i--; ) {\n        colorStops.push(getColorStop(colorStopEls[i]));\n      }\n\n      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n\n      var gradient = new fabric.Gradient({\n        type: type,\n        coords: coords,\n        colorStops: colorStops,\n        offsetX: -instance.left,\n        offsetY: -instance.top\n      });\n\n      if (gradientTransform || ellipseMatrix !== '') {\n        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\n      }\n      return gradient;\n    },\n    /* _FROM_SVG_END_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from its object representation\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {Object} obj\n     * @param {Object} [options] Options object\n     */\n    forObject: function(obj, options) {\n      options || (options = { });\n      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\n      return new fabric.Gradient(options);\n    }\n  });\n\n  /**\n   * @private\n   */\n  function _convertPercentUnitsToValues(object, options, gradientUnits) {\n    var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';\n    for (var prop in options) {\n      if (options[prop] === 'Infinity') {\n        options[prop] = 1;\n      }\n      else if (options[prop] === '-Infinity') {\n        options[prop] = 0;\n      }\n      propValue = parseFloat(options[prop], 10);\n      if (typeof options[prop] === 'string' && /^\\d+%$/.test(options[prop])) {\n        multFactor = 0.01;\n      }\n      else {\n        multFactor = 1;\n      }\n      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\n      }\n      else if (prop === 'y1' || prop === 'y2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\n      }\n      options[prop] = propValue * multFactor + addFactor;\n    }\n    if (object.type === 'ellipse' &&\n        options.r2 !== null &&\n        gradientUnits === 'objectBoundingBox' &&\n        object.rx !== object.ry) {\n\n      var scaleFactor = object.ry / object.rx;\n      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\n      if (options.y1) {\n        options.y1 /= scaleFactor;\n      }\n      if (options.y2) {\n        options.y2 /= scaleFactor;\n      }\n    }\n    return ellipseMatrix;\n  }\n})();\n\n\n(function() {\n\n  'use strict';\n\n  var toFixed = fabric.util.toFixed;\n\n  /**\n   * Pattern class\n   * @class fabric.Pattern\n   * @see {@link http://fabricjs.com/patterns|Pattern demo}\n   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n   * @see {@link fabric.Pattern#initialize} for constructor definition\n   */\n\n\n  fabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\n    /**\n     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @type String\n     * @default\n     */\n    repeat: 'repeat',\n\n    /**\n     * Pattern horizontal offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Pattern vertical offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @param {Function} [callback] function to invoke after callback init.\n     * @return {fabric.Pattern} thisArg\n     */\n    initialize: function(options, callback) {\n      options || (options = { });\n\n      this.id = fabric.Object.__uid++;\n      this.setOptions(options);\n      if (!options.source || (options.source && typeof options.source !== 'string')) {\n        callback && callback(this);\n        return;\n      }\n      // function string\n      if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n        this.source = new Function(fabric.util.getFunctionBody(options.source));\n        callback && callback(this);\n      }\n      else {\n        // img src string\n        var _this = this;\n        this.source = fabric.util.createImage();\n        fabric.util.loadImage(options.source, function(img) {\n          _this.source = img;\n          callback && callback(_this);\n        });\n      }\n    },\n\n    /**\n     * Returns object representation of a pattern\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of a pattern instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          source, object;\n\n      // callback\n      if (typeof this.source === 'function') {\n        source = String(this.source);\n      }\n      // <img> element\n      else if (typeof this.source.src === 'string') {\n        source = this.source.src;\n      }\n      // <canvas> element\n      else if (typeof this.source === 'object' && this.source.toDataURL) {\n        source = this.source.toDataURL();\n      }\n\n      object = {\n        type: 'pattern',\n        source: source,\n        repeat: this.repeat,\n        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a pattern\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a pattern\n     */\n    toSVG: function(object) {\n      var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n          patternWidth = patternSource.width / object.width,\n          patternHeight = patternSource.height / object.height,\n          patternOffsetX = this.offsetX / object.width,\n          patternOffsetY = this.offsetY / object.height,\n          patternImgSrc = '';\n      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n        patternHeight = 1;\n      }\n      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n        patternWidth = 1;\n      }\n      if (patternSource.src) {\n        patternImgSrc = patternSource.src;\n      }\n      else if (patternSource.toDataURL) {\n        patternImgSrc = patternSource.toDataURL();\n      }\n\n      return '<pattern id=\"SVGID_' + this.id +\n                    '\" x=\"' + patternOffsetX +\n                    '\" y=\"' + patternOffsetY +\n                    '\" width=\"' + patternWidth +\n                    '\" height=\"' + patternHeight + '\">\\n' +\n               '<image x=\"0\" y=\"0\"' +\n                      ' width=\"' + patternSource.width +\n                      '\" height=\"' + patternSource.height +\n                      '\" xlink:href=\"' + patternImgSrc +\n               '\"></image>\\n' +\n             '</pattern>\\n';\n    },\n    /* _TO_SVG_END_ */\n\n    setOptions: function(options) {\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n    },\n\n    /**\n     * Returns an instance of CanvasPattern\n     * @param {CanvasRenderingContext2D} ctx Context to create pattern\n     * @return {CanvasPattern}\n     */\n    toLive: function(ctx) {\n      var source = typeof this.source === 'function' ? this.source() : this.source;\n\n      // if the image failed to load, return, and allow rest to continue loading\n      if (!source) {\n        return '';\n      }\n\n      // if an image\n      if (typeof source.src !== 'undefined') {\n        if (!source.complete) {\n          return '';\n        }\n        if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n          return '';\n        }\n      }\n      return ctx.createPattern(source, this.repeat);\n    }\n  });\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Shadow) {\n    fabric.warn('fabric.Shadow is already defined.');\n    return;\n  }\n\n  /**\n   * Shadow class\n   * @class fabric.Shadow\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @see {@link fabric.Shadow#initialize} for constructor definition\n   */\n  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\n    /**\n     * Shadow color\n     * @type String\n     * @default\n     */\n    color: 'rgb(0,0,0)',\n\n    /**\n     * Shadow blur\n     * @type Number\n     */\n    blur: 0,\n\n    /**\n     * Shadow horizontal offset\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Shadow vertical offset\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Whether the shadow should affect stroke operations\n     * @type Boolean\n     * @default\n     */\n    affectStroke: false,\n\n    /**\n     * Indicates whether toObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Constructor\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetX properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px, \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @return {fabric.Shadow} thisArg\n     */\n    initialize: function(options) {\n\n      if (typeof options === 'string') {\n        options = this._parseShadow(options);\n      }\n\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.id = fabric.Object.__uid++;\n    },\n\n    /**\n     * @private\n     * @param {String} shadow Shadow value to parse\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n     */\n    _parseShadow: function(shadow) {\n      var shadowStr = shadow.trim(),\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\n      return {\n        color: color.trim(),\n        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n        blur: parseInt(offsetsAndBlur[3], 10) || 0\n      };\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n     * @return {String} Returns CSS3 text-shadow declaration\n     */\n    toString: function() {\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a shadow\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a shadow\n     */\n    toSVG: function(object) {\n      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          offset = fabric.util.rotateVector(\n            { x: this.offsetX, y: this.offsetY },\n            fabric.util.degreesToRadians(-object.angle)),\n          BLUR_BOX = 20;\n\n      if (object.width && object.height) {\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n        // we add some extra space to filter box to contain the blur ( 20 )\n        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n      }\n      if (object.flipX) {\n        offset.x *= -1;\n      }\n      if (object.flipY) {\n        offset.y *= -1;\n      }\n      return (\n        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n          '\\t<feFlood flood-color=\"' + this.color + '\"/>\\n' +\n          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n          '\\t<feMerge>\\n' +\n            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n          '\\t</feMerge>\\n' +\n        '</filter>\\n');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns object representation of a shadow\n     * @return {Object} Object representation of a shadow instance\n     */\n    toObject: function() {\n      if (this.includeDefaultValues) {\n        return {\n          color: this.color,\n          blur: this.blur,\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          affectStroke: this.affectStroke\n        };\n      }\n      var obj = { }, proto = fabric.Shadow.prototype;\n\n      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke'].forEach(function(prop) {\n        if (this[prop] !== proto[prop]) {\n          obj[prop] = this[prop];\n        }\n      }, this);\n\n      return obj;\n    }\n  });\n\n  /**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * @static\n   * @field\n   * @memberOf fabric.Shadow\n   */\n  // eslint-disable-next-line max-len\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\n})( true ? exports : this);\n\n\n(function () {\n\n  'use strict';\n\n  if (fabric.StaticCanvas) {\n    fabric.warn('fabric.StaticCanvas is already defined.');\n    return;\n  }\n\n  // aliases for faster resolution\n  var extend = fabric.util.object.extend,\n      getElementOffset = fabric.util.getElementOffset,\n      removeFromArray = fabric.util.removeFromArray,\n      toFixed = fabric.util.toFixed,\n      transformPoint = fabric.util.transformPoint,\n      invertTransform = fabric.util.invertTransform,\n\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\n  /**\n   * Static canvas class\n   * @class fabric.StaticCanvas\n   * @mixes fabric.Collection\n   * @mixes fabric.Observable\n   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n   * @fires before:render\n   * @fires after:render\n   * @fires canvas:cleared\n   * @fires object:added\n   * @fires object:removed\n   */\n  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n\n      this._initStatic(el, options);\n    },\n\n    /**\n     * Background color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Background image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n     * @type fabric.Image\n     * @default\n     */\n    backgroundImage: null,\n\n    /**\n     * Overlay color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n     * @since 1.3.9\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    overlayColor: '',\n\n    /**\n     * Overlay image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n     * @type fabric.Image\n     * @default\n     */\n    overlayImage: null,\n\n    /**\n     * Indicates whether toObject/toDatalessObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Indicates whether objects' state should be saved\n     * @type Boolean\n     * @default\n     */\n    stateful: false,\n\n    /**\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove} should also re-render canvas.\n     * Disabling this option could give a great performance boost when adding/removing a lot of objects to/from canvas at once\n     * (followed by a manual rendering after addition/deletion)\n     * @type Boolean\n     * @default\n     */\n    renderOnAddRemove: true,\n\n    /**\n     * Function that determines clipping of entire canvas area\n     * Being passed context as first argument. See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n     * @type Function\n     * @default\n     */\n    clipTo: null,\n\n    /**\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\n     * @type Boolean\n     * @default\n     */\n    controlsAboveOverlay: false,\n\n    /**\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n     * @type Boolean\n     * @default\n     */\n    allowTouchScrolling: false,\n\n    /**\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n     * @type Boolean\n     * @default\n     */\n    imageSmoothingEnabled: true,\n\n    /**\n     * The transformation (in the format of Canvas transform) which focuses the viewport\n     * @type Array\n     * @default\n     */\n    viewportTransform: fabric.iMatrix.concat(),\n\n    /**\n     * if set to false background image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    backgroundVpt: true,\n\n    /**\n     * if set to false overlya image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    overlayVpt: true,\n\n    /**\n     * Callback; invoked right before object is about to be scaled/rotated\n     */\n    onBeforeScaleRotate: function () {\n      /* NOOP */\n    },\n\n    /**\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n     */\n    enableRetinaScaling: true,\n\n    /**\n     * Describe canvas element extension over design\n     * properties are tl,tr,bl,br.\n     * if canvas is not zoomed/panned those points are the four corner of canvas\n     * if canvas is viewportTransformed you those points indicate the extension\n     * of canvas element in plain untrasformed coordinates\n     * The coordinates get updated with @method calcViewportBoundaries.\n     * @memberOf fabric.StaticCanvas.prototype\n     */\n    vptCoords: { },\n\n    /**\n     * Based on vptCoords and object.aCoords, skip rendering of objects that\n     * are not included in current viewport.\n     * May greatly help in applications with crowded canvas and use of zoom/pan\n     * If One of the corner of the bounding box of the object is on the canvas\n     * the objects get rendered.\n     * @memberOf fabric.StaticCanvas.prototype\n     */\n    skipOffscreen: false,\n\n    /**\n     * @private\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     */\n    _initStatic: function(el, options) {\n      var cb = fabric.StaticCanvas.prototype.renderAll.bind(this);\n      this._objects = [];\n      this._createLowerCanvas(el);\n      this._initOptions(options);\n      this._setImageSmoothing();\n      // only initialize retina scaling once\n      if (!this.interactive) {\n        this._initRetinaScaling();\n      }\n\n      if (options.overlayImage) {\n        this.setOverlayImage(options.overlayImage, cb);\n      }\n      if (options.backgroundImage) {\n        this.setBackgroundImage(options.backgroundImage, cb);\n      }\n      if (options.backgroundColor) {\n        this.setBackgroundColor(options.backgroundColor, cb);\n      }\n      if (options.overlayColor) {\n        this.setOverlayColor(options.overlayColor, cb);\n      }\n      this.calcOffset();\n    },\n\n    /**\n     * @private\n     */\n    _isRetinaScaling: function() {\n      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\n    },\n\n    /**\n     * @private\n     * @return {Number} retinaScaling if applied, otherwise 1;\n     */\n    getRetinaScaling: function() {\n      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n    },\n\n    /**\n     * @private\n     */\n    _initRetinaScaling: function() {\n      if (!this._isRetinaScaling()) {\n        return;\n      }\n      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\n      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    },\n\n    /**\n     * Calculates canvas element offset relative to the document\n     * This method is also attached as \"resize\" event handler of window\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    calcOffset: function () {\n      this._offset = getElementOffset(this.lowerCanvasEl);\n      return this;\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage with different properties</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage loaded from cross-origin</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setOverlayImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/YH9yD/|jsFiddle demo}\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage with different properties</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setBackgroundImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n     * @example <caption>Normal overlayColor - color value</caption>\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setOverlayColor: function(overlayColor, callback) {\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n     * @example <caption>Normal backgroundColor - color value</caption>\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setBackgroundColor: function(backgroundColor, callback) {\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n    },\n\n    /**\n     * @private\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n     */\n    _setImageSmoothing: function() {\n      var ctx = this.getContext();\n\n      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n        || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n     */\n    __setBgOverlayImage: function(property, image, callback, options) {\n      if (typeof image === 'string') {\n        fabric.util.loadImage(image, function(img) {\n          img && (this[property] = new fabric.Image(img, options));\n          callback && callback(img);\n        }, this, options && options.crossOrigin);\n      }\n      else {\n        options && image.setOptions(options);\n        this[property] = image;\n        callback && callback(image);\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\n     * @param {Function} [callback] Callback is invoked when color is set\n     */\n    __setBgOverlayColor: function(property, color, callback) {\n      this[property] = color;\n      this._initGradient(color, property);\n      this._initPattern(color, property, callback);\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _createCanvasElement: function(canvasEl) {\n      var element = fabric.util.createCanvasElement(canvasEl);\n      if (!element.style) {\n        element.style = { };\n      }\n      if (!element) {\n        throw CANVAS_INIT_ERROR;\n      }\n      if (typeof element.getContext === 'undefined') {\n        throw CANVAS_INIT_ERROR;\n      }\n      return element;\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initOptions: function (options) {\n      this._setOptions(options);\n\n      this.width = this.width || parseInt(this.lowerCanvasEl.width, 10) || 0;\n      this.height = this.height || parseInt(this.lowerCanvasEl.height, 10) || 0;\n\n      if (!this.lowerCanvasEl.style) {\n        return;\n      }\n\n      this.lowerCanvasEl.width = this.width;\n      this.lowerCanvasEl.height = this.height;\n\n      this.lowerCanvasEl.style.width = this.width + 'px';\n      this.lowerCanvasEl.style.height = this.height + 'px';\n\n      this.viewportTransform = this.viewportTransform.slice();\n    },\n\n    /**\n     * Creates a bottom canvas\n     * @private\n     * @param {HTMLElement} [canvasEl]\n     */\n    _createLowerCanvas: function (canvasEl) {\n      this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement(canvasEl);\n\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\n      if (this.interactive) {\n        this._applyCanvasStyle(this.lowerCanvasEl);\n      }\n\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns canvas width (in px)\n     * @return {Number}\n     */\n    getWidth: function () {\n      return this.width;\n    },\n\n    /**\n     * Returns canvas height (in px)\n     * @return {Number}\n     */\n    getHeight: function () {\n      return this.height;\n    },\n\n    /**\n     * Sets width of this canvas instance\n     * @param {Number|String} value                         Value to set width to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setWidth: function (value, options) {\n      return this.setDimensions({ width: value }, options);\n    },\n\n    /**\n     * Sets height of this canvas instance\n     * @param {Number|String} value                         Value to set height to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setHeight: function (value, options) {\n      return this.setDimensions({ height: value }, options);\n    },\n\n    /**\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n     * @param {Object}        dimensions                    Object with width/height properties\n     * @param {Number|String} [dimensions.width]            Width of canvas element\n     * @param {Number|String} [dimensions.height]           Height of canvas element\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setDimensions: function (dimensions, options) {\n      var cssValue;\n\n      options = options || {};\n\n      for (var prop in dimensions) {\n        cssValue = dimensions[prop];\n\n        if (!options.cssOnly) {\n          this._setBackstoreDimension(prop, dimensions[prop]);\n          cssValue += 'px';\n        }\n\n        if (!options.backstoreOnly) {\n          this._setCssDimension(prop, cssValue);\n        }\n      }\n      this._initRetinaScaling();\n      this._setImageSmoothing();\n      this.calcOffset();\n\n      if (!options.cssOnly) {\n        this.renderAll();\n      }\n\n      return this;\n    },\n\n    /**\n     * Helper for setting width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {Number} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setBackstoreDimension: function (prop, value) {\n      this.lowerCanvasEl[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl[prop] = value;\n      }\n\n      if (this.cacheCanvasEl) {\n        this.cacheCanvasEl[prop] = value;\n      }\n\n      this[prop] = value;\n\n      return this;\n    },\n\n    /**\n     * Helper for setting css width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {String} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setCssDimension: function (prop, value) {\n      this.lowerCanvasEl.style[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.style[prop] = value;\n      }\n\n      if (this.wrapperEl) {\n        this.wrapperEl.style[prop] = value;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns canvas zoom level\n     * @return {Number}\n     */\n    getZoom: function () {\n      return this.viewportTransform[0];\n    },\n\n    /**\n     * Sets viewport transform of this canvas instance\n     * @param {Array} vpt the transform in the form of context.transform\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setViewportTransform: function (vpt) {\n      var activeGroup = this._activeGroup, object, ignoreVpt = false, skipAbsolute = true;\n      this.viewportTransform = vpt;\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        object = this._objects[i];\n        object.group || object.setCoords(ignoreVpt, skipAbsolute);\n      }\n      if (activeGroup) {\n        activeGroup.setCoords(ignoreVpt, skipAbsolute);\n      }\n      this.calcViewportBoundaries();\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance, zoom centered around point\n     * @param {fabric.Point} point to zoom with respect to\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    zoomToPoint: function (point, value) {\n      // TODO: just change the scale, preserve other transformations\n      var before = point, vpt = this.viewportTransform.slice(0);\n      point = transformPoint(point, invertTransform(this.viewportTransform));\n      vpt[0] = value;\n      vpt[3] = value;\n      var after = transformPoint(point, vpt);\n      vpt[4] += before.x - after.x;\n      vpt[5] += before.y - after.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Sets zoom level of this canvas instance\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setZoom: function (value) {\n      this.zoomToPoint(new fabric.Point(0, 0), value);\n      return this;\n    },\n\n    /**\n     * Pan viewport so as to place point at top left corner of canvas\n     * @param {fabric.Point} point to move to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    absolutePan: function (point) {\n      var vpt = this.viewportTransform.slice(0);\n      vpt[4] = -point.x;\n      vpt[5] = -point.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Pans viewpoint relatively\n     * @param {fabric.Point} point (position vector) to move by\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    relativePan: function (point) {\n      return this.absolutePan(new fabric.Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5]\n      ));\n    },\n\n    /**\n     * Returns &lt;canvas> element corresponding to this instance\n     * @return {HTMLCanvasElement}\n     */\n    getElement: function () {\n      return this.lowerCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was added\n     */\n    _onObjectAdded: function(obj) {\n      this.stateful && obj.setupState();\n      obj._set('canvas', this);\n      obj.setCoords();\n      this.fire('object:added', { target: obj });\n      obj.fire('added');\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      this.fire('object:removed', { target: obj });\n      obj.fire('removed');\n      delete obj.canvas;\n    },\n\n    /**\n     * Clears specified context of canvas element\n     * @param {CanvasRenderingContext2D} ctx Context to clear\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clearContext: function(ctx) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      return this;\n    },\n\n    /**\n     * Returns context of canvas where objects are drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getContext: function () {\n      return this.contextContainer;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this._objects.length = 0;\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this.backgroundColor = '';\n      this.overlayColor = '';\n      if (this._hasITextHandlers) {\n        this.off('mouse:up', this._mouseUpITextHandler);\n        this._iTextInstances = null;\n        this._hasITextHandlers = false;\n      }\n      this.clearContext(this.contextContainer);\n      this.fire('canvas:cleared');\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Renders the canvas\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._objects);\n      return this;\n    },\n\n    /**\n     * Calculate the position of the 4 corner of canvas with current viewportTransform.\n     * helps to determinate when an object is in the current rendering viewport using\n     * object absolute coordinates ( aCoords )\n     * @return {Object} points.tl\n     * @chainable\n     */\n    calcViewportBoundaries: function() {\n      var points = { }, width = this.getWidth(), height = this.getHeight(),\n          iVpt = invertTransform(this.viewportTransform);\n      points.tl = transformPoint({ x: 0, y: 0 }, iVpt);\n      points.br = transformPoint({ x: width, y: height }, iVpt);\n      points.tr = new fabric.Point(points.br.x, points.tl.y);\n      points.bl = new fabric.Point(points.tl.x, points.br.y);\n      this.vptCoords = points;\n      return points;\n    },\n\n    /**\n     * Renders background, objects, overlay and controls.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Array} objects to render\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderCanvas: function(ctx, objects) {\n      this.calcViewportBoundaries();\n      this.clearContext(ctx);\n      this.fire('before:render');\n      if (this.clipTo) {\n        fabric.util.clipContext(this, ctx);\n      }\n      this._renderBackground(ctx);\n\n      ctx.save();\n      //apply viewport transform once for all rendering process\n      ctx.transform.apply(ctx, this.viewportTransform);\n      this._renderObjects(ctx, objects);\n      ctx.restore();\n      if (!this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      if (this.clipTo) {\n        ctx.restore();\n      }\n      this._renderOverlay(ctx);\n      if (this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      this.fire('after:render');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} objects to render\n     */\n    _renderObjects: function(ctx, objects) {\n      for (var i = 0, length = objects.length; i < length; ++i) {\n        objects[i] && objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {string} property 'background' or 'overlay'\n     */\n    _renderBackgroundOrOverlay: function(ctx, property) {\n      var object = this[property + 'Color'];\n      if (object) {\n        ctx.fillStyle = object.toLive\n          ? object.toLive(ctx, this)\n          : object;\n\n        ctx.fillRect(\n          object.offsetX || 0,\n          object.offsetY || 0,\n          this.width,\n          this.height);\n      }\n      object = this[property + 'Image'];\n      if (object) {\n        if (this[property + 'Vpt']) {\n          ctx.save();\n          ctx.transform.apply(ctx, this.viewportTransform);\n        }\n        object.render(ctx);\n        this[property + 'Vpt'] && ctx.restore();\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'background');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderOverlay: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'overlay');\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * Returned value is an object with top and left properties\n     * @return {Object} object with \"top\" and \"left\" number values\n     */\n    getCenter: function () {\n      return {\n        top: this.getHeight() / 2,\n        left: this.getWidth() / 2\n      };\n    },\n\n    /**\n     * Centers object horizontally in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center horizontally\n     * @return {fabric.Canvas} thisArg\n     */\n    centerObjectH: function (object) {\n      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObjectV: function (object) {\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObject: function(object) {\n      var center = this.getCenter();\n\n      return this._centerObject(object, new fabric.Point(center.left, center.top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the viewport\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObject: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, vpCenter);\n    },\n\n    /**\n     * Centers object horizontally in the viewport, object.top is unchanged\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectH: function(object) {\n      var vpCenter = this.getVpCenter();\n      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n      return this;\n    },\n\n    /**\n     * Centers object Vertically in the viewport, object.top is unchanged\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectV: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n    },\n\n    /**\n     * Calculate the point in canvas that correspond to the center of actual viewport.\n     * @return {fabric.Point} vpCenter, viewport center\n     * @chainable\n     */\n    getVpCenter: function() {\n      var center = this.getCenter(),\n          iVpt = invertTransform(this.viewportTransform);\n      return transformPoint({ x: center.left, y: center.top }, iVpt);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} object Object to center\n     * @param {fabric.Point} center Center point\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    _centerObject: function(object, center) {\n      object.setPositionByOrigin(center, 'center', 'center');\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Returs dataless JSON representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {String} json string\n     */\n    toDatalessJSON: function (propertiesToInclude) {\n      return this.toDatalessObject(propertiesToInclude);\n    },\n\n    /**\n     * Returns object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toObject', propertiesToInclude);\n    },\n\n    /**\n     * Returns dataless object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n    },\n\n    /**\n     * @private\n     */\n    _toObjectMethod: function (methodName, propertiesToInclude) {\n\n      var data = {\n        objects: this._toObjects(methodName, propertiesToInclude)\n      };\n\n      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    _toObjects: function(methodName, propertiesToInclude) {\n      return this.getObjects().filter(function(object) {\n        return !object.excludeFromExport;\n      }).map(function(instance) {\n        return this._toObject(instance, methodName, propertiesToInclude);\n      }, this);\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      var originalValue;\n\n      if (!this.includeDefaultValues) {\n        originalValue = instance.includeDefaultValues;\n        instance.includeDefaultValues = false;\n      }\n\n      var object = instance[methodName](propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        instance.includeDefaultValues = originalValue;\n      }\n      return object;\n    },\n\n    /**\n     * @private\n     */\n    __serializeBgOverlay: function(methodName, propertiesToInclude) {\n      var data = { }, bgImage = this.backgroundImage, overlay = this.overlayImage;\n\n      if (this.backgroundColor) {\n        data.background = this.backgroundColor.toObject\n          ? this.backgroundColor.toObject(propertiesToInclude)\n          : this.backgroundColor;\n      }\n\n      if (this.overlayColor) {\n        data.overlay = this.overlayColor.toObject\n          ? this.overlayColor.toObject(propertiesToInclude)\n          : this.overlayColor;\n      }\n      if (bgImage && !bgImage.excludeFromExport) {\n        data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\n      }\n      if (overlay && !overlay.excludeFromExport) {\n        data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);\n      }\n\n      return data;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n     * a zoomed canvas will then produce zoomed SVG output.\n     * @type Boolean\n     * @default\n     */\n    svgViewportTransformation: true,\n\n    /**\n     * Returns SVG representation of canvas\n     * @function\n     * @param {Object} [options] Options object for SVG output\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n     * @param {Object} [options.viewBox] SVG viewbox object\n     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n     * @param {Number} [options.viewBox.width] Width of viewbox\n     * @param {Number} [options.viewBox.height] Height of viewbox\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n     * @param {String} [options.width] desired width of svg with or without units\n     * @param {String} [options.height] desired height of svg with or without units\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n     * @return {String} SVG string\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n     * @example <caption>Normal SVG output</caption>\n     * var svg = canvas.toSVG();\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n     * var svg = canvas.toSVG({suppressPreamble: true});\n     * @example <caption>SVG output with viewBox attribute</caption>\n     * var svg = canvas.toSVG({\n     *   viewBox: {\n     *     x: 100,\n     *     y: 100,\n     *     width: 200,\n     *     height: 300\n     *   }\n     * });\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n     * @example <caption>Modify SVG output with reviver function</caption>\n     * var svg = canvas.toSVG(null, function(svg) {\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n     * });\n     */\n    toSVG: function(options, reviver) {\n      options || (options = { });\n\n      var markup = [];\n\n      this._setSVGPreamble(markup, options);\n      this._setSVGHeader(markup, options);\n\n      this._setSVGBgOverlayColor(markup, 'backgroundColor');\n      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n\n      this._setSVGObjects(markup, reviver);\n\n      this._setSVGBgOverlayColor(markup, 'overlayColor');\n      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n      markup.push('</svg>');\n\n      return markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGPreamble: function(markup, options) {\n      if (options.suppressPreamble) {\n        return;\n      }\n      markup.push(\n        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n          '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n            '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n      );\n    },\n\n    /**\n     * @private\n     */\n    _setSVGHeader: function(markup, options) {\n      var width = options.width || this.width,\n          height = options.height || this.height,\n          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (options.viewBox) {\n        viewBox = 'viewBox=\"' +\n                options.viewBox.x + ' ' +\n                options.viewBox.y + ' ' +\n                options.viewBox.width + ' ' +\n                options.viewBox.height + '\" ';\n      }\n      else {\n        if (this.svgViewportTransformation) {\n          vpt = this.viewportTransform;\n          viewBox = 'viewBox=\"' +\n                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n        }\n      }\n\n      markup.push(\n        '<svg ',\n          'xmlns=\"http://www.w3.org/2000/svg\" ',\n          'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n          'version=\"1.1\" ',\n          'width=\"', width, '\" ',\n          'height=\"', height, '\" ',\n          viewBox,\n          'xml:space=\"preserve\">\\n',\n        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n        '<defs>\\n',\n          this.createSVGFontFacesMarkup(),\n          this.createSVGRefElementsMarkup(),\n        '</defs>\\n'\n      );\n    },\n\n    /**\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n     * @return {String}\n     */\n    createSVGRefElementsMarkup: function() {\n      var _this = this,\n          markup = ['backgroundColor', 'overlayColor'].map(function(prop) {\n            var fill = _this[prop];\n            if (fill && fill.toLive) {\n              return fill.toSVG(_this, false);\n            }\n          });\n      return markup.join('');\n    },\n\n    /**\n     * Creates markup containing SVG font faces,\n     * font URLs for font faces must be collected by developers\n     * and are not extracted from the DOM by fabricjs\n     * @param {Array} objects Array of fabric objects\n     * @return {String}\n     */\n    createSVGFontFacesMarkup: function() {\n      var markup = '', fontList = { }, obj, fontFamily,\n          style, row, rowIndex, _char, charIndex,\n          fontPaths = fabric.fontPaths, objects = this.getObjects();\n\n      for (var i = 0, len = objects.length; i < len; i++) {\n        obj = objects[i];\n        fontFamily = obj.fontFamily;\n        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n          continue;\n        }\n        fontList[fontFamily] = true;\n        if (!obj.styles) {\n          continue;\n        }\n        style = obj.styles;\n        for (rowIndex in style) {\n          row = style[rowIndex];\n          for (charIndex in row) {\n            _char = row[charIndex];\n            fontFamily = _char.fontFamily;\n            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n              fontList[fontFamily] = true;\n            }\n          }\n        }\n      }\n\n      for (var j in fontList) {\n        markup += [\n          '\\t\\t@font-face {\\n',\n          '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n          '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n          '\\t\\t}\\n'\n        ].join('');\n      }\n\n      if (markup) {\n        markup = [\n          '\\t<style type=\"text/css\">',\n          '<![CDATA[\\n',\n          markup,\n          ']]>',\n          '</style>\\n'\n        ].join('');\n      }\n\n      return markup;\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObjects: function(markup, reviver) {\n      var instance;\n      for (var i = 0, objects = this.getObjects(), len = objects.length; i < len; i++) {\n        instance = objects[i];\n        if (instance.excludeFromExport) {\n          continue;\n        }\n        this._setSVGObject(markup, instance, reviver);\n      }\n    },\n\n    /**\n     * push single object svg representation in the markup\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      markup.push(instance.toSVG(reviver));\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayImage: function(markup, property, reviver) {\n      if (this[property] && this[property].toSVG) {\n        markup.push(this[property].toSVG(reviver));\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayColor: function(markup, property) {\n      var filler = this[property];\n      if (!filler) {\n        return;\n      }\n      if (filler.toLive) {\n        var repeat = filler.repeat;\n        markup.push(\n          '<rect transform=\"translate(', this.width / 2, ',', this.height / 2, ')\"',\n            ' x=\"', filler.offsetX - this.width / 2, '\" y=\"', filler.offsetY - this.height / 2, '\" ',\n            'width=\"',\n              (repeat === 'repeat-y' || repeat === 'no-repeat'\n                ? filler.source.width\n                : this.width),\n            '\" height=\"',\n              (repeat === 'repeat-x' || repeat === 'no-repeat'\n                ? filler.source.height\n                : this.height),\n            '\" fill=\"url(#SVGID_' + filler.id + ')\"',\n          '></rect>\\n'\n        );\n      }\n      else {\n        markup.push(\n          '<rect x=\"0\" y=\"0\" ',\n            'width=\"', this.width,\n            '\" height=\"', this.height,\n            '\" fill=\"', this[property], '\"',\n          '></rect>\\n'\n        );\n      }\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendToBack: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeGroup = this._activeGroup,\n          i, obj, objs;\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.unshift(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.unshift(object);\n      }\n      return this.renderAll && this.renderAll();\n    },\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringToFront: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeGroup = this._activeGroup,\n          i, obj, objs;\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.push(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.push(object);\n      }\n      return this.renderAll && this.renderAll();\n    },\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendBackwards: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n\n      var activeGroup = this._activeGroup,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx > 0 + objsMoved) {\n            newIdx = idx - 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== 0) {\n          // if object is not on the bottom of stack\n          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderAll && this.renderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewLowerIndex: function(object, idx, intersecting) {\n      var newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse down the stack looking for the nearest intersecting object\n        for (var i = idx - 1; i >= 0; --i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringForward: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n\n      var activeGroup = this._activeGroup,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx < this._objects.length - 1 - objsMoved) {\n            newIdx = idx + 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== this._objects.length - 1) {\n          // if object is not on top of stack (last item in an array)\n          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderAll && this.renderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewUpperIndex: function(object, idx, intersecting) {\n      var newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse up the stack looking for the nearest intersecting object\n        for (var i = idx + 1; i < this._objects.length; ++i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Number} index Position to move to\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    moveTo: function (object, index) {\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      return this.renderAll && this.renderAll();\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      this.clear();\n      return this;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n               '{ objects: ' + this.getObjects().length + ' }>';\n    }\n  });\n\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\n  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\n    /**\n     * @static\n     * @type String\n     * @default\n     */\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\n    /**\n     * Provides a way to check support of some of the canvas methods\n     * (either those of HTMLCanvasElement itself, or rendering context)\n     *\n     * @param {String} methodName Method to check support for;\n     *                            Could be one of \"getImageData\", \"toDataURL\", \"toDataURLWithQuality\" or \"setLineDash\"\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\n     *                          `null` if canvas element or context can not be initialized\n     */\n    supports: function (methodName) {\n      var el = fabric.util.createCanvasElement();\n\n      if (!el || !el.getContext) {\n        return null;\n      }\n\n      var ctx = el.getContext('2d');\n      if (!ctx) {\n        return null;\n      }\n\n      switch (methodName) {\n\n        case 'getImageData':\n          return typeof ctx.getImageData !== 'undefined';\n\n        case 'setLineDash':\n          return typeof ctx.setLineDash !== 'undefined';\n\n        case 'toDataURL':\n          return typeof el.toDataURL !== 'undefined';\n\n        case 'toDataURLWithQuality':\n          try {\n            el.toDataURL('image/jpeg', 0);\n            return true;\n          }\n          catch (e) { }\n          return false;\n\n        default:\n          return null;\n      }\n    }\n  });\n\n  /**\n   * Returns JSON representation of canvas\n   * @function\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} JSON string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n   * @example <caption>JSON without default values</caption>\n   * canvas.includeDefaultValues = false;\n   * var json = canvas.toJSON();\n   */\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\n})();\n\n\n/**\n * BaseBrush class\n * @class fabric.BaseBrush\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color: 'rgb(0, 0, 0)',\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 1,\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type fabric.Shadow\n   * @default\n   */\n  shadow: null,\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: 'round',\n\n  /**\n   * Corner style of a brush (one of \"bevil\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: 'round',\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: null,\n\n  /**\n   * Sets shadow of an object\n   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  setShadow: function(options) {\n    this.shadow = new fabric.Shadow(options);\n    return this;\n  },\n\n  /**\n   * Sets brush styles\n   * @private\n   */\n  _setBrushStyles: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.lineJoin = this.strokeLineJoin;\n    if (this.strokeDashArray && fabric.StaticCanvas.supports('setLineDash')) {\n      ctx.setLineDash(this.strokeDashArray);\n    }\n  },\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  _setShadow: function() {\n    if (!this.shadow) {\n      return;\n    }\n\n    var ctx = this.canvas.contextTop,\n        zoom = this.canvas.getZoom();\n\n    ctx.shadowColor = this.shadow.color;\n    ctx.shadowBlur = this.shadow.blur * zoom;\n    ctx.shadowOffsetX = this.shadow.offsetX * zoom;\n    ctx.shadowOffsetY = this.shadow.offsetY * zoom;\n  },\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  _resetShadow: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n});\n\n\n(function() {\n\n  /**\n   * PencilBrush class\n   * @class fabric.PencilBrush\n   * @extends fabric.BaseBrush\n   */\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\n    /**\n     * Constructor\n     * @param {fabric.Canvas} canvas\n     * @return {fabric.PencilBrush} Instance of a pencil brush\n     */\n    initialize: function(canvas) {\n      this.canvas = canvas;\n      this._points = [];\n    },\n\n    /**\n     * Inovoked on mouse down\n     * @param {Object} pointer\n     */\n    onMouseDown: function(pointer) {\n      this._prepareForDrawing(pointer);\n      // capture coordinates immediately\n      // this allows to draw dots (when movement never occurs)\n      this._captureDrawingPath(pointer);\n      this._render();\n    },\n\n    /**\n     * Inovoked on mouse move\n     * @param {Object} pointer\n     */\n    onMouseMove: function(pointer) {\n      this._captureDrawingPath(pointer);\n      // redraw curve\n      // clear top canvas\n      this.canvas.clearContext(this.canvas.contextTop);\n      this._render();\n    },\n\n    /**\n     * Invoked on mouse up\n     */\n    onMouseUp: function() {\n      this._finalizeAndAddPath();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _prepareForDrawing: function(pointer) {\n\n      var p = new fabric.Point(pointer.x, pointer.y);\n\n      this._reset();\n      this._addPoint(p);\n\n      this.canvas.contextTop.moveTo(p.x, p.y);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Point} point Point to be added to points array\n     */\n    _addPoint: function(point) {\n      this._points.push(point);\n    },\n\n    /**\n     * Clear points array and set contextTop canvas style.\n     * @private\n     */\n    _reset: function() {\n      this._points.length = 0;\n\n      this._setBrushStyles();\n      this._setShadow();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _captureDrawingPath: function(pointer) {\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n      this._addPoint(pointerPoint);\n    },\n\n    /**\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\n     * @private\n     */\n    _render: function() {\n      var ctx  = this.canvas.contextTop, i, len,\n          v = this.canvas.viewportTransform,\n          p1 = this._points[0],\n          p2 = this._points[1];\n\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      ctx.beginPath();\n\n      //if we only have 2 points in the path and they are the same\n      //it means that the user only clicked the canvas without moving the mouse\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\n      //that's why we set them apart a bit\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n        var width = this.width / 1000;\n        p1 = new fabric.Point(p1.x, p1.y);\n        p2 = new fabric.Point(p2.x, p2.y);\n        p1.x -= width;\n        p2.x += width;\n      }\n      ctx.moveTo(p1.x, p1.y);\n\n      for (i = 1, len = this._points.length; i < len; i++) {\n        // we pick the point between pi + 1 & pi + 2 as the\n        // end point and p1 as our control point.\n        var midPoint = p1.midPointFrom(p2);\n        ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n\n        p1 = this._points[i];\n        p2 = this._points[i + 1];\n      }\n      // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n      ctx.lineTo(p1.x, p1.y);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Converts points to SVG path\n     * @param {Array} points Array of points\n     * @return {String} SVG path\n     */\n    convertPointsToSVGPath: function(points) {\n      var path = [], i, width = this.width / 1000,\n          p1 = new fabric.Point(points[0].x, points[0].y),\n          p2 = new fabric.Point(points[1].x, points[1].y),\n          len = points.length;\n\n      path.push('M ', p1.x - width, ' ', p1.y, ' ');\n      for (i = 1; i < len; i++) {\n        if (!p1.eq(p2)) {\n          var midPoint = p1.midPointFrom(p2);\n          // p1 is our bezier control point\n          // midpoint is our endpoint\n          // start point is p(i-1) value.\n          path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n        }\n        p1 = points[i];\n        if ((i + 1) < points.length) {\n          p2 = points[i + 1];\n        }\n      }\n      path.push('L ', p1.x + width, ' ', p1.y, ' ');\n      return path;\n    },\n\n    /**\n     * Creates fabric.Path object to add on canvas\n     * @param {String} pathData Path data\n     * @return {fabric.Path} Path to add on canvas\n     */\n    createPath: function(pathData) {\n      var path = new fabric.Path(pathData, {\n        fill: null,\n        stroke: this.color,\n        strokeWidth: this.width,\n        strokeLineCap: this.strokeLineCap,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeDashArray: this.strokeDashArray,\n      });\n      var position = new fabric.Point(path.left + path.width / 2, path.top + path.height / 2);\n      position = path.translateToGivenOrigin(position, 'center', 'center', path.originX, path.originY);\n      path.top = position.y;\n      path.left = position.x;\n      if (this.shadow) {\n        this.shadow.affectStroke = true;\n        path.setShadow(this.shadow);\n      }\n\n      return path;\n    },\n\n    /**\n     * On mouseup after drawing the path on contextTop canvas\n     * we use the points captured to create an new fabric path object\n     * and add it to the fabric canvas.\n     */\n    _finalizeAndAddPath: function() {\n      var ctx = this.canvas.contextTop;\n      ctx.closePath();\n\n      var pathData = this.convertPointsToSVGPath(this._points).join('');\n      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n        // do not create 0 width/height paths, as they are\n        // rendered inconsistently across browsers\n        // Firefox 4, for example, renders a dot,\n        // whereas Chrome 10 renders nothing\n        this.canvas.renderAll();\n        return;\n      }\n\n      var path = this.createPath(pathData);\n\n      this.canvas.add(path);\n      path.setCoords();\n\n      this.canvas.clearContext(this.canvas.contextTop);\n      this._resetShadow();\n      this.canvas.renderAll();\n\n      // fire event 'path' created\n      this.canvas.fire('path:created', { path: path });\n    }\n  });\n})();\n\n\n/**\n * CircleBrush class\n * @class fabric.CircleBrush\n */\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.CircleBrush} Instance of a circle brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.points = [];\n  },\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Object} pointer\n   */\n  drawDot: function(pointer) {\n    var point = this.addPoint(pointer),\n        ctx = this.canvas.contextTop,\n        v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown: function(pointer) {\n    this.points.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var circles = [];\n\n    for (var i = 0, len = this.points.length; i < len; i++) {\n      var point = this.points[i],\n          circle = new fabric.Circle({\n            radius: point.radius,\n            left: point.x,\n            top: point.y,\n            originX: 'center',\n            originY: 'center',\n            fill: point.fill\n          });\n\n      this.shadow && circle.setShadow(this.shadow);\n\n      circles.push(circle);\n    }\n    var group = new fabric.Group(circles, { originX: 'center', originY: 'center' });\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.renderAll();\n  },\n\n  /**\n   * @param {Object} pointer\n   * @return {fabric.Point} Just added pointer point\n   */\n  addPoint: function(pointer) {\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\n        circleRadius = fabric.util.getRandomInt(\n                        Math.max(0, this.width - 20), this.width + 20) / 2,\n\n        circleColor = new fabric.Color(this.color)\n                        .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n                        .toRgba();\n\n    pointerPoint.radius = circleRadius;\n    pointerPoint.fill = circleColor;\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n});\n\n\n/**\n * SprayBrush class\n * @class fabric.SprayBrush\n */\nfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width:              10,\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density:            20,\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth:           1,\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance:   1,\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity:        false,\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping:  true,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.SprayBrush} Instance of a spray brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.sprayChunks = [];\n  },\n\n  /**\n   * Invoked on mouse down\n   * @param {Object} pointer\n   */\n  onMouseDown: function(pointer) {\n    this.sprayChunks.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.render();\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.addSprayChunk(pointer);\n    this.render();\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var rects = [];\n\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      var sprayChunk = this.sprayChunks[i];\n\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\n        var rect = new fabric.Rect({\n          width: sprayChunk[j].width,\n          height: sprayChunk[j].width,\n          left: sprayChunk[j].x + 1,\n          top: sprayChunk[j].y + 1,\n          originX: 'center',\n          originY: 'center',\n          fill: this.color\n        });\n\n        this.shadow && rect.setShadow(this.shadow);\n        rects.push(rect);\n      }\n    }\n\n    if (this.optimizeOverlapping) {\n      rects = this._getOptimizedRects(rects);\n    }\n\n    var group = new fabric.Group(rects, { originX: 'center', originY: 'center' });\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.renderAll();\n  },\n\n  /**\n   * @private\n   * @param {Array} rects\n   */\n  _getOptimizedRects: function(rects) {\n\n    // avoid creating duplicate rects at the same coordinates\n    var uniqueRects = { }, key;\n\n    for (var i = 0, len = rects.length; i < len; i++) {\n      key = rects[i].left + '' + rects[i].top;\n      if (!uniqueRects[key]) {\n        uniqueRects[key] = rects[i];\n      }\n    }\n    var uniqueRectsArray = [];\n    for (key in uniqueRects) {\n      uniqueRectsArray.push(uniqueRects[key]);\n    }\n\n    return uniqueRectsArray;\n  },\n\n  /**\n   * Renders brush\n   */\n  render: function() {\n    var ctx = this.canvas.contextTop;\n    ctx.fillStyle = this.color;\n\n    var v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\n    for (var i = 0, len = this.sprayChunkPoints.length; i < len; i++) {\n      var point = this.sprayChunkPoints[i];\n      if (typeof point.opacity !== 'undefined') {\n        ctx.globalAlpha = point.opacity;\n      }\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * @param {Object} pointer\n   */\n  addSprayChunk: function(pointer) {\n    this.sprayChunkPoints = [];\n\n    var x, y, width, radius = this.width / 2;\n\n    for (var i = 0; i < this.density; i++) {\n\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\n      if (this.dotWidthVariance) {\n        width = fabric.util.getRandomInt(\n          // bottom clamp width to 1\n          Math.max(1, this.dotWidth - this.dotWidthVariance),\n          this.dotWidth + this.dotWidthVariance);\n      }\n      else {\n        width = this.dotWidth;\n      }\n\n      var point = new fabric.Point(x, y);\n      point.width = width;\n\n      if (this.randomOpacity) {\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n      }\n\n      this.sprayChunkPoints.push(point);\n    }\n\n    this.sprayChunks.push(this.sprayChunkPoints);\n  }\n});\n\n\n/**\n * PatternBrush class\n * @class fabric.PatternBrush\n * @extends fabric.BaseBrush\n */\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\n  getPatternSrc: function() {\n\n    var dotWidth = 20,\n        dotDistance = 5,\n        patternCanvas = fabric.document.createElement('canvas'),\n        patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\n    patternCtx.fillStyle = this.color;\n    patternCtx.beginPath();\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n    patternCtx.closePath();\n    patternCtx.fill();\n\n    return patternCanvas;\n  },\n\n  getPatternSrcFunction: function() {\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n  },\n\n  /**\n   * Creates \"pattern\" instance property\n   */\n  getPattern: function() {\n    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  },\n\n  /**\n   * Sets brush styles\n   */\n  _setBrushStyles: function() {\n    this.callSuper('_setBrushStyles');\n    this.canvas.contextTop.strokeStyle = this.getPattern();\n  },\n\n  /**\n   * Creates path\n   */\n  createPath: function(pathData) {\n    var path = this.callSuper('createPath', pathData),\n        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new fabric.Pattern({\n      source: this.source || this.getPatternSrcFunction(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y\n    });\n    return path;\n  }\n});\n\n\n(function() {\n\n  var getPointer = fabric.util.getPointer,\n      degreesToRadians = fabric.util.degreesToRadians,\n      radiansToDegrees = fabric.util.radiansToDegrees,\n      atan2 = Math.atan2,\n      abs = Math.abs,\n      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\n      STROKE_OFFSET = 0.5;\n\n  /**\n   * Canvas class\n   * @class fabric.Canvas\n   * @extends fabric.StaticCanvas\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n   * @see {@link fabric.Canvas#initialize} for constructor definition\n   *\n   * @fires object:added\n   * @fires object:modified\n   * @fires object:rotating\n   * @fires object:scaling\n   * @fires object:moving\n   * @fires object:selected\n   *\n   * @fires before:selection:cleared\n   * @fires selection:cleared\n   * @fires selection:created\n   *\n   * @fires path:created\n   * @fires mouse:down\n   * @fires mouse:move\n   * @fires mouse:up\n   * @fires mouse:over\n   * @fires mouse:out\n   *\n   */\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n\n      this._initStatic(el, options);\n      this._initInteractive();\n      this._createCacheCanvas();\n    },\n\n    /**\n     * When true, objects can be transformed by one side (unproportionally)\n     * @type Boolean\n     * @default\n     */\n    uniScaleTransform:      false,\n\n    /**\n     * Indicates which key enable unproportional scaling\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    uniScaleKey:           'shiftKey',\n\n    /**\n     * When true, objects use center point as the origin of scale transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:        false,\n\n    /**\n     * When true, objects use center point as the origin of rotate transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:       false,\n\n    /**\n     * Indicates which key enable centered Transfrom\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    centeredKey:           'altKey',\n\n    /**\n     * Indicates which key enable alternate action on corner\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    altActionKey:           'shiftKey',\n\n    /**\n     * Indicates that canvas is interactive. This property should not be changed.\n     * @type Boolean\n     * @default\n     */\n    interactive:            true,\n\n    /**\n     * Indicates whether group selection should be enabled\n     * @type Boolean\n     * @default\n     */\n    selection:              true,\n\n    /**\n     * Indicates which key enable multiple click selection\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    selectionKey:           'shiftKey',\n\n    /**\n     * Indicates which key enable alternative selection\n     * in case of target overlapping with active object\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.5\n     * @type null|String\n     * @default\n     */\n    altSelectionKey:           null,\n\n    /**\n     * Color of selection\n     * @type String\n     * @default\n     */\n    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\n    /**\n     * Default dash array pattern\n     * If not empty the selection border is dashed\n     * @type Array\n     */\n    selectionDashArray:     [],\n\n    /**\n     * Color of the border of selection (usually slightly darker than color of selection itself)\n     * @type String\n     * @default\n     */\n    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\n    /**\n     * Width of a line used in object/group selection\n     * @type Number\n     * @default\n     */\n    selectionLineWidth:     1,\n\n    /**\n     * Default cursor value used when hovering over an object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:            'move',\n\n    /**\n     * Default cursor value used when moving an object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:             'move',\n\n    /**\n     * Default cursor value used for the entire canvas\n     * @type String\n     * @default\n     */\n    defaultCursor:          'default',\n\n    /**\n     * Cursor value used during free drawing\n     * @type String\n     * @default\n     */\n    freeDrawingCursor:      'crosshair',\n\n    /**\n     * Cursor value used for rotation point\n     * @type String\n     * @default\n     */\n    rotationCursor:         'crosshair',\n\n    /**\n     * Default element class that's given to wrapper (div) element of canvas\n     * @type String\n     * @default\n     */\n    containerClass:         'canvas-container',\n\n    /**\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:     false,\n\n    /**\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\n     * @type Number\n     * @default\n     */\n    targetFindTolerance:    0,\n\n    /**\n     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n     * @type Boolean\n     * @default\n     */\n    skipTargetFind:         false,\n\n    /**\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n     * After mousedown, mousemove creates a shape,\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n     * @type Boolean\n     * @default\n     */\n    isDrawingMode:          false,\n\n    /**\n     * Indicates whether objects should remain in current stack position when selected.\n     * When false objects are brought to top and rendered as part of the selection group\n     * @type Boolean\n     * @default\n     */\n    preserveObjectStacking: false,\n\n    /**\n     * Indicates the angle that an object will lock to while rotating.\n     * @type Number\n     * @since 1.6.7\n     * @default\n     */\n    snapAngle: 0,\n\n    /**\n     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n     * When `null`, the snapThreshold will default to the snapAngle.\n     * @type null|Number\n     * @since 1.6.7\n     * @default\n     */\n    snapThreshold: null,\n\n    /**\n     * Indicates if the right click on canvas can output the context menu or not\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    stopContextMenu: false,\n\n    /**\n     * Indicates if the canvas can fire right click events\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    fireRightClick: false,\n\n    /**\n     * Indicates if the canvas can fire middle click events\n     * @type Boolean\n     * @since 1.7.8\n     * @default\n     */\n    fireMiddleClick: false,\n\n    /**\n     * @private\n     */\n    _initInteractive: function() {\n      this._currentTransform = null;\n      this._groupSelector = null;\n      this._initWrapperElement();\n      this._createUpperCanvas();\n      this._initEventListeners();\n\n      this._initRetinaScaling();\n\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\n      this.calcOffset();\n    },\n\n    /**\n     * Divides objects in two groups, one to render immediately\n     * and one to render as activeGroup.\n     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n     */\n    _chooseObjectsToRender: function() {\n      var activeGroup = this.getActiveGroup(),\n          activeObject = this.getActiveObject(),\n          object, objsToRender = [], activeGroupObjects = [];\n\n      if ((activeGroup || activeObject) && !this.preserveObjectStacking) {\n        for (var i = 0, length = this._objects.length; i < length; i++) {\n          object = this._objects[i];\n          if ((!activeGroup || !activeGroup.contains(object)) && object !== activeObject) {\n            objsToRender.push(object);\n          }\n          else {\n            activeGroupObjects.push(object);\n          }\n        }\n        if (activeGroup) {\n          activeGroup._set('_objects', activeGroupObjects);\n          objsToRender.push(activeGroup);\n        }\n        activeObject && objsToRender.push(activeObject);\n      }\n      else {\n        objsToRender = this._objects;\n      }\n      return objsToRender;\n    },\n\n    /**\n     * Renders both the top canvas and the secondary container canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n        this.clearContext(this.contextTop);\n        this.contextTopDirty = false;\n      }\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n      return this;\n    },\n\n    /**\n     * Method to render only the top canvas.\n     * Also used to render the group selection box.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    renderTop: function () {\n      var ctx = this.contextTop;\n      this.clearContext(ctx);\n\n      // we render the top context - last object\n      if (this.selection && this._groupSelector) {\n        this._drawSelection(ctx);\n      }\n\n      this.fire('after:render');\n      this.contextTopDirty = true;\n      return this;\n    },\n\n    /**\n     * Resets the current transform to its original values and chooses the type of resizing based on the event\n     * @private\n     */\n    _resetCurrentTransform: function() {\n      var t = this._currentTransform;\n\n      t.target.set({\n        scaleX: t.original.scaleX,\n        scaleY: t.original.scaleY,\n        skewX: t.original.skewX,\n        skewY: t.original.skewY,\n        left: t.original.left,\n        top: t.original.top\n      });\n\n      if (this._shouldCenterTransform(t.target)) {\n        if (t.action === 'rotate') {\n          this._setOriginToCenter(t.target);\n        }\n        else {\n          if (t.originX !== 'center') {\n            if (t.originX === 'right') {\n              t.mouseXSign = -1;\n            }\n            else {\n              t.mouseXSign = 1;\n            }\n          }\n          if (t.originY !== 'center') {\n            if (t.originY === 'bottom') {\n              t.mouseYSign = -1;\n            }\n            else {\n              t.mouseYSign = 1;\n            }\n          }\n\n          t.originX = 'center';\n          t.originY = 'center';\n        }\n      }\n      else {\n        t.originX = t.original.originX;\n        t.originY = t.original.originY;\n      }\n    },\n\n    /**\n     * Checks if point is contained within an area of given object\n     * @param {Event} e Event object\n     * @param {fabric.Object} target Object to test against\n     * @param {Object} [point] x,y object of point coordinates we want to check.\n     * @return {Boolean} true if point is contained within an area of given object\n     */\n    containsPoint: function (e, target, point) {\n      var ignoreZoom = true,\n          pointer = point || this.getPointer(e, ignoreZoom),\n          xy;\n\n      if (target.group && target.group === this.getActiveGroup()) {\n        xy = this._normalizePointer(target.group, pointer);\n      }\n      else {\n        xy = { x: pointer.x, y: pointer.y };\n      }\n      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n    },\n\n    /**\n     * @private\n     */\n    _normalizePointer: function (object, pointer) {\n      var m = object.calcTransformMatrix(),\n          invertedM = fabric.util.invertTransform(m),\n          vptPointer = this.restorePointerVpt(pointer);\n      return fabric.util.transformPoint(vptPointer, invertedM);\n    },\n\n    /**\n     * Returns true if object is transparent at a certain location\n     * @param {fabric.Object} target Object to check\n     * @param {Number} x Left coordinate\n     * @param {Number} y Top coordinate\n     * @return {Boolean}\n     */\n    isTargetTransparent: function (target, x, y) {\n      var hasBorders = target.hasBorders,\n          transparentCorners = target.transparentCorners,\n          ctx = this.contextCache,\n          originalColor = target.selectionBackgroundColor;\n\n      target.hasBorders = target.transparentCorners = false;\n      target.selectionBackgroundColor = '';\n\n      ctx.save();\n      ctx.transform.apply(ctx, this.viewportTransform);\n      target.render(ctx);\n      ctx.restore();\n\n      target.active && target._renderControls(ctx);\n\n      target.hasBorders = hasBorders;\n      target.transparentCorners = transparentCorners;\n      target.selectionBackgroundColor = originalColor;\n\n      var isTransparent = fabric.util.isTransparent(\n        ctx, x, y, this.targetFindTolerance);\n\n      this.clearContext(ctx);\n\n      return isTransparent;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldClearSelection: function (e, target) {\n      var activeGroup = this.getActiveGroup(),\n          activeObject = this.getActiveObject();\n\n      return (\n        !target\n        ||\n        (target &&\n          activeGroup &&\n          !activeGroup.contains(target) &&\n          activeGroup !== target &&\n          !e[this.selectionKey])\n        ||\n        (target && !target.evented)\n        ||\n        (target &&\n          !target.selectable &&\n          activeObject &&\n          activeObject !== target)\n      );\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} target\n     */\n    _shouldCenterTransform: function (target) {\n      if (!target) {\n        return;\n      }\n\n      var t = this._currentTransform,\n          centerTransform;\n\n      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n        centerTransform = this.centeredScaling || target.centeredScaling;\n      }\n      else if (t.action === 'rotate') {\n        centerTransform = this.centeredRotation || target.centeredRotation;\n      }\n\n      return centerTransform ? !t.altKey : t.altKey;\n    },\n\n    /**\n     * @private\n     */\n    _getOriginFromCorner: function(target, corner) {\n      var origin = {\n        x: target.originX,\n        y: target.originY\n      };\n\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n        origin.x = 'right';\n      }\n      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n        origin.x = 'left';\n      }\n\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n        origin.y = 'bottom';\n      }\n      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n        origin.y = 'top';\n      }\n\n      return origin;\n    },\n\n    /**\n     * @private\n     */\n    _getActionFromCorner: function(target, corner, e) {\n      if (!corner) {\n        return 'drag';\n      }\n\n      switch (corner) {\n        case 'mtr':\n          return 'rotate';\n        case 'ml':\n        case 'mr':\n          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n        case 'mt':\n        case 'mb':\n          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n        default:\n          return 'scale';\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _setupCurrentTransform: function (e, target) {\n      if (!target) {\n        return;\n      }\n\n      var pointer = this.getPointer(e),\n          corner = target._findTargetCorner(this.getPointer(e, true)),\n          action = this._getActionFromCorner(target, corner, e),\n          origin = this._getOriginFromCorner(target, corner);\n\n      this._currentTransform = {\n        target: target,\n        action: action,\n        corner: corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        left: target.left,\n        top: target.top,\n        theta: degreesToRadians(target.angle),\n        width: target.width * target.scaleX,\n        mouseXSign: 1,\n        mouseYSign: 1,\n        shiftKey: e.shiftKey,\n        altKey: e[this.centeredKey]\n      };\n\n      this._currentTransform.original = {\n        left: target.left,\n        top: target.top,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        originX: origin.x,\n        originY: origin.y\n      };\n\n      this._resetCurrentTransform();\n    },\n\n    /**\n     * Translates object by \"setting\" its left/top\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the translation occurred\n     */\n    _translateObject: function (x, y) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          newLeft = x - transform.offsetX,\n          newTop = y - transform.offsetY,\n          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n          moveY = !target.get('lockMovementY') && target.top !== newTop;\n\n      moveX && target.set('left', newLeft);\n      moveY && target.set('top', newTop);\n      return moveX || moveY;\n    },\n\n    /**\n     * Check if we are increasing a positive skew or lower it,\n     * checking mouse direction and pressed corner.\n     * @private\n     */\n    _changeSkewTransformOrigin: function(mouseMove, t, by) {\n      var property = 'originX', origins = { 0: 'center' },\n          skew = t.target.skewX, originA = 'left', originB = 'right',\n          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n          flipSign = 1;\n\n      mouseMove = mouseMove > 0 ? 1 : -1;\n      if (by === 'y') {\n        skew = t.target.skewY;\n        originA = 'top';\n        originB = 'bottom';\n        property = 'originY';\n      }\n      origins[-1] = originA;\n      origins[1] = originB;\n\n      t.target.flipX && (flipSign *= -1);\n      t.target.flipY && (flipSign *= -1);\n\n      if (skew === 0) {\n        t.skewSign = -corner * mouseMove * flipSign;\n        t[property] = origins[-mouseMove];\n      }\n      else {\n        skew = skew > 0 ? 1 : -1;\n        t.skewSign = skew;\n        t[property] = origins[skew * corner * flipSign];\n      }\n    },\n\n    /**\n     * Skew object by mouse events\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y'\n     * @return {Boolean} true if the skewing occurred\n     */\n    _skewObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target, skewed = false,\n          lockSkewingX = target.get('lockSkewingX'),\n          lockSkewingY = target.get('lockSkewingY');\n\n      if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\n        return false;\n      }\n\n      // Get the constraint point\n      var center = target.getCenterPoint(),\n          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n          actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n\n      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n      // Actually skew the object\n      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n      t.lastX = x;\n      t.lastY = y;\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return skewed;\n    },\n\n    /**\n     * Set object skew\n     * @private\n     * @return {Boolean} true if the skewing occurred\n     */\n    _setObjectSkew: function(localMouse, transform, by, _dim) {\n      var target = transform.target, newValue, skewed = false,\n          skewSign = transform.skewSign, newDim, dimNoSkew,\n          otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n\n      if (by === 'x') {\n        otherBy = 'y';\n        _otherBy = 'Y';\n        _by = 'X';\n        skewX = 0;\n        skewY = target.skewY;\n      }\n      else {\n        otherBy = 'x';\n        _otherBy = 'X';\n        _by = 'Y';\n        skewX = target.skewX;\n        skewY = 0;\n      }\n\n      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n      if (newDimMouse <= 2) {\n        newValue = 0;\n      }\n      else {\n        newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\n                                        (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n        newValue = fabric.util.radiansToDegrees(newValue);\n      }\n      skewed = target['skew' + _by] !== newValue;\n      target.set('skew' + _by, newValue);\n      if (target['skew' + _otherBy] !== 0) {\n        newDim = target._getTransformedDimensions();\n        newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\n        target.set('scale' + _otherBy, newValue);\n      }\n      return skewed;\n    },\n\n    /**\n     * Scales object by invoking its scaleX/scaleY methods\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n     *                    When not provided, an object is scaled by both dimensions equally\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          lockScalingX = target.get('lockScalingX'),\n          lockScalingY = target.get('lockScalingY'),\n          lockScalingFlip = target.get('lockScalingFlip');\n\n      if (lockScalingX && lockScalingY) {\n        return false;\n      }\n\n      // Get the constraint point\n      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n          dim = target._getTransformedDimensions(), scaled = false;\n\n      this._setLocalMouse(localMouse, t);\n\n      // Actually scale the object\n      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n      var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\n          changeX, changeY, scaleX, scaleY;\n\n      scaleX = localMouse.x * target.scaleX / _dim.x;\n      scaleY = localMouse.y * target.scaleY / _dim.y;\n      changeX = target.scaleX !== scaleX;\n      changeY = target.scaleY !== scaleY;\n\n      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n        forbidScalingX = true;\n      }\n\n      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n        forbidScalingY = true;\n      }\n\n      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n        forbidScalingX || forbidScalingY || (scaled = this._scaleObjectEqually(localMouse, target, transform, _dim));\n      }\n      else if (!by) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      else if (by === 'x' && !target.get('lockUniScaling')) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n      }\n      else if (by === 'y' && !target.get('lockUniScaling')) {\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n\n      var dist = localMouse.y + localMouse.x,\n          lastDist = _dim.y * transform.original.scaleY / target.scaleY +\n                     _dim.x * transform.original.scaleX / target.scaleX,\n          scaled, signX = localMouse.x / Math.abs(localMouse.x),\n          signY = localMouse.y / Math.abs(localMouse.y);\n\n      // We use transform.scaleX/Y instead of target.scaleX/Y\n      // because the object may have a min scale and we'll loose the proportions\n      transform.newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);\n      transform.newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);\n      scaled = transform.newScaleX !== target.scaleX || transform.newScaleY !== target.scaleY;\n      target.set('scaleX', transform.newScaleX);\n      target.set('scaleY', transform.newScaleY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     */\n    _flipObject: function(transform, by) {\n      if (transform.newScaleX < 0 && by !== 'y') {\n        if (transform.originX === 'left') {\n          transform.originX = 'right';\n        }\n        else if (transform.originX === 'right') {\n          transform.originX = 'left';\n        }\n      }\n\n      if (transform.newScaleY < 0 && by !== 'x') {\n        if (transform.originY === 'top') {\n          transform.originY = 'bottom';\n        }\n        else if (transform.originY === 'bottom') {\n          transform.originY = 'top';\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setLocalMouse: function(localMouse, t) {\n      var target = t.target, zoom = this.getZoom(),\n          padding = target.padding / zoom;\n\n      if (t.originX === 'right') {\n        localMouse.x *= -1;\n      }\n      else if (t.originX === 'center') {\n        localMouse.x *= t.mouseXSign * 2;\n        if (localMouse.x < 0) {\n          t.mouseXSign = -t.mouseXSign;\n        }\n      }\n\n      if (t.originY === 'bottom') {\n        localMouse.y *= -1;\n      }\n      else if (t.originY === 'center') {\n        localMouse.y *= t.mouseYSign * 2;\n        if (localMouse.y < 0) {\n          t.mouseYSign = -t.mouseYSign;\n        }\n      }\n\n      // adjust the mouse coordinates when dealing with padding\n      if (abs(localMouse.x) > padding) {\n        if (localMouse.x < 0) {\n          localMouse.x += padding;\n        }\n        else {\n          localMouse.x -= padding;\n        }\n      }\n      else { // mouse is within the padding, set to 0\n        localMouse.x = 0;\n      }\n\n      if (abs(localMouse.y) > padding) {\n        if (localMouse.y < 0) {\n          localMouse.y += padding;\n        }\n        else {\n          localMouse.y -= padding;\n        }\n      }\n      else {\n        localMouse.y = 0;\n      }\n    },\n\n    /**\n     * Rotates object by invoking its rotate method\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the rotation occurred\n     */\n    _rotateObject: function (x, y) {\n\n      var t = this._currentTransform;\n\n      if (t.target.get('lockRotation')) {\n        return false;\n      }\n\n      var lastAngle = atan2(t.ey - t.top, t.ex - t.left),\n          curAngle = atan2(y - t.top, x - t.left),\n          angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n          hasRoated = true;\n\n      if (t.target.snapAngle > 0) {\n        var snapAngle  = t.target.snapAngle,\n            snapThreshold  = t.target.snapThreshold || snapAngle,\n            rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n            leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n        if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n          angle = leftAngleLocked;\n        }\n        else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n          angle = rightAngleLocked;\n        }\n      }\n\n      // normalize angle to positive value\n      if (angle < 0) {\n        angle = 360 + angle;\n      }\n      angle %= 360;\n\n      if (t.target.angle === angle) {\n        hasRoated = false;\n      }\n      else {\n        t.target.angle = angle;\n      }\n\n      return hasRoated;\n    },\n\n    /**\n     * Set the cursor type of the canvas element\n     * @param {String} value Cursor type of the canvas element.\n     * @see http://www.w3.org/TR/css3-ui/#cursor\n     */\n    setCursor: function (value) {\n      this.upperCanvasEl.style.cursor = value;\n    },\n\n    /**\n     * @param {fabric.Object} target to reset transform\n     * @private\n     */\n    _resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.setAngle(0);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n     */\n    _drawSelection: function (ctx) {\n      var groupSelector = this._groupSelector,\n          left = groupSelector.left,\n          top = groupSelector.top,\n          aleft = abs(left),\n          atop = abs(top);\n\n      if (this.selectionColor) {\n        ctx.fillStyle = this.selectionColor;\n\n        ctx.fillRect(\n          groupSelector.ex - ((left > 0) ? 0 : -left),\n          groupSelector.ey - ((top > 0) ? 0 : -top),\n          aleft,\n          atop\n        );\n      }\n\n      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n        return;\n      }\n      ctx.lineWidth = this.selectionLineWidth;\n      ctx.strokeStyle = this.selectionBorderColor;\n\n      // selection border\n      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n\n        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);\n\n        ctx.beginPath();\n\n        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\n        ctx.closePath();\n        ctx.stroke();\n      }\n      else {\n        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n        ctx.strokeRect(\n          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n          aleft,\n          atop\n        );\n      }\n    },\n\n    /**\n     * Method that determines what object we are clicking on\n     * the skipGroup parameter is for internal use, is needed for shift+click action\n     * @param {Event} e mouse event\n     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n     */\n    findTarget: function (e, skipGroup) {\n      if (this.skipTargetFind) {\n        return;\n      }\n\n      var ignoreZoom = true,\n          pointer = this.getPointer(e, ignoreZoom),\n          activeGroup = this.getActiveGroup(),\n          activeObject = this.getActiveObject(),\n          activeTarget, activeTargetSubs;\n      // first check current group (if one exists)\n      // active group does not check sub targets like normal groups.\n      // if active group just exits.\n      this.targets = [];\n      if (activeGroup && !skipGroup && activeGroup === this._searchPossibleTargets([activeGroup], pointer)) {\n        this._fireOverOutEvents(activeGroup, e);\n        return activeGroup;\n      }\n      // if we hit the corner of an activeObject, let's return that.\n      if (activeObject && activeObject._findTargetCorner(pointer)) {\n        this._fireOverOutEvents(activeObject, e);\n        return activeObject;\n      }\n      if (activeObject && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        if (!this.preserveObjectStacking) {\n          this._fireOverOutEvents(activeObject, e);\n          return activeObject;\n        }\n        else {\n          activeTarget = activeObject;\n          activeTargetSubs = this.targets;\n          this.targets = [];\n        }\n      }\n\n      var target = this._searchPossibleTargets(this._objects, pointer);\n      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n        target = activeTarget;\n        this.targets = activeTargetSubs;\n      }\n      this._fireOverOutEvents(target, e);\n      return target;\n    },\n\n    /**\n     * @private\n     */\n    _fireOverOutEvents: function(target, e) {\n      var overOpt, outOpt, hoveredTarget = this._hoveredTarget;\n      if (hoveredTarget !== target) {\n        overOpt = { e: e, target: target, previousTarget: this._hoveredTarget };\n        outOpt = { e: e, target: this._hoveredTarget, nextTarget: target };\n        this._hoveredTarget = target;\n      }\n      if (target) {\n        if (hoveredTarget !== target) {\n          if (hoveredTarget) {\n            this.fire('mouse:out', outOpt);\n            hoveredTarget.fire('mouseout', outOpt);\n          }\n          this.fire('mouse:over', overOpt);\n          target.fire('mouseover', overOpt);\n        }\n      }\n      else if (hoveredTarget) {\n        this.fire('mouse:out', outOpt);\n        hoveredTarget.fire('mouseout', outOpt);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _checkTarget: function(pointer, obj) {\n      if (obj &&\n          obj.visible &&\n          obj.evented &&\n          this.containsPoint(null, obj, pointer)){\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n          var isTransparent = this.isTargetTransparent(obj, pointer.x, pointer.y);\n          if (!isTransparent) {\n            return true;\n          }\n        }\n        else {\n          return true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _searchPossibleTargets: function(objects, pointer) {\n\n      // Cache all targets where their bounding box contains point.\n      var target, i = objects.length, normalizedPointer, subTarget;\n      // Do not check for currently grouped objects, since we check the parent group itself.\n      // untill we call this function specifically to search inside the activeGroup\n      while (i--) {\n        if (this._checkTarget(pointer, objects[i])) {\n          target = objects[i];\n          if (target.type === 'group' && target.subTargetCheck) {\n            normalizedPointer = this._normalizePointer(target, pointer);\n            subTarget = this._searchPossibleTargets(target._objects, normalizedPointer);\n            subTarget && this.targets.push(subTarget);\n          }\n          break;\n        }\n      }\n      return target;\n    },\n\n    /**\n     * Returns pointer coordinates without the effect of the viewport\n     * @param {Object} pointer with \"x\" and \"y\" number values\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    restorePointerVpt: function(pointer) {\n      return fabric.util.transformPoint(\n        pointer,\n        fabric.util.invertTransform(this.viewportTransform)\n      );\n    },\n\n    /**\n     * Returns pointer coordinates relative to canvas.\n     * Can return coordinates with or without viewportTransform.\n     * ignoreZoom false gives back coordinates that represent\n     * the point clicked on canvas element.\n     * ignoreZoom true gives back coordinates after being processed\n     * by the viewportTransform ( sort of coordinates of what is displayed\n     * on the canvas where you are clicking.\n     * To interact with your shapes top and left you want to use ignoreZoom true\n     * most of the time, while ignoreZoom false will give you coordinates\n     * compatible with the object.oCoords system.\n     * of the time.\n     * @param {Event} e\n     * @param {Boolean} ignoreZoom\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    getPointer: function (e, ignoreZoom, upperCanvasEl) {\n      if (!upperCanvasEl) {\n        upperCanvasEl = this.upperCanvasEl;\n      }\n      var pointer = getPointer(e),\n          bounds = upperCanvasEl.getBoundingClientRect(),\n          boundsWidth = bounds.width || 0,\n          boundsHeight = bounds.height || 0,\n          cssScale;\n\n      if (!boundsWidth || !boundsHeight ) {\n        if ('top' in bounds && 'bottom' in bounds) {\n          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n        }\n        if ('right' in bounds && 'left' in bounds) {\n          boundsWidth = Math.abs( bounds.right - bounds.left );\n        }\n      }\n\n      this.calcOffset();\n\n      pointer.x = pointer.x - this._offset.left;\n      pointer.y = pointer.y - this._offset.top;\n      if (!ignoreZoom) {\n        pointer = this.restorePointerVpt(pointer);\n      }\n\n      if (boundsWidth === 0 || boundsHeight === 0) {\n        // If bounds are not available (i.e. not visible), do not apply scale.\n        cssScale = { width: 1, height: 1 };\n      }\n      else {\n        cssScale = {\n          width: upperCanvasEl.width / boundsWidth,\n          height: upperCanvasEl.height / boundsHeight\n        };\n      }\n\n      return {\n        x: pointer.x * cssScale.width,\n        y: pointer.y * cssScale.height\n      };\n    },\n\n    /**\n     * @private\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n     */\n    _createUpperCanvas: function () {\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, '');\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.className = '';\n      }\n      else {\n        this.upperCanvasEl = this._createCanvasElement();\n      }\n      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\n      this.wrapperEl.appendChild(this.upperCanvasEl);\n\n      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n      this._applyCanvasStyle(this.upperCanvasEl);\n      this.contextTop = this.upperCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _createCacheCanvas: function () {\n      this.cacheCanvasEl = this._createCanvasElement();\n      this.cacheCanvasEl.setAttribute('width', this.width);\n      this.cacheCanvasEl.setAttribute('height', this.height);\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _initWrapperElement: function () {\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n        'class': this.containerClass\n      });\n      fabric.util.setStyle(this.wrapperEl, {\n        width: this.getWidth() + 'px',\n        height: this.getHeight() + 'px',\n        position: 'relative'\n      });\n      fabric.util.makeElementUnselectable(this.wrapperEl);\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element canvas element to apply styles on\n     */\n    _applyCanvasStyle: function (element) {\n      var width = this.getWidth() || element.width,\n          height = this.getHeight() || element.height;\n\n      fabric.util.setStyle(element, {\n        position: 'absolute',\n        width: width + 'px',\n        height: height + 'px',\n        left: 0,\n        top: 0,\n        'touch-action': 'none'\n      });\n      element.width = width;\n      element.height = height;\n      fabric.util.makeElementUnselectable(element);\n    },\n\n    /**\n     * Copys the the entire inline style from one element (fromEl) to another (toEl)\n     * @private\n     * @param {Element} fromEl Element style is copied from\n     * @param {Element} toEl Element copied style is applied to\n     */\n    _copyCanvasStyle: function (fromEl, toEl) {\n      toEl.style.cssText = fromEl.style.cssText;\n    },\n\n    /**\n     * Returns context of canvas where object selection is drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getSelectionContext: function() {\n      return this.contextTop;\n    },\n\n    /**\n     * Returns &lt;canvas> element on which object selection is drawn\n     * @return {HTMLCanvasElement}\n     */\n    getSelectionElement: function () {\n      return this.upperCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _setActiveObject: function(object) {\n      var obj = this._activeObject;\n      if (obj) {\n        obj.set('active', false);\n        if (object !== obj && obj.onDeselect && typeof obj.onDeselect === 'function') {\n          obj.onDeselect();\n        }\n      }\n      this._activeObject = object;\n      object.set('active', true);\n    },\n\n    /**\n     * Sets given object as the only active object on canvas\n     * @param {fabric.Object} object Object to set as an active one\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveObject: function (object, e) {\n      var currentActiveObject = this.getActiveObject();\n      if (currentActiveObject && currentActiveObject !== object) {\n        currentActiveObject.fire('deselected', { e: e });\n      }\n      this._setActiveObject(object);\n      this.fire('object:selected', { target: object, e: e });\n      object.fire('selected', { e: e });\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Returns currently active object\n     * @return {fabric.Object} active object\n     */\n    getActiveObject: function () {\n      return this._activeObject;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      // removing active object should fire \"selection:cleared\" events\n      if (this.getActiveObject() === obj) {\n        this.fire('before:selection:cleared', { target: obj });\n        this._discardActiveObject();\n        this.fire('selection:cleared', { target: obj });\n        obj.fire('deselected');\n      }\n      if (this._hoveredTarget === obj) {\n        this._hoveredTarget = null;\n      }\n      this.callSuper('_onObjectRemoved', obj);\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveObject: function() {\n      var obj = this._activeObject;\n      if (obj) {\n        obj.set('active', false);\n        if (obj.onDeselect && typeof obj.onDeselect === 'function') {\n          obj.onDeselect();\n        }\n      }\n      this._activeObject = null;\n    },\n\n    /**\n     * Discards currently active object and fire events. If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parmater and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @param {event} e\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveObject: function (e) {\n      var activeObject = this._activeObject;\n      if (activeObject) {\n        this.fire('before:selection:cleared', { target: activeObject, e: e });\n        this._discardActiveObject();\n        this.fire('selection:cleared', { e: e });\n        activeObject.fire('deselected', { e: e });\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Group} group\n     */\n    _setActiveGroup: function(group) {\n      this._activeGroup = group;\n      if (group) {\n        group.set('active', true);\n      }\n    },\n\n    /**\n     * Sets active group to a specified one. If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parmater and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @param {fabric.Group} group Group to set as a current one\n     * @param {Event} e Event object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveGroup: function (group, e) {\n      this._setActiveGroup(group);\n      if (group) {\n        this.fire('object:selected', { target: group, e: e });\n        group.fire('selected', { e: e });\n      }\n      return this;\n    },\n\n    /**\n     * Returns currently active group\n     * @return {fabric.Group} Current group\n     */\n    getActiveGroup: function () {\n      return this._activeGroup;\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveGroup: function() {\n      var g = this.getActiveGroup();\n      if (g) {\n        g.destroy();\n      }\n      this.setActiveGroup(null);\n    },\n\n    /**\n     * Discards currently active group and fire events If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parmater and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveGroup: function (e) {\n      var g = this.getActiveGroup();\n      if (g) {\n        this.fire('before:selection:cleared', { e: e, target: g });\n        this._discardActiveGroup();\n        this.fire('selection:cleared', { e: e });\n      }\n      return this;\n    },\n\n    /**\n     * Deactivates all objects on canvas, removing any active group or object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    deactivateAll: function () {\n      var allObjects = this.getObjects(),\n          i = 0,\n          len = allObjects.length,\n          obj;\n      for ( ; i < len; i++) {\n        obj = allObjects[i];\n        obj && obj.set('active', false);\n      }\n      this._discardActiveGroup();\n      this._discardActiveObject();\n      return this;\n    },\n\n    /**\n     * Deactivates all objects and dispatches appropriate events If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parmater and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    deactivateAllWithDispatch: function (e) {\n      var allObjects = this.getObjects(),\n          i = 0,\n          len = allObjects.length,\n          obj;\n      for ( ; i < len; i++) {\n        obj = allObjects[i];\n        obj && obj.set('active', false);\n      }\n      this.discardActiveGroup(e);\n      this.discardActiveObject(e);\n      return this;\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      fabric.StaticCanvas.prototype.dispose.call(this);\n      var wrapper = this.wrapperEl;\n      this.removeListeners();\n      wrapper.removeChild(this.upperCanvasEl);\n      wrapper.removeChild(this.lowerCanvasEl);\n      delete this.upperCanvasEl;\n      if (wrapper.parentNode) {\n        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n      }\n      delete this.wrapperEl;\n      return this;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this.discardActiveGroup();\n      this.discardActiveObject();\n      this.clearContext(this.contextTop);\n      return this.callSuper('clear');\n    },\n\n    /**\n     * Draws objects' controls (borders/controls)\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n     */\n    drawControls: function(ctx) {\n      var activeGroup = this.getActiveGroup();\n\n      if (activeGroup) {\n        activeGroup._renderControls(ctx);\n      }\n      else {\n        this._drawObjectsControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _drawObjectsControls: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; ++i) {\n        if (!this._objects[i] || !this._objects[i].active) {\n          continue;\n        }\n        this._objects[i]._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      //If the object is part of the current selection group, it should\n      //be transformed appropriately\n      //i.e. it should be serialised as it would appear if the selection group\n      //were to be destroyed.\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\n          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\n      //Undo the damage we did by changing all of its properties\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n      return object;\n    },\n\n    /**\n     * Realises an object's group transformation on it\n     * @private\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n     * @returns the original values of instance which were changed\n     */\n    _realizeGroupTransformOnObject: function(instance) {\n      if (instance.group && instance.group === this.getActiveGroup()) {\n        //Copy all the positionally relevant properties across now\n        var originalValues = {},\n            layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top'];\n        layoutProps.forEach(function(prop) {\n          originalValues[prop] = instance[prop];\n        });\n        this.getActiveGroup().realizeTransform(instance);\n        return originalValues;\n      }\n      else {\n        return null;\n      }\n    },\n\n    /**\n     * Restores the changed properties of instance\n     * @private\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n     */\n    _unwindGroupTransformOnObject: function(instance, originalValues) {\n      if (originalValues) {\n        instance.set(originalValues);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      var originalProperties;\n      //If the object is in a selection group, simulate what would happen to that\n      //object when the group is deselected\n      originalProperties = this._realizeGroupTransformOnObject(instance);\n      this.callSuper('_setSVGObject', markup, instance, reviver);\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n    },\n  });\n\n  // copying static properties manually to work around Opera's bug,\n  // where \"prototype\" property is enumerable and overrides existing prototype\n  for (var prop in fabric.StaticCanvas) {\n    if (prop !== 'prototype') {\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n    }\n  }\n\n  if (fabric.isTouchSupported) {\n    /** @ignore */\n    fabric.Canvas.prototype._setCursorFromEvent = function() { };\n  }\n\n  /**\n   * @ignore\n   * @class fabric.Element\n   * @alias fabric.Canvas\n   * @deprecated Use {@link fabric.Canvas} instead.\n   * @constructor\n   */\n  fabric.Element = fabric.Canvas;\n})();\n\n\n(function() {\n\n  var cursorOffset = {\n        mt: 0, // n\n        tr: 1, // ne\n        mr: 2, // e\n        br: 3, // se\n        mb: 4, // s\n        bl: 5, // sw\n        ml: 6, // w\n        tl: 7 // nw\n      },\n      addListener = fabric.util.addListener,\n      removeListener = fabric.util.removeListener,\n      RIGHT_CLICK = 3, MIDDLE_CLICK = 2, LEFT_CLICK = 1;\n\n  function checkClick(e, value) {\n    return 'which' in e ? e.which === value : e.button === value - 1;\n  }\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Map of cursor style values for each of the object controls\n     * @private\n     */\n    cursorMap: [\n      'n-resize',\n      'ne-resize',\n      'e-resize',\n      'se-resize',\n      's-resize',\n      'sw-resize',\n      'w-resize',\n      'nw-resize'\n    ],\n\n    /**\n     * Adds mouse listeners to canvas\n     * @private\n     */\n    _initEventListeners: function () {\n      // in case we initialized the class twice. This should not happen normally\n      // but in some kind of applications where the canvas element may be changed\n      // this is a workaround to having double listeners.\n      this.removeListeners();\n      this._bindEvents();\n\n      addListener(fabric.window, 'resize', this._onResize);\n\n      // mouse events\n      addListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      addListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n      addListener(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n      addListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n      addListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n\n      // touch events\n      addListener(this.upperCanvasEl, 'touchstart', this._onMouseDown, { passive: false });\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, { passive: false });\n\n      if (typeof eventjs !== 'undefined' && 'add' in eventjs) {\n        eventjs.add(this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs.add(this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs.add(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs.add(this.upperCanvasEl, 'shake', this._onShake);\n        eventjs.add(this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _bindEvents: function() {\n      if (this.eventsBinded) {\n        // for any reason we pass here twice we do not want to bind events twice.\n        return;\n      }\n      this._onMouseDown = this._onMouseDown.bind(this);\n      this._onMouseMove = this._onMouseMove.bind(this);\n      this._onMouseUp = this._onMouseUp.bind(this);\n      this._onResize = this._onResize.bind(this);\n      this._onGesture = this._onGesture.bind(this);\n      this._onDrag = this._onDrag.bind(this);\n      this._onShake = this._onShake.bind(this);\n      this._onLongPress = this._onLongPress.bind(this);\n      this._onOrientationChange = this._onOrientationChange.bind(this);\n      this._onMouseWheel = this._onMouseWheel.bind(this);\n      this._onMouseOut = this._onMouseOut.bind(this);\n      this._onMouseEnter = this._onMouseEnter.bind(this);\n      this._onContextMenu = this._onContextMenu.bind(this);\n      this.eventsBinded = true;\n    },\n\n    /**\n     * Removes all event listeners\n     */\n    removeListeners: function() {\n      removeListener(fabric.window, 'resize', this._onResize);\n\n      removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      removeListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n      removeListener(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n      removeListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n      removeListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n\n      removeListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (typeof eventjs !== 'undefined' && 'remove' in eventjs) {\n        eventjs.remove(this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs.remove(this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs.remove(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs.remove(this.upperCanvasEl, 'shake', this._onShake);\n        eventjs.remove(this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js gesture\n     * @param {Event} [self] Inner Event object\n     */\n    _onGesture: function(e, self) {\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js drag\n     * @param {Event} [self] Inner Event object\n     */\n    _onDrag: function(e, self) {\n      this.__onDrag && this.__onDrag(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on wheel event\n     */\n    _onMouseWheel: function(e) {\n      this.__onMouseWheel(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseOut: function(e) {\n      var target = this._hoveredTarget;\n      this.fire('mouse:out', { target: target, e: e });\n      this._hoveredTarget = null;\n      target && target.fire('mouseout', { e: e });\n      if (this._iTextInstances) {\n        this._iTextInstances.forEach(function(obj) {\n          if (obj.isEditing) {\n            obj.hiddenTextarea.focus();\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseenter\n     */\n    _onMouseEnter: function(e) {\n      if (!this.findTarget(e)) {\n        this.fire('mouse:over', { target: null, e: e });\n        this._hoveredTarget = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js orientation change\n     * @param {Event} [self] Inner Event object\n     */\n    _onOrientationChange: function(e, self) {\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onShake: function(e, self) {\n      this.__onShake && this.__onShake(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onLongPress: function(e, self) {\n      this.__onLongPress && this.__onLongPress(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onContextMenu: function (e) {\n      if (this.stopContextMenu) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDown: function (e) {\n      this.__onMouseDown(e);\n\n      addListener(fabric.document, 'touchend', this._onMouseUp, { passive: false });\n      addListener(fabric.document, 'touchmove', this._onMouseMove, { passive: false });\n\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (e.type === 'touchstart') {\n        // Unbind mousedown to prevent double triggers from touch devices\n        removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      }\n      else {\n        addListener(fabric.document, 'mouseup', this._onMouseUp);\n        addListener(fabric.document, 'mousemove', this._onMouseMove);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUp: function (e) {\n      this.__onMouseUp(e);\n\n      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onMouseUp);\n\n      removeListener(fabric.document, 'mousemove', this._onMouseMove);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove);\n\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, { passive: false });\n\n      if (e.type === 'touchend') {\n        // Wait 400ms before rebinding mousedown to prevent double triggers\n        // from touch devices\n        var _this = this;\n        setTimeout(function() {\n          addListener(_this.upperCanvasEl, 'mousedown', _this._onMouseDown);\n        }, 400);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMove: function (e) {\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n      this.__onMouseMove(e);\n    },\n\n    /**\n     * @private\n     */\n    _onResize: function () {\n      this.calcOffset();\n    },\n\n    /**\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n     * @private\n     * @param {Object} target\n     * @param {Object} pointer\n     */\n    _shouldRender: function(target, pointer) {\n      var activeObject = this.getActiveGroup() || this.getActiveObject();\n\n      if (activeObject && activeObject.isEditing && target === activeObject) {\n        // if we mouse up/down over a editing textbox a cursor change,\n        // there is no need to re render\n        return false;\n      }\n      return !!(\n        (target && (\n          target.isMoving ||\n          target !== activeObject))\n        ||\n        (!target && !!activeObject)\n        ||\n        (!target && !activeObject && !this._groupSelector)\n        ||\n        (pointer &&\n          this._previousPointer &&\n          this.selection && (\n          pointer.x !== this._previousPointer.x ||\n          pointer.y !== this._previousPointer.y))\n      );\n    },\n\n    /**\n     * Method that defines the actions when mouse is released on canvas.\n     * The method resets the currentTransform parameters, store the image corner\n     * position in the image object and render the canvas on top.\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseUp: function (e) {\n\n      var target;\n      // if right/middle click just fire events and return\n      // target undefined will make the _handleEvent search the target\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'up', target, RIGHT_CLICK);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'up', target, MIDDLE_CLICK);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this._onMouseUpInDrawingMode(e);\n        return;\n      }\n\n      var searchTarget = true, transform = this._currentTransform,\n          groupSelector = this._groupSelector,\n          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n\n      if (transform) {\n        this._finalizeCurrentTransform(e);\n        searchTarget = !transform.actionPerformed;\n      }\n\n      target = searchTarget ? this.findTarget(e, true) : transform.target;\n\n      var shouldRender = this._shouldRender(target, this.getPointer(e));\n\n      if (target || !isClick) {\n        this._maybeGroupObjects(e);\n      }\n      else {\n        // those are done by default on mouse up\n        // by _maybeGroupObjects, we are skipping it in case of no target find\n        this._groupSelector = null;\n        this._currentTransform = null;\n      }\n\n      if (target) {\n        target.isMoving = false;\n      }\n      this._setCursorFromEvent(e, target);\n      this._handleEvent(e, 'up', target ? target : null, LEFT_CLICK, isClick);\n      target && (target.__corner = 0);\n      shouldRender && this.renderAll();\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @param {fabric.Object} targetObj receiving event\n     * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\n     * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\n     */\n    _handleEvent: function(e, eventType, targetObj, button, isClick) {\n      var target = typeof targetObj === 'undefined' ? this.findTarget(e) : targetObj,\n          targets = this.targets || [],\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n            button: button || LEFT_CLICK,\n            isClick: isClick || false\n          };\n      this.fire('mouse:' + eventType, options);\n      target && target.fire('mouse' + eventType, options);\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire('mouse' + eventType, options);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n     */\n    _finalizeCurrentTransform: function(e) {\n\n      var transform = this._currentTransform,\n          target = transform.target;\n\n      if (target._scaling) {\n        target._scaling = false;\n      }\n\n      target.setCoords();\n      this._restoreOriginXY(target);\n\n      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n        this.fire('object:modified', { target: target, e: e });\n        target.fire('modified', { e: e });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object to restore\n     */\n    _restoreOriginXY: function(target) {\n      if (this._previousOriginX && this._previousOriginY) {\n\n        var originPoint = target.translateToOriginPoint(\n          target.getCenterPoint(),\n          this._previousOriginX,\n          this._previousOriginY);\n\n        target.originX = this._previousOriginX;\n        target.originY = this._previousOriginY;\n\n        target.left = originPoint.x;\n        target.top = originPoint.y;\n\n        this._previousOriginX = null;\n        this._previousOriginY = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDownInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = true;\n      this.discardActiveObject(e).renderAll();\n      if (this.clipTo) {\n        fabric.util.clipContext(this, this.contextTop);\n      }\n      var pointer = this.getPointer(e);\n      this.freeDrawingBrush.onMouseDown(pointer);\n      this._handleEvent(e, 'down');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMoveInDrawingMode: function(e) {\n      if (this._isCurrentlyDrawing) {\n        var pointer = this.getPointer(e);\n        this.freeDrawingBrush.onMouseMove(pointer);\n      }\n      this.setCursor(this.freeDrawingCursor);\n      this._handleEvent(e, 'move');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUpInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = false;\n      if (this.clipTo) {\n        this.contextTop.restore();\n      }\n      this.freeDrawingBrush.onMouseUp();\n      this._handleEvent(e, 'up');\n    },\n\n    /**\n     * Method that defines the actions when mouse is clicked on canvas.\n     * The method inits the currentTransform parameters and renders all the\n     * canvas so the current image can be placed on the top canvas and the rest\n     * in on the container one.\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    __onMouseDown: function (e) {\n\n      var target = this.findTarget(e);\n\n      // if right click just fire events\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'down', target ? target : null, RIGHT_CLICK);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'down', target ? target : null, MIDDLE_CLICK);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode) {\n        this._onMouseDownInDrawingMode(e);\n        return;\n      }\n\n      // ignore if some object is being transformed at this moment\n      if (this._currentTransform) {\n        return;\n      }\n\n      // save pointer for check in __onMouseUp event\n      var pointer = this.getPointer(e, true);\n      this._previousPointer = pointer;\n\n      var shouldRender = this._shouldRender(target, pointer),\n          shouldGroup = this._shouldGroup(e, target);\n\n      if (this._shouldClearSelection(e, target)) {\n        this.deactivateAllWithDispatch(e);\n      }\n      else if (shouldGroup) {\n        this._handleGrouping(e, target);\n        target = this.getActiveGroup();\n      }\n\n      if (this.selection && (!target || (!target.selectable && !target.isEditing))) {\n        this._groupSelector = {\n          ex: pointer.x,\n          ey: pointer.y,\n          top: 0,\n          left: 0\n        };\n      }\n\n      if (target) {\n        if (target.selectable && (target.__corner || !shouldGroup)) {\n          this._beforeTransform(e, target);\n          this._setupCurrentTransform(e, target);\n        }\n        var activeObject = this.getActiveObject();\n        if (target !== this.getActiveGroup() && target !== activeObject) {\n          this.deactivateAll();\n          if (target.selectable) {\n            activeObject && activeObject.fire('deselected', { e: e });\n            this.setActiveObject(target, e);\n          }\n        }\n      }\n      this._handleEvent(e, 'down', target ? target : null);\n      // we must renderAll so that we update the visuals\n      shouldRender && this.renderAll();\n    },\n\n    /**\n     * @private\n     */\n    _beforeTransform: function(e, target) {\n      this.stateful && target.saveState();\n\n      // determine if it's a drag or rotate case\n      if (target._findTargetCorner(this.getPointer(e))) {\n        this.onBeforeScaleRotate(target);\n      }\n\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object for that origin is set to center\n     */\n    _setOriginToCenter: function(target) {\n      this._previousOriginX = this._currentTransform.target.originX;\n      this._previousOriginY = this._currentTransform.target.originY;\n\n      var center = target.getCenterPoint();\n\n      target.originX = 'center';\n      target.originY = 'center';\n\n      target.left = center.x;\n      target.top = center.y;\n\n      this._currentTransform.left = target.left;\n      this._currentTransform.top = target.top;\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object for that center is set to origin\n     */\n    _setCenterToOrigin: function(target) {\n      var originPoint = target.translateToOriginPoint(\n        target.getCenterPoint(),\n        this._previousOriginX,\n        this._previousOriginY);\n\n      target.originX = this._previousOriginX;\n      target.originY = this._previousOriginY;\n\n      target.left = originPoint.x;\n      target.top = originPoint.y;\n\n      this._previousOriginX = null;\n      this._previousOriginY = null;\n    },\n\n    /**\n     * Method that defines the actions when mouse is hovering the canvas.\n     * The currentTransform parameter will definde whether the user is rotating/scaling/translating\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n     * all any other type of action.\n     * In case of an image transformation only the top canvas will be rendered.\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    __onMouseMove: function (e) {\n\n      var target, pointer;\n\n      if (this.isDrawingMode) {\n        this._onMouseMoveInDrawingMode(e);\n        return;\n      }\n      if (typeof e.touches !== 'undefined' && e.touches.length > 1) {\n        return;\n      }\n\n      var groupSelector = this._groupSelector;\n\n      // We initially clicked in an empty area, so we draw a box for multiple selection\n      if (groupSelector) {\n        pointer = this.getPointer(e, true);\n\n        groupSelector.left = pointer.x - groupSelector.ex;\n        groupSelector.top = pointer.y - groupSelector.ey;\n\n        this.renderTop();\n      }\n      else if (!this._currentTransform) {\n        target = this.findTarget(e);\n        this._setCursorFromEvent(e, target);\n      }\n      else {\n        this._transformObject(e);\n      }\n      this._handleEvent(e, 'move', target ? target : null);\n    },\n\n    /**\n     * Method that defines actions when an Event Mouse Wheel\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseWheel: function(e) {\n      this._handleEvent(e, 'wheel');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event fired on mousemove\n     */\n    _transformObject: function(e) {\n      var pointer = this.getPointer(e),\n          transform = this._currentTransform;\n\n      transform.reset = false;\n      transform.target.isMoving = true;\n      transform.shiftKey = e.shiftKey;\n      transform.altKey = e[this.centeredKey];\n\n      this._beforeScaleTransform(e, transform);\n      this._performTransformAction(e, transform, pointer);\n\n      transform.actionPerformed && this.renderAll();\n    },\n\n    /**\n     * @private\n     */\n    _performTransformAction: function(e, transform, pointer) {\n      var x = pointer.x,\n          y = pointer.y,\n          target = transform.target,\n          action = transform.action,\n          actionPerformed = false;\n\n      if (action === 'rotate') {\n        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', target, e);\n      }\n      else if (action === 'scale') {\n        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', target, e);\n      }\n      else if (action === 'scaleX') {\n        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', target, e);\n      }\n      else if (action === 'scaleY') {\n        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', target, e);\n      }\n      else if (action === 'skewX') {\n        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', target, e);\n      }\n      else if (action === 'skewY') {\n        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', target, e);\n      }\n      else {\n        actionPerformed = this._translateObject(x, y);\n        if (actionPerformed) {\n          this._fire('moving', target, e);\n          this.setCursor(target.moveCursor || this.moveCursor);\n        }\n      }\n      transform.actionPerformed = transform.actionPerformed || actionPerformed;\n    },\n\n    /**\n     * @private\n     */\n    _fire: function(eventName, target, e) {\n      this.fire('object:' + eventName, { target: target, e: e });\n      target.fire(eventName, { e: e });\n    },\n\n    /**\n     * @private\n     */\n    _beforeScaleTransform: function(e, transform) {\n      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n        var centerTransform = this._shouldCenterTransform(transform.target);\n\n        // Switch from a normal resize to center-based\n        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n           // Switch from center-based resize to normal one\n           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n        ) {\n          this._resetCurrentTransform();\n          transform.reset = true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {Object} transform current tranform\n     * @param {Number} x mouse position x from origin\n     * @param {Number} y mouse poistion y from origin\n     * @return {Boolean} true if the scaling occurred\n     */\n    _onScale: function(e, transform, x, y) {\n      if ((e[this.uniScaleKey] || this.uniScaleTransform) && !transform.target.get('lockUniScaling')) {\n        transform.currentAction = 'scale';\n        return this._scaleObject(x, y);\n      }\n      else {\n        // Switch from a normal resize to proportional\n        if (!transform.reset && transform.currentAction === 'scale') {\n          this._resetCurrentTransform();\n        }\n\n        transform.currentAction = 'scaleEqually';\n        return this._scaleObject(x, y, 'equally');\n      }\n    },\n\n    /**\n     * Sets the cursor depending on where the canvas is being hovered.\n     * Note: very buggy in Opera\n     * @param {Event} e Event object\n     * @param {Object} target Object that the mouse is hovering, if so.\n     */\n    _setCursorFromEvent: function (e, target) {\n      if (!target) {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n\n      var hoverCursor = target.hoverCursor || this.hoverCursor,\n          activeGroup = this.getActiveGroup(),\n          // only show proper corner when group selection is not active\n          corner = target._findTargetCorner\n                    && (!activeGroup || !activeGroup.contains(target))\n                    && target._findTargetCorner(this.getPointer(e, true));\n\n      if (!corner) {\n        this.setCursor(hoverCursor);\n      }\n      else {\n        this._setCornerCursor(corner, target, e);\n      }\n      //actually unclear why it should return something\n      //is never evaluated\n      return true;\n    },\n\n    /**\n     * @private\n     */\n    _setCornerCursor: function(corner, target, e) {\n      if (corner in cursorOffset) {\n        this.setCursor(this._getRotatedCornerCursor(corner, target, e));\n      }\n      else if (corner === 'mtr' && target.hasRotatingPoint) {\n        this.setCursor(this.rotationCursor);\n      }\n      else {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getRotatedCornerCursor: function(corner, target, e) {\n      var n = Math.round((target.getAngle() % 360) / 45);\n\n      if (n < 0) {\n        n += 8; // full circle ahead\n      }\n      n += cursorOffset[corner];\n      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n        //if we are holding shift and we are on a mx corner...\n        n += 2;\n      }\n      // normalize n to be from 0 to 7\n      n %= 8;\n\n      return this.cursorMap[n];\n    }\n  });\n})();\n\n\n(function() {\n\n  var min = Math.min,\n      max = Math.max;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     * @return {Boolean}\n     */\n    _shouldGroup: function(e, target) {\n      var activeObject = this.getActiveObject();\n      return e[this.selectionKey] && target && target.selectable &&\n            (this.getActiveGroup() || (activeObject && activeObject !== target))\n            && this.selection;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _handleGrouping: function (e, target) {\n      var activeGroup = this.getActiveGroup();\n\n      if (target === activeGroup) {\n        // if it's a group, find target again, using activeGroup objects\n        target = this.findTarget(e, true);\n        // if even object is not found, bail out\n        if (!target) {\n          return;\n        }\n      }\n      if (activeGroup) {\n        this._updateActiveGroup(target, e);\n      }\n      else {\n        this._createActiveGroup(target, e);\n      }\n\n      if (this._activeGroup) {\n        this._activeGroup.saveCoords();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateActiveGroup: function(target, e) {\n      var activeGroup = this.getActiveGroup();\n\n      if (activeGroup.contains(target)) {\n\n        activeGroup.removeWithUpdate(target);\n        target.set('active', false);\n\n        if (activeGroup.size() === 1) {\n          // remove group alltogether if after removal it only contains 1 object\n          this.discardActiveGroup(e);\n          // activate last remaining object\n          this.setActiveObject(activeGroup.item(0), e);\n          return;\n        }\n      }\n      else {\n        activeGroup.addWithUpdate(target);\n      }\n      this.fire('selection:created', { target: activeGroup, e: e });\n      activeGroup.set('active', true);\n    },\n\n    /**\n     * @private\n     */\n    _createActiveGroup: function(target, e) {\n\n      if (this._activeObject && target !== this._activeObject) {\n\n        var group = this._createGroup(target);\n        group.addWithUpdate();\n\n        this.setActiveGroup(group, e);\n        this._activeObject = null;\n\n        this.fire('selection:created', { target: group, e: e });\n      }\n\n      target.set('active', true);\n    },\n\n    /**\n     * @private\n     * @param {Object} target\n     */\n    _createGroup: function(target) {\n\n      var objects = this.getObjects(),\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n          groupObjects = isActiveLower\n            ? [this._activeObject, target]\n            : [target, this._activeObject];\n      this._activeObject.isEditing && this._activeObject.exitEditing();\n      return new fabric.Group(groupObjects, {\n        canvas: this\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e mouse event\n     */\n    _groupSelectedObjects: function (e) {\n\n      var group = this._collectObjects();\n\n      // do not create group for 1 element only\n      if (group.length === 1) {\n        this.setActiveObject(group[0], e);\n      }\n      else if (group.length > 1) {\n        group = new fabric.Group(group.reverse(), {\n          canvas: this\n        });\n        group.addWithUpdate();\n        this.setActiveGroup(group, e);\n        group.saveCoords();\n        this.fire('selection:created', { target: group, e: e });\n        this.renderAll();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _collectObjects: function() {\n      var group = [],\n          currentObject,\n          x1 = this._groupSelector.ex,\n          y1 = this._groupSelector.ey,\n          x2 = x1 + this._groupSelector.left,\n          y2 = y1 + this._groupSelector.top,\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n          isClick = x1 === x2 && y1 === y2;\n\n      for (var i = this._objects.length; i--; ) {\n        currentObject = this._objects[i];\n\n        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n          continue;\n        }\n\n        if (currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2) ||\n            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n            currentObject.containsPoint(selectionX1Y1) ||\n            currentObject.containsPoint(selectionX2Y2)\n        ) {\n          currentObject.set('active', true);\n          group.push(currentObject);\n\n          // only add one object if it's a click\n          if (isClick) {\n            break;\n          }\n        }\n      }\n\n      return group;\n    },\n\n    /**\n     * @private\n     */\n    _maybeGroupObjects: function(e) {\n      if (this.selection && this._groupSelector) {\n        this._groupSelectedObjects(e);\n      }\n\n      var activeGroup = this.getActiveGroup();\n      if (activeGroup) {\n        activeGroup.setObjectsCoords().setCoords();\n        activeGroup.isMoving = false;\n        this.setCursor(this.defaultCursor);\n      }\n\n      // clear selection and current transformation\n      this._groupSelector = null;\n      this._currentTransform = null;\n    }\n  });\n\n})();\n\n\n(function () {\n\n  var supportQuality = fabric.StaticCanvas.supports('toDataURLWithQuality');\n\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n     * @param {Object} [options] Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'jpeg',\n     *   quality: 0.8\n     * });\n     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   left: 100,\n     *   top: 100,\n     *   width: 200,\n     *   height: 200\n     * });\n     * @example <caption>Generate double scaled png dataURL</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   multiplier: 2\n     * });\n     */\n    toDataURL: function (options) {\n      options || (options = { });\n\n      var format = options.format || 'png',\n          quality = options.quality || 1,\n          multiplier = options.multiplier || 1,\n          cropping = {\n            left: options.left || 0,\n            top: options.top || 0,\n            width: options.width || 0,\n            height: options.height || 0,\n          };\n      return this.__toDataURLWithMultiplier(format, quality, cropping, multiplier);\n    },\n\n    /**\n     * @private\n     */\n    __toDataURLWithMultiplier: function(format, quality, cropping, multiplier) {\n\n      var origWidth = this.getWidth(),\n          origHeight = this.getHeight(),\n          scaledWidth = (cropping.width || this.getWidth()) * multiplier,\n          scaledHeight = (cropping.height || this.getHeight()) * multiplier,\n          zoom = this.getZoom(),\n          newZoom = zoom * multiplier,\n          vp = this.viewportTransform,\n          translateX = (vp[4] - cropping.left) * multiplier,\n          translateY = (vp[5] - cropping.top) * multiplier,\n          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n          originalInteractive = this.interactive;\n\n      this.viewportTransform = newVp;\n      // setting interactive to false avoid exporting controls\n      this.interactive && (this.interactive = false);\n      if (origWidth !== scaledWidth || origHeight !== scaledHeight) {\n        // this.setDimensions is going to renderAll also;\n        this.setDimensions({ width: scaledWidth, height: scaledHeight });\n      }\n      else {\n        this.renderAll();\n      }\n      var data = this.__toDataURL(format, quality, cropping);\n      originalInteractive && (this.interactive = originalInteractive);\n      this.viewportTransform = vp;\n      //setDimensions with no option object is taking care of:\n      //this.width, this.height, this.renderAll()\n      this.setDimensions({ width: origWidth, height: origHeight });\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    __toDataURL: function(format, quality) {\n\n      var canvasEl = this.contextContainer.canvas;\n      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n      if (format === 'jpg') {\n        format = 'jpeg';\n      }\n\n      var data = supportQuality\n                ? canvasEl.toDataURL('image/' + format, quality)\n                : canvasEl.toDataURL('image/' + format);\n\n      return data;\n    },\n\n    /**\n     * Exports canvas element to a dataurl image (allowing to change image size via multiplier).\n     * @deprecated since 1.0.13\n     * @param {String} format (png|jpeg)\n     * @param {Number} multiplier\n     * @param {Number} quality (0..1)\n     * @return {String}\n     */\n    toDataURLWithMultiplier: function (format, multiplier, quality) {\n      return this.toDataURL({\n        format: format,\n        multiplier: multiplier,\n        quality: quality\n      });\n    },\n  });\n\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Populates canvas with data from the specified dataless JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n   * @deprecated since 1.2.2\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   */\n  loadFromDatalessJSON: function (json, callback, reviver) {\n    return this.loadFromJSON(json, callback, reviver);\n  },\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * });\n   */\n  loadFromJSON: function (json, callback, reviver) {\n    if (!json) {\n      return;\n    }\n\n    // serialize if it wasn't already\n    var serialized = (typeof json === 'string')\n      ? JSON.parse(json)\n      : fabric.util.object.clone(json);\n\n    var _this = this,\n        renderOnAddRemove = this.renderOnAddRemove;\n    this.renderOnAddRemove = false;\n\n    this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\n      _this.clear();\n      _this._setBgOverlay(serialized, function () {\n        enlivenedObjects.forEach(function(obj, index) {\n          // we splice the array just in case some custom classes restored from JSON\n          // will add more object to canvas at canvas init.\n          _this.insertAt(obj, index);\n        });\n        _this.renderOnAddRemove = renderOnAddRemove;\n        // remove parts i cannot set as options\n        delete serialized.objects;\n        delete serialized.backgroundImage;\n        delete serialized.overlayImage;\n        delete serialized.background;\n        delete serialized.overlay;\n        // this._initOptions does too many things to just\n        // call it. Normally loading an Object from JSON\n        // create the Object instance. Here the Canvas is\n        // already an instance and we are just loading things over it\n        _this._setOptions(serialized);\n        _this.renderAll();\n        callback && callback();\n      });\n    }, reviver);\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  _setBgOverlay: function(serialized, callback) {\n    var loaded = {\n      backgroundColor: false,\n      overlayColor: false,\n      backgroundImage: false,\n      overlayImage: false\n    };\n\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n      callback && callback();\n      return;\n    }\n\n    var cbIfLoaded = function () {\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n        callback && callback();\n      }\n    };\n\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n   * @param {(Object|String)} value Value to set\n   * @param {Object} loaded Set loaded property to true if property is set\n   * @param {Object} callback Callback function to invoke after property is set\n   */\n  __setBgOverlay: function(property, value, loaded, callback) {\n    var _this = this;\n\n    if (!value) {\n      loaded[property] = true;\n      callback && callback();\n      return;\n    }\n\n    if (property === 'backgroundImage' || property === 'overlayImage') {\n      fabric.util.enlivenObjects([value], function(enlivedObject){\n        _this[property] = enlivedObject[0];\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n    else {\n      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {Array} objects\n   * @param {Function} callback\n   * @param {Function} [reviver]\n   */\n  _enlivenObjects: function (objects, callback, reviver) {\n    if (!objects || objects.length === 0) {\n      callback && callback([]);\n      return;\n    }\n\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n      callback && callback(enlivenedObjects);\n    }, null, reviver);\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Function} callback\n   */\n  _toDataURL: function (format, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURL(format));\n    });\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Number} multiplier\n   * @param {Function} callback\n   */\n  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\n    });\n  },\n\n  /**\n   * Clones canvas instance\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone: function (callback, properties) {\n    var data = JSON.stringify(this.toJSON(properties));\n    this.cloneWithoutData(function(clone) {\n      clone.loadFromJSON(data, function() {\n        callback && callback(clone);\n      });\n    });\n  },\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions, clipping properties, etc.\n   * but leaves data empty (so that you can populate it with your own)\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   */\n  cloneWithoutData: function(callback) {\n    var el = fabric.document.createElement('canvas');\n\n    el.width = this.getWidth();\n    el.height = this.getHeight();\n\n    var clone = new fabric.Canvas(el);\n    clone.clipTo = this.clipTo;\n    if (this.backgroundImage) {\n      clone.setBackgroundImage(this.backgroundImage.src, function() {\n        clone.renderAll();\n        callback && callback(clone);\n      });\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n      clone.backgroundImageStretch = this.backgroundImageStretch;\n    }\n    else {\n      callback && callback(clone);\n    }\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      capitalize = fabric.util.string.capitalize,\n      degreesToRadians = fabric.util.degreesToRadians,\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      objectCaching = !fabric.isLikelyNode,\n      ALIASING_LIMIT = 2;\n\n  if (fabric.Object) {\n    return;\n  }\n\n  /**\n   * Root object class from which all 2d shape classes inherit from\n   * @class fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n   * @see {@link fabric.Object#initialize} for constructor definition\n   *\n   * @fires added\n   * @fires removed\n   *\n   * @fires selected\n   * @fires deselected\n   * @fires modified\n   * @fires rotating\n   * @fires scaling\n   * @fires moving\n   * @fires skewing\n   *\n   * @fires mousedown\n   * @fires mouseup\n   * @fires mouseover\n   * @fires mouseout\n   * @fires mousewheel\n   */\n  fabric.Object = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Retrieves object's {@link fabric.Object#clipTo|clipping function}\n     * @method getClipTo\n     * @memberOf fabric.Object.prototype\n     * @return {Function}\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#clipTo|clipping function}\n     * @method setClipTo\n     * @memberOf fabric.Object.prototype\n     * @param {Function} clipTo Clipping function\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#transformMatrix|transformMatrix}\n     * @method getTransformMatrix\n     * @memberOf fabric.Object.prototype\n     * @return {Array} transformMatrix\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#transformMatrix|transformMatrix}\n     * @method setTransformMatrix\n     * @memberOf fabric.Object.prototype\n     * @param {Array} transformMatrix\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#visible|visible} state\n     * @method getVisible\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} True if visible\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#visible|visible} state\n     * @method setVisible\n     * @memberOf fabric.Object.prototype\n     * @param {Boolean} value visible value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#shadow|shadow}\n     * @method getShadow\n     * @memberOf fabric.Object.prototype\n     * @return {Object} Shadow instance\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#stroke|stroke}\n     * @method getStroke\n     * @memberOf fabric.Object.prototype\n     * @return {String} stroke value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#stroke|stroke}\n     * @method setStroke\n     * @memberOf fabric.Object.prototype\n     * @param {String} value stroke value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#strokeWidth|strokeWidth}\n     * @method getStrokeWidth\n     * @memberOf fabric.Object.prototype\n     * @return {Number} strokeWidth value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#strokeWidth|strokeWidth}\n     * @method setStrokeWidth\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value strokeWidth value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#originX|originX}\n     * @method getOriginX\n     * @memberOf fabric.Object.prototype\n     * @return {String} originX value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#originX|originX}\n     * @method setOriginX\n     * @memberOf fabric.Object.prototype\n     * @param {String} value originX value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#originY|originY}\n     * @method getOriginY\n     * @memberOf fabric.Object.prototype\n     * @return {String} originY value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#originY|originY}\n     * @method setOriginY\n     * @memberOf fabric.Object.prototype\n     * @param {String} value originY value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#fill|fill}\n     * @method getFill\n     * @memberOf fabric.Object.prototype\n     * @return {String} Fill value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#fill|fill}\n     * @method setFill\n     * @memberOf fabric.Object.prototype\n     * @param {String} value Fill value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#opacity|opacity}\n     * @method getOpacity\n     * @memberOf fabric.Object.prototype\n     * @return {Number} Opacity value (0-1)\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#opacity|opacity}\n     * @method setOpacity\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value Opacity value (0-1)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#angle|angle} (in degrees)\n     * @method getAngle\n     * @memberOf fabric.Object.prototype\n     * @return {Number}\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#top|top position}\n     * @method getTop\n     * @memberOf fabric.Object.prototype\n     * @return {Number} Top value (in pixels)\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#top|top position}\n     * @method setTop\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value Top value (in pixels)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#left|left position}\n     * @method getLeft\n     * @memberOf fabric.Object.prototype\n     * @return {Number} Left value (in pixels)\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#left|left position}\n     * @method setLeft\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value Left value (in pixels)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#scaleX|scaleX} value\n     * @method getScaleX\n     * @memberOf fabric.Object.prototype\n     * @return {Number} scaleX value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#scaleX|scaleX} value\n     * @method setScaleX\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value scaleX value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#scaleY|scaleY} value\n     * @method getScaleY\n     * @memberOf fabric.Object.prototype\n     * @return {Number} scaleY value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#scaleY|scaleY} value\n     * @method setScaleY\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value scaleY value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#flipX|flipX} value\n     * @method getFlipX\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} flipX value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#flipX|flipX} value\n     * @method setFlipX\n     * @memberOf fabric.Object.prototype\n     * @param {Boolean} value flipX value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#flipY|flipY} value\n     * @method getFlipY\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} flipY value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#flipY|flipY} value\n     * @method setFlipY\n     * @memberOf fabric.Object.prototype\n     * @param {Boolean} value flipY value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Type of an object (rect, circle, path, etc.).\n     * Note that this property is meant to be read-only and not meant to be modified.\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n     * @type String\n     * @default\n     */\n    type:                     'object',\n\n    /**\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originX:                  'left',\n\n    /**\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originY:                  'top',\n\n    /**\n     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n     * @type Number\n     * @default\n     */\n    top:                      0,\n\n    /**\n     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n     * @type Number\n     * @default\n     */\n    left:                     0,\n\n    /**\n     * Object width\n     * @type Number\n     * @default\n     */\n    width:                    0,\n\n    /**\n     * Object height\n     * @type Number\n     * @default\n     */\n    height:                   0,\n\n    /**\n     * Object scale factor (horizontal)\n     * @type Number\n     * @default\n     */\n    scaleX:                   1,\n\n    /**\n     * Object scale factor (vertical)\n     * @type Number\n     * @default\n     */\n    scaleY:                   1,\n\n    /**\n     * When true, an object is rendered as flipped horizontally\n     * @type Boolean\n     * @default\n     */\n    flipX:                    false,\n\n    /**\n     * When true, an object is rendered as flipped vertically\n     * @type Boolean\n     * @default\n     */\n    flipY:                    false,\n\n    /**\n     * Opacity of an object\n     * @type Number\n     * @default\n     */\n    opacity:                  1,\n\n    /**\n     * Angle of rotation of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    angle:                    0,\n\n    /**\n     * Angle of skew on x axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewX:                    0,\n\n    /**\n     * Angle of skew on y axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewY:                    0,\n\n    /**\n     * Size of object's controlling corners (in pixels)\n     * @type Number\n     * @default\n     */\n    cornerSize:               13,\n\n    /**\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n     * @type Boolean\n     * @default\n     */\n    transparentCorners:       true,\n\n    /**\n     * Default cursor value used when hovering over this object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:              null,\n\n    /**\n     * Default cursor value used when moving this object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:               null,\n\n    /**\n     * Padding between object and its controlling borders (in pixels)\n     * @type Number\n     * @default\n     */\n    padding:                  0,\n\n    /**\n     * Color of controlling borders of an object (when it's active)\n     * @type String\n     * @default\n     */\n    borderColor:              'rgba(102,153,255,0.75)',\n\n    /**\n     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    borderDashArray:          null,\n\n    /**\n     * Color of controlling corners of an object (when it's active)\n     * @type String\n     * @default\n     */\n    cornerColor:              'rgba(102,153,255,0.5)',\n\n    /**\n     * Color of controlling corners of an object (when it's active and transparentCorners false)\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    cornerStrokeColor:        null,\n\n    /**\n     * Specify style of control, 'rect' or 'circle'\n     * @since 1.6.2\n     * @type String\n     */\n    cornerStyle:          'rect',\n\n    /**\n     * Array specifying dash pattern of an object's control (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    cornerDashArray:          null,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being scaled via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:          false,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being rotated via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:         true,\n\n    /**\n     * Color of object's fill\n     * @type String\n     * @default\n     */\n    fill:                     'rgb(0,0,0)',\n\n    /**\n     * Fill rule used to fill an object\n     * accepted values are nonzero, evenodd\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n     * @type String\n     * @default\n     */\n    fillRule:                 'nonzero',\n\n    /**\n     * Composite rule used for canvas globalCompositeOperation\n     * @type String\n     * @default\n     */\n    globalCompositeOperation: 'source-over',\n\n    /**\n     * Background color of an object.\n     * @type String\n     * @default\n     */\n    backgroundColor:          '',\n\n    /**\n     * Selection Background color of an object. colored layer behind the object when it is active.\n     * does not mix good with globalCompositeOperation methods.\n     * @type String\n     * @default\n     */\n    selectionBackgroundColor:          '',\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color\n     * @type String\n     * @default\n     */\n    stroke:                   null,\n\n    /**\n     * Width of a stroke used to render this object\n     * @type Number\n     * @default\n     */\n    strokeWidth:              1,\n\n    /**\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n     * @type Array\n     */\n    strokeDashArray:          null,\n\n    /**\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n     * @type String\n     * @default\n     */\n    strokeLineCap:            'butt',\n\n    /**\n     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n     * @type String\n     * @default\n     */\n    strokeLineJoin:           'miter',\n\n    /**\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeMiterLimit:         10,\n\n    /**\n     * Shadow object representing shadow of this shape\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:                   null,\n\n    /**\n     * Opacity of object's controlling borders when object is active and moving\n     * @type Number\n     * @default\n     */\n    borderOpacityWhenMoving:  0.4,\n\n    /**\n     * Scale factor of object's controlling borders\n     * @type Number\n     * @default\n     */\n    borderScaleFactor:        1,\n\n    /**\n     * Transform matrix (similar to SVG's transform matrix)\n     * @type Array\n     */\n    transformMatrix:          null,\n\n    /**\n     * Minimum allowed scale value of an object\n     * @type Number\n     * @default\n     */\n    minScaleLimit:            0.01,\n\n    /**\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n     * But events still fire on it.\n     * @type Boolean\n     * @default\n     */\n    selectable:               true,\n\n    /**\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n     * @type Boolean\n     * @default\n     */\n    evented:                  true,\n\n    /**\n     * When set to `false`, an object is not rendered on canvas\n     * @type Boolean\n     * @default\n     */\n    visible:                  true,\n\n    /**\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n     * @type Boolean\n     * @default\n     */\n    hasControls:              true,\n\n    /**\n     * When set to `false`, object's controlling borders are not rendered\n     * @type Boolean\n     * @default\n     */\n    hasBorders:               true,\n\n    /**\n     * When set to `false`, object's controlling rotating point will not be visible or selectable\n     * @type Boolean\n     * @default\n     */\n    hasRotatingPoint:         true,\n\n    /**\n     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n     * @type Number\n     * @default\n     */\n    rotatingPointOffset:      40,\n\n    /**\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:       false,\n\n    /**\n     * When `false`, default object's values are not included in its serialization\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues:     true,\n\n    /**\n     * Function that determines clipping of an object (context is passed as a first argument)\n     * Note that context origin is at the object's center point (not left/top corner)\n     * @type Function\n     */\n    clipTo:                   null,\n\n    /**\n     * When `true`, object horizontal movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementX:            false,\n\n    /**\n     * When `true`, object vertical movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementY:            false,\n\n    /**\n     * When `true`, object rotation is locked\n     * @type Boolean\n     * @default\n     */\n    lockRotation:             false,\n\n    /**\n     * When `true`, object horizontal scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingX:             false,\n\n    /**\n     * When `true`, object vertical scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingY:             false,\n\n    /**\n     * When `true`, object non-uniform scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockUniScaling:           false,\n\n    /**\n     * When `true`, object horizontal skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingX:             false,\n\n    /**\n     * When `true`, object vertical skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingY:             false,\n\n    /**\n     * When `true`, object cannot be flipped by scaling into negative values\n     * @type Boolean\n     * @default\n     */\n    lockScalingFlip:          false,\n\n    /**\n     * When `true`, object is not exported in SVG or OBJECT/JSON\n     * since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    excludeFromExport:        false,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    objectCaching:            objectCaching,\n\n    /**\n     * When `true`, object properties are checked for cache invalidation. In some particular\n     * situation you may want this to be disabled ( spray brush, very big pathgroups, groups)\n     * or if your application does not allow you to modify properties for groups child you want\n     * to disable it for groups.\n     * default to false\n     * since 1.7.0\n     * @type Boolean\n     * @default false\n     */\n    statefullCache:            false,\n\n    /**\n     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n     * too much and will be redrawn with correct details at the end of scaling.\n     * this setting is performance and application dependant.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    noScaleCache:              true,\n\n    /**\n     * When set to `true`, object's cache will be rerendered next render call.\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    dirty:                true,\n\n    /**\n     * List of properties to consider when checking if state\n     * of an object is changed (fabric.Object#hasStateChanged)\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: (\n      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n      'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' +\n      'angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor ' +\n      'skewX skewY fillRule'\n    ).split(' '),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: (\n      'fill stroke strokeWidth strokeDashArray width height' +\n      ' strokeLineCap strokeLineJoin strokeMiterLimit backgroundColor'\n    ).split(' '),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      options = options || { };\n      if (options) {\n        this.setOptions(options);\n      }\n    },\n\n    /**\n     * Create a the canvas used to keep the cached copy of the object\n     * @private\n     */\n    _createCacheCanvas: function() {\n      this._cacheProperties = {};\n      this._cacheCanvas = fabric.document.createElement('canvas');\n      this._cacheContext = this._cacheCanvas.getContext('2d');\n      this._updateCacheCanvas();\n    },\n\n    /**\n     * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\n     * and each side do not cross fabric.cacheSideLimit\n     * those numbers are configurable so that you can get as much detail as you want\n     * making bargain with performances.\n     * @param {Object} dims\n     * @param {Object} dims.width width of canvas\n     * @param {Object} dims.height height of canvas\n     * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _limitCacheSize: function(dims) {\n      var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\n          maximumSide = fabric.cacheSideLimit,\n          width = dims.width, height = dims.height,\n          ar = width / height, limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal, maximumSide),\n          capValue = fabric.util.capValue, max = fabric.maxCacheSideLimit, min = fabric.minCacheSideLimit,\n          x = capValue(min, limitedDims.x, max),\n          y = capValue(min, limitedDims.y, max);\n      if (width > x) {\n        dims.zoomX /= width / x;\n        dims.width = x;\n      }\n      else if (width < min) {\n        dims.width = min;\n      }\n      if (height > y) {\n        dims.zoomY /= height / y;\n        dims.height = y;\n      }\n      else if (height < min) {\n        dims.height = min;\n      }\n      return dims;\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var zoom = this.canvas && this.canvas.getZoom() || 1,\n          objectScale = this.getObjectScaling(),\n          dim = this._getNonTransformedDimensions(),\n          retina = this.canvas && this.canvas._isRetinaScaling() ? fabric.devicePixelRatio : 1,\n          zoomX = objectScale.scaleX * zoom * retina,\n          zoomY = objectScale.scaleY * zoom * retina,\n          width = dim.x * zoomX,\n          height = dim.y * zoomY;\n      return {\n        width: width + ALIASING_LIMIT,\n        height: height + ALIASING_LIMIT,\n        zoomX: zoomX,\n        zoomY: zoomY\n      };\n    },\n\n    /**\n     * Update width and height of the canvas for cache\n     * returns true or false if canvas needed resize.\n     * @private\n     * @return {Boolean} true if the canvas has been resized\n     */\n    _updateCacheCanvas: function() {\n      if (this.noScaleCache && this.canvas && this.canvas._currentTransform) {\n        var action = this.canvas._currentTransform.action;\n        if (action.slice && action.slice(0, 5) === 'scale') {\n          return false;\n        }\n      }\n      var dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          minCacheSize = fabric.minCacheSideLimit,\n          width = dims.width, height = dims.height,\n          zoomX = dims.zoomX, zoomY = dims.zoomY,\n          dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\n          zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\n          shouldRedraw = dimensionsChanged || zoomChanged,\n          additionalWidth = 0, additionalHeight = 0, shouldResizeCanvas = false;\n      if (dimensionsChanged) {\n        var canvasWidth = this._cacheCanvas.width,\n            canvasHeight = this._cacheCanvas.height,\n            sizeGrowing = width > canvasWidth || height > canvasHeight,\n            sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\n              canvasWidth > minCacheSize && canvasHeight > minCacheSize;\n        shouldResizeCanvas = sizeGrowing || sizeShrinking;\n        if (sizeGrowing) {\n          additionalWidth = (width * 0.1) & ~1;\n          additionalHeight = (height * 0.1) & ~1;\n        }\n      }\n      if (shouldRedraw) {\n        if (shouldResizeCanvas) {\n          this._cacheCanvas.width = Math.max(Math.ceil(width) + additionalWidth, minCacheSize);\n          this._cacheCanvas.height = Math.max(Math.ceil(height) + additionalHeight, minCacheSize);\n          this.cacheTranslationX = (width + additionalWidth) / 2;\n          this.cacheTranslationY = (height + additionalHeight) / 2;\n        }\n        else {\n          this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\n          this._cacheContext.clearRect(0, 0, this._cacheCanvas.width, this._cacheCanvas.height);\n        }\n        this.cacheWidth = width;\n        this.cacheHeight = height;\n        this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\n        this._cacheContext.scale(zoomX, zoomY);\n        this.zoomX = zoomX;\n        this.zoomY = zoomY;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Sets object's properties from options\n     * @param {Object} [options] Options object\n     */\n    setOptions: function(options) {\n      this._setOptions(options);\n      this._initGradient(options.fill, 'fill');\n      this._initGradient(options.stroke, 'stroke');\n      this._initClipping(options);\n      this._initPattern(options.fill, 'fill');\n      this._initPattern(options.stroke, 'stroke');\n    },\n\n    /**\n     * Transforms context when rendering an object\n     * @param {CanvasRenderingContext2D} ctx Context\n     * @param {Boolean} fromLeft When true, context is transformed to object's top/left corner. This is used when rendering text on Node\n     */\n    transform: function(ctx, fromLeft) {\n      if (this.group && !this.group._transformDone && this.group === this.canvas._activeGroup) {\n        this.group.transform(ctx);\n      }\n      var center = fromLeft ? this._getLeftTopCoords() : this.getCenterPoint();\n      ctx.translate(center.x, center.y);\n      this.angle && ctx.rotate(degreesToRadians(this.angle));\n      ctx.scale(\n        this.scaleX * (this.flipX ? -1 : 1),\n        this.scaleY * (this.flipY ? -1 : 1)\n      );\n      this.skewX && ctx.transform(1, 0, Math.tan(degreesToRadians(this.skewX)), 1, 0, 0);\n      this.skewY && ctx.transform(1, Math.tan(degreesToRadians(this.skewY)), 0, 1, 0, 0);\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          object = {\n            type:                     this.type,\n            originX:                  this.originX,\n            originY:                  this.originY,\n            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n            strokeLineCap:            this.strokeLineCap,\n            strokeLineJoin:           this.strokeLineJoin,\n            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n            angle:                    toFixed(this.getAngle(), NUM_FRACTION_DIGITS),\n            flipX:                    this.flipX,\n            flipY:                    this.flipY,\n            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n            visible:                  this.visible,\n            clipTo:                   this.clipTo && String(this.clipTo),\n            backgroundColor:          this.backgroundColor,\n            fillRule:                 this.fillRule,\n            globalCompositeOperation: this.globalCompositeOperation,\n            transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : null,\n            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS)\n          };\n\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      if (!this.includeDefaultValues) {\n        object = this._removeDefaultValues(object);\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns (dataless) object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      // will be overwritten by subclasses\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _removeDefaultValues: function(object) {\n      var prototype = fabric.util.getKlass(object.type).prototype,\n          stateProperties = prototype.stateProperties;\n      stateProperties.forEach(function(prop) {\n        if (object[prop] === prototype[prop]) {\n          delete object[prop];\n        }\n        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\n        // basically a check for [] === []\n        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n          delete object[prop];\n        }\n      });\n\n      return object;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.' + capitalize(this.type) + '>';\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getObjectScaling: function() {\n      var scaleX = this.scaleX, scaleY = this.scaleY;\n      if (this.group) {\n        var scaling = this.group.getObjectScaling();\n        scaleX *= scaling.scaleX;\n        scaleY *= scaling.scaleY;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Object} thisArg\n     */\n    _set: function(key, value) {\n      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY');\n\n      if (shouldConstrainValue) {\n        value = this._constrainScale(value);\n      }\n      if (key === 'scaleX' && value < 0) {\n        this.flipX = !this.flipX;\n        value *= -1;\n      }\n      else if (key === 'scaleY' && value < 0) {\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n        value = new fabric.Shadow(value);\n      }\n      else if (key === 'dirty' && this.group) {\n        this.group.set('dirty', value);\n      }\n\n      this[key] = value;\n\n      if (this.cacheProperties.indexOf(key) > -1) {\n        if (this.group) {\n          this.group.set('dirty', true);\n        }\n        this.dirty = true;\n      }\n\n      if (this.group && this.stateProperties.indexOf(key) > -1) {\n        this.group.set('dirty', true);\n      }\n\n      if (key === 'width' || key === 'height') {\n        this.minScaleLimit = Math.min(0.1, 1 / Math.max(this.width, this.height));\n      }\n\n      return this;\n    },\n\n    /**\n     * This callback function is called by the parent group of an object every\n     * time a non-delegated property changes on the group. It is passed the key\n     * and value as parameters. Not adding in this function's signature to avoid\n     * Travis build error about unused variables.\n     */\n    setOnGroup: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n    /**\n     * Sets sourcePath of an object\n     * @param {String} value Value to set sourcePath to\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setSourcePath: function(value) {\n      this.sourcePath = value;\n      return this;\n    },\n\n    /**\n     * Retrieves viewportTransform from Object's canvas if possible\n     * @method getViewportTransform\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    getViewportTransform: function() {\n      if (this.canvas && this.canvas.viewportTransform) {\n        return this.canvas.viewportTransform;\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /*\n     * @private\n     * return if the object would be visible in rendering\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    isNotVisible: function() {\n      return this.opacity === 0 || (this.width === 0 && this.height === 0) || !this.visible;\n    },\n\n    /**\n     * Renders an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    render: function(ctx, noTransform) {\n      // do not render if width/height are zeros or object is not visible\n      if (this.isNotVisible()) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      ctx.save();\n      //setup fill rule for current object\n      this._setupCompositeOperation(ctx);\n      this.drawSelectionBackground(ctx);\n      if (!noTransform) {\n        this.transform(ctx);\n      }\n      this._setOpacity(ctx);\n      this._setShadow(ctx);\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      if (this.shouldCache(noTransform)) {\n        if (!this._cacheCanvas) {\n          this._createCacheCanvas();\n        }\n        if (this.isCacheDirty(noTransform)) {\n          this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\n          this.drawObject(this._cacheContext, noTransform);\n          this.dirty = false;\n        }\n        this.drawCacheOnCanvas(ctx);\n      }\n      else {\n        this.dirty = false;\n        this.drawObject(ctx, noTransform);\n        if (noTransform && this.objectCaching && this.statefullCache) {\n          this.saveState({ propertySet: 'cacheProperties' });\n        }\n      }\n      this.clipTo && ctx.restore();\n      ctx.restore();\n    },\n\n    /**\n     * When returns `true`, force the object to have its own cache, even if it is inside a group\n     * it may be needed when your object behave in a particular way on the cache and always needs\n     * its own isolated canvas to render correctly.\n     * This function is created to be subclassed by custom classes.\n     * since 1.7.12\n     * @type function\n     * @return false\n     */\n    needsItsOwnCache: function() {\n      return false;\n    },\n\n    /**\n     * Decide if the object should cache or not.\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @param {Boolean} noTransform if rendereing in pathGroup, caching is not supported at object level\n     * @return {Boolean}\n     */\n    shouldCache: function(noTransform) {\n      return !noTransform && this.objectCaching &&\n      (!this.group || this.needsItsOwnCache() || !this.group.isCaching());\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * used by Group.shouldCache to know if child has a shadow recursively\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    drawObject: function(ctx, noTransform) {\n      this._renderBackground(ctx);\n      this._setStrokeStyles(ctx);\n      this._setFillStyles(ctx);\n      this._render(ctx, noTransform);\n    },\n\n    /**\n     * Paint the cached copy of the object on the target context.\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawCacheOnCanvas: function(ctx) {\n      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n      ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\n    },\n\n    /**\n     * Check if cache is dirty\n     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n     * on parent canvas.\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.isNotVisible()) {\n        return false;\n      }\n      if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\n        // in this case the context is already cleared.\n        return true;\n      }\n      else {\n        if (this.dirty || (this.statefullCache && this.hasStateChanged('cacheProperties'))) {\n          if (this._cacheCanvas && !skipCanvas) {\n            var width = this.cacheWidth / this.zoomX;\n            var height = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Draws a background for the object big as its untrasformed dimensions\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n      var dim = this._getNonTransformedDimensions();\n      ctx.fillStyle = this.backgroundColor;\n\n      ctx.fillRect(\n        -dim.x / 2,\n        -dim.y / 2,\n        dim.x,\n        dim.y\n      );\n      // if there is background color no other shadows\n      // should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setOpacity: function(ctx) {\n      ctx.globalAlpha *= this.opacity;\n    },\n\n    _setStrokeStyles: function(ctx) {\n      if (this.stroke) {\n        ctx.lineWidth = this.strokeWidth;\n        ctx.lineCap = this.strokeLineCap;\n        ctx.lineJoin = this.strokeLineJoin;\n        ctx.miterLimit = this.strokeMiterLimit;\n        ctx.strokeStyle = this.stroke.toLive\n          ? this.stroke.toLive(ctx, this)\n          : this.stroke;\n      }\n    },\n\n    _setFillStyles: function(ctx) {\n      if (this.fill) {\n        ctx.fillStyle = this.fill.toLive\n          ? this.fill.toLive(ctx, this)\n          : this.fill;\n      }\n    },\n\n    /**\n     * @private\n     * Sets line dash\n     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n     * @param {Array} dashArray array representing dashes\n     * @param {Function} alternative function to call if browaser does not support lineDash\n     */\n    _setLineDash: function(ctx, dashArray, alternative) {\n      if (!dashArray) {\n        return;\n      }\n      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n      if (1 & dashArray.length) {\n        dashArray.push.apply(dashArray, dashArray);\n      }\n      if (supportsLineDash) {\n        ctx.setLineDash(dashArray);\n      }\n      else {\n        alternative && alternative(ctx);\n      }\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderControls: function(ctx) {\n      if (!this.active || (this.group && this.group !== this.canvas.getActiveGroup())) {\n        return;\n      }\n\n      var vpt = this.getViewportTransform(),\n          matrix = this.calcTransformMatrix(),\n          options;\n      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n      options = fabric.util.qrDecompose(matrix);\n\n      ctx.save();\n      ctx.translate(options.translateX, options.translateY);\n      ctx.lineWidth = 1 * this.borderScaleFactor;\n      if (!this.group) {\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      }\n      if (this.group && this.group === this.canvas.getActiveGroup()) {\n        ctx.rotate(degreesToRadians(options.angle));\n        this.drawBordersInGroup(ctx, options);\n      }\n      else {\n        ctx.rotate(degreesToRadians(this.angle));\n        this.drawBorders(ctx);\n      }\n      this.drawControls(ctx);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      var multX = (this.canvas && this.canvas.viewportTransform[0]) || 1,\n          multY = (this.canvas && this.canvas.viewportTransform[3]) || 1,\n          scaling = this.getObjectScaling();\n      if (this.canvas && this.canvas._isRetinaScaling()) {\n        multX *= fabric.devicePixelRatio;\n        multY *= fabric.devicePixelRatio;\n      }\n      ctx.shadowColor = this.shadow.color;\n      ctx.shadowBlur = this.shadow.blur * (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n      ctx.shadowOffsetX = this.shadow.offsetX * multX * scaling.scaleX;\n      ctx.shadowOffsetY = this.shadow.offsetY * multY * scaling.scaleY;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _removeShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      ctx.shadowColor = '';\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} filler fabric.Pattern or fabric.Gradient\n     */\n    _applyPatternGradientTransform: function(ctx, filler) {\n      if (!filler.toLive) {\n        return;\n      }\n      var transform = filler.gradientTransform || filler.patternTransform;\n      if (transform) {\n        ctx.transform.apply(ctx, transform);\n      }\n      var offsetX = -this.width / 2 + filler.offsetX || 0,\n          offsetY = -this.height / 2 + filler.offsetY || 0;\n      ctx.translate(offsetX, offsetY);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderFill: function(ctx) {\n      if (!this.fill) {\n        return;\n      }\n\n      ctx.save();\n      this._applyPatternGradientTransform(ctx, this.fill);\n      if (this.fillRule === 'evenodd') {\n        ctx.fill('evenodd');\n      }\n      else {\n        ctx.fill();\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderStroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n      this._applyPatternGradientTransform(ctx, this.stroke);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Clones an instance, some objects are async, so using callback method will work for every object.\n     * Using the direct return does not work for images and groups.\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {fabric.Object} clone of an instance\n     */\n    clone: function(callback, propertiesToInclude) {\n      if (this.constructor.fromObject) {\n        return this.constructor.fromObject(this.toObject(propertiesToInclude), callback);\n      }\n      return new fabric.Object(this.toObject(propertiesToInclude));\n    },\n\n    /**\n     * Creates an instance of fabric.Image out of an object\n     * @param {Function} callback callback, invoked with an instance as a first argument\n     * @param {Object} [options] for clone as image, passed to toDataURL\n     * @param {Boolean} [options.enableRetinaScaling] enable retina scaling for the cloned image\n     * @return {fabric.Object} thisArg\n     */\n    cloneAsImage: function(callback, options) {\n      var dataUrl = this.toDataURL(options);\n      fabric.util.loadImage(dataUrl, function(img) {\n        if (callback) {\n          callback(new fabric.Image(img));\n        }\n      });\n      return this;\n    },\n\n    /**\n     * Converts an object into a data-url-like string\n     * @param {Object} options Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetina] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toDataURL: function(options) {\n      options || (options = { });\n\n      var el = fabric.util.createCanvasElement(),\n          boundingRect = this.getBoundingRect();\n\n      el.width = boundingRect.width;\n      el.height = boundingRect.height;\n      fabric.util.wrapElement(el, 'div');\n      var canvas = new fabric.StaticCanvas(el, { enableRetinaScaling: options.enableRetinaScaling });\n      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n      if (options.format === 'jpg') {\n        options.format = 'jpeg';\n      }\n\n      if (options.format === 'jpeg') {\n        canvas.backgroundColor = '#fff';\n      }\n\n      var origParams = {\n        active: this.get('active'),\n        left: this.getLeft(),\n        top: this.getTop()\n      };\n\n      this.set('active', false);\n      this.setPositionByOrigin(new fabric.Point(canvas.getWidth() / 2, canvas.getHeight() / 2), 'center', 'center');\n\n      var originalCanvas = this.canvas;\n      canvas.add(this);\n      var data = canvas.toDataURL(options);\n\n      this.set(origParams).setCoords();\n      this.canvas = originalCanvas;\n\n      canvas.dispose();\n      canvas = null;\n\n      return data;\n    },\n\n    /**\n     * Returns true if specified type is identical to the type of an instance\n     * @param {String} type Type to check against\n     * @return {Boolean}\n     */\n    isType: function(type) {\n      return this.type === type;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance (is 1 unless subclassed)\n     */\n    complexity: function() {\n      return 1;\n    },\n\n    /**\n     * Returns a JSON representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} JSON\n     */\n    toJSON: function(propertiesToInclude) {\n      // delegate, not alias\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * Sets gradient (fill or stroke) of an object\n     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n     * @param {String} property Property name 'stroke' or 'fill'\n     * @param {Object} [options] Options object\n     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n     * @param {Number} [options.x1=0] x-coordinate of start point\n     * @param {Number} [options.y1=0] y-coordinate of start point\n     * @param {Number} [options.x2=0] x-coordinate of end point\n     * @param {Number} [options.y2=0] y-coordinate of end point\n     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n     * @param {Object} [options.gradientTransform] transforMatrix for gradient\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n     * @example <caption>Set linear gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'linear',\n     *   x1: -object.width / 2,\n     *   y1: 0,\n     *   x2: object.width / 2,\n     *   y2: 0,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     * @example <caption>Set radial gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'radial',\n     *   x1: 0,\n     *   y1: 0,\n     *   x2: 0,\n     *   y2: 0,\n     *   r1: object.width / 2,\n     *   r2: 10,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     */\n    setGradient: function(property, options) {\n      options || (options = { });\n\n      var gradient = { colorStops: [] };\n\n      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n      gradient.coords = {\n        x1: options.x1,\n        y1: options.y1,\n        x2: options.x2,\n        y2: options.y2\n      };\n\n      if (options.r1 || options.r2) {\n        gradient.coords.r1 = options.r1;\n        gradient.coords.r2 = options.r2;\n      }\n\n      gradient.gradientTransform = options.gradientTransform;\n      fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\n\n      return this.set(property, fabric.Gradient.forObject(this, gradient));\n    },\n\n    /**\n     * Sets pattern fill of an object\n     * @param {Object} options Options object\n     * @param {(String|HTMLImageElement)} options.source Pattern source\n     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n     * @example <caption>Set pattern</caption>\n     * fabric.util.loadImage('http://fabricjs.com/assets/escheresque_ste.png', function(img) {\n     *   object.setPatternFill({\n     *     source: img,\n     *     repeat: 'repeat'\n     *   });\n     *   canvas.renderAll();\n     * });\n     */\n    setPatternFill: function(options) {\n      return this.set('fill', new fabric.Pattern(options));\n    },\n\n    /**\n     * Sets {@link fabric.Object#shadow|shadow} of an object\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n     * @param {Number} [options.blur=0] Shadow blur\n     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n     * @param {Number} [options.offsetY=0] Shadow vertical offset\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n     * @example <caption>Set shadow with string notation</caption>\n     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n     * canvas.renderAll();\n     * @example <caption>Set shadow with object notation</caption>\n     * object.setShadow({\n     *   color: 'red',\n     *   blur: 10,\n     *   offsetX: 20,\n     *   offsetY: 20\n     * });\n     * canvas.renderAll();\n     */\n    setShadow: function(options) {\n      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n    },\n\n    /**\n     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n     * @param {String} color Color value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setColor: function(color) {\n      this.set('fill', color);\n      return this;\n    },\n\n    /**\n     * Sets \"angle\" of an instance\n     * @param {Number} angle Angle value (in degrees)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setAngle: function(angle) {\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\n      if (shouldCenterOrigin) {\n        this._setOriginToCenter();\n      }\n\n      this.set('angle', angle);\n\n      if (shouldCenterOrigin) {\n        this._resetOrigin();\n      }\n\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerH: function () {\n      this.canvas && this.canvas.centerObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterH: function () {\n      this.canvas && this.canvas.viewportCenterObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerV: function () {\n      this.canvas && this.canvas.centerObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterV: function () {\n      this.canvas && this.canvas.viewportCenterObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally on canvas to which is was added last\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    center: function () {\n      this.canvas && this.canvas.centerObject(this);\n      return this;\n    },\n\n    /**\n     * Centers object on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenter: function () {\n      this.canvas && this.canvas.viewportCenterObject(this);\n      return this;\n    },\n\n    /**\n     * Removes object from canvas to which it was added last\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    remove: function() {\n      if (this.canvas) {\n        if (this.group && this.group === this.canvas._activeGroup) {\n          this.group.remove(this);\n        }\n        this.canvas.remove(this);\n      }\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a pointer relative to an object\n     * @param {Event} e Event to operate upon\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n     * @return {Object} Coordinates of a pointer (x, y)\n     */\n    getLocalPointer: function(e, pointer) {\n      pointer = pointer || this.canvas.getPointer(e);\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\n          objectLeftTop = this._getLeftTopCoords();\n      if (this.angle) {\n        pClicked = fabric.util.rotatePoint(\n          pClicked, objectLeftTop, degreesToRadians(-this.angle));\n      }\n      return {\n        x: pClicked.x - objectLeftTop.x,\n        y: pClicked.y - objectLeftTop.y\n      };\n    },\n\n    /**\n     * Sets canvas globalCompositeOperation for specific object\n     * custom composition operation for the particular object can be specifed using globalCompositeOperation property\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n     */\n    _setupCompositeOperation: function (ctx) {\n      if (this.globalCompositeOperation) {\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\n      }\n    }\n  });\n\n  fabric.util.createAccessors(fabric.Object);\n\n  /**\n   * Alias for {@link fabric.Object.prototype.setAngle}\n   * @alias rotate -> setAngle\n   * @memberOf fabric.Object\n   */\n  fabric.Object.prototype.rotate = fabric.Object.prototype.setAngle;\n\n  extend(fabric.Object.prototype, fabric.Observable);\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type Number\n   */\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\n  fabric.Object._fromObject = function(className, object, callback, forceAsync, extraParam) {\n    var klass = fabric[className];\n    object = clone(object, true);\n    if (forceAsync) {\n      fabric.util.enlivenPatterns([object.fill, object.stroke], function(patterns) {\n        if (typeof patterns[0] !== 'undefined') {\n          object.fill = patterns[0];\n        }\n        if (typeof patterns[1] !== 'undefined') {\n          object.stroke = patterns[1];\n        }\n        var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n        callback && callback(instance);\n      });\n    }\n    else {\n      var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n      callback && callback(instance);\n      return instance;\n    }\n  };\n\n  /**\n   * Unique id used internally when creating SVG elements\n   * @static\n   * @memberOf fabric.Object\n   * @type Number\n   */\n  fabric.Object.__uid = 0;\n\n})( true ? exports : this);\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      originXOffset = {\n        left: -0.5,\n        center: 0,\n        right: 0.5\n      },\n      originYOffset = {\n        top: -0.5,\n        center: 0,\n        bottom: 0.5\n      };\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n      var x = point.x,\n          y = point.y,\n          offsetX, offsetY, dim;\n\n      if (typeof fromOriginX === 'string') {\n        fromOriginX = originXOffset[fromOriginX];\n      }\n      else {\n        fromOriginX -= 0.5;\n      }\n\n      if (typeof toOriginX === 'string') {\n        toOriginX = originXOffset[toOriginX];\n      }\n      else {\n        toOriginX -= 0.5;\n      }\n\n      offsetX = toOriginX - fromOriginX;\n\n      if (typeof fromOriginY === 'string') {\n        fromOriginY = originYOffset[fromOriginY];\n      }\n      else {\n        fromOriginY -= 0.5;\n      }\n\n      if (typeof toOriginY === 'string') {\n        toOriginY = originYOffset[toOriginY];\n      }\n      else {\n        toOriginY -= 0.5;\n      }\n\n      offsetY = toOriginY - fromOriginY;\n\n      if (offsetX || offsetY) {\n        dim = this._getTransformedDimensions();\n        x = point.x + offsetX * dim.x;\n        y = point.y + offsetY * dim.y;\n      }\n\n      return new fabric.Point(x, y);\n    },\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToCenterPoint: function(point, originX, originY) {\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n     * @param {fabric.Point} center The point which corresponds to center of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToOriginPoint: function(center, originX, originY) {\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Returns the real center coordinates of the object\n     * @return {fabric.Point}\n     */\n    getCenterPoint: function() {\n      var leftTop = new fabric.Point(this.left, this.top);\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n    },\n\n    /**\n     * Returns the coordinates of the object based on center coordinates\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @return {fabric.Point}\n     */\n    // getOriginPoint: function(center) {\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n    // },\n\n    /**\n     * Returns the coordinates of the object as if it has a different origin\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    getPointByOrigin: function(originX, originY) {\n      var center = this.getCenterPoint();\n      return this.translateToOriginPoint(center, originX, originY);\n    },\n\n    /**\n     * Returns the point in local coordinates\n     * @param {fabric.Point} point The point relative to the global coordinate system\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    toLocalPoint: function(point, originX, originY) {\n      var center = this.getCenterPoint(),\n          p, p2;\n\n      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      }\n      else {\n        p = new fabric.Point(this.left, this.top);\n      }\n\n      p2 = new fabric.Point(point.x, point.y);\n      if (this.angle) {\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n      }\n      return p2.subtractEquals(p);\n    },\n\n    /**\n     * Returns the point in global coordinates\n     * @param {fabric.Point} The point relative to the local coordinate system\n     * @return {fabric.Point}\n     */\n    // toGlobalPoint: function(point) {\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n    // },\n\n    /**\n     * Sets the position of the object taking into consideration the object's origin\n     * @param {fabric.Point} pos The new position of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {void}\n     */\n    setPositionByOrigin: function(pos, originX, originY) {\n      var center = this.translateToCenterPoint(pos, originX, originY),\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\n\n      this.set('left', position.x);\n      this.set('top', position.y);\n    },\n\n    /**\n     * @param {String} to One of 'left', 'center', 'right'\n     */\n    adjustPosition: function(to) {\n      var angle = degreesToRadians(this.angle),\n          hypotFull = this.getWidth(),\n          xFull = Math.cos(angle) * hypotFull,\n          yFull = Math.sin(angle) * hypotFull,\n          offsetFrom, offsetTo;\n\n      //TODO: this function does not consider mixed situation like top, center.\n      if (typeof this.originX === 'string') {\n        offsetFrom = originXOffset[this.originX];\n      }\n      else {\n        offsetFrom = this.originX - 0.5;\n      }\n      if (typeof to === 'string') {\n        offsetTo = originXOffset[to];\n      }\n      else {\n        offsetTo = to - 0.5;\n      }\n      this.left += xFull * (offsetTo - offsetFrom);\n      this.top += yFull * (offsetTo - offsetFrom);\n      this.setCoords();\n      this.originX = to;\n    },\n\n    /**\n     * Sets the origin/position of the object to it's center point\n     * @private\n     * @return {void}\n     */\n    _setOriginToCenter: function() {\n      this._originalOriginX = this.originX;\n      this._originalOriginY = this.originY;\n\n      var center = this.getCenterPoint();\n\n      this.originX = 'center';\n      this.originY = 'center';\n\n      this.left = center.x;\n      this.top = center.y;\n    },\n\n    /**\n     * Resets the origin/position of the object to it's original origin\n     * @private\n     * @return {void}\n     */\n    _resetOrigin: function() {\n      var originPoint = this.translateToOriginPoint(\n        this.getCenterPoint(),\n        this._originalOriginX,\n        this._originalOriginY);\n\n      this.originX = this._originalOriginX;\n      this.originY = this._originalOriginY;\n\n      this.left = originPoint.x;\n      this.top = originPoint.y;\n\n      this._originalOriginX = null;\n      this._originalOriginY = null;\n    },\n\n    /**\n     * @private\n     */\n    _getLeftTopCoords: function() {\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n    },\n\n    /**\n    * Callback; invoked right before object is about to go from active to inactive\n    */\n    onDeselect: function() {\n      /* NOOP */\n    }\n  });\n\n})();\n\n\n(function() {\n\n  function getCoords(coords) {\n    return [\n      new fabric.Point(coords.tl.x, coords.tl.y),\n      new fabric.Point(coords.tr.x, coords.tr.y),\n      new fabric.Point(coords.br.x, coords.br.y),\n      new fabric.Point(coords.bl.x, coords.bl.y)\n    ];\n  }\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      multiplyMatrices = fabric.util.multiplyTransformMatrices;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Describe object's corner position in canvas element coordinates.\n     * properties are tl,mt,tr,ml,mr,bl,mb,br,mtr for the main controls.\n     * each property is an object with x, y and corner.\n     * The `corner` property contains in a similar manner the 4 points of the\n     * interactive area of the corner.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, viewportTransform, top, left, padding.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords;\n     * @memberOf fabric.Object.prototype\n     */\n    oCoords: null,\n\n    /**\n     * Describe object's corner position in canvas object absolute coordinates\n     * properties are tl,tr,bl,br and describe the four main corner.\n     * each property is an object with x, y, instance of Fabric.Point.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, top, left.\n     * Those coordinates are usefull to understand where an object is. They get updated\n     * with oCoords but they do not need to be updated when zoom or panning change.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords(true);\n     * @memberOf fabric.Object.prototype\n     */\n    aCoords: null,\n\n    /**\n     * return correct set of coordinates for intersection\n     */\n    getCoords: function(absolute, calculate) {\n      if (!this.oCoords) {\n        this.setCoords();\n      }\n      var coords = absolute ? this.aCoords : this.oCoords;\n      return getCoords(calculate ? this.calcCoords(absolute) : coords);\n    },\n\n    /**\n     * Checks if object intersects with an area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with an area formed by 2 points\n     */\n    intersectsWithRect: function(pointTL, pointBR, absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate),\n          intersection = fabric.Intersection.intersectPolygonRectangle(\n            coords,\n            pointTL,\n            pointBR\n          );\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object intersects with another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with another object\n     */\n    intersectsWithObject: function(other, absolute, calculate) {\n      var intersection = fabric.Intersection.intersectPolygonPolygon(\n            this.getCoords(absolute, calculate),\n            other.getCoords(absolute, calculate)\n          );\n\n      return intersection.status === 'Intersection'\n        || other.isContainedWithinObject(this, absolute, calculate)\n        || this.isContainedWithinObject(other, absolute, calculate);\n    },\n\n    /**\n     * Checks if object is fully contained within area of another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area of another object\n     */\n    isContainedWithinObject: function(other, absolute, calculate) {\n      var points = this.getCoords(absolute, calculate),\n          i = 0, lines = other._getImageLines(\n            calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords\n          );\n      for (; i < 4; i++) {\n        if (!other.containsPoint(points[i], lines)) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Checks if object is fully contained within area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\n     */\n    isContainedWithinRect: function(pointTL, pointBR, absolute, calculate) {\n      var boundingRect = this.getBoundingRect(absolute, calculate);\n\n      return (\n        boundingRect.left >= pointTL.x &&\n        boundingRect.left + boundingRect.width <= pointBR.x &&\n        boundingRect.top >= pointTL.y &&\n        boundingRect.top + boundingRect.height <= pointBR.y\n      );\n    },\n\n    /**\n     * Checks if point is inside the object\n     * @param {fabric.Point} point Point to check against\n     * @param {Object} [lines] object returned from @method _getImageLines\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if point is inside the object\n     */\n    containsPoint: function(point, lines, absolute, calculate) {\n      var lines = lines || this._getImageLines(\n        calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords\n      ),\n          xPoints = this._findCrossPoints(point, lines);\n\n      // if xPoints is odd then point is inside the object\n      return (xPoints !== 0 && xPoints % 2 === 1);\n    },\n\n    /**\n     * Checks if object is contained within the canvas with current viewportTransform\n     * the check is done stopping at first point that appear on screen\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within canvas\n     */\n    isOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      var points = this.getCoords(true, calculate), point;\n      for (var i = 0; i < 4; i++) {\n        point = points[i];\n        if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {\n          return true;\n        }\n      }\n      // no points on screen, check intersection with absolute coordinates\n      if (this.intersectsWithRect(pointTL, pointBR, true)) {\n        return true;\n      }\n      // worst case scenario the object is so big that contanins the screen\n      var centerPoint = { x: (pointTL.x + pointBR.x) / 2, y: (pointTL.y + pointBR.y) / 2 };\n      if (this.containsPoint(centerPoint, null, true)) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\n     * @private\n     * @param {Object} oCoords Coordinates of the object corners\n     */\n    _getImageLines: function(oCoords) {\n      return {\n        topline: {\n          o: oCoords.tl,\n          d: oCoords.tr\n        },\n        rightline: {\n          o: oCoords.tr,\n          d: oCoords.br\n        },\n        bottomline: {\n          o: oCoords.br,\n          d: oCoords.bl\n        },\n        leftline: {\n          o: oCoords.bl,\n          d: oCoords.tl\n        }\n      };\n    },\n\n    /**\n     * Helper method to determine how many cross points are between the 4 object edges\n     * and the horizontal line determined by a point on canvas\n     * @private\n     * @param {fabric.Point} point Point to check\n     * @param {Object} lines Coordinates of the object being evaluated\n     */\n     // remove yi, not used but left code here just in case.\n    _findCrossPoints: function(point, lines) {\n      var b1, b2, a1, a2, xi, // yi,\n          xcount = 0,\n          iLine;\n\n      for (var lineKey in lines) {\n        iLine = lines[lineKey];\n        // optimisation 1: line below point. no cross\n        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n          continue;\n        }\n        // optimisation 2: line above point. no cross\n        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n          continue;\n        }\n        // optimisation 3: vertical line case\n        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n          xi = iLine.o.x;\n          // yi = point.y;\n        }\n        // calculate the intersection point\n        else {\n          b1 = 0;\n          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n          a1 = point.y - b1 * point.x;\n          a2 = iLine.o.y - b2 * iLine.o.x;\n\n          xi = -(a1 - a2) / (b1 - b2);\n          // yi = a1 + b1 * xi;\n        }\n        // dont count xi < point.x cases\n        if (xi >= point.x) {\n          xcount += 1;\n        }\n        // optimisation 4: specific for square images\n        if (xcount === 2) {\n          break;\n        }\n      }\n      return xcount;\n    },\n\n    /**\n     * Returns width of an object's bounding rectangle\n     * @deprecated since 1.0.4\n     * @return {Number} width value\n     */\n    getBoundingRectWidth: function() {\n      return this.getBoundingRect().width;\n    },\n\n    /**\n     * Returns height of an object's bounding rectangle\n     * @deprecated since 1.0.4\n     * @return {Number} height value\n     */\n    getBoundingRectHeight: function() {\n      return this.getBoundingRect().height;\n    },\n\n    /**\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n     * the box is intented as aligned to axis of canvas.\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Object} Object with left, top, width, height properties\n     */\n    getBoundingRect: function(absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate);\n      return fabric.util.makeBoundingBoxFromPoints(coords);\n    },\n\n    /**\n     * Returns width of an object bounding box counting transformations\n     * @return {Number} width value\n     */\n    getWidth: function() {\n      return this._getTransformedDimensions().x;\n    },\n\n    /**\n     * Returns height of an object bounding box counting transformations\n     * to be renamed in 2.0\n     * @return {Number} height value\n     */\n    getHeight: function() {\n      return this._getTransformedDimensions().y;\n    },\n\n    /**\n     * Makes sure the scale is valid and modifies it if necessary\n     * @private\n     * @param {Number} value\n     * @return {Number}\n     */\n    _constrainScale: function(value) {\n      if (Math.abs(value) < this.minScaleLimit) {\n        if (value < 0) {\n          return -this.minScaleLimit;\n        }\n        else {\n          return this.minScaleLimit;\n        }\n      }\n      return value;\n    },\n\n    /**\n     * Scales an object (equally by x and y)\n     * @param {Number} value Scale factor\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scale: function(value) {\n      value = this._constrainScale(value);\n\n      if (value < 0) {\n        this.flipX = !this.flipX;\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n\n      this.scaleX = value;\n      this.scaleY = value;\n      return this.setCoords();\n    },\n\n    /**\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New width value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToWidth: function(value) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect().width / this.getWidth();\n      return this.scale(value / this.width / boundingRectFactor);\n    },\n\n    /**\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New height value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToHeight: function(value) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect().height / this.getHeight();\n      return this.scale(value / this.height / boundingRectFactor);\n    },\n\n    /**\n     * Calculate and returns the .coords of an object.\n     * @return {Object} Object with tl, tr, br, bl ....\n     * @chainable\n     */\n    calcCoords: function(absolute) {\n      var theta = degreesToRadians(this.angle),\n          vpt = this.getViewportTransform(),\n          dim = absolute ? this._getTransformedDimensions() : this._calculateCurrentDimensions(),\n          currentWidth = dim.x, currentHeight = dim.y,\n          sinTh = Math.sin(theta),\n          cosTh = Math.cos(theta),\n          _angle = currentWidth > 0 ? Math.atan(currentHeight / currentWidth) : 0,\n          _hypotenuse = (currentWidth / Math.cos(_angle)) / 2,\n          offsetX = Math.cos(_angle + theta) * _hypotenuse,\n          offsetY = Math.sin(_angle + theta) * _hypotenuse,\n          center = this.getCenterPoint(),\n          // offset added for rotate and scale actions\n          coords = absolute ? center : fabric.util.transformPoint(center, vpt),\n          tl  = new fabric.Point(coords.x - offsetX, coords.y - offsetY),\n          tr  = new fabric.Point(tl.x + (currentWidth * cosTh), tl.y + (currentWidth * sinTh)),\n          bl  = new fabric.Point(tl.x - (currentHeight * sinTh), tl.y + (currentHeight * cosTh)),\n          br  = new fabric.Point(coords.x + offsetX, coords.y + offsetY);\n      if (!absolute) {\n        var ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n            mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n            mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n            mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n            mtr = new fabric.Point(mt.x + sinTh * this.rotatingPointOffset, mt.y - cosTh * this.rotatingPointOffset);\n      }\n\n      // debugging\n\n      /* setTimeout(function() {\n         canvas.contextTop.fillStyle = 'green';\n         canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n         canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n         canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n         canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n         canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n         canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n         canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n         canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n         canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n       }, 50); */\n\n      var coords = {\n        // corners\n        tl: tl, tr: tr, br: br, bl: bl,\n      };\n      if (!absolute) {\n        // middle\n        coords.ml = ml;\n        coords.mt = mt;\n        coords.mr = mr;\n        coords.mb = mb;\n        // rotating point\n        coords.mtr = mtr;\n      }\n      return coords;\n    },\n\n    /**\n     * Sets corner position coordinates based on current angle, width and height\n     * See https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords\n     * @param {Boolean} [ignoreZoom] set oCoords with or without the viewport transform.\n     * @param {Boolean} [skipAbsolute] skip calculation of aCoords, usefull in setViewportTransform\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setCoords: function(ignoreZoom, skipAbsolute) {\n      this.oCoords = this.calcCoords(ignoreZoom);\n      if (!skipAbsolute) {\n        this.aCoords = this.calcCoords(true);\n      }\n\n      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n      ignoreZoom || (this._setCornerCoords && this._setCornerCoords());\n\n      return this;\n    },\n\n    /**\n     * calculate rotation matrix of an object\n     * @return {Array} rotation matrix for the object\n     */\n    _calcRotateMatrix: function() {\n      if (this.angle) {\n        var theta = degreesToRadians(this.angle), cos = Math.cos(theta), sin = Math.sin(theta);\n        // trying to keep rounding error small, ugly but it works.\n        if (cos === 6.123233995736766e-17 || cos === -1.8369701987210297e-16) {\n          cos = 0;\n        }\n        return [cos, sin, -sin, cos, 0, 0];\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /**\n     * calculate trasform Matrix that represent current transformation from\n     * object properties.\n     * @param {Boolean} [skipGroup] return transformMatrix for object and not go upward with parents\n     * @return {Array} matrix Transform Matrix for the object\n     */\n    calcTransformMatrix: function(skipGroup) {\n      var center = this.getCenterPoint(),\n          translateMatrix = [1, 0, 0, 1, center.x, center.y],\n          rotateMatrix,\n          dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true),\n          matrix;\n      if (this.group && !skipGroup) {\n        matrix = multiplyMatrices(this.group.calcTransformMatrix(), translateMatrix);\n      }\n      else {\n        matrix = translateMatrix;\n      }\n      if (this.angle) {\n        rotateMatrix = this._calcRotateMatrix();\n        matrix = multiplyMatrices(matrix, rotateMatrix);\n      }\n      matrix = multiplyMatrices(matrix, dimensionMatrix);\n      return matrix;\n    },\n\n    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n      var skewMatrix,\n          scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),\n          scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),\n          scaleMatrix = [scaleX, 0, 0, scaleY, 0, 0];\n      if (skewX) {\n        skewMatrix = [1, 0, Math.tan(degreesToRadians(skewX)), 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      if (skewY) {\n        skewMatrix = [1, Math.tan(degreesToRadians(skewY)), 0, 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      return scaleMatrix;\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getNonTransformedDimensions: function() {\n      var strokeWidth = this.strokeWidth,\n          w = this.width + strokeWidth,\n          h = this.height + strokeWidth;\n      return { x: w, y: h };\n    },\n\n    /*\n     * Calculate object bounding boxdimensions from its properties scale, skew.\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getTransformedDimensions: function(skewX, skewY) {\n      if (typeof skewX === 'undefined') {\n        skewX = this.skewX;\n      }\n      if (typeof skewY === 'undefined') {\n        skewY = this.skewY;\n      }\n      var dimensions = this._getNonTransformedDimensions(),\n          dimX = dimensions.x / 2, dimY = dimensions.y / 2,\n          points = [\n            {\n              x: -dimX,\n              y: -dimY\n            },\n            {\n              x: dimX,\n              y: -dimY\n            },\n            {\n              x: -dimX,\n              y: dimY\n            },\n            {\n              x: dimX,\n              y: dimY\n            }],\n          i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),\n          bbox;\n      for (i = 0; i < points.length; i++) {\n        points[i] = fabric.util.transformPoint(points[i], transformMatrix);\n      }\n      bbox = fabric.util.makeBoundingBoxFromPoints(points);\n      return { x: bbox.width, y: bbox.height };\n    },\n\n    /*\n     * Calculate object dimensions for controls. include padding and canvas zoom\n     * private\n     */\n    _calculateCurrentDimensions: function()  {\n      var vpt = this.getViewportTransform(),\n          dim = this._getTransformedDimensions(),\n          p = fabric.util.transformPoint(dim, vpt, true);\n\n      return p.scalarAdd(2 * this.padding);\n    },\n  });\n})();\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * Moves an object to the bottom of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendToBack: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n    }\n    else {\n      this.canvas.sendToBack(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to the top of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringToFront: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n    }\n    else {\n      this.canvas.bringToFront(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object down in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendBackwards: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.sendBackwards(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object up in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringForward: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.bringForward(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to specified level in stack of drawn objects\n   * @param {Number} index New position of object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  moveTo: function(index) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n    }\n    else {\n      this.canvas.moveTo(this, index);\n    }\n    return this;\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n\n  function getSvgColorString(prop, value) {\n    if (!value) {\n      return prop + ': none; ';\n    }\n    else if (value.toLive) {\n      return prop + ': url(#SVGID_' + value.id + '); ';\n    }\n    else {\n      var color = new fabric.Color(value),\n          str = prop + ': ' + color.toRgb() + '; ',\n          opacity = color.getAlpha();\n      if (opacity !== 1) {\n        //change the color in rgb + opacity\n        str += prop + '-opacity: ' + opacity.toString() + '; ';\n      }\n      return str;\n    }\n  }\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n\n      var fillRule = this.fillRule,\n          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n          visibility = this.visible ? '' : ' visibility: hidden;',\n          filter = skipShadow ? '' : this.getSvgFilter(),\n          fill = getSvgColorString('fill', this.fill),\n          stroke = getSvgColorString('stroke', this.stroke);\n\n      return [\n        stroke,\n        'stroke-width: ', strokeWidth, '; ',\n        'stroke-dasharray: ', strokeDashArray, '; ',\n        'stroke-linecap: ', strokeLineCap, '; ',\n        'stroke-linejoin: ', strokeLineJoin, '; ',\n        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n        fill,\n        'fill-rule: ', fillRule, '; ',\n        'opacity: ', opacity, ';',\n        filter,\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns filter for svg shadow\n     * @return {String}\n     */\n    getSvgFilter: function() {\n      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n    },\n\n    /**\n     * Returns id attribute for svg output\n     * @return {String}\n     */\n    getSvgId: function() {\n      return this.id ? 'id=\"' + this.id + '\" ' : '';\n    },\n\n    /**\n     * Returns transform-string for svg-export\n     * @return {String}\n     */\n    getSvgTransform: function() {\n      if (this.group && this.group.type === 'path-group') {\n        return '';\n      }\n      var toFixed = fabric.util.toFixed,\n          angle = this.getAngle(),\n          skewX = (this.getSkewX() % 360),\n          skewY = (this.getSkewY() % 360),\n          center = this.getCenterPoint(),\n\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          translatePart = this.type === 'path-group' ? '' : 'translate(' +\n                            toFixed(center.x, NUM_FRACTION_DIGITS) +\n                            ' ' +\n                            toFixed(center.y, NUM_FRACTION_DIGITS) +\n                          ')',\n\n          anglePart = angle !== 0\n            ? (' rotate(' + toFixed(angle, NUM_FRACTION_DIGITS) + ')')\n            : '',\n\n          scalePart = (this.scaleX === 1 && this.scaleY === 1)\n            ? '' :\n            (' scale(' +\n              toFixed(this.scaleX, NUM_FRACTION_DIGITS) +\n              ' ' +\n              toFixed(this.scaleY, NUM_FRACTION_DIGITS) +\n            ')'),\n\n          skewXPart = skewX !== 0 ? ' skewX(' + toFixed(skewX, NUM_FRACTION_DIGITS) + ')' : '',\n\n          skewYPart = skewY !== 0 ? ' skewY(' + toFixed(skewY, NUM_FRACTION_DIGITS) + ')' : '',\n\n          addTranslateX = this.type === 'path-group' ? this.width : 0,\n\n          flipXPart = this.flipX ? ' matrix(-1 0 0 1 ' + addTranslateX + ' 0) ' : '',\n\n          addTranslateY = this.type === 'path-group' ? this.height : 0,\n\n          flipYPart = this.flipY ? ' matrix(1 0 0 -1 0 ' + addTranslateY + ')' : '';\n\n      return [\n        translatePart, anglePart, scalePart, flipXPart, flipYPart, skewXPart, skewYPart\n      ].join('');\n    },\n\n    /**\n     * Returns transform-string for svg-export from the transform matrix of single elements\n     * @return {String}\n     */\n    getSvgTransformMatrix: function() {\n      return this.transformMatrix ? ' matrix(' + this.transformMatrix.join(' ') + ') ' : '';\n    },\n\n    /**\n     * @private\n     */\n    _createBaseSVGMarkup: function() {\n      var markup = [];\n\n      if (this.fill && this.fill.toLive) {\n        markup.push(this.fill.toSVG(this, false));\n      }\n      if (this.stroke && this.stroke.toLive) {\n        markup.push(this.stroke.toSVG(this, false));\n      }\n      if (this.shadow) {\n        markup.push(this.shadow.toSVG(this));\n      }\n      return markup;\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function() {\n\n  var extend = fabric.util.object.extend,\n      originalSet = 'stateProperties';\n\n  /*\n    Depends on `stateProperties`\n  */\n  function saveProps(origin, destination, props) {\n    var tmpObj = { }, deep = true;\n    props.forEach(function(prop) {\n      tmpObj[prop] = origin[prop];\n    });\n    extend(origin[destination], tmpObj, deep);\n  }\n\n  function _isEqual(origValue, currentValue, firstPass) {\n    if (origValue === currentValue) {\n      // if the objects are identical, return\n      return true;\n    }\n    else if (Array.isArray(origValue)) {\n      if (origValue.length !== currentValue.length) {\n        return false;\n      }\n      for (var i = 0, len = origValue.length; i < len; i++) {\n        if (!_isEqual(origValue[i], currentValue[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    else if (origValue && typeof origValue === 'object') {\n      var keys = Object.keys(origValue), key;\n      if (!firstPass && keys.length !== Object.keys(currentValue).length) {\n        return false;\n      }\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        if (!_isEqual(origValue[key], currentValue[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Returns true if object state (one of its state properties) was changed\n     * @param {String} [propertySet] optional name for the set of property we want to save\n     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n     */\n    hasStateChanged: function(propertySet) {\n      propertySet = propertySet || originalSet;\n      var dashedPropertySet = '_' + propertySet;\n      if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\n        return true;\n      }\n      return !_isEqual(this[dashedPropertySet], this, true);\n    },\n\n    /**\n     * Saves state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    saveState: function(options) {\n      var propertySet = options && options.propertySet || originalSet,\n          destination = '_' + propertySet;\n      if (!this[destination]) {\n        return this.setupState(options);\n      }\n      saveProps(this, destination, this[propertySet]);\n      if (options && options.stateProperties) {\n        saveProps(this, destination, options.stateProperties);\n      }\n      return this;\n    },\n\n    /**\n     * Setups state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    setupState: function(options) {\n      options = options || { };\n      var propertySet = options.propertySet || originalSet;\n      options.propertySet = propertySet;\n      this['_' + propertySet] = { };\n      this.saveState(options);\n      return this;\n    }\n  });\n})();\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      /* eslint-disable camelcase */\n      isVML = function() { return typeof G_vmlCanvasManager !== 'undefined'; };\n      /* eslint-enable camelcase */\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * The object interactivity controls.\n     * @private\n     */\n    _controlsVisibility: null,\n\n    /**\n     * Determines which corner has been clicked\n     * @private\n     * @param {Object} pointer The pointer indicating the mouse position\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n     */\n    _findTargetCorner: function(pointer) {\n      if (!this.hasControls || !this.active) {\n        return false;\n      }\n\n      var ex = pointer.x,\n          ey = pointer.y,\n          xPoints,\n          lines;\n      this.__corner = 0;\n      for (var i in this.oCoords) {\n\n        if (!this.isControlVisible(i)) {\n          continue;\n        }\n\n        if (i === 'mtr' && !this.hasRotatingPoint) {\n          continue;\n        }\n\n        if (this.get('lockUniScaling') &&\n           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n          continue;\n        }\n\n        lines = this._getImageLines(this.oCoords[i].corner);\n\n        // debugging\n\n        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\n        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n        if (xPoints !== 0 && xPoints % 2 === 1) {\n          this.__corner = i;\n          return i;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Sets the coordinates of the draggable boxes in the corners of\n     * the image used to scale/rotate it.\n     * @private\n     */\n    _setCornerCoords: function() {\n      var coords = this.oCoords,\n          newTheta = degreesToRadians(45 - this.angle),\n          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n          /* 0.707106 stands for sqrt(2)/2 */\n          cornerHypotenuse = this.cornerSize * 0.707106,\n          cosHalfOffset = cornerHypotenuse * Math.cos(newTheta),\n          sinHalfOffset = cornerHypotenuse * Math.sin(newTheta),\n          x, y;\n\n      for (var point in coords) {\n        x = coords[point].x;\n        y = coords[point].y;\n        coords[point].corner = {\n          tl: {\n            x: x - sinHalfOffset,\n            y: y - cosHalfOffset\n          },\n          tr: {\n            x: x + cosHalfOffset,\n            y: y - sinHalfOffset\n          },\n          bl: {\n            x: x - cosHalfOffset,\n            y: y + sinHalfOffset\n          },\n          br: {\n            x: x + sinHalfOffset,\n            y: y + cosHalfOffset\n          }\n        };\n      }\n    },\n\n    /**\n     * Draws a colored layer behind the object, inside its selection borders.\n     * Requires public options: padding, selectionBackgroundColor\n     * this function is called when the context is transformed\n     * has checks to be skipped when the object is on a staticCanvas\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawSelectionBackground: function(ctx) {\n      if (!this.selectionBackgroundColor || this.group || !this.active ||\n        (this.canvas && !this.canvas.interactive)) {\n        return this;\n      }\n      ctx.save();\n      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n          vpt = this.canvas.viewportTransform;\n      ctx.translate(center.x, center.y);\n      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.fillStyle = this.selectionBackgroundColor;\n      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBorders: function(ctx) {\n      if (!this.hasBorders) {\n        return this;\n      }\n\n      var wh = this._calculateCurrentDimensions(),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n      ctx.strokeStyle = this.borderColor;\n      this._setLineDash(ctx, this.borderDashArray, null);\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      if (this.hasRotatingPoint && this.isControlVisible('mtr') && !this.get('lockRotation') && this.hasControls) {\n\n        var rotateHeight = -height / 2;\n\n        ctx.beginPath();\n        ctx.moveTo(0, rotateHeight);\n        ctx.lineTo(0, rotateHeight - this.rotatingPointOffset);\n        ctx.closePath();\n        ctx.stroke();\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box when it is inside a group.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {object} options object representing current object parameters\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBordersInGroup: function(ctx, options) {\n      if (!this.hasBorders) {\n        return this;\n      }\n\n      var p = this._getNonTransformedDimensions(),\n          matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),\n          wh = fabric.util.transformPoint(p, matrix),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n      this._setLineDash(ctx, this.borderDashArray, null);\n      ctx.strokeStyle = this.borderColor;\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws corners of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: cornerSize, padding\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawControls: function(ctx) {\n      if (!this.hasControls) {\n        return this;\n      }\n\n      var wh = this._calculateCurrentDimensions(),\n          width = wh.x,\n          height = wh.y,\n          scaleOffset = this.cornerSize,\n          left = -(width + scaleOffset) / 2,\n          top = -(height + scaleOffset) / 2,\n          methodName = this.transparentCorners ? 'stroke' : 'fill';\n\n      ctx.save();\n      ctx.strokeStyle = ctx.fillStyle = this.cornerColor;\n      if (!this.transparentCorners) {\n        ctx.strokeStyle = this.cornerStrokeColor;\n      }\n      this._setLineDash(ctx, this.cornerDashArray, null);\n\n      // top-left\n      this._drawControl('tl', ctx, methodName,\n        left,\n        top);\n\n      // top-right\n      this._drawControl('tr', ctx, methodName,\n        left + width,\n        top);\n\n      // bottom-left\n      this._drawControl('bl', ctx, methodName,\n        left,\n        top + height);\n\n      // bottom-right\n      this._drawControl('br', ctx, methodName,\n        left + width,\n        top + height);\n\n      if (!this.get('lockUniScaling')) {\n\n        // middle-top\n        this._drawControl('mt', ctx, methodName,\n          left + width / 2,\n          top);\n\n        // middle-bottom\n        this._drawControl('mb', ctx, methodName,\n          left + width / 2,\n          top + height);\n\n        // middle-right\n        this._drawControl('mr', ctx, methodName,\n          left + width,\n          top + height / 2);\n\n        // middle-left\n        this._drawControl('ml', ctx, methodName,\n          left,\n          top + height / 2);\n      }\n\n      // middle-top-rotate\n      if (this.hasRotatingPoint) {\n        this._drawControl('mtr', ctx, methodName,\n          left + width / 2,\n          top - this.rotatingPointOffset);\n      }\n\n      ctx.restore();\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _drawControl: function(control, ctx, methodName, left, top) {\n      if (!this.isControlVisible(control)) {\n        return;\n      }\n      var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n      switch (this.cornerStyle) {\n        case 'circle':\n          ctx.beginPath();\n          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n          ctx[methodName]();\n          if (stroke) {\n            ctx.stroke();\n          }\n          break;\n        default:\n          isVML() || this.transparentCorners || ctx.clearRect(left, top, size, size);\n          ctx[methodName + 'Rect'](left, top, size, size);\n          if (stroke) {\n            ctx.strokeRect(left, top, size, size);\n          }\n      }\n    },\n\n    /**\n     * Returns true if the specified control is visible, false otherwise.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @returns {Boolean} true if the specified control is visible, false otherwise\n     */\n    isControlVisible: function(controlName) {\n      return this._getControlsVisibility()[controlName];\n    },\n\n    /**\n     * Sets the visibility of the specified control.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlVisible: function(controlName, visible) {\n      this._getControlsVisibility()[controlName] = visible;\n      return this;\n    },\n\n    /**\n     * Sets the visibility state of object controls.\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlsVisibility: function(options) {\n      options || (options = { });\n\n      for (var p in options) {\n        this.setControlVisible(p, options[p]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the instance of the control visibility set for this object.\n     * @private\n     * @returns {Object}\n     */\n    _getControlsVisibility: function() {\n      if (!this._controlsVisibility) {\n        this._controlsVisibility = {\n          tl: true,\n          tr: true,\n          br: true,\n          bl: true,\n          ml: true,\n          mt: true,\n          mr: true,\n          mb: true,\n          mtr: true\n        };\n      }\n      return this._controlsVisibility;\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Animation duration (in ms) for fx* methods\n   * @type Number\n   * @default\n   */\n  FX_DURATION: 500,\n\n  /**\n   * Centers object horizontally with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectH: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.get('left'),\n      endValue: this.getCenter().left,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('left', value);\n        _this.renderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Centers object vertically with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectV: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.get('top'),\n      endValue: this.getCenter().top,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('top', value);\n        _this.renderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Same as `fabric.Canvas#remove` but animated\n   * @param {fabric.Object} object Object to remove\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxRemove: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.get('opacity'),\n      endValue: 0,\n      duration: this.FX_DURATION,\n      onStart: function() {\n        object.set('active', false);\n      },\n      onChange: function(value) {\n        object.set('opacity', value);\n        _this.renderAll();\n        onChange();\n      },\n      onComplete: function () {\n        _this.remove(object);\n        onComplete();\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n  /**\n   * Animates object's properties\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n   * @return {fabric.Object} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @chainable\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   *\n   * As string — one property\n   *\n   * object.animate('left', ...);\n   * object.animate('left', { duration: ... });\n   *\n   */\n  animate: function() {\n    if (arguments[0] && typeof arguments[0] === 'object') {\n      var propsToAnimate = [], prop, skipCallbacks;\n      for (prop in arguments[0]) {\n        propsToAnimate.push(prop);\n      }\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n        prop = propsToAnimate[i];\n        skipCallbacks = i !== len - 1;\n        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n      }\n    }\n    else {\n      this._animate.apply(this, arguments);\n    }\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n   */\n  _animate: function(property, to, options, skipCallbacks) {\n    var _this = this, propPair;\n\n    to = to.toString();\n\n    if (!options) {\n      options = { };\n    }\n    else {\n      options = fabric.util.object.clone(options);\n    }\n\n    if (~property.indexOf('.')) {\n      propPair = property.split('.');\n    }\n\n    var currentValue = propPair\n      ? this.get(propPair[0])[propPair[1]]\n      : this.get(property);\n\n    if (!('from' in options)) {\n      options.from = currentValue;\n    }\n\n    if (~to.indexOf('=')) {\n      to = currentValue + parseFloat(to.replace('=', ''));\n    }\n    else {\n      to = parseFloat(to);\n    }\n\n    fabric.util.animate({\n      startValue: options.from,\n      endValue: to,\n      byValue: options.by,\n      easing: options.easing,\n      duration: options.duration,\n      abort: options.abort && function() {\n        return options.abort.call(_this);\n      },\n      onChange: function(value, valueProgress, timeProgress) {\n        if (propPair) {\n          _this[propPair[0]][propPair[1]] = value;\n        }\n        else {\n          _this.set(property, value);\n        }\n        if (skipCallbacks) {\n          return;\n        }\n        options.onChange && options.onChange(value, valueProgress, timeProgress);\n      },\n      onComplete: function(value, valueProgress, timeProgress) {\n        if (skipCallbacks) {\n          return;\n        }\n\n        _this.setCoords();\n        options.onComplete && options.onComplete(value, valueProgress, timeProgress);\n      }\n    });\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Line) {\n    fabric.warn('fabric.Line is already defined');\n    return;\n  }\n\n  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n  cacheProperties.push(\n    'x1',\n    'x2',\n    'y1',\n    'y2'\n  );\n\n  /**\n   * Line class\n   * @class fabric.Line\n   * @extends fabric.Object\n   * @see {@link fabric.Line#initialize} for constructor definition\n   */\n  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'line',\n\n    /**\n     * x value or first line edge\n     * @type Number\n     * @default\n     */\n    x1: 0,\n\n    /**\n     * y value or first line edge\n     * @type Number\n     * @default\n     */\n    y1: 0,\n\n    /**\n     * x value or second line edge\n     * @type Number\n     * @default\n     */\n    x2: 0,\n\n    /**\n     * y value or second line edge\n     * @type Number\n     * @default\n     */\n    y2: 0,\n\n    cacheProperties: cacheProperties,\n\n    /**\n     * Constructor\n     * @param {Array} [points] Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Line} thisArg\n     */\n    initialize: function(points, options) {\n      if (!points) {\n        points = [0, 0, 0, 0];\n      }\n\n      this.callSuper('initialize', options);\n\n      this.set('x1', points[0]);\n      this.set('y1', points[1]);\n      this.set('x2', points[2]);\n      this.set('y2', points[3]);\n\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n\n      this.width = Math.abs(this.x2 - this.x1);\n      this.height = Math.abs(this.y2 - this.y1);\n\n      this.left = 'left' in options\n        ? options.left\n        : this._getLeftToOriginX();\n\n      this.top = 'top' in options\n        ? options.top\n        : this._getTopToOriginY();\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      if (typeof coordProps[key] !== 'undefined') {\n        this._setWidthHeight();\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n     */\n    _getLeftToOriginX: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originX',\n        axis1: 'x1',\n        axis2: 'x2',\n        dimension: 'width'\n      },\n      { // possible values of origin\n        nearest: 'left',\n        center: 'center',\n        farthest: 'right'\n      }\n    ),\n\n    /**\n     * @private\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n     */\n    _getTopToOriginY: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originY',\n        axis1: 'y1',\n        axis2: 'y2',\n        dimension: 'height'\n      },\n      { // possible values of origin\n        nearest: 'top',\n        center: 'center',\n        farthest: 'bottom'\n      }\n    ),\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n      ctx.beginPath();\n\n      if (noTransform) {\n        //  Line coords are distances from left-top of canvas to origin of line.\n        //  To render line in a path-group, we need to translate them to\n        //  distances from center of path-group to center of line.\n        var cp = this.getCenterPoint(),\n            offset = this.strokeWidth / 2;\n        ctx.translate(\n          cp.x - (this.strokeLineCap === 'butt' && this.height === 0 ? 0 : offset),\n          cp.y - (this.strokeLineCap === 'butt' && this.width === 0 ? 0 : offset)\n        );\n      }\n\n      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n        // move from center (of virtual box) to its left/top corner\n        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n        var p = this.calcLinePoints();\n        ctx.moveTo(p.x1, p.y1);\n        ctx.lineTo(p.x2, p.y2);\n      }\n\n      ctx.lineWidth = this.strokeWidth;\n\n      // TODO: test this\n      // make sure setting \"fill\" changes color of a line\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n      var origStrokeStyle = ctx.strokeStyle;\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n      this.stroke && this._renderStroke(ctx);\n      ctx.strokeStyle = origStrokeStyle;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p = this.calcLinePoints();\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @methd toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function() {\n      var dim = this.callSuper('_getNonTransformedDimensions');\n      if (this.strokeLineCap === 'butt') {\n        if (this.width === 0) {\n          dim.y -= this.strokeWidth;\n        }\n        if (this.height === 0) {\n          dim.x -= this.strokeWidth;\n        }\n      }\n      return dim;\n    },\n\n    /**\n     * Recalculates line points given width and height\n     * @private\n     */\n    calcLinePoints: function() {\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\n          yMult = this.y1 <= this.y2 ? -1 : 1,\n          x1 = (xMult * this.width * 0.5),\n          y1 = (yMult * this.height * 0.5),\n          x2 = (xMult * this.width * -0.5),\n          y2 = (yMult * this.height * -0.5);\n\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          p = { x1: this.x1, x2: this.x2, y1: this.y1, y2: this.y2 };\n\n      if (!(this.group && this.group.type === 'path-group')) {\n        p = this.calcLinePoints();\n      }\n      markup.push(\n        '<line ', this.getSvgId(),\n          'x1=\"', p.x1,\n          '\" y1=\"', p.y1,\n          '\" x2=\"', p.x2,\n          '\" y2=\"', p.y2,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n   * @static\n   * @memberOf fabric.Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\n  /**\n   * Returns fabric.Line instance from an SVG element\n   * @static\n   * @memberOf fabric.Line\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Line} instance of fabric.Line\n   */\n  fabric.Line.fromElement = function(element, options) {\n    options = options || { };\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n        points = [\n          parsedAttributes.x1 || 0,\n          parsedAttributes.y1 || 0,\n          parsedAttributes.x2 || 0,\n          parsedAttributes.y2 || 0\n        ];\n    options.originX = 'left';\n    options.originY = 'top';\n    return new fabric.Line(points, extend(parsedAttributes, options));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Line instance from an object representation\n   * @static\n   * @memberOf fabric.Line\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Line} instance of fabric.Line\n   */\n  fabric.Line.fromObject = function(object, callback, forceAsync) {\n    function _callback(instance) {\n      delete instance.points;\n      callback && callback(instance);\n    };\n    var options = clone(object, true);\n    options.points = [object.x1, object.y1, object.x2, object.y2];\n    var line = fabric.Object._fromObject('Line', options, _callback, forceAsync, 'points');\n    if (line) {\n      delete line.points;\n    }\n    return line;\n  };\n\n  /**\n   * Produces a function that calculates distance from canvas edge to Line origin.\n   */\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\n    var origin = propertyNames.origin,\n        axis1 = propertyNames.axis1,\n        axis2 = propertyNames.axis2,\n        dimension = propertyNames.dimension,\n        nearest = originValues.nearest,\n        center = originValues.center,\n        farthest = originValues.farthest;\n\n    return function() {\n      switch (this.get(origin)) {\n        case nearest:\n          return Math.min(this.get(axis1), this.get(axis2));\n        case center:\n          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n        case farthest:\n          return Math.max(this.get(axis1), this.get(axis2));\n      }\n    };\n\n  }\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      pi = Math.PI,\n      extend = fabric.util.object.extend;\n\n  if (fabric.Circle) {\n    fabric.warn('fabric.Circle is already defined.');\n    return;\n  }\n\n  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n  cacheProperties.push(\n    'radius'\n  );\n\n  /**\n   * Circle class\n   * @class fabric.Circle\n   * @extends fabric.Object\n   * @see {@link fabric.Circle#initialize} for constructor definition\n   */\n  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'circle',\n\n    /**\n     * Radius of this circle\n     * @type Number\n     * @default\n     */\n    radius: 0,\n\n    /**\n     * Start angle of the circle, moving clockwise\n     * @type Number\n     * @default 0\n     */\n    startAngle: 0,\n\n    /**\n     * End angle of the circle\n     * @type Number\n     * @default 2Pi\n     */\n    endAngle: pi * 2,\n\n    cacheProperties: cacheProperties,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Circle} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('radius', options && options.radius || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Circle} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key === 'radius') {\n        this.setRadius(value);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = 0, y = 0,\n          angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\n      if (angle === 0) {\n        if (this.group && this.group.type === 'path-group') {\n          x = this.left + this.radius;\n          y = this.top + this.radius;\n        }\n        markup.push(\n          '<circle ', this.getSvgId(),\n            'cx=\"' + x + '\" cy=\"' + y + '\" ',\n            'r=\"', this.radius,\n            '\" style=\"', this.getSvgStyles(),\n            '\" transform=\"', this.getSvgTransform(),\n            ' ', this.getSvgTransformMatrix(),\n          '\"/>\\n'\n        );\n      }\n      else {\n        var startX = Math.cos(this.startAngle) * this.radius,\n            startY = Math.sin(this.startAngle) * this.radius,\n            endX = Math.cos(this.endAngle) * this.radius,\n            endY = Math.sin(this.endAngle) * this.radius,\n            largeFlag = angle > pi ? '1' : '0';\n\n        markup.push(\n          '<path d=\"M ' + startX + ' ' + startY,\n          ' A ' + this.radius + ' ' + this.radius,\n          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          ' ', this.getSvgTransformMatrix(),\n          '\"/>\\n'\n        );\n      }\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _render: function(ctx, noTransform) {\n      ctx.beginPath();\n      ctx.arc(noTransform ? this.left + this.radius : 0,\n              noTransform ? this.top + this.radius : 0,\n              this.radius,\n              this.startAngle,\n              this.endAngle, false);\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusX: function() {\n      return this.get('radius') * this.get('scaleX');\n    },\n\n    /**\n     * Returns vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusY: function() {\n      return this.get('radius') * this.get('scaleY');\n    },\n\n    /**\n     * Sets radius of an object (and updates width accordingly)\n     * @return {fabric.Circle} thisArg\n     */\n    setRadius: function(value) {\n      this.radius = value;\n      return this.set('width', value * 2).set('height', value * 2);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n   * @static\n   * @memberOf fabric.Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\n  /**\n   * Returns {@link fabric.Circle} instance from an SVG element\n   * @static\n   * @memberOf fabric.Circle\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   * @return {fabric.Circle} Instance of fabric.Circle\n   */\n  fabric.Circle.fromElement = function(element, options) {\n    options || (options = { });\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\n    if (!isValidRadius(parsedAttributes)) {\n      throw new Error('value of `r` attribute is required and can not be negative');\n    }\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top = parsedAttributes.top || 0;\n\n    var obj = new fabric.Circle(extend(parsedAttributes, options));\n\n    obj.left -= obj.radius;\n    obj.top -= obj.radius;\n    return obj;\n  };\n\n  /**\n   * @private\n   */\n  function isValidRadius(attributes) {\n    return (('radius' in attributes) && (attributes.radius >= 0));\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Circle} instance from an object representation\n   * @static\n   * @memberOf fabric.Circle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {Object} Instance of fabric.Circle\n   */\n  fabric.Circle.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Circle', object, callback, forceAsync);\n  };\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Triangle) {\n    fabric.warn('fabric.Triangle is already defined');\n    return;\n  }\n\n  /**\n   * Triangle class\n   * @class fabric.Triangle\n   * @extends fabric.Object\n   * @return {fabric.Triangle} thisArg\n   * @see {@link fabric.Triangle#initialize} for constructor definition\n   */\n  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'triangle',\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('width', options && options.width || 100)\n          .set('height', options && options.height || 100);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      ctx.moveTo(-widthBy2, heightBy2);\n      ctx.lineTo(0, -heightBy2);\n      ctx.lineTo(widthBy2, heightBy2);\n      ctx.closePath();\n\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2,\n          points = [\n            -widthBy2 + ' ' + heightBy2,\n            '0 ' + -heightBy2,\n            widthBy2 + ' ' + heightBy2\n          ]\n          .join(',');\n\n      markup.push(\n        '<polygon ', this.getSvgId(),\n          'points=\"', points,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n        '\"/>'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Triangle} instance from an object representation\n   * @static\n   * @memberOf fabric.Triangle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Triangle}\n   */\n  fabric.Triangle.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Triangle', object, callback, forceAsync);\n  };\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      piBy2   = Math.PI * 2,\n      extend = fabric.util.object.extend;\n\n  if (fabric.Ellipse) {\n    fabric.warn('fabric.Ellipse is already defined.');\n    return;\n  }\n\n  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n  cacheProperties.push(\n    'rx',\n    'ry'\n  );\n\n  /**\n   * Ellipse class\n   * @class fabric.Ellipse\n   * @extends fabric.Object\n   * @return {fabric.Ellipse} thisArg\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\n   */\n  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'ellipse',\n\n    /**\n     * Horizontal radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: cacheProperties,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Ellipse} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('rx', options && options.rx || 0);\n      this.set('ry', options && options.ry || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Ellipse} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      switch (key) {\n\n        case 'rx':\n          this.rx = value;\n          this.set('width', value * 2);\n          break;\n\n        case 'ry':\n          this.ry = value;\n          this.set('height', value * 2);\n          break;\n\n      }\n      return this;\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRx: function() {\n      return this.get('rx') * this.get('scaleX');\n    },\n\n    /**\n     * Returns Vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRy: function() {\n      return this.get('ry') * this.get('scaleY');\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = 0, y = 0;\n      if (this.group && this.group.type === 'path-group') {\n        x = this.left + this.rx;\n        y = this.top + this.ry;\n      }\n      markup.push(\n        '<ellipse ', this.getSvgId(),\n          'cx=\"', x, '\" cy=\"', y, '\" ',\n          'rx=\"', this.rx,\n          '\" ry=\"', this.ry,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _render: function(ctx, noTransform) {\n      ctx.beginPath();\n      ctx.save();\n      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n      ctx.arc(\n        noTransform ? this.left + this.rx : 0,\n        noTransform ? (this.top + this.ry) * this.rx / this.ry : 0,\n        this.rx,\n        0,\n        piBy2,\n        false);\n      ctx.restore();\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n   * @static\n   * @memberOf fabric.Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an SVG element\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromElement = function(element, options) {\n    options || (options = { });\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top = parsedAttributes.top || 0;\n\n    var ellipse = new fabric.Ellipse(extend(parsedAttributes, options));\n\n    ellipse.top -= ellipse.ry;\n    ellipse.left -= ellipse.rx;\n    return ellipse;\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an object representation\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Ellipse', object, callback, forceAsync);\n  };\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Rect) {\n    fabric.warn('fabric.Rect is already defined');\n    return;\n  }\n\n  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n  stateProperties.push('rx', 'ry');\n\n  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n  cacheProperties.push('rx', 'ry');\n\n  /**\n   * Rectangle class\n   * @class fabric.Rect\n   * @extends fabric.Object\n   * @return {fabric.Rect} thisArg\n   * @see {@link fabric.Rect#initialize} for constructor definition\n   */\n  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\n    /**\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: stateProperties,\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'rect',\n\n    /**\n     * Horizontal border radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical border radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: cacheProperties,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this._initRxRy();\n    },\n\n    /**\n     * Initializes rx/ry attributes\n     * @private\n     */\n    _initRxRy: function() {\n      if (this.rx && !this.ry) {\n        this.ry = this.rx;\n      }\n      else if (this.ry && !this.rx) {\n        this.rx = this.ry;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n\n      // optimize 1x1 case (used in spray brush)\n      if (this.width === 1 && this.height === 1) {\n        ctx.fillRect(-0.5, -0.5, 1, 1);\n        return;\n      }\n\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n          w = this.width,\n          h = this.height,\n          x = noTransform ? this.left : -this.width / 2,\n          y = noTransform ? this.top : -this.height / 2,\n          isRounded = rx !== 0 || ry !== 0,\n          /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n          k = 1 - 0.5522847498;\n      ctx.beginPath();\n\n      ctx.moveTo(x + rx, y);\n\n      ctx.lineTo(x + w - rx, y);\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\n      ctx.lineTo(x + w, y + h - ry);\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\n      ctx.lineTo(x + rx, y + h);\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\n      ctx.lineTo(x, y + ry);\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\n      ctx.closePath();\n\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = this.left, y = this.top;\n      if (!(this.group && this.group.type === 'path-group')) {\n        x = -this.width / 2;\n        y = -this.height / 2;\n      }\n      markup.push(\n        '<rect ', this.getSvgId(),\n          'x=\"', x, '\" y=\"', y,\n          '\" rx=\"', this.get('rx'), '\" ry=\"', this.get('ry'),\n          '\" width=\"', this.width, '\" height=\"', this.height,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          this.getSvgTransformMatrix(),\n        '\"/>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n   * @static\n   * @memberOf fabric.Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\n  /**\n   * Returns {@link fabric.Rect} instance from an SVG element\n   * @static\n   * @memberOf fabric.Rect\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Rect} Instance of fabric.Rect\n   */\n  fabric.Rect.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n    options = options || { };\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top  = parsedAttributes.top  || 0;\n    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n    return rect;\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Rect} instance from an object representation\n   * @static\n   * @memberOf fabric.Rect\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {Object} instance of fabric.Rect\n   */\n  fabric.Rect.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Rect', object, callback, forceAsync);\n  };\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      toFixed = fabric.util.toFixed,\n      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n  if (fabric.Polyline) {\n    fabric.warn('fabric.Polyline is already defined');\n    return;\n  }\n\n  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n  cacheProperties.push('points');\n\n  /**\n   * Polyline class\n   * @class fabric.Polyline\n   * @extends fabric.Object\n   * @see {@link fabric.Polyline#initialize} for constructor definition\n   */\n  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polyline',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    /**\n     * Minimum X from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minX: 0,\n\n    /**\n     * Minimum Y from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minY: 0,\n\n    cacheProperties: cacheProperties,\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points (where each point is an object with x and y)\n     * @param {Object} [options] Options object\n     * @return {fabric.Polyline} thisArg\n     * @example\n     * var poly = new fabric.Polyline([\n     *     { x: 10, y: 10 },\n     *     { x: 50, y: 30 },\n     *     { x: 40, y: 70 },\n     *     { x: 60, y: 50 },\n     *     { x: 100, y: 150 },\n     *     { x: 40, y: 100 }\n     *   ], {\n     *   stroke: 'red',\n     *   left: 100,\n     *   top: 100\n     * });\n     */\n    initialize: function(points, options) {\n      options = options || {};\n      this.points = points || [];\n      this.callSuper('initialize', options);\n      this._calcDimensions();\n      if (!('top' in options)) {\n        this.top = this.minY;\n      }\n      if (!('left' in options)) {\n        this.left = this.minX;\n      }\n      this.pathOffset = {\n        x: this.minX + this.width / 2,\n        y: this.minY + this.height / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var points = this.points,\n          minX = min(points, 'x'),\n          minY = min(points, 'y'),\n          maxX = max(points, 'x'),\n          maxY = max(points, 'y');\n\n      this.width = (maxX - minX) || 0;\n      this.height = (maxY - minY) || 0;\n      this.minX = minX || 0;\n      this.minY = minY || 0;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        points: this.points.concat()\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var points = [],\n          diffX = 0,\n          diffY = 0,\n          markup = this._createBaseSVGMarkup();\n\n      if (!(this.group && this.group.type === 'path-group')) {\n        diffX = this.pathOffset.x;\n        diffY = this.pathOffset.y;\n      }\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        points.push(\n          toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',',\n          toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' '\n        );\n      }\n      markup.push(\n        '<', this.type, ' ', this.getSvgId(),\n          'points=\"', points.join(''),\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          ' ', this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    commonRender: function(ctx, noTransform) {\n      var point, len = this.points.length,\n          x = noTransform ? 0 : this.pathOffset.x,\n          y = noTransform ? 0 : this.pathOffset.y;\n\n      if (!len || isNaN(this.points[len - 1].y)) {\n        // do not draw if no points or odd points\n        // NaN comes from parseFloat of a empty string in parser\n        return false;\n      }\n      ctx.beginPath();\n      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n      for (var i = 0; i < len; i++) {\n        point = this.points[i];\n        ctx.lineTo(point.x - x, point.y - y);\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n      if (!this.commonRender(ctx, noTransform)) {\n        return;\n      }\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p1, p2;\n\n      ctx.beginPath();\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        p1 = this.points[i];\n        p2 = this.points[i + 1] || p1;\n        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.get('points').length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n   * @static\n   * @memberOf fabric.Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns fabric.Polyline instance from an SVG element\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Polyline} Instance of fabric.Polyline\n   */\n  fabric.Polyline.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\n\n    return new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polyline instance from an object representation\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Polyline} Instance of fabric.Polyline\n   */\n  fabric.Polyline.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Polyline', object, callback, forceAsync, 'points');\n  };\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Polygon) {\n    fabric.warn('fabric.Polygon is already defined');\n    return;\n  }\n\n  /**\n   * Polygon class\n   * @class fabric.Polygon\n   * @extends fabric.Polyline\n   * @see {@link fabric.Polygon#initialize} for constructor definition\n   */\n  fabric.Polygon = fabric.util.createClass(fabric.Polyline, /** @lends fabric.Polygon.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polygon',\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n      if (!this.commonRender(ctx, noTransform)) {\n        return;\n      }\n      ctx.closePath();\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      this.callSuper('_renderDashedStroke', ctx);\n      ctx.closePath();\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n   * @static\n   * @memberOf fabric.Polygon\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n   */\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns {@link fabric.Polygon} instance from an SVG element\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Polygon} Instance of fabric.Polygon\n   */\n  fabric.Polygon.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\n\n    return new fabric.Polygon(points, extend(parsedAttributes, options));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polygon instance from an object representation\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Polygon} Instance of fabric.Polygon\n   */\n  fabric.Polygon.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Polygon', object, callback, forceAsync, 'points');\n  };\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      extend = fabric.util.object.extend,\n      _toString = Object.prototype.toString,\n      drawArc = fabric.util.drawArc,\n      commandLengths = {\n        m: 2,\n        l: 2,\n        h: 1,\n        v: 1,\n        c: 6,\n        s: 4,\n        q: 4,\n        t: 2,\n        a: 7\n      },\n      repeatedCommands = {\n        m: 'l',\n        M: 'L'\n      };\n\n  if (fabric.Path) {\n    fabric.warn('fabric.Path is already defined');\n    return;\n  }\n\n  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n  stateProperties.push('path');\n\n  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n  cacheProperties.push('path', 'fillRule');\n\n  /**\n   * Path class\n   * @class fabric.Path\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.Path#initialize} for constructor definition\n   */\n  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path',\n\n    /**\n     * Array of path points\n     * @type Array\n     * @default\n     */\n    path: null,\n\n    /**\n     * Minimum X from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minX: 0,\n\n    /**\n     * Minimum Y from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minY: 0,\n\n    cacheProperties: cacheProperties,\n\n    stateProperties: stateProperties,\n\n    /**\n     * Constructor\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n     * @param {Object} [options] Options object\n     * @return {fabric.Path} thisArg\n     */\n    initialize: function(path, options) {\n      options = options || { };\n      this.callSuper('initialize', options);\n\n      if (!path) {\n        path = [];\n      }\n\n      var fromArray = _toString.call(path) === '[object Array]';\n\n      this.path = fromArray\n        ? path\n        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\n      if (!this.path) {\n        return;\n      }\n\n      if (!fromArray) {\n        this.path = this._parsePath();\n      }\n\n      this._setPositionDimensions(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} options Options object\n     */\n    _setPositionDimensions: function(options) {\n      var calcDim = this._parseDimensions();\n\n      this.minX = calcDim.left;\n      this.minY = calcDim.top;\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n\n      if (typeof options.left === 'undefined') {\n        this.left = calcDim.left + (this.originX === 'center'\n          ? this.width / 2\n          : this.originX === 'right'\n            ? this.width\n            : 0);\n      }\n\n      if (typeof options.top === 'undefined') {\n        this.top = calcDim.top + (this.originY === 'center'\n          ? this.height / 2\n          : this.originY === 'bottom'\n            ? this.height\n            : 0);\n      }\n\n      this.pathOffset = this.pathOffset || {\n        x: this.minX + this.width / 2,\n        y: this.minY + this.height / 2\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _renderPathCommands: function(ctx) {\n      var current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          l = -this.pathOffset.x,\n          t = -this.pathOffset.y;\n\n      if (this.group && this.group.type === 'path-group') {\n        l = 0;\n        t = 0;\n      }\n\n      ctx.beginPath();\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            ctx.bezierCurveTo(\n              x + current[1] + l, // x1\n              y + current[2] + t, // y1\n              controlX + l, // x2\n              controlY + t, // y2\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            ctx.bezierCurveTo(\n              current[1] + l,\n              current[2] + t,\n              controlX + l,\n              controlY + t,\n              x + l,\n              y + t\n            );\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              x + current[1] + l,\n              y + current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            ctx.quadraticCurveTo(\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x + l,\n              current[7] + y + t\n            ]);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + l,\n              current[7] + t\n            ]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            ctx.closePath();\n            break;\n        }\n        previous = current;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _render: function(ctx) {\n      this._renderPathCommands(ctx);\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Path (' + this.complexity() +\n        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var o = extend(this.callSuper('toObject', ['sourcePath', 'pathOffset'].concat(propertiesToInclude)), {\n        path: this.path.map(function(item) { return item.slice(); }),\n        top: this.top,\n        left: this.left,\n      });\n      return o;\n    },\n\n    /**\n     * Returns dataless object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(propertiesToInclude);\n      if (this.sourcePath) {\n        o.path = this.sourcePath;\n      }\n      delete o.sourcePath;\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var chunks = [],\n          markup = this._createBaseSVGMarkup(), addTransform = '';\n\n      for (var i = 0, len = this.path.length; i < len; i++) {\n        chunks.push(this.path[i].join(' '));\n      }\n      var path = chunks.join(' ');\n      if (!(this.group && this.group.type === 'path-group')) {\n        addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\n      }\n      markup.push(\n        '<path ', this.getSvgId(),\n          'd=\"', path,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(), addTransform,\n          this.getSvgTransformMatrix(), '\" stroke-linecap=\"round\" ',\n        '/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns number representation of an instance complexity\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.path.length;\n    },\n\n    /**\n     * @private\n     */\n    _parsePath: function() {\n      var result = [],\n          coords = [],\n          currentPath,\n          parsed,\n          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n          match,\n          coordsStr;\n\n      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n        currentPath = this.path[i];\n\n        coordsStr = currentPath.slice(1).trim();\n        coords.length = 0;\n\n        while ((match = re.exec(coordsStr))) {\n          coords.push(match[0]);\n        }\n\n        coordsParsed = [currentPath.charAt(0)];\n\n        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n          parsed = parseFloat(coords[j]);\n          if (!isNaN(parsed)) {\n            coordsParsed.push(parsed);\n          }\n        }\n\n        var command = coordsParsed[0],\n            commandLength = commandLengths[command.toLowerCase()],\n            repeatedCommand = repeatedCommands[command] || command;\n\n        if (coordsParsed.length - 1 > commandLength) {\n          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n            command = repeatedCommand;\n          }\n        }\n        else {\n          result.push(coordsParsed);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _parseDimensions: function() {\n\n      var aX = [],\n          aY = [],\n          current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          bounds;\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            bounds = [];\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            bounds = [];\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            bounds = [];\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            bounds = [];\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            bounds = [];\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            bounds = [];\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              x + current[1], // x1\n              y + current[2], // y1\n              controlX, // x2\n              controlY, // y2\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            controlX = current[3];\n            controlY = current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              current[1],\n              current[2],\n              controlX,\n              controlY,\n              current[5],\n              current[6]\n            );\n            x = current[5];\n            y = current[6];\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              x + current[1],\n              y + current[2],\n              tempX,\n              tempY\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              current[1],\n              current[2],\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            controlX = current[1];\n            controlY = current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              current[3],\n              current[4]\n            );\n            x = current[3];\n            y = current[4];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x,\n              current[7] + y\n            );\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6],\n              current[7]\n            );\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            break;\n        }\n        previous = current;\n        bounds.forEach(function (point) {\n          aX.push(point.x);\n          aY.push(point.y);\n        });\n        aX.push(x);\n        aY.push(y);\n      }\n\n      var minX = min(aX) || 0,\n          minY = min(aY) || 0,\n          maxX = max(aX) || 0,\n          maxY = max(aY) || 0,\n          deltaX = maxX - minX,\n          deltaY = maxY - minY,\n\n          o = {\n            left: minX,\n            top: minY,\n            width: deltaX,\n            height: deltaY\n          };\n\n      return o;\n    }\n  });\n\n  /**\n   * Creates an instance of fabric.Path from an object\n   * @static\n   * @memberOf fabric.Path\n   * @param {Object} object\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   */\n  fabric.Path.fromObject = function(object, callback, forceAsync) {\n    // remove this pattern rom 2.0, accept just object.\n    var path;\n    if (typeof object.path === 'string') {\n      fabric.loadSVGFromURL(object.path, function (elements) {\n        var pathUrl = object.path;\n        path = elements[0];\n        delete object.path;\n\n        path.setOptions(object);\n        path.setSourcePath(pathUrl);\n\n        callback && callback(path);\n      });\n    }\n    else {\n      return fabric.Object._fromObject('Path', object, callback, forceAsync, 'path');\n    }\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n   * @static\n   * @memberOf fabric.Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\n  /**\n   * Creates an instance of fabric.Path from an SVG <path> element\n   * @static\n   * @memberOf fabric.Path\n   * @param {SVGElement} element to parse\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   * @param {Object} [options] Options object\n   */\n  fabric.Path.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n    callback && callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @memberOf fabric.Path\n   * @type Boolean\n   * @default\n   */\n  fabric.Path.async = true;\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.PathGroup) {\n    fabric.warn('fabric.PathGroup is already defined');\n    return;\n  }\n\n  /**\n   * Path group class\n   * @class fabric.PathGroup\n   * @extends fabric.Path\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.PathGroup#initialize} for constructor definition\n   */\n  fabric.PathGroup = fabric.util.createClass(fabric.Object, /** @lends fabric.PathGroup.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path-group',\n\n    /**\n     * Fill value\n     * @type String\n     * @default\n     */\n    fill: '',\n\n    /**\n     * Pathgroups are container, do not render anything on theyr own, ence no cache properties\n     * @type Boolean\n     * @default\n     */\n    cacheProperties: [],\n\n    /**\n     * Constructor\n     * @param {Array} paths\n     * @param {Object} [options] Options object\n     * @return {fabric.PathGroup} thisArg\n     */\n    initialize: function(paths, options) {\n\n      options = options || { };\n      this.paths = paths || [];\n\n      for (var i = this.paths.length; i--;) {\n        this.paths[i].group = this;\n      }\n\n      if (options.toBeParsed) {\n        this.parseDimensionsFromPaths(options);\n        delete options.toBeParsed;\n      }\n      this.setOptions(options);\n      this.setCoords();\n    },\n\n    /**\n     * Calculate width and height based on paths contained\n     */\n    parseDimensionsFromPaths: function(options) {\n      var points, p, xC = [], yC = [], path, height, width,\n          m;\n      for (var j = this.paths.length; j--;) {\n        path = this.paths[j];\n        height = path.height + path.strokeWidth;\n        width = path.width + path.strokeWidth;\n        points = [\n          { x: path.left, y: path.top },\n          { x: path.left + width, y: path.top },\n          { x: path.left, y: path.top + height },\n          { x: path.left + width, y: path.top + height }\n        ];\n        m = this.paths[j].transformMatrix;\n        for (var i = 0; i < points.length; i++) {\n          p = points[i];\n          if (m) {\n            p = fabric.util.transformPoint(p, m, false);\n          }\n          xC.push(p.x);\n          yC.push(p.y);\n        }\n      }\n      options.width = Math.max.apply(null, xC);\n      options.height = Math.max.apply(null, yC);\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    drawObject: function(ctx) {\n      ctx.save();\n      ctx.translate(-this.width / 2, -this.height / 2);\n      for (var i = 0, l = this.paths.length; i < l; ++i) {\n        this.paths[i].render(ctx, true);\n      }\n      ctx.restore();\n    },\n\n    /**\n     * Decide if the object should cache or not.\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      var parentCache = this.objectCaching && (!this.group || this.needsItsOwnCache() || !this.group.isCaching());\n      this.caching = parentCache;\n      if (parentCache) {\n        for (var i = 0, len = this.paths.length; i < len; i++) {\n          if (this.paths[i].willDrawShadow()) {\n            this.caching = false;\n            return false;\n          }\n        }\n      }\n      return parentCache;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      if (this.shadow) {\n        return true;\n      }\n      for (var i = 0, len = this.paths.length; i < len; i++) {\n        if (this.paths[i].willDrawShadow()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isCaching: function() {\n      return this.caching || this.group && this.group.isCaching();\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function() {\n      if (this.callSuper('isCacheDirty')) {\n        return true;\n      }\n      if (!this.statefullCache) {\n        return false;\n      }\n      for (var i = 0, len = this.paths.length; i < len; i++) {\n        if (this.paths[i].isCacheDirty(true)) {\n          if (this._cacheCanvas) {\n            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Sets certain property to a certain value\n     * @param {String} prop\n     * @param {*} value\n     * @return {fabric.PathGroup} thisArg\n     */\n    _set: function(prop, value) {\n\n      if (prop === 'fill' && value && this.isSameColor()) {\n        var i = this.paths.length;\n        while (i--) {\n          this.paths[i]._set(prop, value);\n        }\n      }\n\n      return this.callSuper('_set', prop, value);\n    },\n\n    /**\n     * Returns object representation of this path group\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var pathsToObject = this.paths.map(function(path) {\n        var originalDefaults = path.includeDefaultValues;\n        path.includeDefaultValues = path.group.includeDefaultValues;\n        var obj = path.toObject(propertiesToInclude);\n        path.includeDefaultValues = originalDefaults;\n        return obj;\n      });\n      var o = extend(this.callSuper('toObject', ['sourcePath'].concat(propertiesToInclude)), {\n        paths: pathsToObject\n      });\n      return o;\n    },\n\n    /**\n     * Returns dataless object representation of this path group\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} dataless object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(propertiesToInclude);\n      if (this.sourcePath) {\n        o.paths = this.sourcePath;\n      }\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var objects = this.getObjects(),\n          p = this.getPointByOrigin('left', 'top'),\n          translatePart = 'translate(' + p.x + ' ' + p.y + ')',\n          markup = this._createBaseSVGMarkup();\n      markup.push(\n        '<g ', this.getSvgId(),\n        'style=\"', this.getSvgStyles(), '\" ',\n        'transform=\"', this.getSvgTransformMatrix(), translatePart, this.getSvgTransform(), '\" ',\n        '>\\n'\n      );\n\n      for (var i = 0, len = objects.length; i < len; i++) {\n        markup.push('\\t', objects[i].toSVG(reviver));\n      }\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns a string representation of this path group\n     * @return {String} string representation of an object\n     */\n    toString: function() {\n      return '#<fabric.PathGroup (' + this.complexity() +\n        '): { top: ' + this.top + ', left: ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns true if all paths in this group are of same color\n     * @return {Boolean} true if all paths are of the same color (`fill`)\n     */\n    isSameColor: function() {\n      var firstPathFill = this.getObjects()[0].get('fill') || '';\n      if (typeof firstPathFill !== 'string') {\n        return false;\n      }\n      firstPathFill = firstPathFill.toLowerCase();\n      return this.getObjects().every(function(path) {\n        var pathFill = path.get('fill') || '';\n        return typeof pathFill === 'string' && (pathFill).toLowerCase() === firstPathFill;\n      });\n    },\n\n    /**\n     * Returns number representation of object's complexity\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return this.paths.reduce(function(total, path) {\n        return total + ((path && path.complexity) ? path.complexity() : 0);\n      }, 0);\n    },\n\n    /**\n     * Returns all paths in this path group\n     * @return {Array} array of path objects included in this path group\n     */\n    getObjects: function() {\n      return this.paths;\n    }\n  });\n\n  /**\n   * Creates fabric.PathGroup instance from an object representation\n   * @static\n   * @memberOf fabric.PathGroup\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.PathGroup instance is created\n   */\n  fabric.PathGroup.fromObject = function(object, callback) {\n    var originalPaths = object.paths;\n    delete object.paths;\n    if (typeof originalPaths === 'string') {\n      fabric.loadSVGFromURL(originalPaths, function (elements) {\n        var pathUrl = originalPaths;\n        var pathGroup = fabric.util.groupSVGElements(elements, object, pathUrl);\n        object.paths = originalPaths;\n        callback(pathGroup);\n      });\n    }\n    else {\n      fabric.util.enlivenObjects(originalPaths, function(enlivenedObjects) {\n        var pathGroup = new fabric.PathGroup(enlivenedObjects, object);\n        object.paths = originalPaths;\n        callback(pathGroup);\n      });\n    }\n  };\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @memberOf fabric.PathGroup\n   * @type Boolean\n   * @default\n   */\n  fabric.PathGroup.async = true;\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max;\n\n  if (fabric.Group) {\n    return;\n  }\n\n  // lock-related properties, for use in fabric.Group#get\n  // to enable locking behavior on group\n  // when one of its objects has lock-related properties set\n  var _lockProperties = {\n    lockMovementX:  true,\n    lockMovementY:  true,\n    lockRotation:   true,\n    lockScalingX:   true,\n    lockScalingY:   true,\n    lockUniScaling: true\n  };\n\n  /**\n   * Group class\n   * @class fabric.Group\n   * @extends fabric.Object\n   * @mixes fabric.Collection\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.Group#initialize} for constructor definition\n   */\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'group',\n\n    /**\n     * Width of stroke\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * Indicates if click events should also check for subtargets\n     * @type Boolean\n     * @default\n     */\n    subTargetCheck: false,\n\n    /**\n     * Groups are container, do not render anything on theyr own, ence no cache properties\n     * @type Boolean\n     * @default\n     */\n    cacheProperties: [],\n\n    /**\n     * Constructor\n     * @param {Object} objects Group objects\n     * @param {Object} [options] Options object\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options, isAlreadyGrouped) {\n      options = options || { };\n\n      this._objects = [];\n      // if objects enclosed in a group have been grouped already,\n      // we cannot change properties of objects.\n      // Thus we need to set options to group without objects,\n      // because delegatedProperties propagate to objects.\n      isAlreadyGrouped && this.callSuper('initialize', options);\n\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n\n      if (isAlreadyGrouped) {\n        // do not change coordinate of objects enclosed in a group,\n        // because objects coordinate system have been group coodinate system already.\n        this._updateObjectsCoords(true);\n      }\n      else {\n        this._calcBounds();\n        this._updateObjectsCoords();\n        this.callSuper('initialize', options);\n      }\n\n      this.setCoords();\n      this.saveCoords();\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsCoords: function(skipCoordsChange) {\n      var center = this.getCenterPoint();\n      for (var i = this._objects.length; i--; ){\n        this._updateObjectCoords(this._objects[i], center, skipCoordsChange);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     * @param {fabric.Point} center, current center of group.\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of object dose not change\n     */\n    _updateObjectCoords: function(object, center, skipCoordsChange) {\n      // do not display corners of objects enclosed in a group\n      object.__origHasControls = object.hasControls;\n      object.hasControls = false;\n\n      if (skipCoordsChange) {\n        return;\n      }\n\n      var objectLeft = object.getLeft(),\n          objectTop = object.getTop(),\n          ignoreZoom = true, skipAbsolute = true;\n\n      object.set({\n        left: objectLeft - center.x,\n        top: objectTop - center.y\n      });\n      object.setCoords(ignoreZoom, skipAbsolute);\n    },\n\n    /**\n     * Returns string represenation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.Group: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Adds an object to a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    addWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      if (object) {\n        this._objects.push(object);\n        object.group = this;\n        object._set('canvas', this.canvas);\n      }\n      // since _restoreObjectsState set objects inactive\n      this.forEachObject(this._setObjectActive, this);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _setObjectActive: function(object) {\n      object.set('active', true);\n      object.group = this;\n    },\n\n    /**\n     * Removes an object from a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    removeWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      // since _restoreObjectsState set objects inactive\n      this.forEachObject(this._setObjectActive, this);\n\n      this.remove(object);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _onObjectAdded: function(object) {\n      this.dirty = true;\n      object.group = this;\n      object._set('canvas', this.canvas);\n    },\n\n    /**\n     * @private\n     */\n    _onObjectRemoved: function(object) {\n      this.dirty = true;\n      delete object.group;\n      object.set('active', false);\n    },\n\n    /**\n     * Properties that are delegated to group objects when reading/writing\n     * @param {Object} delegatedProperties\n     */\n    delegatedProperties: {\n      fill:             true,\n      stroke:           true,\n      strokeWidth:      true,\n      fontFamily:       true,\n      fontWeight:       true,\n      fontSize:         true,\n      fontStyle:        true,\n      lineHeight:       true,\n      textDecoration:   true,\n      textAlign:        true,\n      backgroundColor:  true\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n\n      if (this.delegatedProperties[key] || key === 'canvas') {\n        while (i--) {\n          this._objects[i].set(key, value);\n        }\n      }\n      else {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n\n      this.callSuper('_set', key, value);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var objsToObject = this.getObjects().map(function(obj) {\n        var originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = obj.group.includeDefaultValues;\n        var _obj = obj.toObject(propertiesToInclude);\n        obj.includeDefaultValues = originalDefaults;\n        return _obj;\n      });\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        objects: objsToObject\n      });\n    },\n\n    /**\n     * Returns object representation of an instance, in dataless mode.\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var objsToObject = this.getObjects().map(function(obj) {\n        var originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = obj.group.includeDefaultValues;\n        var _obj = obj.toDatalessObject(propertiesToInclude);\n        obj.includeDefaultValues = originalDefaults;\n        return _obj;\n      });\n      return extend(this.callSuper('toDatalessObject', propertiesToInclude), {\n        objects: objsToObject\n      });\n    },\n\n    /**\n     * Renders instance on a given context\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\n     */\n    render: function(ctx) {\n      this._transformDone = true;\n      this.callSuper('render', ctx);\n      this._transformDone = false;\n    },\n\n    /**\n     * Decide if the object should cache or not.\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      var parentCache = this.objectCaching && (!this.group || this.needsItsOwnCache() || !this.group.isCaching());\n      this.caching = parentCache;\n      if (parentCache) {\n        for (var i = 0, len = this._objects.length; i < len; i++) {\n          if (this._objects[i].willDrawShadow()) {\n            this.caching = false;\n            return false;\n          }\n        }\n      }\n      return parentCache;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      if (this.callSuper('willDrawShadow')) {\n        return true;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isCaching: function() {\n      return this.caching || this.group && this.group.isCaching();\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    drawObject: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._renderObject(this._objects[i], ctx);\n      }\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function() {\n      if (this.callSuper('isCacheDirty')) {\n        return true;\n      }\n      if (!this.statefullCache) {\n        return false;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].isCacheDirty(true)) {\n          if (this._cacheCanvas) {\n            // if this group has not a cache canvas there is nothing to clean\n            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _renderControls: function(ctx, noTransform) {\n      ctx.save();\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      this.callSuper('_renderControls', ctx, noTransform);\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i]._renderControls(ctx);\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     */\n    _renderObject: function(object, ctx) {\n      // do not render if object is not visible\n      if (!object.visible) {\n        return;\n      }\n\n      var originalHasRotatingPoint = object.hasRotatingPoint;\n      object.hasRotatingPoint = false;\n      object.render(ctx);\n      object.hasRotatingPoint = originalHasRotatingPoint;\n    },\n\n    /**\n     * Retores original state of each of group objects (original state is that which was before group was created).\n     * @private\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    _restoreObjectsState: function() {\n      this._objects.forEach(this._restoreObjectState, this);\n      return this;\n    },\n\n    /**\n     * Realises the transform from this group onto the supplied object\n     * i.e. it tells you what would happen if the supplied object was in\n     * the group, and then the group was destroyed. It mutates the supplied\n     * object.\n     * @param {fabric.Object} object\n     * @return {fabric.Object} transformedObject\n     */\n    realizeTransform: function(object) {\n      var matrix = object.calcTransformMatrix(),\n          options = fabric.util.qrDecompose(matrix),\n          center = new fabric.Point(options.translateX, options.translateY);\n      object.flipX = false;\n      object.flipY = false;\n      object.set('scaleX', options.scaleX);\n      object.set('scaleY', options.scaleY);\n      object.skewX = options.skewX;\n      object.skewY = options.skewY;\n      object.angle = options.angle;\n      object.setPositionByOrigin(center, 'center', 'center');\n      return object;\n    },\n\n    /**\n     * Restores original state of a specified object in group\n     * @private\n     * @param {fabric.Object} object\n     * @return {fabric.Group} thisArg\n     */\n    _restoreObjectState: function(object) {\n      this.realizeTransform(object);\n      object.setCoords();\n      object.hasControls = object.__origHasControls;\n      delete object.__origHasControls;\n      object.set('active', false);\n      delete object.group;\n\n      return this;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    destroy: function() {\n      // when group is destroyed objects needs to get a repaint to be eventually\n      // displayed on canvas.\n      this._objects.forEach(function(object) {\n        object.set('dirty', true);\n      });\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * Saves coordinates of this instance (to be used together with `hasMoved`)\n     * @saveCoords\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    saveCoords: function() {\n      this._originalLeft = this.get('left');\n      this._originalTop = this.get('top');\n      return this;\n    },\n\n    /**\n     * Checks whether this group was moved (since `saveCoords` was called last)\n     * @return {Boolean} true if an object was moved (since fabric.Group#saveCoords was called)\n     */\n    hasMoved: function() {\n      return this._originalLeft !== this.get('left') ||\n             this._originalTop !== this.get('top');\n    },\n\n    /**\n     * Sets coordinates of all objects inside group\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    setObjectsCoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      this.forEachObject(function(object) {\n        object.setCoords(ignoreZoom, skipAbsolute);\n      });\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcBounds: function(onlyWidthHeight) {\n      var aX = [],\n          aY = [],\n          o, prop,\n          props = ['tr', 'br', 'bl', 'tl'],\n          i = 0, iLen = this._objects.length,\n          j, jLen = props.length,\n          ignoreZoom = true;\n\n      for ( ; i < iLen; ++i) {\n        o = this._objects[i];\n        o.setCoords(ignoreZoom);\n        for (j = 0; j < jLen; j++) {\n          prop = props[j];\n          aX.push(o.oCoords[prop].x);\n          aY.push(o.oCoords[prop].y);\n        }\n      }\n\n      this.set(this._getBounds(aX, aY, onlyWidthHeight));\n    },\n\n    /**\n     * @private\n     */\n    _getBounds: function(aX, aY, onlyWidthHeight) {\n      var minXY = new fabric.Point(min(aX), min(aY)),\n          maxXY = new fabric.Point(max(aX), max(aY)),\n          obj = {\n            width: (maxXY.x - minXY.x) || 0,\n            height: (maxXY.y - minXY.y) || 0\n          };\n\n      if (!onlyWidthHeight) {\n        obj.left = minXY.x || 0;\n        obj.top = minXY.y || 0;\n        if (this.originX === 'center') {\n          obj.left += obj.width / 2;\n        }\n        if (this.originX === 'right') {\n          obj.left += obj.width;\n        }\n        if (this.originY === 'center') {\n          obj.top += obj.height / 2;\n        }\n        if (this.originY === 'bottom') {\n          obj.top += obj.height;\n        }\n      }\n      return obj;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup();\n      markup.push(\n        '<g ', this.getSvgId(), 'transform=\"',\n        /* avoiding styles intentionally */\n        this.getSvgTransform(),\n        this.getSvgTransformMatrix(),\n        '\" style=\"',\n        this.getSvgFilter(),\n        '\">\\n'\n      );\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        markup.push('\\t', this._objects[i].toSVG(reviver));\n      }\n\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns requested property\n     * @param {String} prop Property to get\n     * @return {*}\n     */\n    get: function(prop) {\n      if (prop in _lockProperties) {\n        if (this[prop]) {\n          return this[prop];\n        }\n        else {\n          for (var i = 0, len = this._objects.length; i < len; i++) {\n            if (this._objects[i][prop]) {\n              return true;\n            }\n          }\n          return false;\n        }\n      }\n      else {\n        if (prop in this.delegatedProperties) {\n          return this._objects[0] && this._objects[0].get(prop);\n        }\n        return this[prop];\n      }\n    }\n  });\n\n  /**\n   * Returns {@link fabric.Group} instance from an object representation\n   * @static\n   * @memberOf fabric.Group\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an group instance is created\n   */\n  fabric.Group.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      var options = fabric.util.object.clone(object, true);\n      delete options.objects;\n      callback && callback(new fabric.Group(enlivenedObjects, options, true));\n    });\n  };\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @memberOf fabric.Group\n   * @type Boolean\n   * @default\n   */\n  fabric.Group.async = true;\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var extend = fabric.util.object.extend;\n\n  if (!global.fabric) {\n    global.fabric = { };\n  }\n\n  if (global.fabric.Image) {\n    fabric.warn('fabric.Image is already defined.');\n    return;\n  }\n\n  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n  stateProperties.push(\n    'alignX',\n    'alignY',\n    'meetOrSlice'\n  );\n\n  /**\n   * Image class\n   * @class fabric.Image\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n   * @see {@link fabric.Image#initialize} for constructor definition\n   */\n  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'image',\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * AlignX value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n     * This parameter defines how the picture is aligned to its viewport when image element width differs from image width.\n     * @type String\n     * @default\n     */\n    alignX: 'none',\n\n    /**\n     * AlignY value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n     * This parameter defines how the picture is aligned to its viewport when image element height differs from image height.\n     * @type String\n     * @default\n     */\n    alignY: 'none',\n\n    /**\n     * meetOrSlice value, part of preserveAspectRatio  (one of \"meet\", \"slice\").\n     * if meet the image is always fully visibile, if slice the viewport is always filled with image.\n     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n     * @type String\n     * @default\n     */\n    meetOrSlice: 'meet',\n\n    /**\n     * Width of a stroke.\n     * For image quality a stroke multiple of 2 gives better results.\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * private\n     * contains last value of scaleX to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleX: 1,\n\n    /**\n     * private\n     * contains last value of scaleY to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleY: 1,\n\n    /**\n     * minimum scale factor under which any resizeFilter is triggered to resize the image\n     * 0 will disable the automatic resize. 1 will trigger automatically always.\n     * number bigger than 1 can be used in case we want to scale with some filter above\n     * the natural image dimensions\n     * @type Number\n     */\n    minimumScaleTrigger: 0.5,\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: stateProperties,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * default to false for images\n     * since 1.7.0\n     * @type Boolean\n     * @default\n     */\n    objectCaching: false,\n\n    /**\n     * Constructor\n     * @param {HTMLImageElement | String} element Image element\n     * @param {Object} [options] Options object\n     * @param {function} [callback] callback function to call after eventual filters applied.\n     * @return {fabric.Image} thisArg\n     */\n    initialize: function(element, options, callback) {\n      options || (options = { });\n      this.filters = [];\n      this.resizeFilters = [];\n      this.callSuper('initialize', options);\n      this._initElement(element, options, callback);\n    },\n\n    /**\n     * Returns image element which this instance if based on\n     * @return {HTMLImageElement} Image element\n     */\n    getElement: function() {\n      return this._element;\n    },\n\n    /**\n     * Sets image element for this instance to a specified one.\n     * If filters defined they are applied to new image.\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n     * @param {HTMLImageElement} element\n     * @param {Function} [callback] Callback is invoked when all filters have been applied and new image is generated\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setElement: function(element, callback, options) {\n\n      var _callback, _this;\n\n      this._element = element;\n      this._originalElement = element;\n      this._initConfig(options);\n\n      if (this.resizeFilters.length === 0) {\n        _callback = callback;\n      }\n      else {\n        _this = this;\n        _callback = function() {\n          _this.applyFilters(callback, _this.resizeFilters, _this._filteredEl || _this._originalElement, true);\n        };\n      }\n\n      if (this.filters.length !== 0) {\n        this.applyFilters(_callback);\n      }\n      else if (_callback) {\n        _callback(this);\n      }\n\n      return this;\n    },\n\n    /**\n     * Sets crossOrigin value (on an instance and corresponding image element)\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setCrossOrigin: function(value) {\n      this.crossOrigin = value;\n      this._element.crossOrigin = value;\n\n      return this;\n    },\n\n    /**\n     * Returns original size of an image\n     * @return {Object} Object with \"width\" and \"height\" properties\n     */\n    getOriginalSize: function() {\n      var element = this.getElement();\n      return {\n        width: element.width,\n        height: element.height\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _stroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n      var w = this.width / 2, h = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-w, -h);\n      ctx.lineTo(w, -h);\n      ctx.lineTo(w, h);\n      ctx.lineTo(-w, h);\n      ctx.lineTo(-w, -h);\n      ctx.closePath();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.save();\n      this._setStrokeStyles(ctx);\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var filters = [], resizeFilters = [],\n          scaleX = 1, scaleY = 1;\n\n      this.filters.forEach(function(filterObj) {\n        if (filterObj) {\n          if (filterObj.type === 'Resize') {\n            scaleX *= filterObj.scaleX;\n            scaleY *= filterObj.scaleY;\n          }\n          filters.push(filterObj.toObject());\n        }\n      });\n\n      this.resizeFilters.forEach(function(filterObj) {\n        filterObj && resizeFilters.push(filterObj.toObject());\n      });\n      var object = extend(\n        this.callSuper(\n          'toObject',\n          ['crossOrigin', 'alignX', 'alignY', 'meetOrSlice'].concat(propertiesToInclude)\n        ), {\n          src: this.getSrc(),\n          filters: filters,\n          resizeFilters: resizeFilters,\n        });\n\n      object.width /= scaleX;\n      object.height /= scaleY;\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2,\n          preserveAspectRatio = 'none', filtered = true;\n      if (this.group && this.group.type === 'path-group') {\n        x = this.left;\n        y = this.top;\n      }\n      if (this.alignX !== 'none' && this.alignY !== 'none') {\n        preserveAspectRatio = 'x' + this.alignX + 'Y' + this.alignY + ' ' + this.meetOrSlice;\n      }\n      markup.push(\n        '<g transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\">\\n',\n          '<image ', this.getSvgId(), 'xlink:href=\"', this.getSvgSrc(filtered),\n            '\" x=\"', x, '\" y=\"', y,\n            '\" style=\"', this.getSvgStyles(),\n            // we're essentially moving origin of transformation from top/left corner to the center of the shape\n            // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n            // so that object's center aligns with container's left/top\n            '\" width=\"', this.width,\n            '\" height=\"', this.height,\n            '\" preserveAspectRatio=\"', preserveAspectRatio, '\"',\n          '></image>\\n'\n      );\n\n      if (this.stroke || this.strokeDashArray) {\n        var origFill = this.fill;\n        this.fill = null;\n        markup.push(\n          '<rect ',\n            'x=\"', x, '\" y=\"', y,\n            '\" width=\"', this.width, '\" height=\"', this.height,\n            '\" style=\"', this.getSvgStyles(),\n          '\"/>\\n'\n        );\n        this.fill = origFill;\n      }\n\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns source of an image\n     * @param {Boolean} filtered indicates if the src is needed for svg\n     * @return {String} Source of an image\n     */\n    getSrc: function(filtered) {\n      var element = filtered ? this._element : this._originalElement;\n      if (element) {\n        return fabric.isLikelyNode ? element._src : element.src;\n      }\n      else {\n        return this.src || '';\n      }\n    },\n\n    /**\n     * Sets source of an image\n     * @param {String} src Source string (URL)\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setSrc: function(src, callback, options) {\n      fabric.util.loadImage(src, function(img) {\n        return this.setElement(img, callback, options);\n      }, this, options && options.crossOrigin);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n    },\n\n    /**\n     * Applies filters assigned to this image (from \"filters\" array)\n     * @method applyFilters\n     * @param {Function} callback Callback is invoked when all filters have been applied and new image is generated\n     * @param {Array} filters to be applied\n     * @param {fabric.Image} imgElement image to filter ( default to this._element )\n     * @param {Boolean} forResizing\n     * @return {CanvasElement} canvasEl to be drawn immediately\n     * @chainable\n     */\n    applyFilters: function(callback, filters, imgElement, forResizing) {\n\n      filters = filters || this.filters;\n      imgElement = imgElement || this._originalElement;\n\n      if (!imgElement) {\n        return;\n      }\n\n      var replacement = fabric.util.createImage(),\n          retinaScaling = this.canvas ? this.canvas.getRetinaScaling() : fabric.devicePixelRatio,\n          minimumScale = this.minimumScaleTrigger / retinaScaling,\n          _this = this, scaleX, scaleY;\n\n      if (filters.length === 0) {\n        this._element = imgElement;\n        callback && callback(this);\n        return imgElement;\n      }\n\n      var canvasEl = fabric.util.createCanvasElement();\n      canvasEl.width = imgElement.width;\n      canvasEl.height = imgElement.height;\n      canvasEl.getContext('2d').drawImage(imgElement, 0, 0, imgElement.width, imgElement.height);\n\n      filters.forEach(function(filter) {\n        if (!filter) {\n          return;\n        }\n        if (forResizing) {\n          scaleX = _this.scaleX < minimumScale ? _this.scaleX : 1;\n          scaleY = _this.scaleY < minimumScale ? _this.scaleY : 1;\n          if (scaleX * retinaScaling < 1) {\n            scaleX *= retinaScaling;\n          }\n          if (scaleY * retinaScaling < 1) {\n            scaleY *= retinaScaling;\n          }\n        }\n        else {\n          scaleX = filter.scaleX;\n          scaleY = filter.scaleY;\n        }\n        filter.applyTo(canvasEl, scaleX, scaleY);\n        if (!forResizing && filter.type === 'Resize') {\n          _this.width *= filter.scaleX;\n          _this.height *= filter.scaleY;\n        }\n      });\n\n      /** @ignore */\n      replacement.width = canvasEl.width;\n      replacement.height = canvasEl.height;\n      if (fabric.isLikelyNode) {\n        replacement.src = canvasEl.toBuffer(undefined, fabric.Image.pngCompression);\n        // onload doesn't fire in some node versions, so we invoke callback manually\n        _this._element = replacement;\n        !forResizing && (_this._filteredEl = replacement);\n        callback && callback(_this);\n      }\n      else {\n        replacement.onload = function() {\n          _this._element = replacement;\n          !forResizing && (_this._filteredEl = replacement);\n          callback && callback(_this);\n          replacement.onload = canvasEl = null;\n        };\n        replacement.src = canvasEl.toDataURL('image/png');\n      }\n      return canvasEl;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n      var x, y, imageMargins = this._findMargins(), elementToDraw;\n\n      x = (noTransform ? this.left : -this.width / 2);\n      y = (noTransform ? this.top : -this.height / 2);\n\n      if (this.meetOrSlice === 'slice') {\n        ctx.beginPath();\n        ctx.rect(x, y, this.width, this.height);\n        ctx.clip();\n      }\n\n      if (this.isMoving === false && this.resizeFilters.length && this._needsResize()) {\n        this._lastScaleX = this.scaleX;\n        this._lastScaleY = this.scaleY;\n        elementToDraw = this.applyFilters(null, this.resizeFilters, this._filteredEl || this._originalElement, true);\n      }\n      else {\n        elementToDraw = this._element;\n      }\n      elementToDraw && ctx.drawImage(elementToDraw,\n                                     x + imageMargins.marginX,\n                                     y + imageMargins.marginY,\n                                     imageMargins.width,\n                                     imageMargins.height\n                                    );\n\n      this._stroke(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private, needed to check if image needs resize\n     */\n    _needsResize: function() {\n      return (this.scaleX !== this._lastScaleX || this.scaleY !== this._lastScaleY);\n    },\n\n    /**\n     * @private\n     */\n    _findMargins: function() {\n      var width = this.width, height = this.height, scales,\n          scale, marginX = 0, marginY = 0;\n\n      if (this.alignX !== 'none' || this.alignY !== 'none') {\n        scales = [this.width / this._element.width, this.height / this._element.height];\n        scale = this.meetOrSlice === 'meet'\n                ? Math.min.apply(null, scales) : Math.max.apply(null, scales);\n        width = this._element.width * scale;\n        height = this._element.height * scale;\n        if (this.alignX === 'Mid') {\n          marginX = (this.width - width) / 2;\n        }\n        if (this.alignX === 'Max') {\n          marginX = this.width - width;\n        }\n        if (this.alignY === 'Mid') {\n          marginY = (this.height - height) / 2;\n        }\n        if (this.alignY === 'Max') {\n          marginY = this.height - height;\n        }\n      }\n      return {\n        width:  width,\n        height: height,\n        marginX: marginX,\n        marginY: marginY\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resetWidthHeight: function() {\n      var element = this.getElement();\n\n      this.set('width', element.width);\n      this.set('height', element.height);\n    },\n\n    /**\n     * The Image class's initialization method. This method is automatically\n     * called by the constructor.\n     * @private\n     * @param {HTMLImageElement|String} element The element representing the image\n     * @param {Object} [options] Options object\n     */\n    _initElement: function(element, options, callback) {\n      this.setElement(fabric.util.getById(element), callback, options);\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initConfig: function(options) {\n      options || (options = { });\n      this.setOptions(options);\n      this._setWidthHeight(options);\n      if (this._element && this.crossOrigin) {\n        this._element.crossOrigin = this.crossOrigin;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Array} filters to be initialized\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n     */\n    _initFilters: function(filters, callback) {\n      if (filters && filters.length) {\n        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n          callback && callback(enlivenedObjects);\n        }, 'fabric.Image.filters');\n      }\n      else {\n        callback && callback();\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Object with width/height properties\n     */\n    _setWidthHeight: function(options) {\n      this.width = 'width' in options\n        ? options.width\n        : (this.getElement()\n            ? this.getElement().width || 0\n            : 0);\n\n      this.height = 'height' in options\n        ? options.height\n        : (this.getElement()\n            ? this.getElement().height || 0\n            : 0);\n    },\n  });\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  fabric.Image.CSS_CANVAS = 'canvas-img';\n\n  /**\n   * Alias for getSrc\n   * @static\n   */\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\n  /**\n   * Creates an instance of fabric.Image from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} callback Callback to invoke when an image instance is created\n   */\n  fabric.Image.fromObject = function(object, callback) {\n    fabric.util.loadImage(object.src, function(img, error) {\n      if (error) {\n        callback && callback(null, error);\n        return;\n      }\n      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n        object.filters = filters || [];\n        fabric.Image.prototype._initFilters.call(object, object.resizeFilters, function(resizeFilters) {\n          object.resizeFilters = resizeFilters || [];\n          return new fabric.Image(img, object, callback);\n        });\n      });\n    }, null, object.crossOrigin);\n  };\n\n  /**\n   * Creates an instance of fabric.Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n   * @param {Object} [imgOptions] Options object\n   */\n  fabric.Image.fromURL = function(url, callback, imgOptions) {\n    fabric.util.loadImage(url, function(img) {\n      callback && callback(new fabric.Image(img, imgOptions));\n    }, null, imgOptions && imgOptions.crossOrigin);\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  fabric.Image.ATTRIBUTE_NAMES =\n    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href crossOrigin'.split(' '));\n\n  /**\n   * Returns {@link fabric.Image} instance from an SVG element\n   * @static\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback Callback to execute when fabric.Image object is created\n   * @param {Object} [options] Options object\n   * @return {fabric.Image} Instance of fabric.Image\n   */\n  fabric.Image.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES),\n        preserveAR;\n\n    if (parsedAttributes.preserveAspectRatio) {\n      preserveAR = fabric.util.parsePreserveAspectRatioAttribute(parsedAttributes.preserveAspectRatio);\n      extend(parsedAttributes, preserveAR);\n    }\n\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @type Boolean\n   * @default\n   */\n  fabric.Image.async = true;\n\n  /**\n   * Indicates compression level used when generating PNG under Node (in applyFilters). Any of 0-9\n   * @static\n   * @type Number\n   * @default\n   */\n  fabric.Image.pngCompression = 1;\n\n})( true ? exports : this);\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * @private\n   * @return {Number} angle value\n   */\n  _getAngleValueForStraighten: function() {\n    var angle = this.getAngle() % 360;\n    if (angle > 0) {\n      return Math.round((angle - 1) / 90) * 90;\n    }\n    return Math.round(angle / 90) * 90;\n  },\n\n  /**\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  straighten: function() {\n    this.setAngle(this._getAngleValueForStraighten());\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\n   * @param {Object} callbacks Object with callback functions\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  fxStraighten: function(callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: this.get('angle'),\n      endValue: this._getAngleValueForStraighten(),\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        _this.setAngle(value);\n        onChange();\n      },\n      onComplete: function() {\n        _this.setCoords();\n        onComplete();\n      },\n      onStart: function() {\n        _this.set('active', false);\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Straightens object, then rerenders canvas\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  straightenObject: function (object) {\n    object.straighten();\n    this.renderAll();\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxStraightenObject: function (object) {\n    object.fxStraighten({\n      onChange: this.renderAll.bind(this)\n    });\n    return this;\n  }\n});\n\n\n/**\n * @namespace fabric.Image.filters\n * @memberOf fabric.Image\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n */\nfabric.Image.filters = fabric.Image.filters || { };\n\n/**\n * Root filter class from which all filter classes inherit from\n * @class fabric.Image.filters.BaseFilter\n * @memberOf fabric.Image.filters\n */\nfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  type: 'BaseFilter',\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  initialize: function(options) {\n    if (options) {\n      this.setOptions(options);\n    }\n  },\n\n  /**\n   * Sets filter's properties from options\n   * @param {Object} [options] Options object\n   */\n  setOptions: function(options) {\n    for (var prop in options) {\n      this[prop] = options[prop];\n    }\n  },\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject: function() {\n    return { type: this.type };\n  },\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON: function() {\n    // delegate, not alias\n    return this.toObject();\n  }\n});\n\nfabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\n  var filter = new fabric.Image.filters[object.type](object);\n  callback && callback(filter);\n  return filter;\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Brightness filter class\n   * @class fabric.Image.filters.Brightness\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Brightness({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Brightness',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Brightness.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.brightness=0] Value to brighten the image up (-255..255)\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.brightness = options.brightness || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          brightness = this.brightness;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        data[i] += brightness;\n        data[i + 1] += brightness;\n        data[i + 2] += brightness;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        brightness: this.brightness\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n   */\n  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n   * @class fabric.Image.filters.Convolute\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Sharpen filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 0, -1,  0,\n   *            -1,  5, -1,\n   *             0, -1,  0 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Blur filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Emboss filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Emboss filter with opaqueness</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   opaque: true,\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Convolute',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Convolute.prototype\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n     * @param {Array} [options.matrix] Filter matrix\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.opaque = options.opaque;\n      this.matrix = options.matrix || [\n        0, 0, 0,\n        0, 1, 0,\n        0, 0, 0\n      ];\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n\n      var weights = this.matrix,\n          context = canvasEl.getContext('2d'),\n          pixels = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\n          side = Math.round(Math.sqrt(weights.length)),\n          halfSide = Math.floor(side / 2),\n          src = pixels.data,\n          sw = pixels.width,\n          sh = pixels.height,\n          output = context.createImageData(sw, sh),\n          dst = output.data,\n          // go through the destination image pixels\n          alphaFac = this.opaque ? 1 : 0,\n          r, g, b, a, dstOff,\n          scx, scy, srcOff, wt;\n\n      for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n          dstOff = (y * sw + x) * 4;\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          r = 0; g = 0; b = 0; a = 0;\n\n          for (var cy = 0; cy < side; cy++) {\n            for (var cx = 0; cx < side; cx++) {\n              scy = y + cy - halfSide;\n              scx = x + cx - halfSide;\n\n              // eslint-disable-next-line max-depth\n              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n                continue;\n              }\n\n              srcOff = (scy * sw + scx) * 4;\n              wt = weights[cy * side + cx];\n\n              r += src[srcOff] * wt;\n              g += src[srcOff + 1] * wt;\n              b += src[srcOff + 2] * wt;\n              a += src[srcOff + 3] * wt;\n            }\n          }\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n          dst[dstOff + 3] = a + alphaFac * (255 - a);\n        }\n      }\n\n      context.putImageData(output, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        opaque: this.opaque,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n   */\n  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * GradientTransparency filter class\n   * @class fabric.Image.filters.GradientTransparency\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.GradientTransparency#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.GradientTransparency({\n   *   threshold: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n   // eslint-disable-next-line max-len\n  filters.GradientTransparency = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.GradientTransparency.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'GradientTransparency',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.GradientTransparency.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.threshold=100] Threshold value\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.threshold = options.threshold || 100;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          threshold = this.threshold,\n          total = data.length;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        data[i + 3] = threshold + 255 * (total - i) / total;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        threshold: this.threshold\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.GradientTransparency} Instance of fabric.Image.filters.GradientTransparency\n   */\n  fabric.Image.filters.GradientTransparency.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Grayscale image filter class\n   * @class fabric.Image.filters.Grayscale\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Grayscale();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Grayscale',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Grayscale.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          len = imageData.width * imageData.height * 4,\n          index = 0,\n          average;\n\n      while (index < len) {\n        average = (data[index] + data[index + 1] + data[index + 2]) / 3;\n        data[index]     = average;\n        data[index + 1] = average;\n        data[index + 2] = average;\n        index += 4;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n   */\n  fabric.Image.filters.Grayscale.fromObject = function(object, callback) {\n    object = object || { };\n    object.type = 'Grayscale';\n    return fabric.Image.filters.BaseFilter.fromObject(object, callback);\n  };\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Invert filter class\n   * @class fabric.Image.filters.Invert\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Invert();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Invert',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Invert.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i;\n\n      for (i = 0; i < iLen; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n   */\n  fabric.Image.filters.Invert.fromObject = function(object, callback) {\n    object = object || { };\n    object.type = 'Invert';\n    return fabric.Image.filters.BaseFilter.fromObject(object, callback);\n  };\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Mask filter class\n   * See http://resources.aleph-1.com/mask/\n   * @class fabric.Image.filters.Mask\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Mask#initialize} for constructor definition\n   */\n  filters.Mask = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Mask.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Mask',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Mask.prototype\n     * @param {Object} [options] Options object\n     * @param {fabric.Image} [options.mask] Mask image object\n     * @param {Number} [options.channel=0] Rgb channel (0, 1, 2 or 3)\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.mask = options.mask;\n      this.channel = [0, 1, 2, 3].indexOf(options.channel) > -1 ? options.channel : 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      if (!this.mask) {\n        return;\n      }\n\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          maskEl = this.mask.getElement(),\n          maskCanvasEl = fabric.util.createCanvasElement(),\n          channel = this.channel,\n          i,\n          iLen = imageData.width * imageData.height * 4;\n\n      maskCanvasEl.width = canvasEl.width;\n      maskCanvasEl.height = canvasEl.height;\n\n      maskCanvasEl.getContext('2d').drawImage(maskEl, 0, 0, canvasEl.width, canvasEl.height);\n\n      var maskImageData = maskCanvasEl.getContext('2d').getImageData(0, 0, canvasEl.width, canvasEl.height),\n          maskData = maskImageData.data;\n\n      for (i = 0; i < iLen; i += 4) {\n        data[i + 3] = maskData[i + channel];\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        mask: this.mask.toObject(),\n        channel: this.channel\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when a mask filter instance is created\n   */\n  fabric.Image.filters.Mask.fromObject = function(object, callback) {\n    fabric.util.loadImage(object.mask.src, function(img) {\n      object.mask = new fabric.Image(img, object.mask);\n      return fabric.Image.filters.BaseFilter.fromObject(object, callback);\n    });\n  };\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @type Boolean\n   * @default\n   */\n  fabric.Image.filters.Mask.async = true;\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Noise filter class\n   * @class fabric.Image.filters.Noise\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Noise({\n   *   noise: 700\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Noise',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Noise.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.noise=0] Noise value\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.noise = options.noise || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          noise = this.noise, rand;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n\n        rand = (0.5 - Math.random()) * noise;\n\n        data[i] += rand;\n        data[i + 1] += rand;\n        data[i + 2] += rand;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        noise: this.noise\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n   */\n  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Pixelate filter class\n   * @class fabric.Image.filters.Pixelate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Pixelate({\n   *   blocksize: 8\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Pixelate',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Pixelate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.blocksize=4] Blocksize for pixelate\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.blocksize = options.blocksize || 4;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = imageData.height,\n          jLen = imageData.width,\n          index, i, j, r, g, b, a;\n\n      for (i = 0; i < iLen; i += this.blocksize) {\n        for (j = 0; j < jLen; j += this.blocksize) {\n\n          index = (i * 4) * jLen + (j * 4);\n\n          r = data[index];\n          g = data[index + 1];\n          b = data[index + 2];\n          a = data[index + 3];\n\n          /*\n           blocksize: 4\n\n           [1,x,x,x,1]\n           [x,x,x,x,1]\n           [x,x,x,x,1]\n           [x,x,x,x,1]\n           [1,1,1,1,1]\n           */\n\n          for (var _i = i, _ilen = i + this.blocksize; _i < _ilen; _i++) {\n            for (var _j = j, _jlen = j + this.blocksize; _j < _jlen; _j++) {\n              index = (_i * 4) * jLen + (_j * 4);\n              data[index] = r;\n              data[index + 1] = g;\n              data[index + 2] = b;\n              data[index + 3] = a;\n            }\n          }\n        }\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        blocksize: this.blocksize\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n   */\n  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Remove white filter class\n   * @class fabric.Image.filters.RemoveWhite\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.RemoveWhite#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.RemoveWhite({\n   *   threshold: 40,\n   *   distance: 140\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.RemoveWhite = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveWhite.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'RemoveWhite',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.threshold=30] Threshold value\n     * @param {Number} [options.distance=20] Distance value\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.threshold = options.threshold || 30;\n      this.distance = options.distance || 20;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          threshold = this.threshold,\n          distance = this.distance,\n          limit = 255 - threshold,\n          abs = Math.abs,\n          r, g, b;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (r > limit &&\n            g > limit &&\n            b > limit &&\n            abs(r - g) < distance &&\n            abs(r - b) < distance &&\n            abs(g - b) < distance\n        ) {\n          data[i + 3] = 0;\n        }\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        threshold: this.threshold,\n        distance: this.distance\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.RemoveWhite} Instance of fabric.Image.filters.RemoveWhite\n   */\n  fabric.Image.filters.RemoveWhite.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Sepia filter class\n   * @class fabric.Image.filters.Sepia\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Sepia();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Sepia = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Sepia',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Sepia.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i, avg;\n\n      for (i = 0; i < iLen; i += 4) {\n        avg = 0.3  * data[i] + 0.59 * data[i + 1] + 0.11 * data[i + 2];\n        data[i] = avg + 100;\n        data[i + 1] = avg + 50;\n        data[i + 2] = avg + 255;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Sepia} Instance of fabric.Image.filters.Sepia\n   */\n  fabric.Image.filters.Sepia.fromObject = function(object, callback) {\n    object = object || { };\n    object.type = 'Sepia';\n    return new fabric.Image.filters.BaseFilter.fromObject(object, callback);\n  };\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Sepia2 filter class\n   * @class fabric.Image.filters.Sepia2\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Sepia2();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Sepia2 = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Sepia2.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Sepia2',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Sepia.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i, r, g, b;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        data[i] = (r * 0.393 + g * 0.769 + b * 0.189 ) / 1.351;\n        data[i + 1] = (r * 0.349 + g * 0.686 + b * 0.168 ) / 1.203;\n        data[i + 2] = (r * 0.272 + g * 0.534 + b * 0.131 ) / 2.140;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Sepia2} Instance of fabric.Image.filters.Sepia2\n   */\n  fabric.Image.filters.Sepia2.fromObject = function(object, callback) {\n    object = object || { };\n    object.type = 'Sepia2';\n    return new fabric.Image.filters.BaseFilter.fromObject(object, callback);\n  };\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Tint filter class\n   * Adapted from <a href=\"https://github.com/mezzoblue/PaintbrushJS\">https://github.com/mezzoblue/PaintbrushJS</a>\n   * @class fabric.Image.filters.Tint\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Tint#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Tint filter with hex color and opacity</caption>\n   * var filter = new fabric.Image.filters.Tint({\n   *   color: '#3513B0',\n   *   opacity: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Tint filter with rgba color</caption>\n   * var filter = new fabric.Image.filters.Tint({\n   *   color: 'rgba(53, 21, 176, 0.5)'\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Tint = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Tint.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Tint',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Tint.prototype\n     * @param {Object} [options] Options object\n     * @param {String} [options.color=#000000] Color to tint the image with\n     * @param {Number} [options.opacity] Opacity value that controls the tint effect's transparency (0..1)\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.color = options.color || '#000000';\n      this.opacity = typeof options.opacity !== 'undefined'\n                      ? options.opacity\n                      : new fabric.Color(this.color).getAlpha();\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i,\n          tintR, tintG, tintB,\n          r, g, b, alpha1,\n          source;\n\n      source = new fabric.Color(this.color).getSource();\n\n      tintR = source[0] * this.opacity;\n      tintG = source[1] * this.opacity;\n      tintB = source[2] * this.opacity;\n\n      alpha1 = 1 - this.opacity;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        // alpha compositing\n        data[i] = tintR + r * alpha1;\n        data[i + 1] = tintG + g * alpha1;\n        data[i + 2] = tintB + b * alpha1;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color,\n        opacity: this.opacity\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Tint} Instance of fabric.Image.filters.Tint\n   */\n  fabric.Image.filters.Tint.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Multiply filter class\n   * Adapted from <a href=\"http://www.laurenscorijn.com/articles/colormath-basics\">http://www.laurenscorijn.com/articles/colormath-basics</a>\n   * @class fabric.Image.filters.Multiply\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example <caption>Multiply filter with hex color</caption>\n   * var filter = new fabric.Image.filters.Multiply({\n   *   color: '#F0F'\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Multiply filter with rgb color</caption>\n   * var filter = new fabric.Image.filters.Multiply({\n   *   color: 'rgb(53, 21, 176)'\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Multiply = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Multiply.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Multiply',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Multiply.prototype\n     * @param {Object} [options] Options object\n     * @param {String} [options.color=#000000] Color to multiply the image pixels with\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.color = options.color || '#000000';\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i,\n          source;\n\n      source = new fabric.Color(this.color).getSource();\n\n      for (i = 0; i < iLen; i += 4) {\n        data[i] *= source[0] / 255;\n        data[i + 1] *= source[1] / 255;\n        data[i + 2] *= source[2] / 255;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Multiply} Instance of fabric.Image.filters.Multiply\n   */\n  fabric.Image.filters.Multiply.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})( true ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Blend filter class\n   * @class fabric.Image.filter.Blend\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.Blend({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.Blend({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n\n  filters.Blend = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\n    type: 'Blend',\n\n    initialize: function(options) {\n      options = options || {};\n      this.color = options.color || '#000';\n      this.image = options.image || false;\n      this.mode = options.mode || 'multiply';\n      this.alpha = options.alpha || 1;\n    },\n\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          tr, tg, tb,\n          r, g, b,\n          _r, _g, _b,\n          source,\n          isImage = false;\n\n      if (this.image) {\n        // Blend images\n        isImage = true;\n\n        var _el = fabric.util.createCanvasElement();\n        _el.width = this.image.width;\n        _el.height = this.image.height;\n\n        var tmpCanvas = new fabric.StaticCanvas(_el);\n        tmpCanvas.add(this.image);\n        var context2 =  tmpCanvas.getContext('2d');\n        source = context2.getImageData(0, 0, tmpCanvas.width, tmpCanvas.height).data;\n      }\n      else {\n        // Blend color\n        source = new fabric.Color(this.color).getSource();\n\n        tr = source[0] * this.alpha;\n        tg = source[1] * this.alpha;\n        tb = source[2] * this.alpha;\n      }\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (isImage) {\n          tr = source[i] * this.alpha;\n          tg = source[i + 1] * this.alpha;\n          tb = source[i + 2] * this.alpha;\n        }\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            break;\n          case 'screen':\n            data[i] = 1 - (1 - r) * (1 - tr);\n            data[i + 1] = 1 - (1 - g) * (1 - tg);\n            data[i + 2] = 1 - (1 - b) * (1 - tb);\n            break;\n          case 'add':\n            data[i] = Math.min(255, r + tr);\n            data[i + 1] = Math.min(255, g + tg);\n            data[i + 2] = Math.min(255, b + tb);\n            break;\n          case 'diff':\n          case 'difference':\n            data[i] = Math.abs(r - tr);\n            data[i + 1] = Math.abs(g - tg);\n            data[i + 2] = Math.abs(b - tb);\n            break;\n          case 'subtract':\n            _r = r - tr;\n            _g = g - tg;\n            _b = b - tb;\n\n            data[i] = (_r < 0) ? 0 : _r;\n            data[i + 1] = (_g < 0) ? 0 : _g;\n            data[i + 2] = (_b < 0) ? 0 : _b;\n            break;\n          case 'darken':\n            data[i] = Math.min(r, tr);\n            data[i + 1] = Math.min(g, tg);\n            data[i + 2] = Math.min(b, tb);\n            break;\n          case 'lighten':\n            data[i] = Math.max(r, tr);\n            data[i + 1] = Math.max(g, tg);\n            data[i + 2] = Math.max(b, tb);\n            break;\n        }\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        color: this.color,\n        image: this.image,\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Blend} Instance of fabric.Image.filters.Blend\n   */\n  fabric.Image.filters.Blend.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n      sqrt = Math.sqrt, abs = Math.abs, max = Math.max, round = Math.round, sin = Math.sin,\n      ceil = Math.ceil,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Resize image filter class\n   * @class fabric.Image.filters.Resize\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Resize();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Resize',\n\n    /**\n     * Resize type\n     * @param {String} resizeType\n     * @default\n     */\n    resizeType: 'hermite',\n\n    /**\n     * Scale factor for resizing, x axis\n     * @param {Number} scaleX\n     * @default\n     */\n    scaleX: 0,\n\n    /**\n     * Scale factor for resizing, y axis\n     * @param {Number} scaleY\n     * @default\n     */\n    scaleY: 0,\n\n    /**\n     * LanczosLobes parameter for lanczos filter\n     * @param {Number} lanczosLobes\n     * @default\n     */\n    lanczosLobes: 3,\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Resize.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} scaleX\n     * @param {Number} scaleY\n     */\n    applyTo: function(canvasEl, scaleX, scaleY) {\n      if (scaleX === 1 && scaleY === 1) {\n        return;\n      }\n\n      this.rcpScaleX = 1 / scaleX;\n      this.rcpScaleY = 1 / scaleY;\n\n      var oW = canvasEl.width, oH = canvasEl.height,\n          dW = round(oW * scaleX), dH = round(oH * scaleY),\n          imageData;\n\n      if (this.resizeType === 'sliceHack') {\n        imageData = this.sliceByTwo(canvasEl, oW, oH, dW, dH);\n      }\n      if (this.resizeType === 'hermite') {\n        imageData = this.hermiteFastResize(canvasEl, oW, oH, dW, dH);\n      }\n      if (this.resizeType === 'bilinear') {\n        imageData = this.bilinearFiltering(canvasEl, oW, oH, dW, dH);\n      }\n      if (this.resizeType === 'lanczos') {\n        imageData = this.lanczosResize(canvasEl, oW, oH, dW, dH);\n      }\n      canvasEl.width = dW;\n      canvasEl.height = dH;\n      canvasEl.getContext('2d').putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Filter sliceByTwo\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    sliceByTwo: function(canvasEl, oW, oH, dW, dH) {\n      var context = canvasEl.getContext('2d'), imageData,\n          multW = 0.5, multH = 0.5, signW = 1, signH = 1,\n          doneW = false, doneH = false, stepW = oW, stepH = oH,\n          tmpCanvas = fabric.util.createCanvasElement(),\n          tmpCtx = tmpCanvas.getContext('2d');\n      dW = floor(dW);\n      dH = floor(dH);\n      tmpCanvas.width = max(dW, oW);\n      tmpCanvas.height = max(dH, oH);\n\n      if (dW > oW) {\n        multW = 2;\n        signW = -1;\n      }\n      if (dH > oH) {\n        multH = 2;\n        signH = -1;\n      }\n      imageData = context.getImageData(0, 0, oW, oH);\n      canvasEl.width = max(dW, oW);\n      canvasEl.height = max(dH, oH);\n      context.putImageData(imageData, 0, 0);\n\n      while (!doneW || !doneH) {\n        oW = stepW;\n        oH = stepH;\n        if (dW * signW < floor(stepW * multW * signW)) {\n          stepW = floor(stepW * multW);\n        }\n        else {\n          stepW = dW;\n          doneW = true;\n        }\n        if (dH * signH < floor(stepH * multH * signH)) {\n          stepH = floor(stepH * multH);\n        }\n        else {\n          stepH = dH;\n          doneH = true;\n        }\n        imageData = context.getImageData(0, 0, oW, oH);\n        tmpCtx.putImageData(imageData, 0, 0);\n        context.clearRect(0, 0, stepW, stepH);\n        context.drawImage(tmpCanvas, 0, 0, oW, oH, 0, 0, stepW, stepH);\n      }\n      return context.getImageData(0, 0, dW, dH);\n    },\n\n    /**\n     * Filter lanczosResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    lanczosResize: function(canvasEl, oW, oH, dW, dH) {\n\n      function lanczosCreate(lobes) {\n        return function(x) {\n          if (x > lobes) {\n            return 0;\n          }\n          x *= Math.PI;\n          if (abs(x) < 1e-16) {\n            return 1;\n          }\n          var xx = x / lobes;\n          return sin(x) * sin(xx) / x / xx;\n        };\n      }\n\n      function process(u) {\n        var v, i, weight, idx, a, red, green,\n            blue, alpha, fX, fY;\n        center.x = (u + 0.5) * ratioX;\n        icenter.x = floor(center.x);\n        for (v = 0; v < dH; v++) {\n          center.y = (v + 0.5) * ratioY;\n          icenter.y = floor(center.y);\n          a = 0; red = 0; green = 0; blue = 0; alpha = 0;\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n            if (i < 0 || i >= oW) {\n              continue;\n            }\n            fX = floor(1000 * abs(i - center.x));\n            if (!cacheLanc[fX]) {\n              cacheLanc[fX] = { };\n            }\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n              if (j < 0 || j >= oH) {\n                continue;\n              }\n              fY = floor(1000 * abs(j - center.y));\n              if (!cacheLanc[fX][fY]) {\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n              }\n              weight = cacheLanc[fX][fY];\n              if (weight > 0) {\n                idx = (j * oW + i) * 4;\n                a += weight;\n                red += weight * srcData[idx];\n                green += weight * srcData[idx + 1];\n                blue += weight * srcData[idx + 2];\n                alpha += weight * srcData[idx + 3];\n              }\n            }\n          }\n          idx = (v * dW + u) * 4;\n          destData[idx] = red / a;\n          destData[idx + 1] = green / a;\n          destData[idx + 2] = blue / a;\n          destData[idx + 3] = alpha / a;\n        }\n\n        if (++u < dW) {\n          return process(u);\n        }\n        else {\n          return destImg;\n        }\n      }\n\n      var context = canvasEl.getContext('2d'),\n          srcImg = context.getImageData(0, 0, oW, oH),\n          destImg = context.getImageData(0, 0, dW, dH),\n          srcData = srcImg.data, destData = destImg.data,\n          lanczos = lanczosCreate(this.lanczosLobes),\n          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n          cacheLanc = { }, center = { }, icenter = { };\n\n      return process(0);\n    },\n\n    /**\n     * bilinearFiltering\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    bilinearFiltering: function(canvasEl, oW, oH, dW, dH) {\n      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY, context = canvasEl.getContext('2d'),\n          w4 = 4 * (oW - 1), img = context.getImageData(0, 0, oW, oH),\n          pixels = img.data, destImage = context.getImageData(0, 0, dW, dH),\n          destPixels = destImage.data;\n      for (i = 0; i < dH; i++) {\n        for (j = 0; j < dW; j++) {\n          x = floor(ratioX * j);\n          y = floor(ratioY * i);\n          xDiff = ratioX * j - x;\n          yDiff = ratioY * i - y;\n          origPix = 4 * (y * oW + x);\n\n          for (chnl = 0; chnl < 4; chnl++) {\n            a = pixels[origPix + chnl];\n            b = pixels[origPix + 4 + chnl];\n            c = pixels[origPix + w4 + chnl];\n            d = pixels[origPix + w4 + 4 + chnl];\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n            destPixels[offset++] = color;\n          }\n        }\n      }\n      return destImage;\n    },\n\n    /**\n     * hermiteFastResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    hermiteFastResize: function(canvasEl, oW, oH, dW, dH) {\n      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n          ratioWHalf = ceil(ratioW / 2),\n          ratioHHalf = ceil(ratioH / 2),\n          context = canvasEl.getContext('2d'),\n          img = context.getImageData(0, 0, oW, oH), data = img.data,\n          img2 = context.getImageData(0, 0, dW, dH), data2 = img2.data;\n      for (var j = 0; j < dH; j++) {\n        for (var i = 0; i < dW; i++) {\n          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n                  w = sqrt(w0 + dx * dx);\n              /* eslint-disable max-depth */\n              if (w > 1 && w < -1) {\n                continue;\n              }\n              //hermite filter\n              weight = 2 * w * w * w - 3 * w * w + 1;\n              if (weight > 0) {\n                dx = 4 * (xx + yy * oW);\n                //alpha\n                gxA += weight * data[dx + 3];\n                weightsAlpha += weight;\n                //colors\n                if (data[dx + 3] < 255) {\n                  weight = weight * data[dx + 3] / 250;\n                }\n                gxR += weight * data[dx];\n                gxG += weight * data[dx + 1];\n                gxB += weight * data[dx + 2];\n                weights += weight;\n              }\n              /* eslint-enable max-depth */\n            }\n          }\n          data2[x2] = gxR / weights;\n          data2[x2 + 1] = gxG / weights;\n          data2[x2 + 2] = gxB / weights;\n          data2[x2 + 3] = gxA / weightsAlpha;\n        }\n      }\n      return img2;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        resizeType: this.resizeType,\n        lanczosLobes: this.lanczosLobes\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n   */\n  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Matrix filter class\n   * @class fabric.Image.filters.ColorMatrix\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n   * @example <caption>Kodachrome filter</caption>\n   * var filter = new fabric.Image.filters.ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'ColorMatrix',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.ColorMatrix.prototype\n     * @param {Object} [options] Options object\n     * @param {Array} [options.matrix] Color Matrix to modify the image data with\n     */\n    initialize: function( options ) {\n      options || ( options = {} );\n      this.matrix = options.matrix || [\n        1, 0, 0, 0, 0,\n        0, 1, 0, 0, 0,\n        0, 0, 1, 0, 0,\n        0, 0, 0, 1, 0\n      ];\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function( canvasEl ) {\n      var context = canvasEl.getContext( '2d' ),\n          imageData = context.getImageData( 0, 0, canvasEl.width, canvasEl.height ),\n          data = imageData.data,\n          iLen = data.length,\n          i,\n          r,\n          g,\n          b,\n          a,\n          m = this.matrix;\n\n      for ( i = 0; i < iLen; i += 4 ) {\n        r = data[ i ];\n        g = data[ i + 1 ];\n        b = data[ i + 2 ];\n        a = data[ i + 3 ];\n\n        data[ i ] = r * m[ 0 ] + g * m[ 1 ] + b * m[ 2 ] + a * m[ 3 ] + m[ 4 ];\n        data[ i + 1 ] = r * m[ 5 ] + g * m[ 6 ] + b * m[ 7 ] + a * m[ 8 ] + m[ 9 ];\n        data[ i + 2 ] = r * m[ 10 ] + g * m[ 11 ] + b * m[ 12 ] + a * m[ 13 ] + m[ 14 ];\n        data[ i + 3 ] = r * m[ 15 ] + g * m[ 16 ] + b * m[ 17 ] + a * m[ 18 ] + m[ 19 ];\n      }\n\n      context.putImageData( imageData, 0, 0 );\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        type: this.type,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] function to invoke after filter creation\n   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n   */\n  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Contrast filter class\n   * @class fabric.Image.filters.Contrast\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Contrast({\n   *   contrast: 40\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Contrast',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Contrast.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.contrast=0] Value to contrast the image up (-255...255)\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.contrast = options.contrast || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          contrastF = 259 * (this.contrast + 255) / (255 * (259 - this.contrast));\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        data[i] = contrastF * (data[i] - 128) + 128;\n        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        contrast: this.contrast\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n   */\n  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Saturate filter class\n   * @class fabric.Image.filters.Saturate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Saturate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Saturate({\n   *   saturate: 100\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Saturate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Saturate',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Saturate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.saturate=0] Value to saturate the image (-100...100)\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.saturate = options.saturate || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          max, adjust = -this.saturate * 0.01;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\n        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        saturate: this.saturate\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Saturate} Instance of fabric.Image.filters.Saturate\n   */\n  fabric.Image.filters.Saturate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed,\n      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n      MIN_TEXT_WIDTH = 2;\n\n  if (fabric.Text) {\n    fabric.warn('fabric.Text is already defined');\n    return;\n  }\n\n  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n  stateProperties.push(\n    'fontFamily',\n    'fontWeight',\n    'fontSize',\n    'text',\n    'textDecoration',\n    'textAlign',\n    'fontStyle',\n    'lineHeight',\n    'textBackgroundColor',\n    'charSpacing'\n  );\n\n  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n  cacheProperties.push(\n    'fontFamily',\n    'fontWeight',\n    'fontSize',\n    'text',\n    'textDecoration',\n    'textAlign',\n    'fontStyle',\n    'lineHeight',\n    'textBackgroundColor',\n    'charSpacing',\n    'styles'\n  );\n  /**\n   * Text class\n   * @class fabric.Text\n   * @extends fabric.Object\n   * @return {fabric.Text} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n   * @see {@link fabric.Text#initialize} for constructor definition\n   */\n  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: [\n      'fontSize',\n      'fontWeight',\n      'fontFamily',\n      'fontStyle',\n      'lineHeight',\n      'text',\n      'charSpacing',\n      'textAlign'\n    ],\n\n    /**\n     * @private\n     */\n    _reNewline: /\\r?\\n/,\n\n    /**\n     * Use this regular expression to filter for whitespace that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpacesAndTabs: /[ \\t\\r]+/g,\n\n    /**\n     * Retrieves object's fontSize\n     * @method getFontSize\n     * @memberOf fabric.Text.prototype\n     * @return {String} Font size (in pixels)\n     */\n\n    /**\n     * Sets object's fontSize\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontSize\n     * @memberOf fabric.Text.prototype\n     * @param {Number} fontSize Font size (in pixels)\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's fontWeight\n     * @method getFontWeight\n     * @memberOf fabric.Text.prototype\n     * @return {(String|Number)} Font weight\n     */\n\n    /**\n     * Sets object's fontWeight\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontWeight\n     * @memberOf fabric.Text.prototype\n     * @param {(Number|String)} fontWeight Font weight\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's fontFamily\n     * @method getFontFamily\n     * @memberOf fabric.Text.prototype\n     * @return {String} Font family\n     */\n\n    /**\n     * Sets object's fontFamily\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontFamily\n     * @memberOf fabric.Text.prototype\n     * @param {String} fontFamily Font family\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's text\n     * @method getText\n     * @memberOf fabric.Text.prototype\n     * @return {String} text\n     */\n\n    /**\n     * Sets object's text\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setText\n     * @memberOf fabric.Text.prototype\n     * @param {String} text Text\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's textDecoration\n     * @method getTextDecoration\n     * @memberOf fabric.Text.prototype\n     * @return {String} Text decoration\n     */\n\n    /**\n     * Sets object's textDecoration\n     * @method setTextDecoration\n     * @memberOf fabric.Text.prototype\n     * @param {String} textDecoration Text decoration\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's fontStyle\n     * @method getFontStyle\n     * @memberOf fabric.Text.prototype\n     * @return {String} Font style\n     */\n\n    /**\n     * Sets object's fontStyle\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontStyle\n     * @memberOf fabric.Text.prototype\n     * @param {String} fontStyle Font style\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's lineHeight\n     * @method getLineHeight\n     * @memberOf fabric.Text.prototype\n     * @return {Number} Line height\n     */\n\n    /**\n     * Sets object's lineHeight\n     * @method setLineHeight\n     * @memberOf fabric.Text.prototype\n     * @param {Number} lineHeight Line height\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's textAlign\n     * @method getTextAlign\n     * @memberOf fabric.Text.prototype\n     * @return {String} Text alignment\n     */\n\n    /**\n     * Sets object's textAlign\n     * @method setTextAlign\n     * @memberOf fabric.Text.prototype\n     * @param {String} textAlign Text alignment\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's textBackgroundColor\n     * @method getTextBackgroundColor\n     * @memberOf fabric.Text.prototype\n     * @return {String} Text background color\n     */\n\n    /**\n     * Sets object's textBackgroundColor\n     * @method setTextBackgroundColor\n     * @memberOf fabric.Text.prototype\n     * @param {String} textBackgroundColor Text background color\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type:                 'text',\n\n    /**\n     * Font size (in pixels)\n     * @type Number\n     * @default\n     */\n    fontSize:             40,\n\n    /**\n     * Font weight (e.g. bold, normal, 400, 600, 800)\n     * @type {(Number|String)}\n     * @default\n     */\n    fontWeight:           'normal',\n\n    /**\n     * Font family\n     * @type String\n     * @default\n     */\n    fontFamily:           'Times New Roman',\n\n    /**\n     * Text decoration Possible values: \"\", \"underline\", \"overline\" or \"line-through\".\n     * @type String\n     * @default\n     */\n    textDecoration:       '',\n\n    /**\n     * Text alignment. Possible values: \"left\", \"center\", \"right\" or \"justify\".\n     * @type String\n     * @default\n     */\n    textAlign:            'left',\n\n    /**\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n     * @type String\n     * @default\n     */\n    fontStyle:            '',\n\n    /**\n     * Line height\n     * @type Number\n     * @default\n     */\n    lineHeight:           1.16,\n\n    /**\n     * Background color of text lines\n     * @type String\n     * @default\n     */\n    textBackgroundColor:  '',\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties:      stateProperties,\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties:      cacheProperties,\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color.\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n     * @type String\n     * @default\n     */\n    stroke:               null,\n\n    /**\n     * Shadow object representing shadow of this shape.\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:               null,\n\n    /**\n     * @private\n     */\n    _fontSizeFraction: 0.25,\n\n    /**\n     * Text Line proportion to font Size (in pixels)\n     * @type Number\n     * @default\n     */\n    _fontSizeMult:             1.13,\n\n    /**\n     * additional space between characters\n     * expressed in thousands of em unit\n     * @type Number\n     * @default\n     */\n    charSpacing:             0,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    initialize: function(text, options) {\n      options = options || { };\n      this.text = text;\n      this.__skipDimension = true;\n      this.callSuper('initialize', options);\n      this.__skipDimension = false;\n      this._initDimensions();\n      this.setCoords();\n      this.setupState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @param {CanvasRenderingContext2D} [ctx] Context to render on\n     * @private\n     */\n    _initDimensions: function(ctx) {\n      if (this.__skipDimension) {\n        return;\n      }\n      if (!ctx) {\n        ctx = fabric.util.createCanvasElement().getContext('2d');\n        this._setTextStyles(ctx);\n      }\n      this._textLines = this._splitTextIntoLines();\n      this._clearCache();\n      this.width = this._getTextWidth(ctx) || this.cursorWidth || MIN_TEXT_WIDTH;\n      this.height = this._getTextHeight(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of text object\n     */\n    toString: function() {\n      return '#<fabric.Text (' + this.complexity() +\n        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var dim = this.callSuper('_getCacheCanvasDimensions');\n      var fontSize = this.fontSize;\n      dim.width += fontSize * dim.zoomX;\n      dim.height += fontSize * dim.zoomY;\n      return dim;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this._setTextStyles(ctx);\n      if (this.group && this.group.type === 'path-group') {\n        ctx.translate(this.left, this.top);\n      }\n      this._renderTextLinesBackground(ctx);\n      this._renderText(ctx);\n      this._renderTextDecoration(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderText: function(ctx) {\n      this._renderTextFill(ctx);\n      this._renderTextStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setTextStyles: function(ctx) {\n      ctx.textBaseline = 'alphabetic';\n      ctx.font = this._getFontDeclaration();\n    },\n\n    /**\n     * @private\n     * @return {Number} Height of fabric.Text object\n     */\n    _getTextHeight: function() {\n      return this._getHeightOfSingleLine() + (this._textLines.length - 1) * this._getHeightOfLine();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Maximum width of fabric.Text object\n     */\n    _getTextWidth: function(ctx) {\n      var maxWidth = this._getLineWidth(ctx, 0);\n\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        var currentLineWidth = this._getLineWidth(ctx, i);\n        if (currentLineWidth > maxWidth) {\n          maxWidth = currentLineWidth;\n        }\n      }\n      return maxWidth;\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} chars Chars to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     */\n    _renderChars: function(method, ctx, chars, left, top) {\n      // remove Text word from method var\n      var shortM = method.slice(0, -4), _char, width;\n      if (this[shortM].toLive) {\n        var offsetX = -this.width / 2 + this[shortM].offsetX || 0,\n            offsetY = -this.height / 2 + this[shortM].offsetY || 0;\n        ctx.save();\n        ctx.translate(offsetX, offsetY);\n        left -= offsetX;\n        top -= offsetY;\n      }\n      if (this.charSpacing !== 0) {\n        var additionalSpace = this._getWidthOfCharSpacing();\n        chars = chars.split('');\n        for (var i = 0, len = chars.length; i < len; i++) {\n          _char = chars[i];\n          width = ctx.measureText(_char).width + additionalSpace;\n          ctx[method](_char, left, top);\n          left += width > 0 ? width : 0;\n        }\n      }\n      else {\n        ctx[method](chars, left, top);\n      }\n      this[shortM].toLive && ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Text to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     * @param {Number} lineIndex Index of a line in a text\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      // lift the line by quarter of fontSize\n      top -= this.fontSize * this._fontSizeFraction;\n\n      // short-circuit\n      var lineWidth = this._getLineWidth(ctx, lineIndex);\n      if (this.textAlign !== 'justify' || this.width < lineWidth) {\n        this._renderChars(method, ctx, line, left, top, lineIndex);\n        return;\n      }\n\n      // stretch the line\n      var words = line.split(/\\s+/),\n          charOffset = 0,\n          wordsWidth = this._getWidthOfWords(ctx, words.join(' '), lineIndex, 0),\n          widthDiff = this.width - wordsWidth,\n          numSpaces = words.length - 1,\n          spaceWidth = numSpaces > 0 ? widthDiff / numSpaces : 0,\n          leftOffset = 0, word;\n\n      for (var i = 0, len = words.length; i < len; i++) {\n        while (line[charOffset] === ' ' && charOffset < line.length) {\n          charOffset++;\n        }\n        word = words[i];\n        this._renderChars(method, ctx, word, left + leftOffset, top, lineIndex, charOffset);\n        leftOffset += this._getWidthOfWords(ctx, word, lineIndex, charOffset) + spaceWidth;\n        charOffset += word.length;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} word\n     */\n    _getWidthOfWords: function (ctx, word) {\n      var width = ctx.measureText(word).width, charCount, additionalSpace;\n      if (this.charSpacing !== 0) {\n        charCount = word.split('').length;\n        additionalSpace = charCount * this._getWidthOfCharSpacing();\n        width += additionalSpace;\n      }\n      return width > 0 ? width : 0;\n    },\n\n    /**\n     * @private\n     * @return {Number} Left offset\n     */\n    _getLeftOffset: function() {\n      return -this.width / 2;\n    },\n\n    /**\n     * @private\n     * @return {Number} Top offset\n     */\n    _getTopOffset: function() {\n      return -this.height / 2;\n    },\n\n    /**\n     * Returns true because text has no style\n     */\n    isEmptyStyles: function() {\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     */\n    _renderTextCommon: function(ctx, method) {\n\n      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset();\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this._getHeightOfLine(ctx, i),\n            maxHeight = heightOfLine / this.lineHeight,\n            lineWidth = this._getLineWidth(ctx, i),\n            leftOffset = this._getLineLeftOffset(lineWidth);\n        this._renderTextLine(\n          method,\n          ctx,\n          this._textLines[i],\n          left + leftOffset,\n          top + lineHeights + maxHeight,\n          i\n        );\n        lineHeights += heightOfLine;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextFill: function(ctx) {\n      if (!this.fill && this.isEmptyStyles()) {\n        return;\n      }\n\n      this._renderTextCommon(ctx, 'fillText');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextStroke: function(ctx) {\n      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray);\n      ctx.beginPath();\n      this._renderTextCommon(ctx, 'strokeText');\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @return {Number} height of line\n     */\n    _getHeightOfLine: function() {\n      return this._getHeightOfSingleLine() * this.lineHeight;\n    },\n\n    /**\n     * @private\n     * @return {Number} height of line without lineHeight\n     */\n    _getHeightOfSingleLine: function() {\n      return this.fontSize * this._fontSizeMult;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      if (!this.textBackgroundColor) {\n        return;\n      }\n      var lineTopOffset = 0, heightOfLine,\n          lineWidth, lineLeftOffset, originalFill = ctx.fillStyle;\n\n      ctx.fillStyle = this.textBackgroundColor;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this._getHeightOfLine(ctx, i);\n        lineWidth = this._getLineWidth(ctx, i);\n        if (lineWidth > 0) {\n          lineLeftOffset = this._getLineLeftOffset(lineWidth);\n          ctx.fillRect(\n            this._getLeftOffset() + lineLeftOffset,\n            this._getTopOffset() + lineTopOffset,\n            lineWidth,\n            heightOfLine / this.lineHeight\n          );\n        }\n        lineTopOffset += heightOfLine;\n      }\n      ctx.fillStyle = originalFill;\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {Number} lineWidth Width of text line\n     * @return {Number} Line left offset\n     */\n    _getLineLeftOffset: function(lineWidth) {\n      if (this.textAlign === 'center') {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'right') {\n        return this.width - lineWidth;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.__lineWidths = [];\n      this.__lineHeights = [];\n    },\n\n    /**\n     * @private\n     */\n    _shouldClearDimensionCache: function() {\n      var shouldClear = this._forceClearCache;\n      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\n      if (shouldClear) {\n        this.saveState({ propertySet: '_dimensionAffectingProps' });\n        this.dirty = true;\n      }\n      return shouldClear;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    _getLineWidth: function(ctx, lineIndex) {\n      if (this.__lineWidths[lineIndex]) {\n        return this.__lineWidths[lineIndex] === -1 ? this.width : this.__lineWidths[lineIndex];\n      }\n\n      var width, wordCount, line = this._textLines[lineIndex];\n\n      if (line === '') {\n        width = 0;\n      }\n      else {\n        width = this._measureLine(ctx, lineIndex);\n      }\n      this.__lineWidths[lineIndex] = width;\n\n      if (width && this.textAlign === 'justify') {\n        wordCount = line.split(/\\s+/);\n        if (wordCount.length > 1) {\n          this.__lineWidths[lineIndex] = -1;\n        }\n      }\n      return width;\n    },\n\n    _getWidthOfCharSpacing: function() {\n      if (this.charSpacing !== 0) {\n        return this.fontSize * this.charSpacing / 1000;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    _measureLine: function(ctx, lineIndex) {\n      var line = this._textLines[lineIndex],\n          width = ctx.measureText(line).width,\n          additionalSpace = 0, charCount, finalWidth;\n      if (this.charSpacing !== 0) {\n        charCount = line.split('').length;\n        additionalSpace = (charCount - 1) * this._getWidthOfCharSpacing();\n      }\n      finalWidth = width + additionalSpace;\n      return finalWidth > 0 ? finalWidth : 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx) {\n      if (!this.textDecoration) {\n        return;\n      }\n      var halfOfVerticalBox = this.height / 2,\n          _this = this, offsets = [];\n\n      /** @ignore */\n      function renderLinesAtOffset(offsets) {\n        var i, lineHeight = 0, len, j, oLen, lineWidth,\n            lineLeftOffset, heightOfLine;\n\n        for (i = 0, len = _this._textLines.length; i < len; i++) {\n\n          lineWidth = _this._getLineWidth(ctx, i);\n          lineLeftOffset = _this._getLineLeftOffset(lineWidth);\n          heightOfLine = _this._getHeightOfLine(ctx, i);\n\n          for (j = 0, oLen = offsets.length; j < oLen; j++) {\n            ctx.fillRect(\n              _this._getLeftOffset() + lineLeftOffset,\n              lineHeight + (_this._fontSizeMult - 1 + offsets[j] ) * _this.fontSize - halfOfVerticalBox,\n              lineWidth,\n              _this.fontSize / 15);\n          }\n          lineHeight += heightOfLine;\n        }\n      }\n\n      if (this.textDecoration.indexOf('underline') > -1) {\n        offsets.push(0.85); // 1 - 3/16\n      }\n      if (this.textDecoration.indexOf('line-through') > -1) {\n        offsets.push(0.43);\n      }\n      if (this.textDecoration.indexOf('overline') > -1) {\n        offsets.push(-0.12);\n      }\n      if (offsets.length > 0) {\n        renderLinesAtOffset(offsets);\n      }\n    },\n\n    /**\n     * return font declaration string for canvas context\n     * @returns {String} font declaration formatted for canvas context.\n     */\n    _getFontDeclaration: function() {\n      return [\n        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n        (fabric.isLikelyNode ? this.fontWeight : this.fontStyle),\n        (fabric.isLikelyNode ? this.fontStyle : this.fontWeight),\n        this.fontSize + 'px',\n        (fabric.isLikelyNode ? ('\"' + this.fontFamily + '\"') : this.fontFamily)\n      ].join(' ');\n    },\n\n    /**\n     * Renders text instance on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    render: function(ctx, noTransform) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      if (this._shouldClearDimensionCache()) {\n        this._setTextStyles(ctx);\n        this._initDimensions(ctx);\n      }\n      this.callSuper('render', ctx, noTransform);\n    },\n\n    /**\n     * Returns the text as an array of lines.\n     * @returns {Array} Lines in the text\n     */\n    _splitTextIntoLines: function() {\n      return this.text.split(this._reNewline);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var additionalProperties = [\n        'text',\n        'fontSize',\n        'fontWeight',\n        'fontFamily',\n        'fontStyle',\n        'lineHeight',\n        'textDecoration',\n        'textAlign',\n        'textBackgroundColor',\n        'charSpacing'\n      ].concat(propertiesToInclude);\n      return this.callSuper('toObject', additionalProperties);\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      if (!this.ctx) {\n        this.ctx = fabric.util.createCanvasElement().getContext('2d');\n      }\n      var markup = this._createBaseSVGMarkup(),\n          offsets = this._getSVGLeftTopOffsets(this.ctx),\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n      this._wrapSVGTextAndBg(markup, textAndBg);\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLeftTopOffsets: function(ctx) {\n      var lineTop = this._getHeightOfLine(ctx, 0),\n          textLeft = -this.width / 2,\n          textTop = 0;\n\n      return {\n        textLeft: textLeft + (this.group && this.group.type === 'path-group' ? this.left : 0),\n        textTop: textTop + (this.group && this.group.type === 'path-group' ? -this.top : 0),\n        lineTop: lineTop\n      };\n    },\n\n    /**\n     * @private\n     */\n    _wrapSVGTextAndBg: function(markup, textAndBg) {\n      var noShadow = true, filter = this.getSvgFilter(),\n          style = filter === '' ? '' : ' style=\"' + filter + '\"';\n\n      markup.push(\n        '\\t<g ', this.getSvgId(), 'transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\"',\n          style, '>\\n',\n          textAndBg.textBgRects.join(''),\n          '\\t\\t<text xml:space=\"preserve\" ',\n            (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n            (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\n            (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\n            (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\n            (this.textDecoration ? 'text-decoration=\"' + this.textDecoration + '\" ' : ''),\n            'style=\"', this.getSvgStyles(noShadow), '\" >\\n',\n            textAndBg.textSpans.join(''),\n          '\\t\\t</text>\\n',\n        '\\t</g>\\n'\n      );\n    },\n\n    getSvgStyles: function(skipShadow) {\n      var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\n      return svgStyle + ' white-space: pre;';\n    },\n\n    /**\n     * @private\n     * @param {Number} textTopOffset Text top offset\n     * @param {Number} textLeftOffset Text left offset\n     * @return {Object}\n     */\n    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n      var textSpans = [],\n          textBgRects = [],\n          height = 0;\n      // bounding-box background\n      this._setSVGBg(textBgRects);\n\n      // text and text-background\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this.textBackgroundColor) {\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset, textTopOffset, height);\n        }\n        this._setSVGTextLineText(i, textSpans, height, textLeftOffset, textTopOffset, textBgRects);\n        height += this._getHeightOfLine(this.ctx, i);\n      }\n\n      return {\n        textSpans: textSpans,\n        textBgRects: textBgRects\n      };\n    },\n\n    _setSVGTextLineText: function(i, textSpans, height, textLeftOffset, textTopOffset) {\n      var yPos = this.fontSize * (this._fontSizeMult - this._fontSizeFraction)\n        - textTopOffset + height - this.height / 2;\n      if (this.textAlign === 'justify') {\n        // i call from here to do not intefere with IText\n        this._setSVGTextLineJustifed(i, textSpans, yPos, textLeftOffset);\n        return;\n      }\n      textSpans.push(\n        '\\t\\t\\t<tspan x=\"',\n          toFixed(textLeftOffset + this._getLineLeftOffset(this._getLineWidth(this.ctx, i)), NUM_FRACTION_DIGITS), '\" ',\n          'y=\"',\n          toFixed(yPos, NUM_FRACTION_DIGITS),\n          '\" ',\n          // doing this on <tspan> elements since setting opacity\n          // on containing <text> one doesn't work in Illustrator\n          this._getFillAttributes(this.fill), '>',\n          fabric.util.string.escapeXml(this._textLines[i]),\n        '</tspan>\\n'\n      );\n    },\n\n    _setSVGTextLineJustifed: function(i, textSpans, yPos, textLeftOffset) {\n      var ctx = fabric.util.createCanvasElement().getContext('2d');\n\n      this._setTextStyles(ctx);\n\n      var line = this._textLines[i],\n          words = line.split(/\\s+/),\n          wordsWidth = this._getWidthOfWords(ctx, words.join('')),\n          widthDiff = this.width - wordsWidth,\n          numSpaces = words.length - 1,\n          spaceWidth = numSpaces > 0 ? widthDiff / numSpaces : 0,\n          word, attributes = this._getFillAttributes(this.fill),\n          len;\n\n      textLeftOffset += this._getLineLeftOffset(this._getLineWidth(ctx, i));\n\n      for (i = 0, len = words.length; i < len; i++) {\n        word = words[i];\n        textSpans.push(\n          '\\t\\t\\t<tspan x=\"',\n            toFixed(textLeftOffset, NUM_FRACTION_DIGITS), '\" ',\n            'y=\"',\n            toFixed(yPos, NUM_FRACTION_DIGITS),\n            '\" ',\n            // doing this on <tspan> elements since setting opacity\n            // on containing <text> one doesn't work in Illustrator\n            attributes, '>',\n            fabric.util.string.escapeXml(word),\n          '</tspan>\\n'\n        );\n        textLeftOffset += this._getWidthOfWords(ctx, word) + spaceWidth;\n      }\n    },\n\n    _setSVGTextLineBg: function(textBgRects, i, textLeftOffset, textTopOffset, height) {\n      textBgRects.push(\n        '\\t\\t<rect ',\n          this._getFillAttributes(this.textBackgroundColor),\n          ' x=\"',\n          toFixed(textLeftOffset + this._getLineLeftOffset(this._getLineWidth(this.ctx, i)), NUM_FRACTION_DIGITS),\n          '\" y=\"',\n          toFixed(height - this.height / 2, NUM_FRACTION_DIGITS),\n          '\" width=\"',\n          toFixed(this._getLineWidth(this.ctx, i), NUM_FRACTION_DIGITS),\n          '\" height=\"',\n          toFixed(this._getHeightOfLine(this.ctx, i) / this.lineHeight, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n');\n    },\n\n    _setSVGBg: function(textBgRects) {\n      if (this.backgroundColor) {\n        textBgRects.push(\n          '\\t\\t<rect ',\n            this._getFillAttributes(this.backgroundColor),\n            ' x=\"',\n            toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n            '\" y=\"',\n            toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n            '\" width=\"',\n            toFixed(this.width, NUM_FRACTION_DIGITS),\n            '\" height=\"',\n            toFixed(this.height, NUM_FRACTION_DIGITS),\n          '\"></rect>\\n');\n      }\n    },\n\n    /**\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n     *\n     * @private\n     * @param {*} value\n     * @return {String}\n     */\n    _getFillAttributes: function(value) {\n      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n        return 'fill=\"' + value + '\"';\n      }\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Sets specified property to a specified value\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Text} thisArg\n     * @chainable\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (this._dimensionAffectingProps.indexOf(key) > -1) {\n        this._initDimensions();\n        this.setCoords();\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n   * @static\n   * @memberOf fabric.Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n    'x y dx dy font-family font-style font-weight font-size text-decoration text-anchor'.split(' '));\n\n  /**\n   * Default SVG font size\n   * @static\n   * @memberOf fabric.Text\n   */\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\n  /**\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf fabric.Text\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Text} Instance of fabric.Text\n   */\n  fabric.Text.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES);\n    options = fabric.util.object.extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes);\n\n    options.top = options.top || 0;\n    options.left = options.left || 0;\n    if ('dx' in parsedAttributes) {\n      options.left += parsedAttributes.dx;\n    }\n    if ('dy' in parsedAttributes) {\n      options.top += parsedAttributes.dy;\n    }\n    if (!('fontSize' in options)) {\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n    }\n\n    if (!options.originX) {\n      options.originX = 'left';\n    }\n\n    var textContent = '';\n\n    // The XML is not properly parsed in IE9 so a workaround to get\n    // textContent is through firstChild.data. Another workaround would be\n    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n    if (!('textContent' in element)) {\n      if ('firstChild' in element && element.firstChild !== null) {\n        if ('data' in element.firstChild && element.firstChild.data !== null) {\n          textContent = element.firstChild.data;\n        }\n      }\n    }\n    else {\n      textContent = element.textContent;\n    }\n\n    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n\n    var text = new fabric.Text(textContent, options),\n        textHeightScaleFactor = text.getHeight() / text.height,\n        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n        textHeight = text.getHeight() + scaledDiff,\n        offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        top/left properties in Fabric correspond to center point of text bounding box\n    */\n    if (text.originX === 'left') {\n      offX = text.getWidth() / 2;\n    }\n    if (text.originX === 'right') {\n      offX = -text.getWidth() / 2;\n    }\n    text.set({\n      left: text.getLeft() + offX,\n      top: text.getTop() - textHeight / 2 + text.fontSize * (0.18 + text._fontSizeFraction) / text.lineHeight /* 0.3 is the old lineHeight */\n    });\n\n    return text;\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Text instance from an object representation\n   * @static\n   * @memberOf fabric.Text\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Text} Instance of fabric.Text\n   */\n  fabric.Text.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Text', object, callback, forceAsync, 'text');\n  };\n\n  fabric.util.createAccessors(fabric.Text);\n\n})( true ? exports : this);\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  /**\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n   * prefix when observing canvas.\n   * @class fabric.IText\n   * @extends fabric.Text\n   * @mixes fabric.Observable\n   *\n   * @fires changed\n   * @fires selection:changed\n   * @fires editing:entered\n   * @fires editing:exited\n   *\n   * @return {fabric.IText} thisArg\n   * @see {@link fabric.IText#initialize} for constructor definition\n   *\n   * <p>Supported key combinations:</p>\n   * <pre>\n   *   Move cursor:                    left, right, up, down\n   *   Select character:               shift + left, shift + right\n   *   Select text vertically:         shift + up, shift + down\n   *   Move cursor by word:            alt + left, alt + right\n   *   Select words:                   shift + alt + left, shift + alt + right\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n   *   Jump to start/end of text:      cmd + up, cmd + down\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n   *   Delete character:               backspace\n   *   Delete word:                    alt + backspace\n   *   Delete line:                    cmd + backspace\n   *   Forward delete:                 delete\n   *   Copy text:                      ctrl/cmd + c\n   *   Paste text:                     ctrl/cmd + v\n   *   Cut text:                       ctrl/cmd + x\n   *   Select entire text:             ctrl/cmd + a\n   *   Quit editing                    tab or esc\n   * </pre>\n   *\n   * <p>Supported mouse/touch combination</p>\n   * <pre>\n   *   Position cursor:                click/touch\n   *   Create selection:               click/touch & drag\n   *   Create selection:               click & shift + click\n   *   Select word:                    double click\n   *   Select line:                    triple click\n   * </pre>\n   */\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'i-text',\n\n    /**\n     * Index where text selection starts (or where cursor is when there is no selection)\n     * @type Number\n     * @default\n     */\n    selectionStart: 0,\n\n    /**\n     * Index where text selection ends\n     * @type Number\n     * @default\n     */\n    selectionEnd: 0,\n\n    /**\n     * Color of text selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(17,119,255,0.3)',\n\n    /**\n     * Indicates whether text is in editing mode\n     * @type Boolean\n     * @default\n     */\n    isEditing: false,\n\n    /**\n     * Indicates whether a text can be edited\n     * @type Boolean\n     * @default\n     */\n    editable: true,\n\n    /**\n     * Border color of text object while it's in editing mode\n     * @type String\n     * @default\n     */\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n\n    /**\n     * Width of cursor (in px)\n     * @type Number\n     * @default\n     */\n    cursorWidth: 2,\n\n    /**\n     * Color of default cursor (when not overwritten by character style)\n     * @type String\n     * @default\n     */\n    cursorColor: '#333',\n\n    /**\n     * Delay between cursor blink (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDelay: 1000,\n\n    /**\n     * Duration of cursor fadein (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDuration: 600,\n\n    /**\n     * Object containing character styles\n     * (where top-level properties corresponds to line number and 2nd-level properties -- to char number in a line)\n     * @type Object\n     * @default\n     */\n    styles: null,\n\n    /**\n     * Indicates whether internal text char widths can be cached\n     * @type Boolean\n     * @default\n     */\n    caching: true,\n\n    /**\n     * @private\n     */\n    _reSpace: /\\s|\\n/,\n\n    /**\n     * @private\n     */\n    _currentCursorOpacity: 0,\n\n    /**\n     * @private\n     */\n    _selectionDirection: null,\n\n    /**\n     * @private\n     */\n    _abortCursorAnimation: false,\n\n    /**\n     * @private\n     */\n    __widthOfSpace: [],\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.IText} thisArg\n     */\n    initialize: function(text, options) {\n      this.styles = options ? (options.styles || { }) : { };\n      this.callSuper('initialize', text, options);\n      this.initBehavior();\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.callSuper('_clearCache');\n      this.__widthOfSpace = [];\n    },\n\n    /**\n     * Returns true if object has no styling\n     */\n    isEmptyStyles: function() {\n      if (!this.styles) {\n        return true;\n      }\n      var obj = this.styles;\n\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          // eslint-disable-next-line no-unused-vars\n          for (var p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Sets selection start (left boundary of a selection)\n     * @param {Number} index Index to set selection start to\n     */\n    setSelectionStart: function(index) {\n      index = Math.max(index, 0);\n      this._updateAndFire('selectionStart', index);\n    },\n\n    /**\n     * Sets selection end (right boundary of a selection)\n     * @param {Number} index Index to set selection end to\n     */\n    setSelectionEnd: function(index) {\n      index = Math.min(index, this.text.length);\n      this._updateAndFire('selectionEnd', index);\n    },\n\n    /**\n     * @private\n     * @param {String} property 'selectionStart' or 'selectionEnd'\n     * @param {Number} index new position of property\n     */\n    _updateAndFire: function(property, index) {\n      if (this[property] !== index) {\n        this._fireSelectionChanged();\n        this[property] = index;\n      }\n      this._updateTextarea();\n    },\n\n    /**\n     * Fires the even of selection changed\n     * @private\n     */\n    _fireSelectionChanged: function() {\n      this.fire('selection:changed');\n      this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n    },\n\n    /**\n     * Gets style of a current selection/cursor (at the start position)\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at\n     * @return {Object} styles Style object at a specified (or current) index\n     */\n    getSelectionStyles: function(startIndex, endIndex) {\n\n      if (arguments.length === 2) {\n        var styles = [];\n        for (var i = startIndex; i < endIndex; i++) {\n          styles.push(this.getSelectionStyles(i));\n        }\n        return styles;\n      }\n\n      var loc = this.get2DCursorLocation(startIndex),\n          style = this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n\n      return style || {};\n    },\n\n    /**\n     * Sets style of a current selection\n     * @param {Object} [styles] Styles object\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    setSelectionStyles: function(styles) {\n      if (this.selectionStart === this.selectionEnd) {\n        this._extendStyles(this.selectionStart, styles);\n      }\n      else {\n        for (var i = this.selectionStart; i < this.selectionEnd; i++) {\n          this._extendStyles(i, styles);\n        }\n      }\n      /* not included in _extendStyles to avoid clearing cache more than once */\n      this._forceClearCache = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _extendStyles: function(index, styles) {\n      var loc = this.get2DCursorLocation(index);\n\n      if (!this._getLineStyle(loc.lineIndex)) {\n        this._setLineStyle(loc.lineIndex, {});\n      }\n\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n      }\n\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @param {CanvasRenderingContext2D} [ctx] Context to render on\n     * @private\n     */\n    _initDimensions: function(ctx) {\n      if (!ctx) {\n        this.clearContextTop();\n      }\n      this.callSuper('_initDimensions', ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    render: function(ctx, noTransform) {\n      this.clearContextTop();\n      this.callSuper('render', ctx, noTransform);\n      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n      // the correct position but not at every cursor animation.\n      this.cursorOffsetCache = { };\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this.callSuper('_render', ctx);\n      this.ctx = ctx;\n    },\n\n    /**\n     * Prepare and clean the contextTop\n     */\n    clearContextTop: function() {\n      if (!this.active || !this.isEditing) {\n        return;\n      }\n      if (this.canvas && this.canvas.contextTop) {\n        var ctx = this.canvas.contextTop;\n        ctx.save();\n        ctx.transform.apply(ctx, this.canvas.viewportTransform);\n        this.transform(ctx);\n        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n        this._clearTextArea(ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Renders cursor or selection (depending on what exists)\n     */\n    renderCursorOrSelection: function() {\n      if (!this.active || !this.isEditing) {\n        return;\n      }\n      var chars = this.text.split(''),\n          boundaries, ctx;\n      if (this.canvas && this.canvas.contextTop) {\n        ctx = this.canvas.contextTop;\n        ctx.save();\n        ctx.transform.apply(ctx, this.canvas.viewportTransform);\n        this.transform(ctx);\n        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n        this._clearTextArea(ctx);\n      }\n      else {\n        ctx = this.ctx;\n        ctx.save();\n      }\n      if (this.selectionStart === this.selectionEnd) {\n        boundaries = this._getCursorBoundaries(chars, 'cursor');\n        this.renderCursor(boundaries, ctx);\n      }\n      else {\n        boundaries = this._getCursorBoundaries(chars, 'selection');\n        this.renderSelection(chars, boundaries, ctx);\n      }\n      ctx.restore();\n    },\n\n    _clearTextArea: function(ctx) {\n      // we add 4 pixel, to be sure to do not leave any pixel out\n      var width = this.width + 4, height = this.height + 4;\n      ctx.clearRect(-width / 2, -height / 2, width, height);\n    },\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     */\n    get2DCursorLocation: function(selectionStart) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n      var len = this._textLines.length;\n      for (var i = 0; i < len; i++) {\n        if (selectionStart <= this._textLines[i].length) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart\n          };\n        }\n        selectionStart -= this._textLines[i].length + 1;\n      }\n      return {\n        lineIndex: i - 1,\n        charIndex: this._textLines[i - 1].length < selectionStart ? this._textLines[i - 1].length : selectionStart\n      };\n    },\n\n    /**\n     * Returns complete style of char at the current cursor\n     * @param {Number} lineIndex Line index\n     * @param {Number} charIndex Char index\n     * @return {Object} Character style\n     */\n    getCurrentCharStyle: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\n      return {\n        fontSize: style && style.fontSize || this.fontSize,\n        fill: style && style.fill || this.fill,\n        textBackgroundColor: style && style.textBackgroundColor || this.textBackgroundColor,\n        textDecoration: style && style.textDecoration || this.textDecoration,\n        fontFamily: style && style.fontFamily || this.fontFamily,\n        fontWeight: style && style.fontWeight || this.fontWeight,\n        fontStyle: style && style.fontStyle || this.fontStyle,\n        stroke: style && style.stroke || this.stroke,\n        strokeWidth: style && style.strokeWidth || this.strokeWidth\n      };\n    },\n\n    /**\n     * Returns fontSize of char at the current cursor\n     * @param {Number} lineIndex Line index\n     * @param {Number} charIndex Char index\n     * @return {Number} Character font size\n     */\n    getCurrentCharFontSize: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n      return style && style.fontSize ? style.fontSize : this.fontSize;\n    },\n\n    /**\n     * Returns color (fill) of char at the current cursor\n     * @param {Number} lineIndex Line index\n     * @param {Number} charIndex Char index\n     * @return {String} Character color (fill)\n     */\n    getCurrentCharColor: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n      return style && style.fill ? style.fill : this.cursorColor;\n    },\n\n    /**\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n     * @private\n     * @param {Array} chars Array of characters\n     * @param {String} typeOfBoundaries\n     */\n    _getCursorBoundaries: function(chars, typeOfBoundaries) {\n\n      // left/top are left/top of entire text box\n      // leftOffset/topOffset are offset from that left/top point of a text box\n\n      var left = Math.round(this._getLeftOffset()),\n          top = this._getTopOffset(),\n\n          offsets = this._getCursorBoundariesOffsets(\n                      chars, typeOfBoundaries);\n\n      return {\n        left: left,\n        top: top,\n        leftOffset: offsets.left + offsets.lineLeft,\n        topOffset: offsets.top\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n        return this.cursorOffsetCache;\n      }\n      var lineLeftOffset = 0,\n          lineIndex = 0,\n          charIndex = 0,\n          topOffset = 0,\n          leftOffset = 0,\n          boundaries;\n\n      for (var i = 0; i < this.selectionStart; i++) {\n        if (chars[i] === '\\n') {\n          leftOffset = 0;\n          topOffset += this._getHeightOfLine(this.ctx, lineIndex);\n\n          lineIndex++;\n          charIndex = 0;\n        }\n        else {\n          leftOffset += this._getWidthOfChar(this.ctx, chars[i], lineIndex, charIndex);\n          charIndex++;\n        }\n\n        lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex));\n      }\n      if (typeOfBoundaries === 'cursor') {\n        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, lineIndex) / this.lineHeight\n          - this.getCurrentCharFontSize(lineIndex, charIndex) * (1 - this._fontSizeFraction);\n      }\n      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n        leftOffset -= this._getWidthOfCharSpacing();\n      }\n      boundaries = {\n        top: topOffset,\n        left: leftOffset > 0 ? leftOffset : 0,\n        lineLeft: lineLeftOffset\n      };\n      this.cursorOffsetCache = boundaries;\n      return this.cursorOffsetCache;\n    },\n\n    /**\n     * Renders cursor\n     * @param {Object} boundaries\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderCursor: function(boundaries, ctx) {\n\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n          leftOffset = boundaries.leftOffset,\n          multiplier = this.scaleX * this.canvas.getZoom(),\n          cursorWidth = this.cursorWidth / multiplier;\n\n      ctx.fillStyle = this.getCurrentCharColor(lineIndex, charIndex);\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n\n      ctx.fillRect(\n        boundaries.left + leftOffset - cursorWidth / 2,\n        boundaries.top + boundaries.topOffset,\n        cursorWidth,\n        charHeight);\n    },\n\n    /**\n     * Renders text selection\n     * @param {Array} chars Array of characters\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderSelection: function(chars, boundaries, ctx) {\n\n      ctx.fillStyle = this.selectionColor;\n\n      var start = this.get2DCursorLocation(this.selectionStart),\n          end = this.get2DCursorLocation(this.selectionEnd),\n          startLine = start.lineIndex,\n          endLine = end.lineIndex;\n      for (var i = startLine; i <= endLine; i++) {\n        var lineOffset = this._getLineLeftOffset(this._getLineWidth(ctx, i)) || 0,\n            lineHeight = this._getHeightOfLine(this.ctx, i),\n            realLineHeight = 0, boxWidth = 0, line = this._textLines[i];\n\n        if (i === startLine) {\n          for (var j = 0, len = line.length; j < len; j++) {\n            if (j >= start.charIndex && (i !== endLine || j < end.charIndex)) {\n              boxWidth += this._getWidthOfChar(ctx, line[j], i, j);\n            }\n            if (j < start.charIndex) {\n              lineOffset += this._getWidthOfChar(ctx, line[j], i, j);\n            }\n          }\n          if (j === line.length) {\n            boxWidth -= this._getWidthOfCharSpacing();\n          }\n        }\n        else if (i > startLine && i < endLine) {\n          boxWidth += this._getLineWidth(ctx, i) || 5;\n        }\n        else if (i === endLine) {\n          for (var j2 = 0, j2len = end.charIndex; j2 < j2len; j2++) {\n            boxWidth += this._getWidthOfChar(ctx, line[j2], i, j2);\n          }\n          if (end.charIndex === line.length) {\n            boxWidth -= this._getWidthOfCharSpacing();\n          }\n        }\n        realLineHeight = lineHeight;\n        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n          lineHeight /= this.lineHeight;\n        }\n        ctx.fillRect(\n          boundaries.left + lineOffset,\n          boundaries.top + boundaries.topOffset,\n          boxWidth > 0 ? boxWidth : 0,\n          lineHeight);\n\n        boundaries.topOffset += realLineHeight;\n      }\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _renderChars: function(method, ctx, line, left, top, lineIndex, charOffset) {\n\n      if (this.isEmptyStyles()) {\n        return this._renderCharsFast(method, ctx, line, left, top);\n      }\n\n      charOffset = charOffset || 0;\n\n      // set proper line offset\n      var lineHeight = this._getHeightOfLine(ctx, lineIndex),\n          prevStyle,\n          thisStyle,\n          charsToRender = '';\n\n      ctx.save();\n      top -= lineHeight / this.lineHeight * this._fontSizeFraction;\n      for (var i = charOffset, len = line.length + charOffset; i <= len; i++) {\n        prevStyle = prevStyle || this.getCurrentCharStyle(lineIndex, i);\n        thisStyle = this.getCurrentCharStyle(lineIndex, i + 1);\n\n        if (this._hasStyleChanged(prevStyle, thisStyle) || i === len) {\n          this._renderChar(method, ctx, lineIndex, i - 1, charsToRender, left, top, lineHeight);\n          charsToRender = '';\n          prevStyle = thisStyle;\n        }\n        charsToRender += line[i - charOffset];\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     */\n    _renderCharsFast: function(method, ctx, line, left, top) {\n\n      if (method === 'fillText' && this.fill) {\n        this.callSuper('_renderChars', method, ctx, line, left, top);\n      }\n      if (method === 'strokeText' && ((this.stroke && this.strokeWidth > 0) || this.skipFillStrokeCheck)) {\n        this.callSuper('_renderChars', method, ctx, line, left, top);\n      }\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} i\n     * @param {String} _char\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     * @param {Number} lineHeight Height of the line\n     */\n    _renderChar: function(method, ctx, lineIndex, i, _char, left, top, lineHeight) {\n      var charWidth, charHeight, shouldFill, shouldStroke,\n          decl = this._getStyleDeclaration(lineIndex, i),\n          offset, textDecoration, chars, additionalSpace, _charWidth;\n\n      if (decl) {\n        charHeight = this._getHeightOfChar(ctx, _char, lineIndex, i);\n        shouldStroke = decl.stroke;\n        shouldFill = decl.fill;\n        textDecoration = decl.textDecoration;\n      }\n      else {\n        charHeight = this.fontSize;\n      }\n\n      shouldStroke = (shouldStroke || this.stroke) && method === 'strokeText';\n      shouldFill = (shouldFill || this.fill) && method === 'fillText';\n\n      decl && ctx.save();\n\n      charWidth = this._applyCharStylesGetWidth(ctx, _char, lineIndex, i, decl || null);\n      textDecoration = textDecoration || this.textDecoration;\n\n      if (decl && decl.textBackgroundColor) {\n        this._removeShadow(ctx);\n      }\n      if (this.charSpacing !== 0) {\n        additionalSpace = this._getWidthOfCharSpacing();\n        chars = _char.split('');\n        charWidth = 0;\n        for (var j = 0, len = chars.length, jChar; j < len; j++) {\n          jChar = chars[j];\n          shouldFill && ctx.fillText(jChar, left + charWidth, top);\n          shouldStroke && ctx.strokeText(jChar, left + charWidth, top);\n          _charWidth = ctx.measureText(jChar).width + additionalSpace;\n          charWidth += _charWidth > 0 ? _charWidth : 0;\n        }\n      }\n      else {\n        shouldFill && ctx.fillText(_char, left, top);\n        shouldStroke && ctx.strokeText(_char, left, top);\n      }\n\n      if (textDecoration || textDecoration !== '') {\n        offset = this._fontSizeFraction * lineHeight / this.lineHeight;\n        this._renderCharDecoration(ctx, textDecoration, left, top, offset, charWidth, charHeight);\n      }\n\n      decl && ctx.restore();\n      ctx.translate(charWidth, 0);\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChanged: function(prevStyle, thisStyle) {\n      return (prevStyle.fill !== thisStyle.fill ||\n              prevStyle.fontSize !== thisStyle.fontSize ||\n              prevStyle.textBackgroundColor !== thisStyle.textBackgroundColor ||\n              prevStyle.textDecoration !== thisStyle.textDecoration ||\n              prevStyle.fontFamily !== thisStyle.fontFamily ||\n              prevStyle.fontWeight !== thisStyle.fontWeight ||\n              prevStyle.fontStyle !== thisStyle.fontStyle ||\n              prevStyle.stroke !== thisStyle.stroke ||\n              prevStyle.strokeWidth !== thisStyle.strokeWidth\n      );\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderCharDecoration: function(ctx, textDecoration, left, top, offset, charWidth, charHeight) {\n\n      if (!textDecoration) {\n        return;\n      }\n\n      var decorationWeight = charHeight / 15,\n          positions = {\n            underline: top + charHeight / 10,\n            'line-through': top - charHeight * (this._fontSizeFraction + this._fontSizeMult - 1) + decorationWeight,\n            overline: top - (this._fontSizeMult - this._fontSizeFraction) * charHeight\n          },\n          decorations = ['underline', 'line-through', 'overline'], i, decoration;\n\n      for (i = 0; i < decorations.length; i++) {\n        decoration = decorations[i];\n        if (textDecoration.indexOf(decoration) > -1) {\n          ctx.fillRect(left, positions[decoration], charWidth , decorationWeight);\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      // to \"cancel\" this.fontSize subtraction in fabric.Text#_renderTextLine\n      // the adding 0.03 is just to align text with itext by overlap test\n      if (!this.isEmptyStyles()) {\n        top += this.fontSize * (this._fontSizeFraction + 0.03);\n      }\n      this.callSuper('_renderTextLine', method, ctx, line, left, top, lineIndex);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx) {\n      if (this.isEmptyStyles()) {\n        return this.callSuper('_renderTextDecoration', ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      this.callSuper('_renderTextLinesBackground', ctx);\n\n      var lineTopOffset = 0, heightOfLine,\n          lineWidth, lineLeftOffset,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          colorCache = '',\n          line, _char, style, leftCache,\n          topCache, widthCache, heightCache;\n      ctx.save();\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this._getHeightOfLine(ctx, i);\n        line = this._textLines[i];\n\n        if (line === '' || !this.styles || !this._getLineStyle(i)) {\n          lineTopOffset += heightOfLine;\n          continue;\n        }\n\n        lineWidth = this._getLineWidth(ctx, i);\n        lineLeftOffset = this._getLineLeftOffset(lineWidth);\n        leftCache = topCache = widthCache = heightCache = 0;\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          style = this._getStyleDeclaration(i, j) || {};\n\n          if (colorCache !== style.textBackgroundColor) {\n            if (heightCache && widthCache) {\n              ctx.fillStyle = colorCache;\n              ctx.fillRect(leftCache, topCache, widthCache, heightCache);\n            }\n            leftCache = topCache = widthCache = heightCache = 0;\n            colorCache = style.textBackgroundColor || '';\n          }\n\n          if (!style.textBackgroundColor) {\n            colorCache = '';\n            continue;\n          }\n          _char = line[j];\n\n          if (colorCache === style.textBackgroundColor) {\n            colorCache = style.textBackgroundColor;\n            if (!leftCache) {\n              leftCache = leftOffset + lineLeftOffset + this._getWidthOfCharsAt(ctx, i, j);\n            }\n            topCache = topOffset + lineTopOffset;\n            widthCache += this._getWidthOfChar(ctx, _char, i, j);\n            heightCache = heightOfLine / this.lineHeight;\n          }\n        }\n        // if a textBackgroundColor ends on the last character of a line\n        if (heightCache && widthCache) {\n          ctx.fillStyle = colorCache;\n          ctx.fillRect(leftCache, topCache, widthCache, heightCache);\n          leftCache = topCache = widthCache = heightCache = 0;\n        }\n        lineTopOffset += heightOfLine;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     */\n    _getCacheProp: function(_char, styleDeclaration) {\n      return _char +\n             styleDeclaration.fontSize +\n             styleDeclaration.fontWeight +\n             styleDeclaration.fontStyle;\n    },\n\n    /**\n     * @private\n     * @param {String} fontFamily name\n     * @return {Object} reference to cache\n     */\n    _getFontCache: function(fontFamily) {\n      if (!fabric.charWidthsCache[fontFamily]) {\n        fabric.charWidthsCache[fontFamily] = { };\n      }\n      return fabric.charWidthsCache[fontFamily];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} _char\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} [decl]\n     */\n    _applyCharStylesGetWidth: function(ctx, _char, lineIndex, charIndex, decl) {\n      var charDecl = decl || this._getStyleDeclaration(lineIndex, charIndex),\n          styleDeclaration = clone(charDecl),\n          width, cacheProp, charWidthsCache;\n\n      this._applyFontStyles(styleDeclaration);\n      charWidthsCache = this._getFontCache(styleDeclaration.fontFamily);\n      cacheProp = this._getCacheProp(_char, styleDeclaration);\n\n      // short-circuit if no styles for this char\n      // global style from object is always applyed and handled by save and restore\n      if (!charDecl && charWidthsCache[cacheProp] && this.caching) {\n        return charWidthsCache[cacheProp];\n      }\n\n      if (typeof styleDeclaration.shadow === 'string') {\n        styleDeclaration.shadow = new fabric.Shadow(styleDeclaration.shadow);\n      }\n\n      var fill = styleDeclaration.fill || this.fill;\n      ctx.fillStyle = fill.toLive\n        ? fill.toLive(ctx, this)\n        : fill;\n\n      if (styleDeclaration.stroke) {\n        ctx.strokeStyle = (styleDeclaration.stroke && styleDeclaration.stroke.toLive)\n          ? styleDeclaration.stroke.toLive(ctx, this)\n          : styleDeclaration.stroke;\n      }\n\n      ctx.lineWidth = styleDeclaration.strokeWidth || this.strokeWidth;\n      ctx.font = this._getFontDeclaration.call(styleDeclaration);\n\n      //if we want this._setShadow.call to work with styleDeclarion\n      //we have to add those references\n      if (styleDeclaration.shadow) {\n        styleDeclaration.scaleX = this.scaleX;\n        styleDeclaration.scaleY = this.scaleY;\n        styleDeclaration.canvas = this.canvas;\n        styleDeclaration.getObjectScaling = this.getObjectScaling;\n        this._setShadow.call(styleDeclaration, ctx);\n      }\n\n      if (!this.caching || !charWidthsCache[cacheProp]) {\n        width = ctx.measureText(_char).width;\n        this.caching && (charWidthsCache[cacheProp] = width);\n        return width;\n      }\n\n      return charWidthsCache[cacheProp];\n    },\n\n    /**\n     * @private\n     * @param {Object} styleDeclaration\n     */\n    _applyFontStyles: function(styleDeclaration) {\n      if (!styleDeclaration.fontFamily) {\n        styleDeclaration.fontFamily = this.fontFamily;\n      }\n      if (!styleDeclaration.fontSize) {\n        styleDeclaration.fontSize = this.fontSize;\n      }\n      if (!styleDeclaration.fontWeight) {\n        styleDeclaration.fontWeight = this.fontWeight;\n      }\n      if (!styleDeclaration.fontStyle) {\n        styleDeclaration.fontStyle = this.fontStyle;\n      }\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Boolean} [returnCloneOrEmpty=false]\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n      if (returnCloneOrEmpty) {\n        return (this.styles[lineIndex] && this.styles[lineIndex][charIndex])\n          ? clone(this.styles[lineIndex][charIndex])\n          : { };\n      }\n\n      return this.styles[lineIndex] && this.styles[lineIndex][charIndex] ? this.styles[lineIndex][charIndex] : null;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     *\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      return this.styles[lineIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      this.styles[lineIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      delete this.styles[lineIndex];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getWidthOfChar: function(ctx, _char, lineIndex, charIndex) {\n      if (!this._isMeasuring && this.textAlign === 'justify' && this._reSpacesAndTabs.test(_char)) {\n        return this._getWidthOfSpace(ctx, lineIndex);\n      }\n      ctx.save();\n      var width = this._applyCharStylesGetWidth(ctx, _char, lineIndex, charIndex);\n      if (this.charSpacing !== 0) {\n        width += this._getWidthOfCharSpacing();\n      }\n      ctx.restore();\n      return width > 0 ? width : 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     */\n    _getHeightOfChar: function(ctx, lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex);\n      return style && style.fontSize ? style.fontSize : this.fontSize;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     */\n    _getWidthOfCharsAt: function(ctx, lineIndex, charIndex) {\n      var width = 0, i, _char;\n      for (i = 0; i < charIndex; i++) {\n        _char = this._textLines[lineIndex][i];\n        width += this._getWidthOfChar(ctx, _char, lineIndex, i);\n      }\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    _measureLine: function(ctx, lineIndex) {\n      this._isMeasuring = true;\n      var width = this._getWidthOfCharsAt(ctx, lineIndex, this._textLines[lineIndex].length);\n      if (this.charSpacing !== 0) {\n        width -= this._getWidthOfCharSpacing();\n      }\n      this._isMeasuring = false;\n      return width > 0 ? width : 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     */\n    _getWidthOfSpace: function (ctx, lineIndex) {\n      if (this.__widthOfSpace[lineIndex]) {\n        return this.__widthOfSpace[lineIndex];\n      }\n      var line = this._textLines[lineIndex],\n          wordsWidth = this._getWidthOfWords(ctx, line, lineIndex, 0),\n          widthDiff = this.width - wordsWidth,\n          numSpaces = line.length - line.replace(this._reSpacesAndTabs, '').length,\n          width = Math.max(widthDiff / numSpaces, ctx.measureText(' ').width);\n      this.__widthOfSpace[lineIndex] = width;\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _getWidthOfWords: function (ctx, line, lineIndex, charOffset) {\n      var width = 0;\n\n      for (var charIndex = 0; charIndex < line.length; charIndex++) {\n        var _char = line[charIndex];\n\n        if (!_char.match(/\\s/)) {\n          width += this._getWidthOfChar(ctx, _char, lineIndex, charIndex + charOffset);\n        }\n      }\n\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getHeightOfLine: function(ctx, lineIndex) {\n      if (this.__lineHeights[lineIndex]) {\n        return this.__lineHeights[lineIndex];\n      }\n\n      var line = this._textLines[lineIndex],\n          maxHeight = this._getHeightOfChar(ctx, lineIndex, 0);\n\n      for (var i = 1, len = line.length; i < len; i++) {\n        var currentCharHeight = this._getHeightOfChar(ctx, lineIndex, i);\n        if (currentCharHeight > maxHeight) {\n          maxHeight = currentCharHeight;\n        }\n      }\n      this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n      return this.__lineHeights[lineIndex];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getTextHeight: function(ctx) {\n      var lineHeight, height = 0;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineHeight = this._getHeightOfLine(ctx, i);\n        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\n      }\n      return height;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return fabric.util.object.extend(this.callSuper('toObject', propertiesToInclude), {\n        styles: clone(this.styles, true)\n      });\n    }\n  });\n\n  /**\n   * Returns fabric.IText instance from an object representation\n   * @static\n   * @memberOf fabric.IText\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as argument\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.IText} instance of fabric.IText\n   */\n  fabric.IText.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('IText', object, callback, forceAsync, 'text');\n  };\n})();\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Initializes all the interactive behavior of IText\n     */\n    initBehavior: function() {\n      this.initAddedHandler();\n      this.initRemovedHandler();\n      this.initCursorSelectionHandlers();\n      this.initDoubleClickSimulation();\n      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    },\n\n    onDeselect: function() {\n      this.isEditing && this.exitEditing();\n      this.selected = false;\n      this.callSuper('onDeselect');\n    },\n\n    /**\n     * Initializes \"added\" event handler\n     */\n    initAddedHandler: function() {\n      var _this = this;\n      this.on('added', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          if (!canvas._hasITextHandlers) {\n            canvas._hasITextHandlers = true;\n            _this._initCanvasHandlers(canvas);\n          }\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          canvas._iTextInstances.push(_this);\n        }\n      });\n    },\n\n    initRemovedHandler: function() {\n      var _this = this;\n      this.on('removed', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n          if (canvas._iTextInstances.length === 0) {\n            canvas._hasITextHandlers = false;\n            _this._removeCanvasHandlers(canvas);\n          }\n        }\n      });\n    },\n\n    /**\n     * register canvas event to manage exiting on other instances\n     * @private\n     */\n    _initCanvasHandlers: function(canvas) {\n      canvas._mouseUpITextHandler = (function() {\n        if (canvas._iTextInstances) {\n          canvas._iTextInstances.forEach(function(obj) {\n            obj.__isMousedown = false;\n          });\n        }\n      }).bind(this);\n      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * remove canvas event to manage exiting on other instances\n     * @private\n     */\n    _removeCanvasHandlers: function(canvas) {\n      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * @private\n     */\n    _tick: function() {\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n    },\n\n    /**\n     * @private\n     */\n    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\n      var tickState;\n\n      tickState = {\n        isAborted: false,\n        abort: function() {\n          this.isAborted = true;\n        },\n      };\n\n      obj.animate('_currentCursorOpacity', targetOpacity, {\n        duration: duration,\n        onComplete: function() {\n          if (!tickState.isAborted) {\n            obj[completeMethod]();\n          }\n        },\n        onChange: function() {\n          // we do not want to animate a selection, only cursor\n          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n            obj.renderCursorOrSelection();\n          }\n        },\n        abort: function() {\n          return tickState.isAborted;\n        }\n      });\n      return tickState;\n    },\n\n    /**\n     * @private\n     */\n    _onTickComplete: function() {\n\n      var _this = this;\n\n      if (this._cursorTimeout1) {\n        clearTimeout(this._cursorTimeout1);\n      }\n      this._cursorTimeout1 = setTimeout(function() {\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n      }, 100);\n    },\n\n    /**\n     * Initializes delayed cursor\n     */\n    initDelayedCursor: function(restart) {\n      var _this = this,\n          delay = restart ? 0 : this.cursorDelay;\n\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this._cursorTimeout2 = setTimeout(function() {\n        _this._tick();\n      }, delay);\n    },\n\n    /**\n     * Aborts cursor animation and clears all timeouts\n     */\n    abortCursorAnimation: function() {\n      var shouldClear = this._currentTickState || this._currentTickCompleteState;\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\n      clearTimeout(this._cursorTimeout1);\n      clearTimeout(this._cursorTimeout2);\n\n      this._currentCursorOpacity = 0;\n      // to clear just itext area we need to transform the context\n      // it may not be worth it\n      if (shouldClear) {\n        this.canvas && this.canvas.clearContext(this.canvas.contextTop || this.ctx);\n      }\n\n    },\n\n    /**\n     * Selects entire text\n     */\n    selectAll: function() {\n      this.selectionStart = 0;\n      this.selectionEnd = this.text.length;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    },\n\n    /**\n     * Returns selected text\n     * @return {String}\n     */\n    getSelectedText: function() {\n      return this.text.slice(this.selectionStart, this.selectionEnd);\n    },\n\n    /**\n     * Find new selection index representing start of current word according to current selection index\n     * @param {Number} startFrom Surrent selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      // remove space before cursor first\n      if (this._reSpace.test(this.text.charAt(index))) {\n        while (this._reSpace.test(this.text.charAt(index))) {\n          offset++;\n          index--;\n        }\n      }\n      while (/\\S/.test(this.text.charAt(index)) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      // remove space after cursor first\n      if (this._reSpace.test(this.text.charAt(index))) {\n        while (this._reSpace.test(this.text.charAt(index))) {\n          offset++;\n          index++;\n        }\n      }\n      while (/\\S/.test(this.text.charAt(index)) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Find new selection index representing start of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      while (!/\\n/.test(this.text.charAt(index)) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      while (!/\\n/.test(this.text.charAt(index)) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Returns number of newlines in selected text\n     * @return {Number} Number of newlines in selected text\n     */\n    getNumNewLinesInSelectedText: function() {\n      var selectedText = this.getSelectedText(),\n          numNewLines  = 0;\n\n      for (var i = 0, len = selectedText.length; i < len; i++) {\n        if (selectedText[i] === '\\n') {\n          numNewLines++;\n        }\n      }\n      return numNewLines;\n    },\n\n    /**\n     * Finds index corresponding to beginning or end of a word\n     * @param {Number} selectionStart Index of a character\n     * @param {Number} direction 1 or -1\n     * @return {Number} Index of the beginning or end of a word\n     */\n    searchWordBoundary: function(selectionStart, direction) {\n      var index     = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,\n          _char     = this.text.charAt(index),\n          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\n      while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\n        index += direction;\n        _char = this.text.charAt(index);\n      }\n      if (reNonWord.test(_char) && _char !== '\\n') {\n        index += direction === 1 ? 0 : 1;\n      }\n      return index;\n    },\n\n    /**\n     * Selects a word based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectWord: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * Selects a line based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectLine: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    },\n\n    /**\n     * Enters editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    enterEditing: function(e) {\n      if (this.isEditing || !this.editable) {\n        return;\n      }\n\n      if (this.canvas) {\n        this.exitEditingOnOthers(this.canvas);\n      }\n\n      this.isEditing = true;\n      this.selected = true;\n      this.initHiddenTextarea(e);\n      this.hiddenTextarea.focus();\n      this._updateTextarea();\n      this._saveEditingProps();\n      this._setEditingProps();\n      this._textBeforeEdit = this.text;\n\n      this._tick();\n      this.fire('editing:entered');\n      this._fireSelectionChanged();\n      if (!this.canvas) {\n        return this;\n      }\n      this.canvas.fire('text:editing:entered', { target: this });\n      this.initMouseMoveHandler();\n      this.canvas.renderAll();\n      return this;\n    },\n\n    exitEditingOnOthers: function(canvas) {\n      if (canvas._iTextInstances) {\n        canvas._iTextInstances.forEach(function(obj) {\n          obj.selected = false;\n          if (obj.isEditing) {\n            obj.exitEditing();\n          }\n        });\n      }\n    },\n\n    /**\n     * Initializes \"mousemove\" event handler\n     */\n    initMouseMoveHandler: function() {\n      this.canvas.on('mouse:move', this.mouseMoveHandler);\n    },\n\n    /**\n     * @private\n     */\n    mouseMoveHandler: function(options) {\n      if (!this.__isMousedown || !this.isEditing) {\n        return;\n      }\n\n      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n          currentStart = this.selectionStart,\n          currentEnd = this.selectionEnd;\n      if (\n        (newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd)\n        &&\n        (currentStart === newSelectionStart || currentEnd === newSelectionStart)\n      ) {\n        return;\n      }\n      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n        this.selectionStart = this.__selectionStartOnMouseDown;\n        this.selectionEnd = newSelectionStart;\n      }\n      else {\n        this.selectionStart = newSelectionStart;\n        this.selectionEnd = this.__selectionStartOnMouseDown;\n      }\n      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n        this.restartCursorIfNeeded();\n        this._fireSelectionChanged();\n        this._updateTextarea();\n        this.renderCursorOrSelection();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setEditingProps: function() {\n      this.hoverCursor = 'text';\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n      }\n\n      this.borderColor = this.editingBorderColor;\n\n      this.hasControls = this.selectable = false;\n      this.lockMovementX = this.lockMovementY = true;\n    },\n\n    /**\n     * @private\n     */\n    _updateTextarea: function() {\n      if (!this.hiddenTextarea || this.inCompositionMode) {\n        return;\n      }\n      this.cursorOffsetCache = { };\n      this.hiddenTextarea.value = this.text;\n      this.hiddenTextarea.selectionStart = this.selectionStart;\n      this.hiddenTextarea.selectionEnd = this.selectionEnd;\n      if (this.selectionStart === this.selectionEnd) {\n        var style = this._calcTextareaPosition();\n        this.hiddenTextarea.style.left = style.left;\n        this.hiddenTextarea.style.top = style.top;\n        this.hiddenTextarea.style.fontSize = style.fontSize;\n      }\n    },\n\n    /**\n     * @private\n     * @return {Object} style contains style for hiddenTextarea\n     */\n    _calcTextareaPosition: function() {\n      if (!this.canvas) {\n        return { x: 1, y: 1 };\n      }\n      var chars = this.text.split(''),\n          boundaries = this._getCursorBoundaries(chars, 'cursor'),\n          cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n          leftOffset = boundaries.leftOffset,\n          m = this.calcTransformMatrix(),\n          p = {\n            x: boundaries.left + leftOffset,\n            y: boundaries.top + boundaries.topOffset + charHeight\n          },\n          upperCanvas = this.canvas.upperCanvasEl,\n          maxWidth = upperCanvas.width - charHeight,\n          maxHeight = upperCanvas.height - charHeight;\n\n      p = fabric.util.transformPoint(p, m);\n      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n\n      if (p.x < 0) {\n        p.x = 0;\n      }\n      if (p.x > maxWidth) {\n        p.x = maxWidth;\n      }\n      if (p.y < 0) {\n        p.y = 0;\n      }\n      if (p.y > maxHeight) {\n        p.y = maxHeight;\n      }\n\n      // add canvas offset on document\n      p.x += this.canvas._offset.left;\n      p.y += this.canvas._offset.top;\n\n      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight };\n    },\n\n    /**\n     * @private\n     */\n    _saveEditingProps: function() {\n      this._savedProps = {\n        hasControls: this.hasControls,\n        borderColor: this.borderColor,\n        lockMovementX: this.lockMovementX,\n        lockMovementY: this.lockMovementY,\n        hoverCursor: this.hoverCursor,\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\n        moveCursor: this.canvas && this.canvas.moveCursor\n      };\n    },\n\n    /**\n     * @private\n     */\n    _restoreEditingProps: function() {\n      if (!this._savedProps) {\n        return;\n      }\n\n      this.hoverCursor = this._savedProps.overCursor;\n      this.hasControls = this._savedProps.hasControls;\n      this.borderColor = this._savedProps.borderColor;\n      this.lockMovementX = this._savedProps.lockMovementX;\n      this.lockMovementY = this._savedProps.lockMovementY;\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n        this.canvas.moveCursor = this._savedProps.moveCursor;\n      }\n    },\n\n    /**\n     * Exits from editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    exitEditing: function() {\n      var isTextChanged = (this._textBeforeEdit !== this.text);\n      this.selected = false;\n      this.isEditing = false;\n      this.selectable = true;\n\n      this.selectionEnd = this.selectionStart;\n\n      if (this.hiddenTextarea) {\n        this.hiddenTextarea.blur && this.hiddenTextarea.blur();\n        this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n        this.hiddenTextarea = null;\n      }\n\n      this.abortCursorAnimation();\n      this._restoreEditingProps();\n      this._currentCursorOpacity = 0;\n\n      this.fire('editing:exited');\n      isTextChanged && this.fire('modified');\n      if (this.canvas) {\n        this.canvas.off('mouse:move', this.mouseMoveHandler);\n        this.canvas.fire('text:editing:exited', { target: this });\n        isTextChanged && this.canvas.fire('object:modified', { target: this });\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this.styles) {\n        if (!this._textLines[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _removeCharsFromTo: function(start, end) {\n      while (end !== start) {\n        this._removeSingleCharAndStyle(start + 1);\n        end--;\n      }\n      this.selectionStart = start;\n      this.selectionEnd = start;\n    },\n\n    _removeSingleCharAndStyle: function(index) {\n      var isBeginningOfLine = this.text[index - 1] === '\\n',\n          indexStyle        = isBeginningOfLine ? index : index - 1;\n      this.removeStyleObject(isBeginningOfLine, indexStyle);\n      this.text = this.text.slice(0, index - 1) +\n        this.text.slice(index);\n\n      this._textLines = this._splitTextIntoLines();\n    },\n\n    /**\n     * Inserts characters where cursor is (replacing selection if one exists)\n     * @param {String} _chars Characters to insert\n     * @param {Boolean} useCopiedStyle use fabric.copiedTextStyle\n     */\n    insertChars: function(_chars, useCopiedStyle) {\n      var style;\n\n      if (this.selectionEnd - this.selectionStart > 1) {\n        this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n      }\n      //short circuit for block paste\n      if (!useCopiedStyle && this.isEmptyStyles()) {\n        this.insertChar(_chars, false);\n        return;\n      }\n      for (var i = 0, len = _chars.length; i < len; i++) {\n        if (useCopiedStyle) {\n          style = fabric.util.object.clone(fabric.copiedTextStyle[i], true);\n        }\n        this.insertChar(_chars[i], i < len - 1, style);\n      }\n    },\n\n    /**\n     * Inserts a character where cursor is\n     * @param {String} _char Characters to insert\n     * @param {Boolean} skipUpdate trigger rendering and updates at the end of text insert\n     * @param {Object} styleObject Style to be inserted for the new char\n     */\n    insertChar: function(_char, skipUpdate, styleObject) {\n      var isEndOfLine = this.text[this.selectionStart] === '\\n';\n      this.text = this.text.slice(0, this.selectionStart) +\n        _char + this.text.slice(this.selectionEnd);\n      this._textLines = this._splitTextIntoLines();\n      this.insertStyleObjects(_char, isEndOfLine, styleObject);\n      this.selectionStart += _char.length;\n      this.selectionEnd = this.selectionStart;\n      if (skipUpdate) {\n        return;\n      }\n      this._updateTextarea();\n      this.setCoords();\n      this._fireSelectionChanged();\n      this.fire('changed');\n      this.restartCursorIfNeeded();\n      if (this.canvas) {\n        this.canvas.fire('text:changed', { target: this });\n        this.canvas.renderAll();\n      }\n    },\n\n    restartCursorIfNeeded: function() {\n      if (!this._currentTickState || this._currentTickState.isAborted\n        || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted\n      ) {\n        this.initDelayedCursor();\n      }\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Boolean} isEndOfLine True if it's end of line\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n\n      this.shiftLineStyles(lineIndex, +1);\n\n      var currentCharStyle = {},\n          newLineStyles    = {};\n\n      if (this.styles[lineIndex] && this.styles[lineIndex][charIndex - 1]) {\n        currentCharStyle = this.styles[lineIndex][charIndex - 1];\n      }\n\n      // if there's nothing after cursor,\n      // we clone current char style onto the next (otherwise empty) line\n      if (isEndOfLine && currentCharStyle) {\n        newLineStyles[0] = clone(currentCharStyle);\n        this.styles[lineIndex + 1] = newLineStyles;\n      }\n      // otherwise we clone styles of all chars\n      // after cursor onto the next line, from the beginning\n      else {\n        var somethingAdded = false;\n        for (var index in this.styles[lineIndex]) {\n          var numIndex = parseInt(index, 10);\n          if (numIndex >= charIndex) {\n            somethingAdded = true;\n            newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n            // remove lines from the previous line since they're on a new line now\n            delete this.styles[lineIndex][index];\n          }\n        }\n        somethingAdded && (this.styles[lineIndex + 1] = newLineStyles);\n      }\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Object} [style] Style object to insert, if given\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, style) {\n\n      var currentLineStyles       = this.styles[lineIndex],\n          currentLineStylesCloned = clone(currentLineStyles);\n\n      if (charIndex === 0 && !style) {\n        charIndex = 1;\n      }\n\n      // shift all char styles by 1 forward\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n      for (var index in currentLineStylesCloned) {\n        var numericIndex = parseInt(index, 10);\n\n        if (numericIndex >= charIndex) {\n          currentLineStyles[numericIndex + 1] = currentLineStylesCloned[numericIndex];\n\n          // only delete the style if there was nothing moved there\n          if (!currentLineStylesCloned[numericIndex - 1]) {\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n      var newStyle = style || clone(currentLineStyles[charIndex - 1]);\n      newStyle && (this.styles[lineIndex][charIndex] = newStyle);\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object(s)\n     * @param {String} _chars Characters at the location where style is inserted\n     * @param {Boolean} isEndOfLine True if it's end of line\n     * @param {Object} [styleObject] Style to insert\n     */\n    insertStyleObjects: function(_chars, isEndOfLine, styleObject) {\n      // removed shortcircuit over isEmptyStyles\n\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex      = cursorLocation.lineIndex,\n          charIndex      = cursorLocation.charIndex;\n\n      if (!this._getLineStyle(lineIndex)) {\n        this._setLineStyle(lineIndex, {});\n      }\n\n      if (_chars === '\\n') {\n        this.insertNewlineStyleObject(lineIndex, charIndex, isEndOfLine);\n      }\n      else {\n        this.insertCharStyleObject(lineIndex, charIndex, styleObject);\n      }\n    },\n\n    /**\n     * Shifts line styles up or down\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can be -1 or +1\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by 1 upward or downward\n      var clonedStyles = clone(this.styles);\n      for (var line in clonedStyles) {\n        var numericLine = parseInt(line, 10);\n        if (numericLine <= lineIndex) {\n          delete clonedStyles[numericLine];\n        }\n      }\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n      //TODO: evaluate if delete old style lines with offset -1\n    },\n\n    /**\n     * Removes style object\n     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n     */\n    removeStyleObject: function(isBeginningOfLine, index) {\n\n      var cursorLocation = this.get2DCursorLocation(index),\n          lineIndex      = cursorLocation.lineIndex,\n          charIndex      = cursorLocation.charIndex;\n\n      this._removeStyleObject(isBeginningOfLine, cursorLocation, lineIndex, charIndex);\n    },\n\n    _getTextOnPreviousLine: function(lIndex) {\n      return this._textLines[lIndex - 1];\n    },\n\n    _removeStyleObject: function(isBeginningOfLine, cursorLocation, lineIndex, charIndex) {\n\n      if (isBeginningOfLine) {\n        var textOnPreviousLine     = this._getTextOnPreviousLine(cursorLocation.lineIndex),\n            newCharIndexOnPrevLine = textOnPreviousLine ? textOnPreviousLine.length : 0;\n\n        if (!this.styles[lineIndex - 1]) {\n          this.styles[lineIndex - 1] = {};\n        }\n        for (charIndex in this.styles[lineIndex]) {\n          this.styles[lineIndex - 1][parseInt(charIndex, 10) + newCharIndexOnPrevLine]\n            = this.styles[lineIndex][charIndex];\n        }\n        this.shiftLineStyles(cursorLocation.lineIndex, -1);\n      }\n      else {\n        var currentLineStyles = this.styles[lineIndex];\n\n        if (currentLineStyles) {\n          delete currentLineStyles[charIndex];\n        }\n        var currentLineStylesCloned = clone(currentLineStyles);\n        // shift all styles by 1 backwards\n        for (var i in currentLineStylesCloned) {\n          var numericIndex = parseInt(i, 10);\n          if (numericIndex >= charIndex && numericIndex !== 0) {\n            currentLineStyles[numericIndex - 1] = currentLineStylesCloned[numericIndex];\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n    },\n\n    /**\n     * Inserts new line\n     */\n    insertNewline: function() {\n      this.insertChars('\\n');\n    },\n\n    /**\n     * Set the selectionStart and selectionEnd according to the ne postion of cursor\n     * mimic the key - mouse navigation when shift is pressed.\n     */\n    setSelectionStartEndWithShift: function(start, end, newSelection) {\n      if (newSelection <= start) {\n        if (end === start) {\n          this._selectionDirection = 'left';\n        }\n        else if (this._selectionDirection === 'right') {\n          this._selectionDirection = 'left';\n          this.selectionEnd = start;\n        }\n        this.selectionStart = newSelection;\n      }\n      else if (newSelection > start && newSelection < end) {\n        if (this._selectionDirection === 'right') {\n          this.selectionEnd = newSelection;\n        }\n        else {\n          this.selectionStart = newSelection;\n        }\n      }\n      else {\n        // newSelection is > selection start and end\n        if (end === start) {\n          this._selectionDirection = 'right';\n        }\n        else if (this._selectionDirection === 'left') {\n          this._selectionDirection = 'right';\n          this.selectionStart = end;\n        }\n        this.selectionEnd = newSelection;\n      }\n    },\n\n    setSelectionInBoundaries: function() {\n      var length = this.text.length;\n      if (this.selectionStart > length) {\n        this.selectionStart = length;\n      }\n      else if (this.selectionStart < 0) {\n        this.selectionStart = 0;\n      }\n      if (this.selectionEnd > length) {\n        this.selectionEnd = length;\n      }\n      else if (this.selectionEnd < 0) {\n        this.selectionEnd = 0;\n      }\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n  /**\n   * Initializes \"dbclick\" event handler\n   */\n  initDoubleClickSimulation: function() {\n\n    // for double click\n    this.__lastClickTime = +new Date();\n\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n\n    this.__lastPointer = { };\n\n    this.on('mousedown', this.onMouseDown.bind(this));\n  },\n\n  onMouseDown: function(options) {\n\n    this.__newClickTime = +new Date();\n    var newPointer = this.canvas.getPointer(options.e);\n\n    if (this.isTripleClick(newPointer, options.e)) {\n      this.fire('tripleclick', options);\n      this._stopEvent(options.e);\n    }\n    else if (this.isDoubleClick(newPointer)) {\n      this.fire('dblclick', options);\n      this._stopEvent(options.e);\n    }\n\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastIsEditing = this.isEditing;\n    this.__lastSelected = this.selected;\n  },\n\n  isDoubleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y && this.__lastIsEditing;\n  },\n\n  isTripleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y;\n  },\n\n  /**\n   * @private\n   */\n  _stopEvent: function(e) {\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  },\n\n  /**\n   * Initializes event handlers related to cursor or selection\n   */\n  initCursorSelectionHandlers: function() {\n    this.initMousedownHandler();\n    this.initMouseupHandler();\n    this.initClicks();\n  },\n\n  /**\n   * Initializes double and triple click event handlers\n   */\n  initClicks: function() {\n    this.on('dblclick', function(options) {\n      this.selectWord(this.getSelectionStartFromPointer(options.e));\n    });\n    this.on('tripleclick', function(options) {\n      this.selectLine(this.getSelectionStartFromPointer(options.e));\n    });\n  },\n\n  /**\n   * Initializes \"mousedown\" event handler\n   */\n  initMousedownHandler: function() {\n    this.on('mousedown', function(options) {\n      if (!this.editable || (options.e.button && options.e.button !== 1)) {\n        return;\n      }\n      var pointer = this.canvas.getPointer(options.e);\n      this.__mousedownX = pointer.x;\n      this.__mousedownY = pointer.y;\n      this.__isMousedown = true;\n\n      if (this.selected) {\n        this.setCursorByClick(options.e);\n      }\n\n      if (this.isEditing) {\n        this.__selectionStartOnMouseDown = this.selectionStart;\n        if (this.selectionStart === this.selectionEnd) {\n          this.abortCursorAnimation();\n        }\n        this.renderCursorOrSelection();\n      }\n    });\n  },\n\n  /**\n   * @private\n   */\n  _isObjectMoved: function(e) {\n    var pointer = this.canvas.getPointer(e);\n\n    return this.__mousedownX !== pointer.x ||\n           this.__mousedownY !== pointer.y;\n  },\n\n  /**\n   * Initializes \"mouseup\" event handler\n   */\n  initMouseupHandler: function() {\n    this.on('mouseup', function(options) {\n      this.__isMousedown = false;\n      if (!this.editable || this._isObjectMoved(options.e) || (options.e.button && options.e.button !== 1)) {\n        return;\n      }\n\n      if (this.__lastSelected && !this.__corner) {\n        this.enterEditing(options.e);\n        if (this.selectionStart === this.selectionEnd) {\n          this.initDelayedCursor(true);\n        }\n        else {\n          this.renderCursorOrSelection();\n        }\n      }\n      this.selected = true;\n    });\n  },\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {Event} e Event object\n   */\n  setCursorByClick: function(e) {\n    var newSelection = this.getSelectionStartFromPointer(e),\n        start = this.selectionStart, end = this.selectionEnd;\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    }\n    else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {Event} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer: function(e) {\n    var mouseOffset = this.getLocalPointer(e),\n        prevWidth = 0,\n        width = 0,\n        height = 0,\n        charIndex = 0,\n        newSelectionStart,\n        line;\n\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\n      line = this._textLines[i];\n      height += this._getHeightOfLine(this.ctx, i) * this.scaleY;\n\n      var widthOfLine = this._getLineWidth(this.ctx, i),\n          lineLeftOffset = this._getLineLeftOffset(widthOfLine);\n\n      width = lineLeftOffset * this.scaleX;\n\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\n\n        prevWidth = width;\n\n        width += this._getWidthOfChar(this.ctx, line[j], i, this.flipX ? jlen - j : j) *\n                 this.scaleX;\n\n        if (height <= mouseOffset.y || width <= mouseOffset.x) {\n          charIndex++;\n          continue;\n        }\n\n        return this._getNewSelectionStartFromOffset(\n          mouseOffset, prevWidth, width, charIndex + i, jlen);\n      }\n\n      if (mouseOffset.y < height) {\n        //this happens just on end of lines.\n        return this._getNewSelectionStartFromOffset(\n          mouseOffset, prevWidth, width, charIndex + i - 1, jlen);\n      }\n    }\n\n    // clicked somewhere after all chars, so set at the end\n    if (typeof newSelectionStart === 'undefined') {\n      return this.text.length;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ? 0 : 1,\n        newSelectionStart = index + offset;\n\n    // if object is horizontally flipped, mirror cursor location from the end\n    if (this.flipX) {\n      newSelectionStart = jlen - newSelectionStart;\n    }\n\n    if (newSelectionStart > this.text.length) {\n      newSelectionStart = this.text.length;\n    }\n\n    return newSelectionStart;\n  }\n});\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea: function() {\n    this.hiddenTextarea = fabric.document.createElement('textarea');\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n    this.hiddenTextarea.setAttribute('autocorrect', 'off');\n    this.hiddenTextarea.setAttribute('autocomplete', 'off');\n    this.hiddenTextarea.setAttribute('spellcheck', 'false');\n    this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\n    this.hiddenTextarea.setAttribute('wrap', 'off');\n    var style = this._calcTextareaPosition();\n    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top +\n    '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' +\n    ' line-height: 1px; paddingｰtop: ' + style.fontSize + ';';\n    fabric.document.body.appendChild(this.hiddenTextarea);\n\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'cut', this.cut.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\n    if (!this._clickHandlerInitialized && this.canvas) {\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n      this._clickHandlerInitialized = true;\n    }\n  },\n\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behaviour for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the fabric.Itext or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = fabric.util.object.clone(this.keysMap);\n   * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\n   */\n  keysMap: {\n    8:  'removeChars',\n    9:  'exitEditing',\n    27: 'exitEditing',\n    13: 'insertNewline',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorRight',\n    36: 'moveCursorLeft',\n    37: 'moveCursorLeft',\n    38: 'moveCursorUp',\n    39: 'moveCursorRight',\n    40: 'moveCursorDown',\n    46: 'forwardDelete'\n  },\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  ctrlKeysMapUp: {\n    67: 'copy',\n    88: 'cut'\n  },\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  ctrlKeysMapDown: {\n    65: 'selectAll'\n  },\n\n  onClick: function() {\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n    this.hiddenTextarea && this.hiddenTextarea.focus();\n  },\n\n  /**\n   * Handles keyup event\n   * @param {Event} e Event object\n   */\n  onKeyDown: function(e) {\n    if (!this.isEditing) {\n      return;\n    }\n    if (e.keyCode in this.keysMap) {\n      this[this.keysMap[e.keyCode]](e);\n    }\n    else if ((e.keyCode in this.ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapDown[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    }\n    else {\n      this.canvas && this.canvas.renderAll();\n    }\n  },\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {Event} e Event object\n   */\n  onKeyUp: function(e) {\n    if (!this.isEditing || this._copyDone) {\n      this._copyDone = false;\n      return;\n    }\n    if ((e.keyCode in this.ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapUp[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.renderAll();\n  },\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput: function(e) {\n    if (!this.isEditing || this.inCompositionMode) {\n      return;\n    }\n    var offset = this.selectionStart || 0,\n        offsetEnd = this.selectionEnd || 0,\n        textLength = this.text.length,\n        newTextLength = this.hiddenTextarea.value.length,\n        diff, charsToInsert, start;\n    if (newTextLength > textLength) {\n      //we added some character\n      start = this._selectionDirection === 'left' ? offsetEnd : offset;\n      diff = newTextLength - textLength;\n      charsToInsert = this.hiddenTextarea.value.slice(start, start + diff);\n    }\n    else {\n      //we selected a portion of text and then input something else.\n      //Internet explorer does not trigger this else\n      diff = newTextLength - textLength + offsetEnd - offset;\n      charsToInsert = this.hiddenTextarea.value.slice(offset, offset + diff);\n    }\n    this.insertChars(charsToInsert);\n    e.stopPropagation();\n  },\n\n  /**\n   * Composition start\n   */\n  onCompositionStart: function() {\n    this.inCompositionMode = true;\n    this.prevCompositionLength = 0;\n    this.compositionStart = this.selectionStart;\n  },\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd: function() {\n    this.inCompositionMode = false;\n  },\n\n  /**\n   * Composition update\n   */\n  onCompositionUpdate: function(e) {\n    var data = e.data;\n    this.selectionStart = this.compositionStart;\n    this.selectionEnd = this.selectionEnd === this.selectionStart ?\n      this.compositionStart + this.prevCompositionLength : this.selectionEnd;\n    this.insertChars(data, false);\n    this.prevCompositionLength = data.length;\n  },\n\n  /**\n   * Forward delete\n   */\n  forwardDelete: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      if (this.selectionStart === this.text.length) {\n        return;\n      }\n      this.moveCursorRight(e);\n    }\n    this.removeChars(e);\n  },\n\n  /**\n   * Copies selected text\n   * @param {Event} e Event object\n   */\n  copy: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n    var selectedText = this.getSelectedText(),\n        clipboardData = this._getClipboardData(e);\n\n    // Check for backward compatibility with old browsers\n    if (clipboardData) {\n      clipboardData.setData('text', selectedText);\n    }\n\n    fabric.copiedText = selectedText;\n    fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd);\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this._copyDone = true;\n  },\n\n  /**\n   * Pastes text\n   * @param {Event} e Event object\n   */\n  paste: function(e) {\n    var copiedText = null,\n        clipboardData = this._getClipboardData(e),\n        useCopiedStyle = true;\n\n    // Check for backward compatibility with old browsers\n    if (clipboardData) {\n      copiedText = clipboardData.getData('text').replace(/\\r/g, '');\n      if (!fabric.copiedTextStyle || fabric.copiedText !== copiedText) {\n        useCopiedStyle = false;\n      }\n    }\n    else {\n      copiedText = fabric.copiedText;\n    }\n\n    if (copiedText) {\n      this.insertChars(copiedText, useCopiedStyle);\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n  },\n\n  /**\n   * Cuts text\n   * @param {Event} e Event object\n   */\n  cut: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      return;\n    }\n\n    this.copy(e);\n    this.removeChars(e);\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @return {Object} Clipboard data object\n   */\n  _getClipboardData: function(e) {\n    return (e && e.clipboardData) || fabric.window.clipboardData;\n  },\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor: function(lineIndex, charIndex) {\n    var textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\n        widthOfLine = this._getLineWidth(this.ctx, lineIndex),\n        widthBeforeCursor = this._getLineLeftOffset(widthOfLine), _char;\n\n    for (var i = 0, len = textBeforeCursor.length; i < len; i++) {\n      _char = textBeforeCursor[i];\n      widthBeforeCursor += this._getWidthOfChar(this.ctx, _char, lineIndex, i);\n    }\n    return widthBeforeCursor;\n  },\n\n  /**\n   * Gets start offset of a selection\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    // if on last line, down cursor goes to end of line\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n      // move to the end of a text\n      return this.text.length - selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n\n    return textAfterCursor.length + indexOnOtherLine + 2;\n  },\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset: function(e, isRight) {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    }\n    else {\n      return this.selectionStart;\n    }\n  },\n\n  /**\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex);\n    // return a negative offset\n    return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length;\n  },\n\n  /**\n   * find for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine: function(lineIndex, width) {\n\n    var widthOfLine = this._getLineWidth(this.ctx, lineIndex),\n        textOnLine = this._textLines[lineIndex],\n        lineLeftOffset = this._getLineLeftOffset(widthOfLine),\n        widthOfCharsOnLine = lineLeftOffset,\n        indexOnLine = 0,\n        foundMatch;\n\n    for (var j = 0, jlen = textOnLine.length; j < jlen; j++) {\n\n      var _char = textOnLine[j],\n          widthOfChar = this._getWidthOfChar(this.ctx, _char, lineIndex, j);\n\n      widthOfCharsOnLine += widthOfChar;\n\n      if (widthOfCharsOnLine > width) {\n\n        foundMatch = true;\n\n        var leftEdge = widthOfCharsOnLine - widthOfChar,\n            rightEdge = widthOfCharsOnLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - width),\n            offsetFromRightEdge = Math.abs(rightEdge - width);\n\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnLine = textOnLine.length - 1;\n    }\n\n    return indexOnLine;\n  },\n\n\n  /**\n   * Moves cursor down\n   * @param {Event} e Event object\n   */\n  moveCursorDown: function(e) {\n    if (this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length) {\n      return;\n    }\n    this._moveCursorUpOrDown('Down', e);\n  },\n\n  /**\n   * Moves cursor up\n   * @param {Event} e Event object\n   */\n  moveCursorUp: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorUpOrDown('Up', e);\n  },\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {Event} e Event object\n   */\n  _moveCursorUpOrDown: function(direction, e) {\n    // getUpCursorOffset\n    // getDownCursorOffset\n    var action = 'get' + direction + 'CursorOffset',\n        offset = this[action](e, this._selectionDirection === 'right');\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    }\n    else {\n      this.moveCursorWithoutShift(offset);\n    }\n    if (offset !== 0) {\n      this.setSelectionInBoundaries();\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift: function(offset) {\n    var newSelection = this._selectionDirection === 'left'\n    ? this.selectionStart + offset\n    : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift: function(offset) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor left\n   * @param {Event} e Event object\n   */\n  moveCursorLeft: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Left', e);\n  },\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   */\n  _move: function(e, prop, direction) {\n    var newValue;\n    if (e.altKey) {\n      newValue = this['findWordBoundary' + direction](this[prop]);\n    }\n    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n      newValue = this['findLineBoundary' + direction](this[prop]);\n    }\n    else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n    if (typeof newValue !== undefined && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _moveLeft: function(e, prop) {\n    return this._move(e, prop, 'Left');\n  },\n\n  /**\n   * @private\n   */\n  _moveRight: function(e, prop) {\n    return this._move(e, prop, 'Right');\n  },\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithoutShift: function(e) {\n    var change = true;\n    this._selectionDirection = 'left';\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n      change = this._moveLeft(e, 'selectionStart');\n\n    }\n    this.selectionEnd = this.selectionStart;\n    return change;\n  },\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithShift: function(e) {\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n      return this._moveLeft(e, 'selectionEnd');\n    }\n    else if (this.selectionStart !== 0){\n      this._selectionDirection = 'left';\n      return this._moveLeft(e, 'selectionStart');\n    }\n  },\n\n  /**\n   * Moves cursor right\n   * @param {Event} e Event object\n   */\n  moveCursorRight: function(e) {\n    if (this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Right', e);\n  },\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {Event} e Event object\n   */\n  _moveCursorLeftOrRight: function(direction, e) {\n    var actionName = 'moveCursor' + direction + 'With';\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      actionName += 'Shift';\n    }\n    else {\n      actionName += 'outShift';\n    }\n    if (this[actionName](e)) {\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {Event} e\n   */\n  moveCursorRightWithShift: function(e) {\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n      return this._moveRight(e, 'selectionStart');\n    }\n    else if (this.selectionEnd !== this.text.length) {\n      this._selectionDirection = 'right';\n      return this._moveRight(e, 'selectionEnd');\n    }\n  },\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {Event} e Event object\n   */\n  moveCursorRightWithoutShift: function(e) {\n    var changed = true;\n    this._selectionDirection = 'right';\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionStart = this.selectionEnd;\n    }\n    return changed;\n  },\n\n  /**\n   * Removes characters selected by selection\n   * @param {Event} e Event object\n   */\n  removeChars: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      this._removeCharsNearCursor(e);\n    }\n    else {\n      this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n    }\n\n    this.set('dirty', true);\n    this.setSelectionEnd(this.selectionStart);\n\n    this._removeExtraneousStyles();\n\n    this.canvas && this.canvas.renderAll();\n\n    this.setCoords();\n    this.fire('changed');\n    this.canvas && this.canvas.fire('text:changed', { target: this });\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   */\n  _removeCharsNearCursor: function(e) {\n    if (this.selectionStart === 0) {\n      return;\n    }\n    if (e.metaKey) {\n      // remove all till the start of current line\n      var leftLineBoundary = this.findLineBoundaryLeft(this.selectionStart);\n\n      this._removeCharsFromTo(leftLineBoundary, this.selectionStart);\n      this.setSelectionStart(leftLineBoundary);\n    }\n    else if (e.altKey) {\n      // remove all till the start of current word\n      var leftWordBoundary = this.findWordBoundaryLeft(this.selectionStart);\n\n      this._removeCharsFromTo(leftWordBoundary, this.selectionStart);\n      this.setSelectionStart(leftWordBoundary);\n    }\n    else {\n      this._removeSingleCharAndStyle(this.selectionStart);\n      this.setSelectionStart(this.selectionStart - 1);\n    }\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  var toFixed = fabric.util.toFixed,\n      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * @private\n     */\n    _setSVGTextLineText: function(lineIndex, textSpans, height, textLeftOffset, textTopOffset, textBgRects) {\n      if (!this._getLineStyle(lineIndex)) {\n        fabric.Text.prototype._setSVGTextLineText.call(this,\n          lineIndex, textSpans, height, textLeftOffset, textTopOffset);\n      }\n      else {\n        this._setSVGTextLineChars(\n          lineIndex, textSpans, height, textLeftOffset, textBgRects);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGTextLineChars: function(lineIndex, textSpans, height, textLeftOffset, textBgRects) {\n\n      var chars = this._textLines[lineIndex],\n          charOffset = 0,\n          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex)) - this.width / 2,\n          lineOffset = this._getSVGLineTopOffset(lineIndex),\n          heightOfLine = this._getHeightOfLine(this.ctx, lineIndex);\n\n      for (var i = 0, len = chars.length; i < len; i++) {\n        var styleDecl = this._getStyleDeclaration(lineIndex, i) || { };\n\n        textSpans.push(\n          this._createTextCharSpan(\n            chars[i], styleDecl, lineLeftOffset, lineOffset.lineTop + lineOffset.offset, charOffset));\n\n        var charWidth = this._getWidthOfChar(this.ctx, chars[i], lineIndex, i);\n\n        if (styleDecl.textBackgroundColor) {\n          textBgRects.push(\n            this._createTextCharBg(\n              styleDecl, lineLeftOffset, lineOffset.lineTop, heightOfLine, charWidth, charOffset));\n        }\n\n        charOffset += charWidth;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineTopOffset: function(lineIndex) {\n      var lineTopOffset = 0, lastHeight = 0;\n      for (var j = 0; j < lineIndex; j++) {\n        lineTopOffset += this._getHeightOfLine(this.ctx, j);\n      }\n      lastHeight = this._getHeightOfLine(this.ctx, j);\n      return {\n        lineTop: lineTopOffset,\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n      };\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharBg: function(styleDecl, lineLeftOffset, lineTopOffset, heightOfLine, charWidth, charOffset) {\n      return [\n        '\\t\\t<rect fill=\"', styleDecl.textBackgroundColor,\n        '\" x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS),\n        '\" y=\"', toFixed(lineTopOffset - this.height / 2, NUM_FRACTION_DIGITS),\n        '\" width=\"', toFixed(charWidth, NUM_FRACTION_DIGITS),\n        '\" height=\"', toFixed(heightOfLine / this.lineHeight, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n'\n      ].join('');\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharSpan: function(_char, styleDecl, lineLeftOffset, lineTopOffset, charOffset) {\n\n      var fillStyles = this.getSvgStyles.call(fabric.util.object.extend({\n        visible: true,\n        fill: this.fill,\n        stroke: this.stroke,\n        type: 'text',\n        getSvgFilter: fabric.Object.prototype.getSvgFilter\n      }, styleDecl));\n\n      return [\n        '\\t\\t\\t<tspan x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS), '\" y=\"',\n        toFixed(lineTopOffset - this.height / 2, NUM_FRACTION_DIGITS), '\" ',\n          (styleDecl.fontFamily ? 'font-family=\"' + styleDecl.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n          (styleDecl.fontSize ? 'font-size=\"' + styleDecl.fontSize + '\" ' : ''),\n          (styleDecl.fontStyle ? 'font-style=\"' + styleDecl.fontStyle + '\" ' : ''),\n          (styleDecl.fontWeight ? 'font-weight=\"' + styleDecl.fontWeight + '\" ' : ''),\n          (styleDecl.textDecoration ? 'text-decoration=\"' + styleDecl.textDecoration + '\" ' : ''),\n        'style=\"', fillStyles, '\">',\n        fabric.util.string.escapeXml(_char),\n        '</tspan>\\n'\n      ].join('');\n    },\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  /**\n   * Textbox class, based on IText, allows the user to resize the text rectangle\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n   * user can only change width. Height is adjusted automatically based on the\n   * wrapping of lines.\n   * @class fabric.Textbox\n   * @extends fabric.IText\n   * @mixes fabric.Observable\n   * @return {fabric.Textbox} thisArg\n   * @see {@link fabric.Textbox#initialize} for constructor definition\n   */\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'textbox',\n\n    /**\n     * Minimum width of textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    minWidth: 20,\n\n    /**\n     * Minimum calculated width of a textbox, in pixels.\n     * fixed to 2 so that an empty textbox cannot go to 0\n     * and is still selectable without text.\n     * @type Number\n     * @default\n     */\n    dynamicMinWidth: 2,\n\n    /**\n     * Cached array of text wrapping.\n     * @type Array\n     */\n    __cachedLines: null,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingY: true,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingFlip: true,\n\n    /**\n     * Override standard Object class values\n     * Textbox needs this on false\n     */\n    noScaleCache: false,\n\n    /**\n     * Constructor. Some scaling related property values are forced. Visibility\n     * of controls is also fixed; only the rotation and width controls are\n     * made available.\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Textbox} thisArg\n     */\n    initialize: function(text, options) {\n\n      this.callSuper('initialize', text, options);\n      this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n      this.ctx = this.objectCaching ? this._cacheContext : fabric.util.createCanvasElement().getContext('2d');\n      // add width to this list of props that effect line wrapping.\n      this._dimensionAffectingProps.push('width');\n    },\n\n    /**\n     * Unlike superclass's version of this function, Textbox does not update\n     * its width.\n     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n     * @private\n     * @override\n     */\n    _initDimensions: function(ctx) {\n      if (this.__skipDimension) {\n        return;\n      }\n\n      if (!ctx) {\n        ctx = fabric.util.createCanvasElement().getContext('2d');\n        this._setTextStyles(ctx);\n        this.clearContextTop();\n      }\n\n      // clear dynamicMinWidth as it will be different after we re-wrap line\n      this.dynamicMinWidth = 0;\n\n      // wrap lines\n      this._textLines = this._splitTextIntoLines(ctx);\n      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n      if (this.dynamicMinWidth > this.width) {\n        this._set('width', this.dynamicMinWidth);\n      }\n\n      // clear cache and re-calculate height\n      this._clearCache();\n      this.height = this._getTextHeight(ctx);\n    },\n\n    /**\n     * Generate an object that translates the style object so that it is\n     * broken up by visual lines (new lines and automatic wrapping).\n     * The original text styles object is broken up by actual lines (new lines only),\n     * which is only sufficient for Text / IText\n     * @private\n     */\n    _generateStyleMap: function() {\n      var realLineCount     = 0,\n          realLineCharCount = 0,\n          charCount         = 0,\n          map               = {};\n\n      for (var i = 0; i < this._textLines.length; i++) {\n        if (this.text[charCount] === '\\n' && i > 0) {\n          realLineCharCount = 0;\n          charCount++;\n          realLineCount++;\n        }\n        else if (this.text[charCount] === ' ' && i > 0) {\n          // this case deals with space's that are removed from end of lines when wrapping\n          realLineCharCount++;\n          charCount++;\n        }\n\n        map[i] = { line: realLineCount, offset: realLineCharCount };\n\n        charCount += this._textLines[i].length;\n        realLineCharCount += this._textLines[i].length;\n      }\n\n      return map;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Boolean} [returnCloneOrEmpty=false]\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n      if (this._styleMap) {\n        var map = this._styleMap[lineIndex];\n        if (!map) {\n          return returnCloneOrEmpty ? { } : null;\n        }\n        lineIndex = map.line;\n        charIndex = map.offset + charIndex;\n      }\n      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex, returnCloneOrEmpty);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      return this.styles[map.line];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      var map = this._styleMap[lineIndex];\n      this.styles[map.line] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      delete this.styles[map.line];\n    },\n\n    /**\n     * Wraps text using the 'width' property of Textbox. First this function\n     * splits text on newlines, so we preserve newlines entered by the user.\n     * Then it wraps each line using the width of the Textbox by calling\n     * _wrapLine().\n     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n     * @param {String} text The string of text that is split into lines\n     * @returns {Array} Array of lines\n     */\n    _wrapText: function(ctx, text) {\n      var lines = text.split(this._reNewline), wrapped = [], i;\n\n      for (i = 0; i < lines.length; i++) {\n        wrapped = wrapped.concat(this._wrapLine(ctx, lines[i], i));\n      }\n\n      return wrapped;\n    },\n\n    /**\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n     *\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {number} lineIndex\n     * @param {number} charOffset\n     * @returns {number}\n     * @private\n     */\n    _measureText: function(ctx, text, lineIndex, charOffset) {\n      var width = 0;\n      charOffset = charOffset || 0;\n      for (var i = 0, len = text.length; i < len; i++) {\n        width += this._getWidthOfChar(ctx, text[i], lineIndex, i + charOffset);\n      }\n      return width;\n    },\n\n    /**\n     * Wraps a line of text using the width of the Textbox and a context.\n     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n     * @param {String} text The string of text to split into lines\n     * @param {Number} lineIndex\n     * @returns {Array} Array of line(s) into which the given text is wrapped\n     * to.\n     */\n    _wrapLine: function(ctx, text, lineIndex) {\n      var lineWidth        = 0,\n          lines            = [],\n          line             = '',\n          words            = text.split(' '),\n          word             = '',\n          offset           = 0,\n          infix            = ' ',\n          wordWidth        = 0,\n          infixWidth       = 0,\n          largestWordWidth = 0,\n          lineJustStarted = true,\n          additionalSpace = this._getWidthOfCharSpacing();\n\n      for (var i = 0; i < words.length; i++) {\n        word = words[i];\n        wordWidth = this._measureText(ctx, word, lineIndex, offset);\n\n        offset += word.length;\n\n        lineWidth += infixWidth + wordWidth - additionalSpace;\n\n        if (lineWidth >= this.width && !lineJustStarted) {\n          lines.push(line);\n          line = '';\n          lineWidth = wordWidth;\n          lineJustStarted = true;\n        }\n        else {\n          lineWidth += additionalSpace;\n        }\n\n        if (!lineJustStarted) {\n          line += infix;\n        }\n        line += word;\n\n        infixWidth = this._measureText(ctx, infix, lineIndex, offset);\n        offset++;\n        lineJustStarted = false;\n        // keep track of largest word\n        if (wordWidth > largestWordWidth) {\n          largestWordWidth = wordWidth;\n        }\n      }\n\n      i && lines.push(line);\n\n      if (largestWordWidth > this.dynamicMinWidth) {\n        this.dynamicMinWidth = largestWordWidth - additionalSpace;\n      }\n\n      return lines;\n    },\n    /**\n     * Gets lines of text to render in the Textbox. This function calculates\n     * text wrapping on the fly everytime it is called.\n     * @returns {Array} Array of lines in the Textbox.\n     * @override\n     */\n    _splitTextIntoLines: function(ctx) {\n      ctx = ctx || this.ctx;\n      var originalAlign = this.textAlign;\n      this._styleMap = null;\n      ctx.save();\n      this._setTextStyles(ctx);\n      this.textAlign = 'left';\n      var lines = this._wrapText(ctx, this.text);\n      this.textAlign = originalAlign;\n      ctx.restore();\n      this._textLines = lines;\n      this._styleMap = this._generateStyleMap();\n      return lines;\n    },\n\n    /**\n     * When part of a group, we don't want the Textbox's scale to increase if\n     * the group's increases. That's why we reduce the scale of the Textbox by\n     * the amount that the group's increases. This is to maintain the effective\n     * scale of the Textbox at 1, so that font-size values make sense. Otherwise\n     * the same font-size value would result in different actual size depending\n     * on the value of the scale.\n     * @param {String} key\n     * @param {*} value\n     */\n    setOnGroup: function(key, value) {\n      if (key === 'scaleX') {\n        this.set('scaleX', Math.abs(1 / value));\n        this.set('width', (this.get('width') * value) /\n          (typeof this.__oldScaleX === 'undefined' ? 1 : this.__oldScaleX));\n        this.__oldScaleX = value;\n      }\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start).\n     * Overrides the superclass function to take into account text wrapping.\n     *\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     */\n    get2DCursorLocation: function(selectionStart) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n\n      var numLines = this._textLines.length,\n          removed  = 0;\n\n      for (var i = 0; i < numLines; i++) {\n        var line    = this._textLines[i],\n            lineLen = line.length;\n\n        if (selectionStart <= removed + lineLen) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart - removed\n          };\n        }\n\n        removed += lineLen;\n\n        if (this.text[removed] === '\\n' || this.text[removed] === ' ') {\n          removed++;\n        }\n      }\n\n      return {\n        lineIndex: numLines - 1,\n        charIndex: this._textLines[numLines - 1].length\n      };\n    },\n\n    /**\n     * Overrides superclass function and uses text wrapping data to get cursor\n     * boundary offsets instead of the array of chars.\n     * @param {Array} chars Unused\n     * @param {String} typeOfBoundaries Can be 'cursor' or 'selection'\n     * @returns {Object} Object with 'top', 'left', and 'lineLeft' properties set.\n     */\n    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n      var topOffset      = 0,\n          leftOffset     = 0,\n          cursorLocation = this.get2DCursorLocation(),\n          lineChars      = this._textLines[cursorLocation.lineIndex].split(''),\n          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, cursorLocation.lineIndex));\n\n      for (var i = 0; i < cursorLocation.charIndex; i++) {\n        leftOffset += this._getWidthOfChar(this.ctx, lineChars[i], cursorLocation.lineIndex, i);\n      }\n\n      for (i = 0; i < cursorLocation.lineIndex; i++) {\n        topOffset += this._getHeightOfLine(this.ctx, i);\n      }\n\n      if (typeOfBoundaries === 'cursor') {\n        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, cursorLocation.lineIndex)\n          / this.lineHeight - this.getCurrentCharFontSize(cursorLocation.lineIndex, cursorLocation.charIndex)\n          * (1 - this._fontSizeFraction);\n      }\n\n      return {\n        top: topOffset,\n        left: leftOffset,\n        lineLeft: lineLeftOffset\n      };\n    },\n\n    getMinWidth: function() {\n      return Math.max(this.minWidth, this.dynamicMinWidth);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['minWidth'].concat(propertiesToInclude));\n    }\n  });\n\n  /**\n   * Returns fabric.Textbox instance from an object representation\n   * @static\n   * @memberOf fabric.Textbox\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Textbox} instance of fabric.Textbox\n   */\n  fabric.Textbox.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Textbox', object, callback, forceAsync, 'text');\n  };\n\n  /**\n   * Returns the default controls visibility required for Textboxes.\n   * @returns {Object}\n   */\n  fabric.Textbox.getTextboxControlVisibility = function() {\n    return {\n      tl: false,\n      tr: false,\n      br: false,\n      bl: false,\n      ml: true,\n      mt: false,\n      mr: true,\n      mb: false,\n      mtr: true\n    };\n  };\n\n})( true ? exports : this);\n\n\n(function() {\n\n  /**\n   * Override _setObjectScale and add Textbox specific resizing behavior. Resizing\n   * a Textbox doesn't scale text, it only changes width and makes text wrap automatically.\n   */\n  var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\n\n  fabric.Canvas.prototype._setObjectScale = function(localMouse, transform,\n                                                     lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\n    var t = transform.target;\n    if (t instanceof fabric.Textbox) {\n      var w = t.width * ((localMouse.x / transform.scaleX) / (t.width + t.strokeWidth));\n      if (w >= t.getMinWidth()) {\n        t.set('width', w);\n        return true;\n      }\n    }\n    else {\n      return setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform,\n        lockScalingX, lockScalingY, by, lockScalingFlip, _dim);\n    }\n  };\n\n  /**\n   * Sets controls of this group to the Textbox's special configuration if\n   * one is present in the group. Deletes _controlsVisibility otherwise, so that\n   * it gets initialized to default value at runtime.\n   */\n  fabric.Group.prototype._refreshControlsVisibility = function() {\n    if (typeof fabric.Textbox === 'undefined') {\n      return;\n    }\n    for (var i = this._objects.length; i--;) {\n      if (this._objects[i] instanceof fabric.Textbox) {\n        this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n        return;\n      }\n    }\n  };\n\n  fabric.util.object.extend(fabric.Textbox.prototype, /** @lends fabric.IText.prototype */ {\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this._styleMap) {\n        if (!this._textLines[prop]) {\n          delete this.styles[this._styleMap[prop].line];\n        }\n      }\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Object} [style] Style object to insert, if given\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, style) {\n      // adjust lineIndex and charIndex\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      fabric.IText.prototype.insertCharStyleObject.apply(this, [lineIndex, charIndex, style]);\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Boolean} isEndOfLine True if it's end of line\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n      // adjust lineIndex and charIndex\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      fabric.IText.prototype.insertNewlineStyleObject.apply(this, [lineIndex, charIndex, isEndOfLine]);\n    },\n\n    /**\n     * Shifts line styles up or down. This function is slightly different than the one in\n     * itext_behaviour as it takes into account the styleMap.\n     *\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can be -1 or +1\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by 1 upward\n      var map = this._styleMap[lineIndex];\n      // adjust line index\n      lineIndex = map.line;\n      fabric.IText.prototype.shiftLineStyles.call(this, lineIndex, offset);\n    },\n\n    /**\n     * Figure out programatically the text on previous actual line (actual = separated by \\n);\n     *\n     * @param {Number} lIndex\n     * @returns {String}\n     * @private\n     */\n    _getTextOnPreviousLine: function(lIndex) {\n      var textOnPreviousLine = this._textLines[lIndex - 1];\n\n      while (this._styleMap[lIndex - 2] && this._styleMap[lIndex - 2].line === this._styleMap[lIndex - 1].line) {\n        textOnPreviousLine = this._textLines[lIndex - 2] + textOnPreviousLine;\n\n        lIndex--;\n      }\n\n      return textOnPreviousLine;\n    },\n\n    /**\n     * Removes style object\n     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n     */\n    removeStyleObject: function(isBeginningOfLine, index) {\n\n      var cursorLocation = this.get2DCursorLocation(index),\n          map            = this._styleMap[cursorLocation.lineIndex],\n          lineIndex      = map.line,\n          charIndex      = map.offset + cursorLocation.charIndex;\n      this._removeStyleObject(isBeginningOfLine, cursorLocation, lineIndex, charIndex);\n    }\n  });\n})();\n\n\n(function() {\n  var override = fabric.IText.prototype._getNewSelectionStartFromOffset;\n  /**\n   * Overrides the IText implementation and adjusts character index as there is not always a linebreak\n   *\n   * @param {Number} mouseOffset\n   * @param {Number} prevWidth\n   * @param {Number} width\n   * @param {Number} index\n   * @param {Number} jlen\n   * @returns {Number}\n   */\n  fabric.IText.prototype._getNewSelectionStartFromOffset = function(mouseOffset, prevWidth, width, index, jlen) {\n    index = override.call(this, mouseOffset, prevWidth, width, index, jlen);\n\n    // the index passed into the function is padded by the amount of lines from _textLines (to account for \\n)\n    // we need to remove this padding, and pad it by actual lines, and / or spaces that are meant to be there\n    var tmp     = 0,\n        removed = 0;\n\n    // account for removed characters\n    for (var i = 0; i < this._textLines.length; i++) {\n      tmp += this._textLines[i].length;\n\n      if (tmp + removed >= index) {\n        break;\n      }\n\n      if (this.text[tmp + removed] === '\\n' || this.text[tmp + removed] === ' ') {\n        removed++;\n      }\n    }\n\n    return index - i + removed;\n  };\n})();\n\n\n(function() {\n\n  if (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    return;\n  }\n\n  var DOMParser = __webpack_require__(42).DOMParser,\n      URL = __webpack_require__(19),\n      HTTP = __webpack_require__(20),\n      HTTPS = __webpack_require__(60),\n\n      Canvas = __webpack_require__(14),\n      Image = __webpack_require__(14).Image;\n\n  /** @private */\n  function request(url, encoding, callback) {\n    var oURL = URL.parse(url);\n\n    // detect if http or https is used\n    if ( !oURL.port ) {\n      oURL.port = ( oURL.protocol.indexOf('https:') === 0 ) ? 443 : 80;\n    }\n\n    // assign request handler based on protocol\n    var reqHandler = (oURL.protocol.indexOf('https:') === 0 ) ? HTTPS : HTTP,\n        req = reqHandler.request({\n          hostname: oURL.hostname,\n          port: oURL.port,\n          path: oURL.path,\n          method: 'GET'\n        }, function(response) {\n          var body = '';\n          if (encoding) {\n            response.setEncoding(encoding);\n          }\n          response.on('end', function () {\n            callback(body);\n          });\n          response.on('data', function (chunk) {\n            if (response.statusCode === 200) {\n              body += chunk;\n            }\n          });\n        });\n\n    req.on('error', function(err) {\n      if (err.errno === process.ECONNREFUSED) {\n        fabric.log('ECONNREFUSED: connection refused to ' + oURL.hostname + ':' + oURL.port);\n      }\n      else {\n        fabric.log(err.message);\n      }\n      callback(null);\n    });\n\n    req.end();\n  }\n\n  /** @private */\n  function requestFs(path, callback) {\n    var fs = __webpack_require__(61);\n    fs.readFile(path, function (err, data) {\n      if (err) {\n        fabric.log(err);\n        throw err;\n      }\n      else {\n        callback(data);\n      }\n    });\n  }\n\n  fabric.util.loadImage = function(url, callback, context) {\n    function createImageAndCallBack(data) {\n      if (data) {\n        img.src = new Buffer(data, 'binary');\n        // preserving original url, which seems to be lost in node-canvas\n        img._src = url;\n        callback && callback.call(context, img);\n      }\n      else {\n        img = null;\n        callback && callback.call(context, null, true);\n      }\n    }\n    var img = new Image();\n    if (url && (url instanceof Buffer || url.indexOf('data') === 0)) {\n      img.src = img._src = url;\n      callback && callback.call(context, img);\n    }\n    else if (url && url.indexOf('http') !== 0) {\n      requestFs(url, createImageAndCallBack);\n    }\n    else if (url) {\n      request(url, 'binary', createImageAndCallBack);\n    }\n    else {\n      callback && callback.call(context, url);\n    }\n  };\n\n  fabric.loadSVGFromURL = function(url, callback, reviver) {\n    url = url.replace(/^\\n\\s*/, '').replace(/\\?.*$/, '').trim();\n    if (url.indexOf('http') !== 0) {\n      requestFs(url, function(body) {\n        fabric.loadSVGFromString(body.toString(), callback, reviver);\n      });\n    }\n    else {\n      request(url, '', function(body) {\n        fabric.loadSVGFromString(body, callback, reviver);\n      });\n    }\n  };\n\n  fabric.loadSVGFromString = function(string, callback, reviver) {\n    var doc = new DOMParser().parseFromString(string);\n    fabric.parseSVGDocument(doc.documentElement, function(results, options) {\n      callback && callback(results, options);\n    }, reviver);\n  };\n\n  fabric.util.getScript = function(url, callback) {\n    request(url, '', function(body) {\n      // eslint-disable-next-line no-eval\n      eval(body);\n      callback && callback();\n    });\n  };\n\n  // fabric.util.createCanvasElement = function(_, width, height) {\n  //   return new Canvas(width, height);\n  // }\n\n  /**\n   * Only available when running fabric on node.js\n   * @param {Number} width Canvas width\n   * @param {Number} height Canvas height\n   * @param {Object} [options] Options to pass to FabricCanvas.\n   * @param {Object} [nodeCanvasOptions] Options to pass to NodeCanvas.\n   * @return {Object} wrapped canvas instance\n   */\n  fabric.createCanvasForNode = function(width, height, options, nodeCanvasOptions) {\n    nodeCanvasOptions = nodeCanvasOptions || options;\n\n    var canvasEl = fabric.document.createElement('canvas'),\n        nodeCanvas = new Canvas(width || 600, height || 600, nodeCanvasOptions),\n        nodeCacheCanvas = new Canvas(width || 600, height || 600, nodeCanvasOptions);\n\n    // jsdom doesn't create style on canvas element, so here be temp. workaround\n    canvasEl.style = { };\n\n    canvasEl.width = nodeCanvas.width;\n    canvasEl.height = nodeCanvas.height;\n    options = options || { };\n    options.nodeCanvas = nodeCanvas;\n    options.nodeCacheCanvas = nodeCacheCanvas;\n    var FabricCanvas = fabric.Canvas || fabric.StaticCanvas,\n        fabricCanvas = new FabricCanvas(canvasEl, options);\n    fabricCanvas.nodeCanvas = nodeCanvas;\n    fabricCanvas.nodeCacheCanvas = nodeCacheCanvas;\n    fabricCanvas.contextContainer = nodeCanvas.getContext('2d');\n    fabricCanvas.contextCache = nodeCacheCanvas.getContext('2d');\n    fabricCanvas.Font = Canvas.Font;\n    return fabricCanvas;\n  };\n\n  var originaInitStatic = fabric.StaticCanvas.prototype._initStatic;\n  fabric.StaticCanvas.prototype._initStatic = function(el, options) {\n    el = el || fabric.document.createElement('canvas');\n    this.nodeCanvas = new Canvas(el.width, el.height);\n    this.nodeCacheCanvas = new Canvas(el.width, el.height);\n    originaInitStatic.call(this, el, options);\n    this.contextContainer = this.nodeCanvas.getContext('2d');\n    this.contextCache = this.nodeCacheCanvas.getContext('2d');\n    this.Font = Canvas.Font;\n  };\n\n  /** @ignore */\n  fabric.StaticCanvas.prototype.createPNGStream = function() {\n    return this.nodeCanvas.createPNGStream();\n  };\n\n  fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n    return this.nodeCanvas.createJPEGStream(opts);\n  };\n\n  fabric.StaticCanvas.prototype._initRetinaScaling = function() {\n    if (!this._isRetinaScaling()) {\n      return;\n    }\n\n    this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n    this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n    this.nodeCanvas.width = this.width * fabric.devicePixelRatio;\n    this.nodeCanvas.height = this.height * fabric.devicePixelRatio;\n    this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    return this;\n  };\n  if (fabric.Canvas) {\n    fabric.Canvas.prototype._initRetinaScaling = fabric.StaticCanvas.prototype._initRetinaScaling;\n  }\n\n  var origSetBackstoreDimension = fabric.StaticCanvas.prototype._setBackstoreDimension;\n  fabric.StaticCanvas.prototype._setBackstoreDimension = function(prop, value) {\n    origSetBackstoreDimension.call(this, prop, value);\n    this.nodeCanvas[prop] = value;\n    return this;\n  };\n  if (fabric.Canvas) {\n    fabric.Canvas.prototype._setBackstoreDimension = fabric.StaticCanvas.prototype._setBackstoreDimension;\n  }\n\n})();\n\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5).Buffer, __webpack_require__(2)))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = __webpack_require__(35)(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = __webpack_require__(38)();\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nvar g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(10);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _fabric = __webpack_require__(0);\n\nvar _deepDiff = __webpack_require__(30);\n\nvar _deepDiff2 = _interopRequireDefault(_deepDiff);\n\nvar _observable = __webpack_require__(31);\n\nvar _observable2 = _interopRequireDefault(_observable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FabricObject = function (_React$Component) {\n\t_inherits(FabricObject, _React$Component);\n\n\tfunction FabricObject(props, context) {\n\t\t_classCallCheck(this, FabricObject);\n\n\t\t// Observable\n\t\tvar _this = _possibleConstructorReturn(this, (FabricObject.__proto__ || Object.getPrototypeOf(FabricObject)).call(this, props, context));\n\n\t\t(0, _observable2.default)(_this);\n\n\t\t//Object\n\t\t_this.adjustPosition = function (to) {\n\t\t\treturn _this.state.object && _this.state.object.adjustPosition(to);\n\t\t};\n\t\t_this.animate = function (property, value, opts) {\n\t\t\treturn _this.state.object && _this.state.object.animate(property, value, opts);\n\t\t};\n\t\t_this.bringForward = function (intersecting) {\n\t\t\treturn _this.state.object && _this.state.object.bringForward(intersecting);\n\t\t};\n\t\t_this.bringToFront = function () {\n\t\t\treturn _this.state.object && _this.state.object.bringToFront();\n\t\t};\n\t\t_this.center = function () {\n\t\t\treturn _this.state.object && _this.state.object.center();\n\t\t};\n\t\t_this.centerH = function () {\n\t\t\treturn _this.state.object && _this.state.object.centerH();\n\t\t};\n\t\t_this.centerV = function () {\n\t\t\treturn _this.state.object && _this.state.object.centerV();\n\t\t};\n\t\t_this.clone = function (callback, propertiesToInclude) {\n\t\t\treturn _this.state.object && _this.state.object.clone(callback, propertiesToInclude);\n\t\t};\n\t\t_this.cloneAsImage = function (callback) {\n\t\t\treturn _this.state.object && _this.state.object.cloneAsImage(callback);\n\t\t};\n\t\t_this.complexity = function () {\n\t\t\treturn _this.state.object && _this.state.object.complexity();\n\t\t};\n\t\t_this.containsPoint = function (point) {\n\t\t\treturn _this.state.object && _this.state.object.containsPoint(point);\n\t\t};\n\t\t_this.drawBorders = function (ctx) {\n\t\t\treturn _this.state.object && _this.state.object.drawBorders(ctx);\n\t\t};\n\t\t_this.drawControls = function (ctx) {\n\t\t\treturn _this.state.object && _this.state.object.drawControls(ctx);\n\t\t};\n\t\t_this.fxStraighten = function (callbacks) {\n\t\t\treturn _this.state.object && _this.state.object.fxStraighten(callbacks);\n\t\t};\n\t\t_this.get = function (property) {\n\t\t\treturn _this.state.object && _this.state.object.get(property);\n\t\t};\n\t\t_this.getAngle = function () {\n\t\t\treturn _this.state.object && _this.state.object.getAngle();\n\t\t};\n\t\t_this.getBoundingRect = function () {\n\t\t\treturn _this.state.object && _this.state.object.getBoundingRect();\n\t\t};\n\t\t_this.getBoundingRectHeight = function () {\n\t\t\treturn _this.state.object && _this.state.object.getBoundingRectHeight();\n\t\t};\n\t\t_this.getBoundingRectWidth = function () {\n\t\t\treturn _this.state.object && _this.state.object.getBoundingRectWidth();\n\t\t};\n\t\t_this.getCenterPoint = function () {\n\t\t\treturn _this.state.object && _this.state.object.getCenterPoint();\n\t\t};\n\t\t_this.getClipTo = function () {\n\t\t\treturn _this.state.object && _this.state.object.getClipTo();\n\t\t};\n\t\t_this.getFill = function () {\n\t\t\treturn _this.state.object && _this.state.object.getFill();\n\t\t};\n\t\t_this.getFlipX = function () {\n\t\t\treturn _this.state.object && _this.state.object.getFlipX();\n\t\t};\n\t\t_this.getFlipY = function () {\n\t\t\treturn _this.state.object && _this.state.object.getFlipY();\n\t\t};\n\t\t_this.getLeft = function () {\n\t\t\treturn _this.state.object && _this.state.object.getLeft();\n\t\t};\n\t\t_this.getLocalPointer = function (e, pointer) {\n\t\t\treturn _this.state.object && _this.state.object.getLocalPointer(e, pointer);\n\t\t};\n\t\t_this.getOpacity = function () {\n\t\t\treturn _this.state.object && _this.state.object.getOpacity();\n\t\t};\n\t\t_this.getOriginX = function () {\n\t\t\treturn _this.state.object && _this.state.object.getOriginX();\n\t\t};\n\t\t_this.getOriginY = function () {\n\t\t\treturn _this.state.object && _this.state.object.getOriginY();\n\t\t};\n\t\t_this.getPointByOrigin = function (originX, originY) {\n\t\t\treturn _this.state.object && _this.state.object.getPointByOrigin(originX, originY);\n\t\t};\n\n\t\t_this.getScaleX = function () {\n\t\t\treturn _this.state.object && _this.state.object.getScaleX();\n\t\t};\n\t\t_this.getScaleY = function () {\n\t\t\treturn _this.state.object && _this.state.object.getScaleY();\n\t\t};\n\t\t_this.getShadow = function () {\n\t\t\treturn _this.state.object && _this.state.object.getShadow();\n\t\t};\n\t\t_this.getStrokeWidth = function () {\n\t\t\treturn _this.state.object && _this.state.object.getStrokeWidth();\n\t\t};\n\t\t_this.getSvgStyles = function () {\n\t\t\treturn _this.state.object && _this.state.object.getSvgStyles();\n\t\t};\n\t\t_this.getSvgTransform = function () {\n\t\t\treturn _this.state.object && _this.state.object.getSvgTransform();\n\t\t};\n\t\t_this.getSvgTransformMatrix = function () {\n\t\t\treturn _this.state.object && _this.state.object.getSvgTransformMatrix();\n\t\t};\n\t\t_this.getTop = function () {\n\t\t\treturn _this.state.object && _this.state.object.getTop();\n\t\t};\n\t\t_this.getTransformMatrix = function () {\n\t\t\treturn _this.state.object && _this.state.object.getTransformMatrix();\n\t\t};\n\t\t_this.getViewportTransform = function () {\n\t\t\treturn _this.state.object && _this.state.object.getViewportTransform();\n\t\t};\n\t\t_this.getVisible = function () {\n\t\t\treturn _this.state.object && _this.state.object.getVisible();\n\t\t};\n\t\t_this.getWidth = function () {\n\t\t\treturn _this.state.object && _this.state.object.getWidth();\n\t\t};\n\t\t_this.hasStateChanged = function () {\n\t\t\treturn _this.state.object && _this.state.object.hasStateChanged();\n\t\t};\n\t\t_this.intersectsWithObject = function (other) {\n\t\t\treturn _this.state.object && _this.state.object.intersectsWithObject(other);\n\t\t};\n\t\t_this.intersectsWithRect = function (pointTL, pointBR) {\n\t\t\treturn _this.state.object && _this.state.object.intersectsWithRect(pointTL, pointBR);\n\t\t};\n\t\t_this.isContainedWithinObject = function (other) {\n\t\t\treturn _this.state.object && _this.state.object.isContainedWithinObject(other);\n\t\t};\n\t\t_this.isContainedWithinRect = function (pointTL, pointBR) {\n\t\t\treturn _this.state.object && _this.state.object.isContainedWithinRect(pointTL, pointBR);\n\t\t};\n\t\t_this.isControlVisible = function (controlName) {\n\t\t\treturn _this.state.object && _this.state.object.isControlVisible(controlName);\n\t\t};\n\t\t_this.isType = function (type) {\n\t\t\treturn _this.state.object && _this.state.object.isType(type);\n\t\t};\n\t\t_this.moveTo = function (index) {\n\t\t\treturn _this.state.object && _this.state.object.moveTo(index);\n\t\t};\n\t\t_this.remove = function () {\n\t\t\treturn _this.state.object && _this.state.object.remove();\n\t\t};\n\t\t_this.renderf = function (ctx, noTransform) {\n\t\t\treturn _this.state.object && _this.state.object.render(ctx, noTransform);\n\t\t};\n\t\t_this.saveState = function (options) {\n\t\t\treturn _this.state.object && _this.state.object.saveState(options);\n\t\t};\n\t\t_this.scale = function (value) {\n\t\t\treturn _this.state.object && _this.state.object.scale(value);\n\t\t};\n\t\t_this.scaleToHeight = function (value) {\n\t\t\treturn _this.state.object && _this.state.object.scaleToHeight(value);\n\t\t};\n\t\t_this.scaleToWidth = function (value) {\n\t\t\treturn _this.state.object && _this.state.object.scaleToWidth(value);\n\t\t};\n\t\t_this.sendBackwards = function () {\n\t\t\treturn _this.state.object && _this.state.object.sendBackwards();\n\t\t};\n\t\t_this.sendToBack = function () {\n\t\t\treturn _this.state.object && _this.state.object.sendToBack();\n\t\t};\n\t\t_this.set = function (key, value) {\n\t\t\treturn _this.state.object && _this.state.object.set(key, value);\n\t\t};\n\t\t_this.setAngle = function (value) {\n\t\t\treturn _this.state.object && _this.state.object.setAngle(value);\n\t\t};\n\t\t_this.setClipTo = function (clipTo) {\n\t\t\treturn _this.state.object && _this.state.object.setClipTo(clipTo);\n\t\t};\n\t\t_this.setColor = function (color) {\n\t\t\treturn _this.state.object && _this.state.object.setColor(color);\n\t\t};\n\t\t_this.setControlsVisibility = function (options) {\n\t\t\treturn _this.state.object && _this.state.object.setControlsVisibility(options);\n\t\t};\n\t\t_this.setControlVisible = function (controlName, visible) {\n\t\t\treturn _this.state.object && _this.state.object.setControlVisible(controlName, visible);\n\t\t};\n\t\t_this.setCoords = function (value) {\n\t\t\treturn _this.state.object && _this.state.object.setCoords(value);\n\t\t};\n\t\t_this.setFill = function (value) {\n\t\t\treturn _this.state.object && _this.state.object.setFill(value);\n\t\t};\n\t\t_this.setFlipX = function (value) {\n\t\t\treturn _this.state.object && _this.state.object.setFlipX(value);\n\t\t};\n\t\t_this.setFlipY = function (value) {\n\t\t\treturn _this.state.object && _this.state.object.setFlipY(value);\n\t\t};\n\t\t_this.setGradient = function (property, options) {\n\t\t\treturn _this.state.object && _this.state.object.setGradient(property, options);\n\t\t};\n\t\t_this.setLeft = function (value) {\n\t\t\treturn _this.state.object && _this.state.object.setLeft(value);\n\t\t};\n\t\t_this.setOpacity = function (value) {\n\t\t\treturn _this.state.object && _this.state.object.setOpacity(value);\n\t\t};\n\t\t_this.setOptions = function (options) {\n\t\t\treturn _this.state.object && _this.state.object.setOptions(options);\n\t\t};\n\t\t_this.setOriginX = function (value) {\n\t\t\treturn _this.state.object && _this.state.object.setOriginX(value);\n\t\t};\n\t\t_this.setOriginY = function (value) {\n\t\t\treturn _this.state.object && _this.state.object.setOriginY(value);\n\t\t};\n\t\t_this.setPatternFill = function (options) {\n\t\t\treturn _this.state.object && _this.state.object.setPatternFill(options);\n\t\t};\n\t\t_this.setPositionByOrigin = function (pos, originX, originY) {\n\t\t\treturn _this.state.object && _this.state.object.setPositionByOrigin(pos, originX, originY);\n\t\t};\n\t\t_this.setScaleX = function (value) {\n\t\t\treturn _this.state.object && _this.state.object.setScaleX(value);\n\t\t};\n\t\t_this.setScaleY = function (value) {\n\t\t\treturn _this.state.object && _this.state.object.setScaleY(value);\n\t\t};\n\t\t_this.setShadow = function (options) {\n\t\t\treturn _this.state.object && _this.state.object.setShadow(options);\n\t\t};\n\t\t_this.setSourcePath = function (value) {\n\t\t\treturn _this.state.object && _this.state.object.setSourcePath(value);\n\t\t};\n\t\t_this.setStroke = function (value) {\n\t\t\treturn _this.state.object && _this.state.object.setStroke(value);\n\t\t};\n\t\t_this.setStrokeWidth = function (value) {\n\t\t\treturn _this.state.object && _this.state.object.setStrokeWidth(value);\n\t\t};\n\t\t_this.setTop = function (value) {\n\t\t\treturn _this.state.object && _this.state.object.setTop(value);\n\t\t};\n\t\t_this.setTransformMatrix = function (transformMatrix) {\n\t\t\treturn _this.state.object && _this.state.object.setTransformMatrix(transformMatrix);\n\t\t};\n\t\t_this.setupState = function () {\n\t\t\treturn _this.state.object && _this.state.object.setupState(value);\n\t\t};\n\t\t_this.setVisible = function (value) {\n\t\t\treturn _this.state.object && _this.state.object.setVisible(value);\n\t\t};\n\t\t_this.straighten = function () {\n\t\t\treturn _this.state.object && _this.state.object.straighten();\n\t\t};\n\t\t_this.toDatalessObject = function (propertiesToInclude) {\n\t\t\treturn _this.state.object && _this.state.object.toDatalessObject();\n\t\t};\n\t\t_this.toDataURL = function () {\n\t\t\treturn _this.state.object && _this.state.object.toDataURL(options);\n\t\t};\n\t\t_this.toggle = function (property) {\n\t\t\treturn _this.state.object && _this.state.object.toggle(property);\n\t\t};\n\t\t_this.toJSON = function (propertiesToInclude) {\n\t\t\treturn _this.state.object && _this.state.object.toJSON(propertiesToInclude);\n\t\t};\n\t\t_this.toLocalPoint = function (point, originX, originY) {\n\t\t\treturn _this.state.object && _this.state.object.toLocalPoint(point, originX, originY);\n\t\t};\n\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t};\n\t\t_this.toString = function () {\n\t\t\treturn _this.state.object && _this.state.object.toString();\n\t\t};\n\t\t_this.transform = function (ctx, fromLeft) {\n\t\t\treturn _this.state.object && _this.state.object.transform(ctx, fromLeft);\n\t\t};\n\t\t_this.translateToCenterPoint = function (point, originX, originY) {\n\t\t\treturn _this.state.object && _this.state.object.translateToCenterPoint(point, originX, originY);\n\t\t};\n\t\t_this.translateToOriginPoint = function (point, originX, originY) {\n\t\t\treturn _this.state.object && _this.state.object.translateToOriginPoint(point, originX, originY);\n\t\t};\n\n\t\t// React\n\t\t_this.getObject = function () {\n\t\t\treturn _this.state.object;\n\t\t};\n\t\treturn _this;\n\t}\n\n\t_createClass(FabricObject, [{\n\t\tkey: 'componentWillReceiveProps',\n\t\tvalue: function componentWillReceiveProps(nextProps) {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar difference = (0, _deepDiff2.default)(this.props, nextProps);\n\t\t\tif (difference) {\n\t\t\t\tdifference.forEach(function (comparsion) {\n\t\t\t\t\t_this2.set(comparsion.path[0], comparsion.rhs);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.eventChanged(nextProps);\n\t\t}\n\t}, {\n\t\tkey: 'draw',\n\t\tvalue: function draw(object, cb) {\n\t\t\tvar _this3 = this;\n\n\t\t\tthis.setState({ object: object }, function () {\n\t\t\t\tcb && cb(object);\n\t\t\t\t_this3.initEvent();\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'initEvent',\n\t\tvalue: function initEvent() {\n\t\t\tvar object = this.state.object;\n\n\t\t\tif (!(object instanceof _fabric.fabric.Object)) return;\n\n\t\t\tif (this.props.onAdded instanceof Function) {\n\t\t\t\tobject.on('added', this.props.onAdded);\n\t\t\t}\n\t\t\tif (this.props.onRemoved instanceof Function) {\n\t\t\t\tobject.on('removed', this.props.onRemoved);\n\t\t\t}\n\t\t\tif (this.props.onSelected instanceof Function) {\n\t\t\t\tobject.on('selected', this.props.onSelected);\n\t\t\t}\n\t\t\tif (this.props.onDeSelected instanceof Function) {\n\t\t\t\tobject.on('deselected', this.props.onDeSelected);\n\t\t\t}\n\t\t\tif (this.props.onModified instanceof Function) {\n\t\t\t\tobject.on('modified', this.props.onModified);\n\t\t\t}\n\t\t\tif (this.props.onRotating instanceof Function) {\n\t\t\t\tobject.on('rotating', this.props.onRotating);\n\t\t\t}\n\t\t\tif (this.props.onScaling instanceof Function) {\n\t\t\t\tobject.on('scaling', this.props.onScaling);\n\t\t\t}\n\t\t\tif (this.props.onMoving instanceof Function) {\n\t\t\t\tobject.on('moving', this.props.onMoving);\n\t\t\t}\n\t\t\tif (this.props.onSkewing instanceof Function) {\n\t\t\t\tobject.on('skewing', this.props.onSkewing);\n\t\t\t}\n\t\t\tif (this.props.onMousedown instanceof Function) {\n\t\t\t\tobject.on('mousedown', this.props.onMousedown);\n\t\t\t}\n\t\t\tif (this.props.onMouseup instanceof Function) {\n\t\t\t\tobject.on('mouseup', this.props.onMouseup);\n\t\t\t}\n\t\t\tif (this.props.onMouseover instanceof Function) {\n\t\t\t\tobject.on('mouseover', this.props.onMouseover);\n\t\t\t}\n\t\t\tif (this.props.onMouseout instanceof Function) {\n\t\t\t\tobject.on('mouseout', this.props.onMouseout);\n\t\t\t}\n\t\t\tif (this.props.onMousewheel instanceof Function) {\n\t\t\t\tobject.on('mousewheel', this.props.onMousewheel);\n\t\t\t}\n\t\t\tif (this.props.onMousedbclick instanceof Function) {\n\t\t\t\tobject.on('mousedbclick', this.props.onMousedbclick);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'eventChanged',\n\t\tvalue: function eventChanged(nextProps) {\n\t\t\tvar object = this.state.object;\n\n\t\t\tif (!(object instanceof _fabric.fabric.Object)) return;\n\n\t\t\tif (this.props.onAdded && !nextProps.onAdded) {\n\t\t\t\tobject.off('added');\n\t\t\t} else if (nextProps.onAdded instanceof Function) {\n\t\t\t\tobject.off('added');\n\t\t\t\tobject.on('added', this.props.onAdded);\n\t\t\t}\n\n\t\t\tif (this.props.onRemoved && !nextProps.onRemoved) {\n\t\t\t\tobject.off('removed');\n\t\t\t} else if (nextProps.onRemoved instanceof Function) {\n\t\t\t\tobject.off('removed');\n\t\t\t\tobject.on('removed', this.props.onRemoved);\n\t\t\t}\n\n\t\t\tif (this.props.onSelected && !nextProps.onSelected) {\n\t\t\t\tobject.off('selected');\n\t\t\t} else if (nextProps.onSelected instanceof Function) {\n\t\t\t\tobject.off('selected');\n\t\t\t\tobject.on('selected', this.props.onSelected);\n\t\t\t}\n\n\t\t\tif (this.props.onDeSelected && !nextProps.onDeSelected) {\n\t\t\t\tobject.off('deselected');\n\t\t\t} else if (nextProps.onDeSelected instanceof Function) {\n\t\t\t\tobject.off('deselected');\n\t\t\t\tobject.on('deselected', this.props.onDeSelected);\n\t\t\t}\n\n\t\t\tif (this.props.onModified && !nextProps.onModified) {\n\t\t\t\tobject.off('modified');\n\t\t\t} else if (nextProps.onModified instanceof Function) {\n\t\t\t\tobject.off('modified');\n\t\t\t\tobject.on('modified', this.props.onModified);\n\t\t\t}\n\n\t\t\tif (this.props.onRotating && !nextProps.onRotating) {\n\t\t\t\tobject.off('rotating');\n\t\t\t} else if (nextProps.onRotating instanceof Function) {\n\t\t\t\tobject.off('rotating');\n\t\t\t\tobject.on('rotating', this.props.onRotating);\n\t\t\t}\n\n\t\t\tif (this.props.onScaling && !nextProps.onScaling) {\n\t\t\t\tobject.off('scaling');\n\t\t\t} else if (nextProps.onScaling instanceof Function) {\n\t\t\t\tobject.off('scaling');\n\t\t\t\tobject.on('scaling', this.props.onScaling);\n\t\t\t}\n\n\t\t\tif (this.props.onMoving && !nextProps.onMoving) {\n\t\t\t\tobject.off('moving');\n\t\t\t} else if (nextProps.onMoving instanceof Function) {\n\t\t\t\tobject.off('moving');\n\t\t\t\tobject.on('moving', this.props.onMoving);\n\t\t\t}\n\n\t\t\tif (this.props.onSkewing && !nextProps.onSkewing) {\n\t\t\t\tobject.off('skewing');\n\t\t\t} else if (nextProps.onSkewing instanceof Function) {\n\t\t\t\tobject.off('skewing');\n\t\t\t\tobject.on('skewing', this.props.onSkewing);\n\t\t\t}\n\n\t\t\tif (this.props.onMousedown && !nextProps.onMousedown) {\n\t\t\t\tobject.off('mousedown');\n\t\t\t} else if (nextProps.onMousedown instanceof Function) {\n\t\t\t\tobject.off('mousedown');\n\t\t\t\tobject.on('mousedown', this.props.onMousedown);\n\t\t\t}\n\n\t\t\tif (this.props.onMouseup && !nextProps.onMouseup) {\n\t\t\t\tobject.off('mouseup');\n\t\t\t} else if (nextProps.onMouseup instanceof Function) {\n\t\t\t\tobject.off('mouseup');\n\t\t\t\tobject.on('mouseup', this.props.onMouseup);\n\t\t\t}\n\n\t\t\tif (this.props.onMouseover && !nextProps.onMouseover) {\n\t\t\t\tobject.off('mouseover');\n\t\t\t} else if (nextProps.onMouseover instanceof Function) {\n\t\t\t\tobject.off('mouseover');\n\t\t\t\tobject.on('mouseover', this.props.onMouseover);\n\t\t\t}\n\n\t\t\tif (this.props.onMouseout && !nextProps.onMouseout) {\n\t\t\t\tobject.off('mouseout');\n\t\t\t} else if (nextProps.onMouseout instanceof Function) {\n\t\t\t\tobject.off('mouseout');\n\t\t\t\tobject.on('mouseout', this.props.onMouseout);\n\t\t\t}\n\n\t\t\tif (this.props.onMousewheel && !nextProps.onMousewheel) {\n\t\t\t\tobject.off('mousewheel');\n\t\t\t} else if (nextProps.onMousewheel instanceof Function) {\n\t\t\t\tobject.off('mousewheel');\n\t\t\t\tobject.on('mousewheel', this.props.onMousewheel);\n\t\t\t}\n\n\t\t\tif (this.props.onMousedbclick && !nextProps.onMousedbclick) {\n\t\t\t\tobject.off('mousedbclick');\n\t\t\t} else if (nextProps.onMousedbclick instanceof Function) {\n\t\t\t\tobject.off('mousedbclick');\n\t\t\t\tobject.on('mousedbclick', this.props.onMousedbclick);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\treturn null;\n\t\t}\n\t}]);\n\n\treturn FabricObject;\n}(_react2.default.Component);\n\nexports.default = FabricObject;\n\n\nFabricObject.__uid = _fabric.fabric.Object.__uid;\nFabricObject.NUM_FRACTION_DIGITS = _fabric.fabric.Object.NUM_FRACTION_DIGITS;\nFabricObject.rotate = _fabric.fabric.Object.rotate;\n\nFabricObject.propTypes = {\n\tangle: _propTypes2.default.number,\n\tbackgroundColor: _propTypes2.default.string,\n\tborderColor: _propTypes2.default.string,\n\tborderOpacityWhenMoving: _propTypes2.default.number,\n\tborderScaleFactor: _propTypes2.default.number,\n\tcenteredRotation: _propTypes2.default.bool,\n\tcenteredScaling: _propTypes2.default.bool,\n\tclipTo: _propTypes2.default.func,\n\tcornerColor: _propTypes2.default.string,\n\tcornerSize: _propTypes2.default.number,\n\tevented: _propTypes2.default.bool,\n\tfill: _propTypes2.default.string,\n\tfillRule: _propTypes2.default.string,\n\tflipX: _propTypes2.default.bool,\n\tflipY: _propTypes2.default.bool,\n\tglobalCompositeOperation: _propTypes2.default.string,\n\thasBorders: _propTypes2.default.bool,\n\thasControls: _propTypes2.default.bool,\n\thasRotatingPoint: _propTypes2.default.bool,\n\theight: _propTypes2.default.number,\n\thoverCursor: _propTypes2.default.string,\n\tincludeDefaultValues: _propTypes2.default.bool,\n\tleft: _propTypes2.default.number,\n\tlockMovementX: _propTypes2.default.bool,\n\tlockMovementY: _propTypes2.default.bool,\n\tlockRotation: _propTypes2.default.bool,\n\tlockScalingFlip: _propTypes2.default.bool,\n\tlockScalingX: _propTypes2.default.bool,\n\tlockScalingY: _propTypes2.default.bool,\n\tlockUniScaling: _propTypes2.default.bool,\n\tminScaleLimit: _propTypes2.default.number,\n\toCoords: _propTypes2.default.object,\n\topacity: _propTypes2.default.number,\n\toriginX: _propTypes2.default.oneOf(['left', 'right', 'center']),\n\toriginY: _propTypes2.default.oneOf(['top', 'bottom', 'center']),\n\tpadding: _propTypes2.default.number,\n\tperPixelTargetFind: _propTypes2.default.bool,\n\trotatingPointOffset: _propTypes2.default.number,\n\tscaleX: _propTypes2.default.number,\n\tscaleY: _propTypes2.default.number,\n\tselectable: _propTypes2.default.bool,\n\tshadow: _propTypes2.default.oneOfType([_propTypes2.default.instanceOf(_fabric.fabric.Shadow), _propTypes2.default.string]),\n\tstateProperties: _propTypes2.default.array,\n\tstroke: _propTypes2.default.string,\n\tstrokeDashArray: _propTypes2.default.array,\n\tstrokeLineCap: _propTypes2.default.oneOf(['butt', 'round', 'square']),\n\tstrokeLineJoin: _propTypes2.default.oneOf(['bevil', 'round', 'miter']),\n\tstrokeMiterLimit: _propTypes2.default.number,\n\tstrokeWidth: _propTypes2.default.number,\n\ttop: _propTypes2.default.number,\n\ttransformMatrix: _propTypes2.default.array,\n\ttransparentCorners: _propTypes2.default.bool,\n\ttype: _propTypes2.default.string,\n\tvisible: _propTypes2.default.bool,\n\twidth: _propTypes2.default.number\n};\n\nFabricObject.defaultProps = {\n\ttype: 'object',\n\toriginX: 'left',\n\toriginY: 'top',\n\ttop: 0,\n\tleft: 0,\n\twidth: 0,\n\theight: 0,\n\tscaleX: 1,\n\tscaleY: 1,\n\tflipX: false,\n\tflipY: false,\n\topacity: 1,\n\tangle: 0,\n\tskewX: 0,\n\tskewY: 0,\n\tcornerSize: 12,\n\ttransparentCorners: true,\n\thoverCursor: null,\n\tpadding: 0,\n\tborderColor: 'rgba(102,153,255,0.75)',\n\tcornerColor: 'rgba(102,153,255,0.5)',\n\tcenteredScaling: false,\n\tcenteredRotation: true,\n\tfill: 'rgb(0,0,0)',\n\tfillRule: 'nonzero',\n\tglobalCompositeOperation: 'source-over',\n\tbackgroundColor: '',\n\tstroke: null,\n\tstrokeWidth: 1,\n\tstrokeDashArray: null,\n\tstrokeLineCap: 'butt',\n\tstrokeLineJoin: 'miter',\n\tstrokeMiterLimit: 10,\n\tshadow: null,\n\tborderOpacityWhenMoving: 0.4,\n\tborderScaleFactor: 1,\n\ttransformMatrix: null,\n\tminScaleLimit: 0.01,\n\tselectable: true,\n\tevented: true,\n\tvisible: true,\n\thasControls: true,\n\thasBorders: true,\n\thasRotatingPoint: true,\n\trotatingPointOffset: 40,\n\tperPixelTargetFind: false,\n\tincludeDefaultValues: true,\n\n\tclipTo: null,\n\n\tlockMovementX: false,\n\tlockMovementY: false,\n\tlockRotation: false,\n\tlockScalingX: false,\n\tlockScalingY: false,\n\tlockUniScaling: false,\n\tlockSkewingX: false,\n\tlockSkewingY: false,\n\tlockScalingFlip: false,\n\n\t// oCoords: null,\n\n\tstateProperties: ('top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' + 'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' + 'angle opacity fill fillRule globalCompositeOperation shadow clipTo visible backgroundColor ' + 'alignX alignY meetOrSlice skewX skewY').split(' ')\n\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(39)\nvar ieee754 = __webpack_require__(40)\nvar isArray = __webpack_require__(18)\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n\n\n/*<replacement>*/\n\nvar processNextTick = __webpack_require__(9);\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = __webpack_require__(8);\nutil.inherits = __webpack_require__(6);\n/*</replacement>*/\n\nvar Readable = __webpack_require__(23);\nvar Writable = __webpack_require__(27);\n\nutil.inherits(Duplex, Readable);\n\nvar keys = objectKeys(Writable.prototype);\nfor (var v = 0; v < keys.length; v++) {\n  var method = keys[v];\n  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  processNextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  processNextTick(cb, err);\n};\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5).Buffer))\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = nextTick;\n} else {\n  module.exports = process.nextTick;\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* eslint-disable node/no-deprecated-api */\nvar buffer = __webpack_require__(5)\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(10);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _fabric = __webpack_require__(0);\n\nvar _deepDiff = __webpack_require__(30);\n\nvar _deepDiff2 = _interopRequireDefault(_deepDiff);\n\nvar _collection = __webpack_require__(62);\n\nvar _collection2 = _interopRequireDefault(_collection);\n\nvar _observable = __webpack_require__(31);\n\nvar _observable2 = _interopRequireDefault(_observable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar StaticCanvas = function (_React$Component) {\n\t_inherits(StaticCanvas, _React$Component);\n\n\tfunction StaticCanvas(props, context) {\n\t\t_classCallCheck(this, StaticCanvas);\n\n\t\tvar _this = _possibleConstructorReturn(this, (StaticCanvas.__proto__ || Object.getPrototypeOf(StaticCanvas)).call(this, props, context));\n\n\t\t_this.state = {\n\t\t\tcanvas: null\n\t\t};\n\n\t\t(0, _collection2.default)(_this);\n\t\t(0, _observable2.default)(_this);\n\n\t\t//Static Canvas\n\t\t_this.absolutePan = function (point) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.absolutePan(point);\n\t\t};\n\t\t_this.bringForward = function (object, intersecting) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.bringForward(object, intersecting);\n\t\t};\n\t\t_this.bringToFront = function (object) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.bringToFront(object);\n\t\t};\n\t\t_this.centerObject = function (object) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.centerObject(object);\n\t\t};\n\t\t_this.centerObjectH = function (object) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.centerObjectH(object);\n\t\t};\n\t\t_this.centerObjectV = function (object) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.centerObjectV(object);\n\t\t};\n\t\t_this.clear = function () {\n\t\t\treturn _this.state.canvas && _this.state.canvas.clear();\n\t\t};\n\t\t_this.clearContext = function (ctx) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.clearContext(ctx);\n\t\t};\n\t\t_this.clone = function (callback, properties) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.clone(callback, properties);\n\t\t};\n\t\t_this.cloneWithoutData = function (callback) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.cloneWithoutData(callback);\n\t\t};\n\t\t_this.dispose = function () {\n\t\t\treturn _this.state.canvas && _this.state.canvas.dispose();\n\t\t};\n\t\t_this.fxCenterObjectH = function (object, callbacks) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.fxCenterObjectH(object, callbacks);\n\t\t};\n\t\t_this.fxCenterObjectV = function (object, callbacks) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.fxCenterObjectV(object, callbacks);\n\t\t};\n\t\t_this.fxRemove = function (object, callbacks) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.fxRemove(object, callbacks);\n\t\t};\n\t\t_this.fxStraightenObject = function (object) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.fxStraightenObject(object);\n\t\t};\n\t\t_this.getActiveGroup = function () {\n\t\t\treturn _this.state.canvas && _this.state.canvas.getActiveGroup();\n\t\t};\n\t\t_this.getActiveObject = function () {\n\t\t\treturn _this.state.canvas && _this.state.canvas.getActiveObject();\n\t\t};\n\t\t_this.getCenter = function () {\n\t\t\treturn _this.state.canvas && _this.state.canvas.getCenter();\n\t\t};\n\t\t_this.getContext = function () {\n\t\t\treturn _this.state.canvas && _this.state.canvas.getContext();\n\t\t};\n\t\t_this.getElement = function () {\n\t\t\treturn _this.state.canvas && _this.state.canvas.getElement();\n\t\t};\n\t\t_this.getHeight = function () {\n\t\t\treturn _this.state.canvas && _this.state.canvas.getHeight();\n\t\t};\n\t\t_this.getWidth = function () {\n\t\t\treturn _this.state.canvas && _this.state.canvas.getWidth();\n\t\t};\n\t\t_this.getZoom = function () {\n\t\t\treturn _this.state.canvas && _this.state.canvas.getZoom();\n\t\t};\n\t\t_this.loadFromDatalessJSON = function (json, callback, reviver) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.loadFromDatalessJSON(json, callback, reviver);\n\t\t};\n\t\t_this.loadFromJSON = function (json, callback, reviver) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.loadFromJSON(json, callback, reviver);\n\t\t};\n\t\t_this.moveTo = function (object, index) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.moveTo(object, index);\n\t\t};\n\t\t_this.onBeforeScaleRotate = function () {\n\t\t\treturn _this.state.canvas && _this.state.canvas.onBeforeScaleRotate();\n\t\t};\n\t\t_this.relativePan = function (point) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.relativePan(point);\n\t\t};\n\t\t_this.renderAll = function (allOnTop) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.renderAll(allOnTop);\n\t\t};\n\t\t_this.renderTop = function () {\n\t\t\treturn _this.state.canvas && _this.state.canvas.renderTop();\n\t\t};\n\t\t_this.sendBackwards = function (object, intersecting) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.sendBackwards(object, intersecting);\n\t\t};\n\t\t_this.sendToBack = function (object) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.sendToBack(object);\n\t\t};\n\t\t_this.setBackgroundColor = function (backgroundColor, callback) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.setBackgroundColor(backgroundColor, callback);\n\t\t};\n\t\t_this.setBackgroundImage = function (image, callback, options) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.setBackgroundImage(image, callback, options);\n\t\t};\n\t\t_this.setDimensions = function (dimensions, options) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.setDimensions(dimensions, options);\n\t\t};\n\t\t_this.setHeight = function (value, options) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.setHeight(value, options);\n\t\t};\n\t\t_this.setOverlayColor = function (overlayColor, callback) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.setOverlayColor(overlayColor, callback);\n\t\t};\n\t\t_this.setOverlayImage = function (image, callback, options) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.setOverlayImage(image, callback, options);\n\t\t};\n\t\t_this.setViewportTransform = function (vpt) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.setViewportTransform(vpt);\n\t\t};\n\t\t_this.setWidth = function (value, options) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.setWidth(value, options);\n\t\t};\n\t\t_this.setZoom = function (value) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.setZoom(value);\n\t\t};\n\t\t_this.straightenObject = function (object) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.straightenObject(object);\n\t\t};\n\t\t_this.toDatalessJSON = function (propertiesToInclude) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.toDatalessJSON(propertiesToInclude);\n\t\t};\n\t\t_this.toDatalessObject = function (propertiesToInclude) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.toDatalessObject(propertiesToInclude);\n\t\t};\n\t\t_this.toDataURL = function (options) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.toDataURL(options);\n\t\t};\n\t\t_this.toDataURLWithMultiplier = function (format, multiplier, quality) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.toDataURLWithMultiplier(format, multiplier, quality);\n\t\t};\n\t\t_this.toJSON = function (propertiesToInclude) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.toJSON(propertiesToInclude);\n\t\t};\n\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.toObject(propertiesToInclude);\n\t\t};\n\t\t_this.toString = function () {\n\t\t\treturn _this.state.canvas && _this.state.canvas.toString();\n\t\t};\n\t\t_this.toSVG = function (options, reviver) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.toSVG(options, reviver);\n\t\t};\n\t\t_this.zoomToPoint = function (point, value) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.zoomToPoint(point, value);\n\t\t};\n\n\t\t// React\n\t\t_this.getChild = _this.getChild.bind(_this);\n\t\treturn _this;\n\t}\n\n\t_createClass(StaticCanvas, [{\n\t\tkey: 'componentDidMount',\n\t\tvalue: function componentDidMount() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar canvas = new _fabric.fabric.Canvas(this.props.id, { selection: this.props.selection });\n\n\t\t\tthis.setState({ canvas: canvas }, function () {\n\t\t\t\t_this2.initEvent.call(_this2);\n\t\t\t\tObject.keys(_this2.ref).forEach(function (key) {\n\t\t\t\t\tvar ref = _this2.ref[key];\n\t\t\t\t\tref.draw(function (obj) {\n\t\t\t\t\t\treturn _this2.add(obj);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'componentWillReceiveProps',\n\t\tvalue: function componentWillReceiveProps(nextProps) {\n\t\t\tvar _this3 = this;\n\n\t\t\tthis.prevRef = {};\n\t\t\tObject.keys(this.ref).forEach(function (key) {\n\t\t\t\t_this3.prevRef[key] = _this3.ref[key];\n\t\t\t});\n\t\t\tthis.ref = {};\n\n\t\t\t/* Options Changed */\n\t\t\tif ((0, _deepDiff2.default)(this.props.backgroundColor, nextProps.backgroundColor)) {\n\t\t\t\tthis.setBackgroundColor(nextProps.backgroundColor);\n\t\t\t}\n\t\t\tif ((0, _deepDiff2.default)(this.props.backgroundImage, nextProps.backgroundImage)) {\n\t\t\t\tthis.setBackgroundImage(nextProps.backgroundImage);\n\t\t\t}\n\n\t\t\tif (this.props.height !== nextProps.height) {\n\t\t\t\tthis.state.canvas.setHeight(nextProps.height);\n\t\t\t}\n\t\t\tif (this.props.width !== nextProps.width) {\n\t\t\t\tthis.state.canvas.setHeight(nextProps.width);\n\t\t\t}\n\n\t\t\tif ((0, _deepDiff2.default)(this.props.overlayColor, nextProps.overlayColor)) {\n\t\t\t\tthis.setOverlayColor(nextProps.overlayColor);\n\t\t\t}\n\t\t\tif ((0, _deepDiff2.default)(this.props.overlayImage, nextProps.overlayImage)) {\n\t\t\t\tthis.setOverlayImage(nextProps.overlayImage);\n\t\t\t}\n\n\t\t\tif ((0, _deepDiff2.default)(this.props.viewportTransform, nextProps.viewportTransform)) {\n\t\t\t\tthis.setViewportTransform(nextProps.viewportTransform);\n\t\t\t}\n\n\t\t\t/* TODO: Event Changed */\n\t\t\tthis.eventChanged(nextProps);\n\t\t}\n\t}, {\n\t\tkey: 'componentDidUpdate',\n\t\tvalue: function componentDidUpdate(prevProps, prevState) {\n\t\t\tvar _this4 = this;\n\n\t\t\t/* TODO: Children Changed */\n\n\t\t\tif (prevState.canvas) {\n\t\t\t\t_react2.default.Children.map(this.props.children, function (child, i) {\n\t\t\t\t\tif (!child) return;\n\n\t\t\t\t\tvar key = child.ref ? child.ref : 'layer' + i;\n\t\t\t\t\tvar ref = _this4.ref[key];\n\t\t\t\t\tref.draw(function (obj) {\n\t\t\t\t\t\t// because this callback is called asynchronously, if multiple updates occur in quick\n\t\t\t\t\t\t// succession then it's possible we'll attempt to remove an object (below) before it has been\n\t\t\t\t\t\t// added (here) - the result of which is duplicate objects on the canvas\n\t\t\t\t\t\tif (!obj.doNotAdd) {\n\t\t\t\t\t\t\t_this4.add(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tif (this.prevRef !== undefined) {\n\t\t\t\t\tObject.keys(this.prevRef).forEach(function (key) {\n\t\t\t\t\t\tvar object = _this4.prevRef[key].getObject();\n\t\t\t\t\t\t// in case this object hasn't actually been added yet, set a flag so that we don't add it later\n\t\t\t\t\t\tobject.doNotAdd = true;\n\t\t\t\t\t\t_this4.remove(object);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.state.canvas && this.state.canvas.renderAll();\n\t\t}\n\n\t\t// childAddedrRemove(oldChild, child, index) {\n\t\t// \tconst ref = child.ref ? this.ref[child.ref] : this.ref[`layer${index}`];\n\t\t// \tref.draw(obj => this.insertAt(obj, index));\n\t\t// } else if (oldChild && !child) {\n\t\t// \tconst key = oldChild.ref;\n\t\t// \tconst ref = key ? this.ref[key] : this.ref[`layer${index}`];\n\t\t// \tconst obj = ref.getObject();\n\t\t//\n\t\t// \tthis.remove(obj);\n\t\t// \tthis.ref[ref] = null;\n\t\t// }\n\t\t// }\n\n\t}, {\n\t\tkey: 'initEvent',\n\t\tvalue: function initEvent() {\n\t\t\tvar canvas = this.state.canvas;\n\n\t\t\tif (!canvas) return;\n\n\t\t\tif (this.props.beforeRender instanceof Function) {\n\t\t\t\tcanvas.on('before:render', this.props.beforeRender);\n\t\t\t}\n\t\t\tif (this.props.beforeSelectionCleared instanceof Function) {\n\t\t\t\tcanvas.on('before:selection:cleared', this.props.beforeSelectionCleared);\n\t\t\t}\n\t\t\tif (this.props.afterRender instanceof Function) {\n\t\t\t\tcanvas.on('after:render', this.props.afterRender);\n\t\t\t}\n\t\t\tif (this.props.onCanvasCleared instanceof Function) {\n\t\t\t\tcanvas.on('canvas:cleared', this.props.onCanvasCleared);\n\t\t\t}\n\t\t\tif (this.props.onMouseDown instanceof Function) {\n\t\t\t\tcanvas.on('mouse:down', this.props.onMouseDown);\n\t\t\t}\n\t\t\tif (this.props.onMouseMove instanceof Function) {\n\t\t\t\tcanvas.on('mouse:move', this.props.onMouseMove);\n\t\t\t}\n\t\t\tif (this.props.onMouseUp instanceof Function) {\n\t\t\t\tcanvas.on('mouse:up', this.props.onMouseUp);\n\t\t\t}\n\t\t\tif (this.props.onMouseOver instanceof Function) {\n\t\t\t\tcanvas.on('mouse:over', this.props.onMouseOver);\n\t\t\t}\n\t\t\tif (this.props.onMouseOut instanceof Function) {\n\t\t\t\tcanvas.on('mouse:out', this.props.onMouseOut);\n\t\t\t}\n\t\t\tif (this.props.onMouseDbclick instanceof Function) {\n\t\t\t\tcanvas.on('mouse:dbclick', this.props.onMouseDbclick);\n\t\t\t}\n\t\t\tif (this.props.onObjectAdded instanceof Function) {\n\t\t\t\tcanvas.on('object:added', this.props.onObjectAdded);\n\t\t\t}\n\t\t\tif (this.props.onObjectModified instanceof Function) {\n\t\t\t\tcanvas.on('object:modified', this.props.onObjectModified);\n\t\t\t}\n\t\t\tif (this.props.onObjectRemoved instanceof Function) {\n\t\t\t\tcanvas.on('object:removed', this.props.onObjectRemoved);\n\t\t\t}\n\t\t\tif (this.props.onObjectRotating instanceof Function) {\n\t\t\t\tcanvas.on('object:rotating', this.props.onObjectRotating);\n\t\t\t}\n\t\t\tif (this.props.onObjectMoving instanceof Function) {\n\t\t\t\tcanvas.on('object:moving', this.props.onObjectMoving);\n\t\t\t}\n\t\t\tif (this.props.onObjectScaling instanceof Function) {\n\t\t\t\tcanvas.on('object:scaling', this.props.onObjectScaling);\n\t\t\t}\n\t\t\tif (this.props.onObjectSelected instanceof Function) {\n\t\t\t\tcanvas.on('object:selected', this.props.onObjectSelected);\n\t\t\t}\n\t\t\tif (this.props.onPathCreated instanceof Function) {\n\t\t\t\tcanvas.on('path:created', this.props.onPathCreated);\n\t\t\t}\n\t\t\tif (this.props.onSelectionCleared instanceof Function) {\n\t\t\t\tcanvas.on('selection:cleared', this.props.onSelectionCleared);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'eventChanged',\n\t\tvalue: function eventChanged(nextProps) {\n\t\t\tvar canvas = this.state.canvas;\n\n\t\t\tif (!canvas) return;\n\n\t\t\tif (this.props.beforeRender && !nextProps.beforeRender) {\n\t\t\t\tcanvas.off('before:render');\n\t\t\t} else if (nextProps.beforeRender instanceof Function) {\n\t\t\t\tcanvas.off('before:render');\n\t\t\t\tcanvas.on('before:render', this.props.beforeRender);\n\t\t\t}\n\n\t\t\tif (this.props.beforeSelectionCleared && !nextProps.beforeSelectionCleared) {\n\t\t\t\tcanvas.off('before:selection:cleared');\n\t\t\t} else if (nextProps.beforeSelectionCleared instanceof Function) {\n\t\t\t\tcanvas.off('before:selection:cleared');\n\t\t\t\tcanvas.on('before:selection:cleared', this.props.beforeSelectionCleared);\n\t\t\t}\n\n\t\t\tif (this.props.afterRender && !nextProps.afterRender) {\n\t\t\t\tcanvas.off('after:render');\n\t\t\t} else if (nextProps.afterRender instanceof Function) {\n\t\t\t\tcanvas.off('after:render');\n\t\t\t\tcanvas.on('after:render', this.props.afterRender);\n\t\t\t}\n\n\t\t\tif (this.props.onCanvasCleared && !nextProps.onCanvasCleared) {\n\t\t\t\tcanvas.off('canvas:cleared');\n\t\t\t} else if (nextProps.onCanvasCleared instanceof Function) {\n\t\t\t\tcanvas.off('canvas:cleared');\n\t\t\t\tcanvas.on('canvas:cleared', this.props.onCanvasCleared);\n\t\t\t}\n\n\t\t\tif (this.props.onMouseDown && !nextProps.onMouseDown) {\n\t\t\t\tcanvas.off('mouse:down');\n\t\t\t} else if (nextProps.onMouseDown instanceof Function) {\n\t\t\t\tcanvas.off('mouse:down');\n\t\t\t\tcanvas.on('mouse:down', this.props.onMouseDown);\n\t\t\t}\n\n\t\t\tif (this.props.onMouseMove && !nextProps.onMouseMove) {\n\t\t\t\tcanvas.off('mouse:move');\n\t\t\t} else if (nextProps.onMouseMove instanceof Function) {\n\t\t\t\tcanvas.off('mouse:move');\n\t\t\t\tcanvas.on('mouse:move', this.props.onMouseMove);\n\t\t\t}\n\n\t\t\tif (this.props.onMouseUp && !nextProps.onMouseUp) {\n\t\t\t\tcanvas.off('mouse:up');\n\t\t\t} else if (nextProps.onMouseUp instanceof Function) {\n\t\t\t\tcanvas.off('mouse:up');\n\t\t\t\tcanvas.on('mouse:up', this.props.onMouseUp);\n\t\t\t}\n\n\t\t\tif (this.props.onMouseOver && !nextProps.onMouseOver) {\n\t\t\t\tcanvas.off('mouse:over');\n\t\t\t} else if (nextProps.onMouseOver instanceof Function) {\n\t\t\t\tcanvas.off('mouse:over');\n\t\t\t\tcanvas.on('mouse:over', this.props.onMouseOver);\n\t\t\t}\n\n\t\t\tif (this.props.onMouseOut && !nextProps.onMouseOut) {\n\t\t\t\tcanvas.off('mouse:out');\n\t\t\t} else if (nextProps.onMouseOut instanceof Function) {\n\t\t\t\tcanvas.off('mouse:out');\n\t\t\t\tcanvas.on('mouse:out', this.props.onMouseOut);\n\t\t\t}\n\n\t\t\tif (this.props.onMouseDbclick && !nextProps.onMouseDbclick) {\n\t\t\t\tcanvas.off('mouse:dbclick');\n\t\t\t} else if (nextProps.onMouseDbclick instanceof Function) {\n\t\t\t\tcanvas.off('mouse:dbclick');\n\t\t\t\tcanvas.on('mouse:dbclick', this.props.onMouseDbclick);\n\t\t\t}\n\n\t\t\tif (this.props.onObjectAdded && !nextProps.onObjectAdded) {\n\t\t\t\tcanvas.off('object:added');\n\t\t\t} else if (nextProps.onObjectAdded instanceof Function) {\n\t\t\t\tcanvas.off('object:added');\n\t\t\t\tcanvas.on('object:added', this.props.onObjectAdded);\n\t\t\t}\n\n\t\t\tif (this.props.onObjectModified && !nextProps.onObjectModified) {\n\t\t\t\tcanvas.off('object:modified');\n\t\t\t} else if (nextProps.onObjectModified instanceof Function) {\n\t\t\t\tcanvas.off('object:modified');\n\t\t\t\tcanvas.on('object:modified', this.props.onObjectModified);\n\t\t\t}\n\n\t\t\tif (this.props.onObjectRemoved && !nextProps.onObjectRemoved) {\n\t\t\t\tcanvas.off('object:removed');\n\t\t\t} else if (nextProps.onObjectRemoved instanceof Function) {\n\t\t\t\tcanvas.off('object:removed');\n\t\t\t\tcanvas.on('object:removed', this.props.onObjectRemoved);\n\t\t\t}\n\n\t\t\tif (this.props.onObjectRotating && !nextProps.onObjectRotating) {\n\t\t\t\tcanvas.off('object:rotating');\n\t\t\t} else if (nextProps.onObjectRotating instanceof Function) {\n\t\t\t\tcanvas.off('object:rotating');\n\t\t\t\tcanvas.on('object:rotating', this.props.onObjectRotating);\n\t\t\t}\n\n\t\t\tif (this.props.onObjectMoving && !nextProps.onObjectMoving) {\n\t\t\t\tcanvas.off('object:moving');\n\t\t\t} else if (nextProps.onObjectMoving instanceof Function) {\n\t\t\t\tcanvas.off('object:moving');\n\t\t\t\tcanvas.on('object:moving', this.props.onObjectMoving);\n\t\t\t}\n\n\t\t\tif (this.props.onObjectScaling && !nextProps.onObjectScaling) {\n\t\t\t\tcanvas.off('object:scaling');\n\t\t\t} else if (nextProps.onObjectScaling instanceof Function) {\n\t\t\t\tcanvas.off('object:scaling');\n\t\t\t\tcanvas.on('object:scaling', this.props.onObjectScaling);\n\t\t\t}\n\n\t\t\tif (this.props.onObjectSelected && !nextProps.onObjectSelected) {\n\t\t\t\tcanvas.off('object:selected');\n\t\t\t} else if (nextProps.onObjectSelected instanceof Function) {\n\t\t\t\tcanvas.off('object:selected');\n\t\t\t\tcanvas.on('object:selected', this.props.onObjectSelected);\n\t\t\t}\n\n\t\t\tif (this.props.onPathCreated && !nextProps.onPathCreated) {\n\t\t\t\tcanvas.off('path:created');\n\t\t\t} else if (nextProps.onPathCreated instanceof Function) {\n\t\t\t\tcanvas.off('path:created');\n\t\t\t\tcanvas.on('path:created', this.props.onPathCreated);\n\t\t\t}\n\n\t\t\tif (this.props.onSelectionCleared && !nextProps.onSelectionCleared) {\n\t\t\t\tcanvas.off('selection:cleared');\n\t\t\t} else if (nextProps.onSelectionCleared instanceof Function) {\n\t\t\t\tcanvas.off('selection:cleared');\n\t\t\t\tcanvas.on('selection:cleared', this.props.onSelectionCleared);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'getChild',\n\t\tvalue: function getChild(ref) {\n\t\t\treturn this.ref[ref];\n\t\t}\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\tvar _this5 = this;\n\n\t\t\tvar _props = this.props,\n\t\t\t    id = _props.id,\n\t\t\t    children = _props.children;\n\n\n\t\t\treturn _react2.default.createElement(\n\t\t\t\t'div',\n\t\t\t\tnull,\n\t\t\t\t_react2.default.createElement('canvas', { id: id, width: this.props.width, height: this.props.height }),\n\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t'div',\n\t\t\t\t\tnull,\n\t\t\t\t\tthis.state.canvas && _react2.default.Children.map(children, function (child, i) {\n\t\t\t\t\t\treturn child && _react2.default.cloneElement(child, {\n\t\t\t\t\t\t\tref: function ref(c) {\n\t\t\t\t\t\t\t\tif (c) {\n\t\t\t\t\t\t\t\t\t_this5.ref[child.ref || 'layer' + i] = c;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}]);\n\n\treturn StaticCanvas;\n}(_react2.default.Component);\n\nexports.default = StaticCanvas;\n\n\nStaticCanvas.emptyJSON = _fabric.fabric.StaticCanvas.EMPTY_JSON;\nStaticCanvas.supports = function (methodName) {\n\treturn _fabric.fabric.StaticCanvas.supports(methodName);\n};\n\nStaticCanvas.propTypes = {\n\tallowTouchScrolling: _propTypes2.default.bool,\n\tbackgroundColor: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.instanceOf(_fabric.fabric.Pattern)]),\n\tbackgroundImage: _propTypes2.default.instanceOf(_fabric.fabric.Image),\n\tclipTo: _propTypes2.default.func,\n\tcontrolsAboveOverlay: _propTypes2.default.bool,\n\tFX_DURATION: _propTypes2.default.number,\n\timageSmoothingEnabled: _propTypes2.default.bool,\n\tincludeDefaultValues: _propTypes2.default.bool,\n\toverlayColor: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.instanceOf(_fabric.fabric.Pattern)]),\n\toverlayImage: _propTypes2.default.instanceOf(_fabric.fabric.Image),\n\tpreserveObjectStacking: _propTypes2.default.bool,\n\trenderOnAddRemove: _propTypes2.default.bool,\n\tstateful: _propTypes2.default.bool,\n\tsvgViewportTransformation: _propTypes2.default.bool,\n\tviewportTransform: _propTypes2.default.array,\n\n\twidth: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\n\theight: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\n\tid: _propTypes2.default.string,\n\tafterRender: _propTypes2.default.func,\n\tbeforeRender: _propTypes2.default.func,\n\tbeforeSelectionCleared: _propTypes2.default.func,\n\tonCanvasCleared: _propTypes2.default.func,\n\tonMouseDown: _propTypes2.default.func,\n\tonMouseMove: _propTypes2.default.func,\n\tonMouseUp: _propTypes2.default.func,\n\tonMouseOver: _propTypes2.default.func,\n\tonMouseOut: _propTypes2.default.func,\n\tonMouseDbclick: _propTypes2.default.func,\n\tonObjectAdded: _propTypes2.default.func,\n\tonObjectRemoved: _propTypes2.default.func,\n\tonObjectRotating: _propTypes2.default.func,\n\tonObjectMoving: _propTypes2.default.func,\n\tonObjectScaling: _propTypes2.default.func,\n\tonObjectSelected: _propTypes2.default.func,\n\tonObjectModified: _propTypes2.default.func,\n\tonPathCreated: _propTypes2.default.func,\n\tonSelectionCleared: _propTypes2.default.func\n};\n\nStaticCanvas.defaultProps = {\n\tallowTouchScrolling: false,\n\tbackgroundColor: '',\n\tbackgroundImage: null,\n\tclipTo: null,\n\tcontrolsAboveOverlay: false,\n\tFX_DURATION: 500,\n\timageSmoothingEnabled: true,\n\tincludeDefaultValues: true,\n\toverlayColor: '',\n\toverlayImage: null,\n\tpreserveObjectStacking: false,\n\trenderOnAddRemove: true,\n\tstateful: true,\n\tsvgViewportTransformation: true,\n\tviewportTransform: null,\n\n\twidth: 100,\n\theight: 100,\n\n\tid: 'c'\n};\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\nvar emptyFunction = __webpack_require__(11);\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  var printWarning = function printWarning(format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  warning = function warning(condition, format) {\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n\n    if (format.indexOf('Failed Composite propType: ') === 0) {\n      return; // Ignore CompositeComponent proptype check.\n    }\n\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar punycode = __webpack_require__(43);\nvar util = __webpack_require__(45);\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = __webpack_require__(46);\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var ClientRequest = __webpack_require__(49)\nvar extend = __webpack_require__(58)\nvar statusCodes = __webpack_require__(59)\nvar url = __webpack_require__(19)\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.blobConstructor = false\ntry {\n\tnew Blob([new ArrayBuffer(1)])\n\texports.blobConstructor = true\n} catch (e) {}\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// For some strange reason, Safari 7.0 reports typeof global.ArrayBuffer === 'object'.\n// Safari 7.1 appears to have fixed this bug.\nvar haveArrayBuffer = typeof global.ArrayBuffer !== 'undefined'\nvar haveSlice = haveArrayBuffer && isFunction(global.ArrayBuffer.prototype.slice)\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || (haveArrayBuffer && checkTypeSupport('arraybuffer'))\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && haveSlice && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && haveArrayBuffer &&\n\tcheckTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nexports.vbArray = isFunction(global.VBArray)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(23);\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = __webpack_require__(27);\nexports.Duplex = __webpack_require__(7);\nexports.Transform = __webpack_require__(29);\nexports.PassThrough = __webpack_require__(56);\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n/*<replacement>*/\n\nvar processNextTick = __webpack_require__(9);\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = __webpack_require__(18);\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = __webpack_require__(24).EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = __webpack_require__(25);\n/*</replacement>*/\n\n// TODO(bmeurer): Change this back to const once hole checks are\n// properly optimized away early in Ignition+TurboFan.\n/*<replacement>*/\nvar Buffer = __webpack_require__(15).Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = __webpack_require__(8);\nutil.inherits = __webpack_require__(6);\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = __webpack_require__(51);\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = __webpack_require__(52);\nvar destroyImpl = __webpack_require__(26);\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') {\n    return emitter.prependListener(event, fn);\n  } else {\n    // This is a hack to make sure that our error handler is attached before any\n    // userland ones.  NEVER DO THIS. This is here only because this code needs\n    // to continue to work with older versions of Node.js that do not include\n    // the prependListener() method. The goal is to eventually remove this hack.\n    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n  }\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || __webpack_require__(7);\n\n  options = options || {};\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = __webpack_require__(28).StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || __webpack_require__(7);\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = __webpack_require__(28).StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    processNextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        processNextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    processNextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], self.emit.bind(self, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    processNextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(2)))\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(24).EventEmitter;\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/*<replacement>*/\n\nvar processNextTick = __webpack_require__(9);\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      processNextTick(emitErrorNT, this, err);\n    }\n    return;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      processNextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process, setImmediate, global) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n\n\n/*<replacement>*/\n\nvar processNextTick = __webpack_require__(9);\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = __webpack_require__(8);\nutil.inherits = __webpack_require__(6);\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: __webpack_require__(55)\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = __webpack_require__(25);\n/*</replacement>*/\n\n/*<replacement>*/\nvar Buffer = __webpack_require__(15).Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*</replacement>*/\n\nvar destroyImpl = __webpack_require__(26);\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || __webpack_require__(7);\n\n  options = options || {};\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || __webpack_require__(7);\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  processNextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    processNextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = _isUint8Array(chunk) && !state.objectMode;\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    processNextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    processNextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequestCount = 0;\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      processNextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) processNextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(53).setImmediate, __webpack_require__(3)))\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = __webpack_require__(5).Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n\n\nmodule.exports = Transform;\n\nvar Duplex = __webpack_require__(7);\n\n/*<replacement>*/\nvar util = __webpack_require__(8);\nutil.inherits = __webpack_require__(6);\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction TransformState(stream) {\n  this.afterTransform = function (er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n  this.writeencoding = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return stream.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined) stream.push(data);\n\n  cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(this);\n\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.once('prefinish', function () {\n    if (typeof this._flush === 'function') this._flush(function (er, data) {\n      done(stream, er, data);\n    });else done(stream);\n  });\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data !== null && data !== undefined) stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (ts.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}\n\n/***/ }),\n/* 30 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* WEBPACK VAR INJECTION */(function(global) {\nvar $scope, conflict, conflictResolution = [];\nif (typeof global === 'object' && global) {\n  $scope = global;\n} else if (typeof window !== 'undefined') {\n  $scope = window;\n} else {\n  $scope = {};\n}\nconflict = $scope.DeepDiff;\nif (conflict) {\n  conflictResolution.push(\n    function() {\n      if ('undefined' !== typeof conflict && $scope.DeepDiff === accumulateDiff) {\n        $scope.DeepDiff = conflict;\n        conflict = undefined;\n      }\n    });\n}\n\n// nodejs compatible on server side and in the browser.\nfunction inherits(ctor, superCtor) {\n  ctor.super_ = superCtor;\n  ctor.prototype = Object.create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n}\n\nfunction Diff(kind, path) {\n  Object.defineProperty(this, 'kind', {\n    value: kind,\n    enumerable: true\n  });\n  if (path && path.length) {\n    Object.defineProperty(this, 'path', {\n      value: path,\n      enumerable: true\n    });\n  }\n}\n\nfunction DiffEdit(path, origin, value) {\n  DiffEdit.super_.call(this, 'E', path);\n  Object.defineProperty(this, 'lhs', {\n    value: origin,\n    enumerable: true\n  });\n  Object.defineProperty(this, 'rhs', {\n    value: value,\n    enumerable: true\n  });\n}\ninherits(DiffEdit, Diff);\n\nfunction DiffNew(path, value) {\n  DiffNew.super_.call(this, 'N', path);\n  Object.defineProperty(this, 'rhs', {\n    value: value,\n    enumerable: true\n  });\n}\ninherits(DiffNew, Diff);\n\nfunction DiffDeleted(path, value) {\n  DiffDeleted.super_.call(this, 'D', path);\n  Object.defineProperty(this, 'lhs', {\n    value: value,\n    enumerable: true\n  });\n}\ninherits(DiffDeleted, Diff);\n\nfunction DiffArray(path, index, item) {\n  DiffArray.super_.call(this, 'A', path);\n  Object.defineProperty(this, 'index', {\n    value: index,\n    enumerable: true\n  });\n  Object.defineProperty(this, 'item', {\n    value: item,\n    enumerable: true\n  });\n}\ninherits(DiffArray, Diff);\n\nfunction arrayRemove(arr, from, to) {\n  var rest = arr.slice((to || from) + 1 || arr.length);\n  arr.length = from < 0 ? arr.length + from : from;\n  arr.push.apply(arr, rest);\n  return arr;\n}\n\nfunction realTypeOf(subject) {\n  var type = typeof subject;\n  if (type !== 'object') {\n    return type;\n  }\n\n  if (subject === Math) {\n    return 'math';\n  } else if (subject === null) {\n    return 'null';\n  } else if (Array.isArray(subject)) {\n    return 'array';\n  } else if (Object.prototype.toString.call(subject) === '[object Date]') {\n    return 'date';\n  } else if (typeof subject.toString === 'function' && /^\\/.*\\//.test(subject.toString())) {\n    return 'regexp';\n  }\n  return 'object';\n}\n\nfunction deepDiff(lhs, rhs, changes, prefilter, path, key, stack) {\n  path = path || [];\n  stack = stack || [];\n  var currentPath = path.slice(0);\n  if (typeof key !== 'undefined') {\n    if (prefilter) {\n      if (typeof(prefilter) === 'function' && prefilter(currentPath, key)) {\n        return; } else if (typeof(prefilter) === 'object') {\n        if (prefilter.prefilter && prefilter.prefilter(currentPath, key)) {\n          return; }\n        if (prefilter.normalize) {\n          var alt = prefilter.normalize(currentPath, key, lhs, rhs);\n          if (alt) {\n            lhs = alt[0];\n            rhs = alt[1];\n          }\n        }\n      }\n    }\n    currentPath.push(key);\n  }\n\n  // Use string comparison for regexes\n  if (realTypeOf(lhs) === 'regexp' && realTypeOf(rhs) === 'regexp') {\n    lhs = lhs.toString();\n    rhs = rhs.toString();\n  }\n\n  var ltype = typeof lhs;\n  var rtype = typeof rhs;\n\n  var ldefined = ltype !== 'undefined' || (stack && stack[stack.length - 1].lhs && stack[stack.length - 1].lhs.hasOwnProperty(key));\n  var rdefined = rtype !== 'undefined' || (stack && stack[stack.length - 1].rhs && stack[stack.length - 1].rhs.hasOwnProperty(key));\n\n  if (!ldefined && rdefined) {\n    changes(new DiffNew(currentPath, rhs));\n  } else if (!rdefined && ldefined) {\n    changes(new DiffDeleted(currentPath, lhs));\n  } else if (realTypeOf(lhs) !== realTypeOf(rhs)) {\n    changes(new DiffEdit(currentPath, lhs, rhs));\n  } else if (realTypeOf(lhs) === 'date' && (lhs - rhs) !== 0) {\n    changes(new DiffEdit(currentPath, lhs, rhs));\n  } else if (ltype === 'object' && lhs !== null && rhs !== null) {\n    if (!stack.filter(function(x) {\n        return x.lhs === lhs; }).length) {\n      stack.push({ lhs: lhs, rhs: rhs });\n      if (Array.isArray(lhs)) {\n        var i, len = lhs.length;\n        for (i = 0; i < lhs.length; i++) {\n          if (i >= rhs.length) {\n            changes(new DiffArray(currentPath, i, new DiffDeleted(undefined, lhs[i])));\n          } else {\n            deepDiff(lhs[i], rhs[i], changes, prefilter, currentPath, i, stack);\n          }\n        }\n        while (i < rhs.length) {\n          changes(new DiffArray(currentPath, i, new DiffNew(undefined, rhs[i++])));\n        }\n      } else {\n        var akeys = Object.keys(lhs);\n        var pkeys = Object.keys(rhs);\n        akeys.forEach(function(k, i) {\n          var other = pkeys.indexOf(k);\n          if (other >= 0) {\n            deepDiff(lhs[k], rhs[k], changes, prefilter, currentPath, k, stack);\n            pkeys = arrayRemove(pkeys, other);\n          } else {\n            deepDiff(lhs[k], undefined, changes, prefilter, currentPath, k, stack);\n          }\n        });\n        pkeys.forEach(function(k) {\n          deepDiff(undefined, rhs[k], changes, prefilter, currentPath, k, stack);\n        });\n      }\n      stack.length = stack.length - 1;\n    } else if (lhs !== rhs) {\n      // lhs is contains a cycle at this element and it differs from rhs\n      changes(new DiffEdit(currentPath, lhs, rhs));\n    }\n  } else if (lhs !== rhs) {\n    if (!(ltype === 'number' && isNaN(lhs) && isNaN(rhs))) {\n      changes(new DiffEdit(currentPath, lhs, rhs));\n    }\n  }\n}\n\nfunction accumulateDiff(lhs, rhs, prefilter, accum) {\n  accum = accum || [];\n  deepDiff(lhs, rhs,\n    function(diff) {\n      if (diff) {\n        accum.push(diff);\n      }\n    },\n    prefilter);\n  return (accum.length) ? accum : undefined;\n}\n\nfunction applyArrayChange(arr, index, change) {\n  if (change.path && change.path.length) {\n    var it = arr[index],\n      i, u = change.path.length - 1;\n    for (i = 0; i < u; i++) {\n      it = it[change.path[i]];\n    }\n    switch (change.kind) {\n      case 'A':\n        applyArrayChange(it[change.path[i]], change.index, change.item);\n        break;\n      case 'D':\n        delete it[change.path[i]];\n        break;\n      case 'E':\n      case 'N':\n        it[change.path[i]] = change.rhs;\n        break;\n    }\n  } else {\n    switch (change.kind) {\n      case 'A':\n        applyArrayChange(arr[index], change.index, change.item);\n        break;\n      case 'D':\n        arr = arrayRemove(arr, index);\n        break;\n      case 'E':\n      case 'N':\n        arr[index] = change.rhs;\n        break;\n    }\n  }\n  return arr;\n}\n\nfunction applyChange(target, source, change) {\n  if (target && source && change && change.kind) {\n    var it = target,\n      i = -1,\n      last = change.path ? change.path.length - 1 : 0;\n    while (++i < last) {\n      if (typeof it[change.path[i]] === 'undefined') {\n        it[change.path[i]] = (typeof change.path[i] === 'number') ? [] : {};\n      }\n      it = it[change.path[i]];\n    }\n    switch (change.kind) {\n      case 'A':\n        applyArrayChange(change.path ? it[change.path[i]] : it, change.index, change.item);\n        break;\n      case 'D':\n        delete it[change.path[i]];\n        break;\n      case 'E':\n      case 'N':\n        it[change.path[i]] = change.rhs;\n        break;\n    }\n  }\n}\n\nfunction revertArrayChange(arr, index, change) {\n  if (change.path && change.path.length) {\n    // the structure of the object at the index has changed...\n    var it = arr[index],\n      i, u = change.path.length - 1;\n    for (i = 0; i < u; i++) {\n      it = it[change.path[i]];\n    }\n    switch (change.kind) {\n      case 'A':\n        revertArrayChange(it[change.path[i]], change.index, change.item);\n        break;\n      case 'D':\n        it[change.path[i]] = change.lhs;\n        break;\n      case 'E':\n        it[change.path[i]] = change.lhs;\n        break;\n      case 'N':\n        delete it[change.path[i]];\n        break;\n    }\n  } else {\n    // the array item is different...\n    switch (change.kind) {\n      case 'A':\n        revertArrayChange(arr[index], change.index, change.item);\n        break;\n      case 'D':\n        arr[index] = change.lhs;\n        break;\n      case 'E':\n        arr[index] = change.lhs;\n        break;\n      case 'N':\n        arr = arrayRemove(arr, index);\n        break;\n    }\n  }\n  return arr;\n}\n\nfunction revertChange(target, source, change) {\n  if (target && source && change && change.kind) {\n    var it = target,\n      i, u;\n    u = change.path.length - 1;\n    for (i = 0; i < u; i++) {\n      if (typeof it[change.path[i]] === 'undefined') {\n        it[change.path[i]] = {};\n      }\n      it = it[change.path[i]];\n    }\n    switch (change.kind) {\n      case 'A':\n        // Array was modified...\n        // it will be an array...\n        revertArrayChange(it[change.path[i]], change.index, change.item);\n        break;\n      case 'D':\n        // Item was deleted...\n        it[change.path[i]] = change.lhs;\n        break;\n      case 'E':\n        // Item was edited...\n        it[change.path[i]] = change.lhs;\n        break;\n      case 'N':\n        // Item is new...\n        delete it[change.path[i]];\n        break;\n    }\n  }\n}\n\nfunction applyDiff(target, source, filter) {\n  if (target && source) {\n    var onChange = function(change) {\n      if (!filter || filter(target, source, change)) {\n        applyChange(target, source, change);\n      }\n    };\n    deepDiff(target, source, onChange);\n  }\n}\n\nObject.defineProperties(accumulateDiff, {\n\n  diff: {\n    value: accumulateDiff,\n    enumerable: true\n  },\n  observableDiff: {\n    value: deepDiff,\n    enumerable: true\n  },\n  applyDiff: {\n    value: applyDiff,\n    enumerable: true\n  },\n  applyChange: {\n    value: applyChange,\n    enumerable: true\n  },\n  revertChange: {\n    value: revertChange,\n    enumerable: true\n  },\n  isConflict: {\n    value: function() {\n      return 'undefined' !== typeof conflict;\n    },\n    enumerable: true\n  },\n  noConflict: {\n    value: function() {\n      if (conflictResolution) {\n        conflictResolution.forEach(function(it) {\n          it();\n        });\n        conflictResolution = null;\n      }\n      return accumulateDiff;\n    },\n    enumerable: true\n  }\n});\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (accumulateDiff);\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(3)))\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nfunction observableMixin(delgete) {\n\tdelgete.observe = function (eventName, handler) {\n\t\treturn delgete.state.canvas && delgete.state.canvas.observe(eventName, handler);\n\t};\n\tdelgete.stopObserving = function (eventName, handler) {\n\t\treturn delgete.state.canvas && delgete.state.canvas.stopObserving(eventName, handler);\n\t};\n\tdelgete.fire = function (eventName, options) {\n\t\treturn delgete.state.canvas && delgete.state.canvas.fire(eventName, options);\n\t};\n\tdelgete.on = delgete.observe;\n\tdelgete.off = delgete.stopObserving;\n\tdelgete.trigger = delgete.fire;\n}\n\nexports.default = observableMixin;\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Object = __webpack_require__(4);\n\nvar _Object2 = _interopRequireDefault(_Object);\n\nvar _fabric = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Path = function (_FabricObject) {\n\t_inherits(Path, _FabricObject);\n\n\tfunction Path(props, context) {\n\t\t_classCallCheck(this, Path);\n\n\t\tvar _this = _possibleConstructorReturn(this, (Path.__proto__ || Object.getPrototypeOf(Path)).call(this, props, context));\n\n\t\t_this.state = {\n\t\t\tobject: null\n\t\t};\n\n\t\t_this.draw = _this.draw.bind(_this);\n\n\t\t_this.toString = function () {\n\t\t\treturn _this.state.object && _this.state.object.toString();\n\t\t};\n\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t};\n\t\t_this.toDatalessObject = function (propertiesToInclude) {\n\t\t\treturn _this.state.object.toDatalessObject(propertiesToInclude);\n\t\t};\n\t\t_this.toSVG = function (reviver) {\n\t\t\treturn _this.state.object && _this.state.object.toSVG(reviver);\n\t\t};\n\t\t_this.complexity = function () {\n\t\t\treturn _this.state.object && _this.state.object.complexity();\n\t\t};\n\t\treturn _this;\n\t}\n\n\t_createClass(Path, [{\n\t\tkey: 'draw',\n\t\tvalue: function draw(cb) {\n\t\t\tvar _this2 = this;\n\n\t\t\tif (this.props.element instanceof Object) {\n\t\t\t\t_fabric.fabric.Path.fromElement(this.props.element, function (instance) {\n\t\t\t\t\treturn _get(Path.prototype.__proto__ || Object.getPrototypeOf(Path.prototype), 'draw', _this2).call(_this2, instance, cb);\n\t\t\t\t}, this.props);\n\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\t_fabric.fabric.Path.fromObject(this.props.object, function (instance) {\n\t\t\t\t\treturn _get(Path.prototype.__proto__ || Object.getPrototypeOf(Path.prototype), 'draw', _this2).call(_this2, instance, cb);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tvar object = new _fabric.fabric.Path(this.props.path, this.props);\n\t\t\t\t_get(Path.prototype.__proto__ || Object.getPrototypeOf(Path.prototype), 'draw', this).call(this, object, cb);\n\n\t\t\t\treturn object;\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn Path;\n}(_Object2.default);\n\nexports.default = Path;\n\n\nPath.fromElement = function (element, callback, options) {\n\treturn _fabric.fabric.Path.fromElement(element, callback, options);\n};\nPath.fromObject = function (object, callback) {\n\treturn _fabric.fabric.Path.fromObject(object, callback);\n};\nPath.attribute = _fabric.fabric.Path.ATTRIBUTE_NAMES;\n\nPath.propTypes = Object.assign({}, _Object2.default.propTypes, {\n\tpath: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.string]),\n\tminX: _propTypes2.default.number,\n\tminY: _propTypes2.default.number\n});\n\nPath.defaultProps = Object.assign({}, _Object2.default.defaultProps, {\n\ttype: 'path',\n\tpath: null,\n\tminX: 0,\n\tminY: 0\n});\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Object = __webpack_require__(4);\n\nvar _Object2 = _interopRequireDefault(_Object);\n\nvar _fabric = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = function (_FabricObject) {\n    _inherits(Text, _FabricObject);\n\n    function Text(props, context) {\n        _classCallCheck(this, Text);\n\n        var _this = _possibleConstructorReturn(this, (Text.__proto__ || Object.getPrototypeOf(Text)).call(this, props, context));\n\n        _this.state = { object: null };\n\n        _this.toString = function () {\n            return _this.state.object && _this.state.object.toString();\n        };\n        _this.isEmptyStyles = function () {\n            return _this.state.object && _this.state.object.isEmptyStyles();\n        };\n        _this.renderf = function (ctx) {\n            return _this.state.object && _this.state.object.render(ctx);\n        };\n        _this.toObject = function (propertiesToInclude) {\n            return _this.state.object && _this.state.object.toObject(propertiesToInclude);\n        };\n        _this.toSVG = function (reviver) {\n            return _this.state.object && _this.state.object.toSVG(reviver);\n        };\n        _this.complexity = function () {\n            return 1;\n        };\n        return _this;\n    }\n\n    _createClass(Text, [{\n        key: 'draw',\n        value: function draw(cb, obj) {\n            var object = void 0;\n            if (this.props.object instanceof Object) {\n                object = _fabric.fabric.Text.fromObject(this.props.object);\n            } else if (this.props.element instanceof Object) {\n                object = _fabric.fabric.Text.fromElement(this.props.element, this.props);\n            } else {\n                object = new _fabric.fabric.Text(this.props.text, this.props);\n            }\n\n            if (obj === undefined) {\n                // use Text\n                _get(Text.prototype.__proto__ || Object.getPrototypeOf(Text.prototype), 'draw', this).call(this, object, cb);\n            } else {\n                // use IText\n                _get(Text.prototype.__proto__ || Object.getPrototypeOf(Text.prototype), 'draw', this).call(this, obj, cb);\n            }\n        }\n    }]);\n\n    return Text;\n}(_Object2.default);\n\nexports.default = Text;\n\n\nText.attribute = _fabric.fabric.Text.ATTRIBUTE_NAMES;\nText.defaultSvgFontSize = _fabric.fabric.Text.DEFAULT_SVG_FONT_SIZE;\nText.fromElement = function (element, options) {\n    return _fabric.fabric.Text.fromElement(element, options);\n};\nText.fromObject = function (object) {\n    return _fabric.fabric.Text.fromObject(object);\n};\n\nText.propTypes = Object.assign({}, _Object2.default.propTypes, {\n    fontSize: _propTypes2.default.number,\n    fontWeight: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n    fontFamily: _propTypes2.default.string,\n    textDecoration: _propTypes2.default.oneOf(['', 'underline', 'overline', 'line-through']),\n    textAlign: _propTypes2.default.oneOf(['left', 'center', 'right', 'justify']),\n    fontStyle: _propTypes2.default.oneOf(['', 'normal', 'italic', 'oblique']),\n    lineHeight: _propTypes2.default.number,\n    textBackgroundColor: _propTypes2.default.string\n});\n\nText.defaultProps = Object.assign({}, _Object2.default.defaultProps, {\n    type: 'text',\n    stateProperties: _Object2.default.defaultProps.stateProperties.concat(['fontFamily', 'fontWeight', 'fontSize', 'text', 'textDecoration', 'textAlign', 'fontStyle', 'lineHeight', 'textBackgroundColor']),\n    fontSize: 40,\n    fontWeight: 'normal',\n    fontFamily: 'Times New Roman',\n    textDecoration: '',\n    textAlign: 'left',\n    fontStyle: '',\n    lineHeight: 1.16,\n    textBackgroundColor: '',\n    stroke: null,\n    shadow: null\n});\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.color = exports.imageFilter = exports.Itext = exports.Text = exports.Image = exports.Triangle = exports.Rect = exports.Polyline = exports.Polygon = exports.PathGroup = exports.Path = exports.Line = exports.Ellipse = exports.Circle = exports.Canvas = exports.StaticCanvas = undefined;\n\nvar _StaticCanvas2 = __webpack_require__(16);\n\nvar _StaticCanvas3 = _interopRequireDefault(_StaticCanvas2);\n\nvar _Canvas2 = __webpack_require__(63);\n\nvar _Canvas3 = _interopRequireDefault(_Canvas2);\n\nvar _Circle2 = __webpack_require__(64);\n\nvar _Circle3 = _interopRequireDefault(_Circle2);\n\nvar _Ellipse2 = __webpack_require__(65);\n\nvar _Ellipse3 = _interopRequireDefault(_Ellipse2);\n\nvar _Line2 = __webpack_require__(66);\n\nvar _Line3 = _interopRequireDefault(_Line2);\n\nvar _Path2 = __webpack_require__(32);\n\nvar _Path3 = _interopRequireDefault(_Path2);\n\nvar _PathGroup2 = __webpack_require__(67);\n\nvar _PathGroup3 = _interopRequireDefault(_PathGroup2);\n\nvar _Polygon2 = __webpack_require__(68);\n\nvar _Polygon3 = _interopRequireDefault(_Polygon2);\n\nvar _Polyline2 = __webpack_require__(69);\n\nvar _Polyline3 = _interopRequireDefault(_Polyline2);\n\nvar _Rect2 = __webpack_require__(70);\n\nvar _Rect3 = _interopRequireDefault(_Rect2);\n\nvar _Triangle2 = __webpack_require__(71);\n\nvar _Triangle3 = _interopRequireDefault(_Triangle2);\n\nvar _Image2 = __webpack_require__(72);\n\nvar _Image3 = _interopRequireDefault(_Image2);\n\nvar _Text2 = __webpack_require__(33);\n\nvar _Text3 = _interopRequireDefault(_Text2);\n\nvar _IText = __webpack_require__(73);\n\nvar _IText2 = _interopRequireDefault(_IText);\n\nvar _ImageFilters = __webpack_require__(74);\n\nvar _ImageFilters2 = _interopRequireDefault(_ImageFilters);\n\nvar _Color = __webpack_require__(75);\n\nvar _Color2 = _interopRequireDefault(_Color);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Main Bundle\nexports.default = {\n\tStaticCanvas: _StaticCanvas3.default,\n\tCanvas: _Canvas3.default,\n\n\tCircle: _Circle3.default,\n\tEllipse: _Ellipse3.default,\n\tLine: _Line3.default,\n\tPath: _Path3.default,\n\tPathGroup: _PathGroup3.default,\n\tPolygon: _Polygon3.default,\n\tPolyline: _Polyline3.default,\n\tRect: _Rect3.default,\n\tTriangle: _Triangle3.default,\n\n\tImage: _Image3.default,\n\tText: _Text3.default,\n\tItext: _IText2.default,\n\n\timageFilter: _ImageFilters2.default,\n\tcolor: _Color2.default\n};\n\n// Canvas\n\nvar StaticCanvas = exports.StaticCanvas = _StaticCanvas3.default;\nvar Canvas = exports.Canvas = _Canvas3.default;\n\n// Shape\nvar Circle = exports.Circle = _Circle3.default;\nvar Ellipse = exports.Ellipse = _Ellipse3.default;\nvar Line = exports.Line = _Line3.default;\nvar Path = exports.Path = _Path3.default;\nvar PathGroup = exports.PathGroup = _PathGroup3.default;\nvar Polygon = exports.Polygon = _Polygon3.default;\nvar Polyline = exports.Polyline = _Polyline3.default;\nvar Rect = exports.Rect = _Rect3.default;\nvar Triangle = exports.Triangle = _Triangle3.default;\n\nvar Image = exports.Image = _Image3.default;\nvar Text = exports.Text = _Text3.default;\nvar Itext = exports.Itext = _IText2.default;\n\n// utils\nvar imageFilter = exports.imageFilter = _ImageFilters2.default;\nvar color = exports.color = _Color2.default;\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar emptyFunction = __webpack_require__(11);\nvar invariant = __webpack_require__(12);\nvar warning = __webpack_require__(17);\nvar assign = __webpack_require__(36);\n\nvar ReactPropTypesSecret = __webpack_require__(13);\nvar checkPropTypes = __webpack_require__(37);\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          invariant(\n            false,\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            warning(\n              false,\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `%s` prop on `%s`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',\n              propFullName,\n              componentName\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunction.thatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues);\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (propValue.hasOwnProperty(key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        warning(\n          false,\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received %s at index %s.',\n          getPostfixForTypeWarning(checker),\n          i\n        );\n        return emptyFunction.thatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (process.env.NODE_ENV !== 'production') {\n  var invariant = __webpack_require__(12);\n  var warning = __webpack_require__(17);\n  var ReactPropTypesSecret = __webpack_require__(13);\n  var loggedTypeFailures = {};\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = checkPropTypes;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar emptyFunction = __webpack_require__(11);\nvar invariant = __webpack_require__(12);\nvar ReactPropTypesSecret = __webpack_require__(13);\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttrue\n\t) {\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\treturn punycode;\n\t\t}.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(44)(module), __webpack_require__(3)))\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif(!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.decode = exports.parse = __webpack_require__(47);\nexports.encode = exports.stringify = __webpack_require__(48);\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(Buffer, global, process) {var capability = __webpack_require__(21)\nvar inherits = __webpack_require__(6)\nvar response = __webpack_require__(50)\nvar stream = __webpack_require__(22)\nvar toArrayBuffer = __webpack_require__(57)\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else if (capability.vbArray && preferBinary) {\n\t\treturn 'text:vbarray'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + new Buffer(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || 'timeout' in opts) {\n\t\t// If the use of XHR should be preferred and includes preserving the 'content-type' header.\n\t\t// Force XHR to be used since the Fetch API does not yet support timeouts.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n\t\tif (capability.blobConstructor) {\n\t\t\tbody = new global.Blob(self._body.map(function (buffer) {\n\t\t\t\treturn toArrayBuffer(buffer)\n\t\t\t}), {\n\t\t\t\ttype: (headersObj['content-type'] || {}).value || ''\n\t\t\t})\n\t\t} else {\n\t\t\t// get utf8 string\n\t\t\tbody = Buffer.concat(self._body).toString()\n\t\t}\n\t}\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin'\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode.split(':')[0]\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('timeout' in opts) {\n\t\t\txhr.timeout = opts.timeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('timeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress()\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode)\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {\n\tvar self = this\n\tself._destroyed = true\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\t// Currently, there isn't a way to truly abort a fetch.\n\t// If you like bikeshedding, see https://github.com/whatwg/fetch/issues/27\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setTimeout = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'user-agent',\n\t'via'\n]\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5).Buffer, __webpack_require__(3), __webpack_require__(2)))\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process, Buffer, global) {var capability = __webpack_require__(21)\nvar inherits = __webpack_require__(6)\nvar stream = __webpack_require__(22)\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function(header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\n\t\t// TODO: this doesn't respect backpressure. Once WritableStream is available, this can be fixed\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tif (result.done) {\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(new Buffer(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function(err) {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {}\n\nIncomingMessage.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text:vbarray': // For IE9\n\t\t\tif (xhr.readyState !== rStates.DONE)\n\t\t\t\tbreak\n\t\t\ttry {\n\t\t\t\t// This fails in IE8\n\t\t\t\tresponse = new global.VBArray(xhr.responseBody).toArray()\n\t\t\t} catch (e) {}\n\t\t\tif (response !== null) {\n\t\t\t\tself.push(new Buffer(response))\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// Falls through in IE8\t\n\t\tcase 'text':\n\t\t\ttry { // This will fail when readyState = 3 in IE9. Switch mode and wait for readyState = 4\n\t\t\t\tresponse = xhr.responseText\n\t\t\t} catch (e) {\n\t\t\t\tself._mode = 'text:vbarray'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = new Buffer(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(new Buffer(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tself.push(null)\n\t}\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(5).Buffer, __webpack_require__(3)))\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/*<replacement>*/\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = __webpack_require__(15).Buffer;\n/*</replacement>*/\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(54);\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(2)))\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n\n\nmodule.exports = PassThrough;\n\nvar Transform = __webpack_require__(29);\n\n/*<replacement>*/\nvar util = __webpack_require__(8);\nutil.inherits = __webpack_require__(6);\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Buffer = __webpack_require__(5).Buffer\n\nmodule.exports = function (buf) {\n\t// If the buffer is backed by a Uint8Array, a faster version will work\n\tif (buf instanceof Uint8Array) {\n\t\t// If the buffer isn't a subarray, return the underlying ArrayBuffer\n\t\tif (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {\n\t\t\treturn buf.buffer\n\t\t} else if (typeof buf.buffer.slice === 'function') {\n\t\t\t// Otherwise we need to get a proper copy\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength)\n\t\t}\n\t}\n\n\tif (Buffer.isBuffer(buf)) {\n\t\t// This is the slow version that will work with any Buffer\n\t\t// implementation (even in old browsers)\n\t\tvar arrayCopy = new Uint8Array(buf.length)\n\t\tvar len = buf.length\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tarrayCopy[i] = buf[i]\n\t\t}\n\t\treturn arrayCopy.buffer\n\t} else {\n\t\tthrow new Error('Argument must be a Buffer')\n\t}\n}\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports) {\n\nmodule.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar http = __webpack_require__(20);\n\nvar https = module.exports;\n\nfor (var key in http) {\n    if (http.hasOwnProperty(key)) https[key] = http[key];\n};\n\nhttps.request = function (params, cb) {\n    if (!params) params = {};\n    params.scheme = 'https';\n    params.protocol = 'https:';\n    return http.request.call(this, params, cb);\n}\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nfunction collectionMixin(delgete) {\n\tdelgete.add = function () {\n\t\tvar _delgete$state$canvas;\n\n\t\treturn delgete.state.canvas && (_delgete$state$canvas = delgete.state.canvas).add.apply(_delgete$state$canvas, arguments);\n\t};\n\tdelgete.insertAt = function (object, index, nonSplicing) {\n\t\treturn delgete.state.canvas && delgete.state.canvas.insertAt(object, index, nonSplicing);\n\t};\n\tdelgete.remove = function () {\n\t\tvar _delgete$state$canvas2;\n\n\t\treturn delgete.state.canvas && (_delgete$state$canvas2 = delgete.state.canvas).remove.apply(_delgete$state$canvas2, arguments);\n\t}; // arguments\n\tdelgete.forEachObject = function (callback, context) {\n\t\treturn delgete.state.canvas && delgete.state.canvas.forEachObject(callback, context);\n\t};\n\tdelgete.getObjects = function (type) {\n\t\treturn delgete.state.canvas && delgete.state.canvas.getObjects(type);\n\t};\n\tdelgete.item = function (index) {\n\t\treturn delgete.state.canvas && delgete.state.canvas.item(index);\n\t};\n\tdelgete.isEmpty = function () {\n\t\treturn delgete.state.canvas && delgete.state.canvas.isEmpty();\n\t};\n\tdelgete.size = function () {\n\t\treturn delgete.state.canvas && delgete.state.canvas.size();\n\t};\n\tdelgete.contains = function (object) {\n\t\treturn delgete.state.canvas && delgete.state.canvas.contains(object);\n\t};\n\tdelgete.complexity = function () {\n\t\treturn delgete.state.canvas && delgete.state.canvas.complexity(object);\n\t};\n};\n\nexports.default = collectionMixin;\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _StaticCanvas2 = __webpack_require__(16);\n\nvar _StaticCanvas3 = _interopRequireDefault(_StaticCanvas2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Canvas = function (_StaticCanvas) {\n\t_inherits(Canvas, _StaticCanvas);\n\n\tfunction Canvas(props, context) {\n\t\t_classCallCheck(this, Canvas);\n\n\t\tvar _this = _possibleConstructorReturn(this, (Canvas.__proto__ || Object.getPrototypeOf(Canvas)).call(this, props, context));\n\n\t\t_this.state = {\n\t\t\tcanvas: null\n\t\t};\n\n\t\t_this.ref = {};\n\t\t_this.containsPoint = function (e, target) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.containsPoint(e, target);\n\t\t};\n\t\t_this.isTargetTransparent = function (target, x, y) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.isTargetTransparent(target, x, y);\n\t\t};\n\t\t_this.setCursor = function (value) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.setCursor(value);\n\t\t};\n\t\t_this.findTarget = function (e, skipGroup) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.findTarget(e, skipGroup);\n\t\t};\n\t\t_this.getPointer = function (e, ignoreZoom, upperCanvasEl) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.getPointer(e, ignoreZoom, upperCanvasEl);\n\t\t};\n\t\t_this.getSelectionContext = function () {\n\t\t\treturn _this.state.canvas && _this.state.canvas.getSelectionContext();\n\t\t};\n\t\t_this.getSelectionElement = function () {\n\t\t\treturn _this.state.canvas && _this.state.canvas.getSelectionElement();\n\t\t};\n\t\t_this.setActiveObject = function (object, e) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.setActiveObject(object, e);\n\t\t};\n\t\t_this.getActiveObject = function () {\n\t\t\treturn _this.state.canvas && _this.state.canvas.getActiveObject();\n\t\t};\n\t\t_this.discardActiveObject = function (e) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.discardActiveObject(e);\n\t\t};\n\t\t_this.setActiveGroup = function (group, e) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.setActiveGroup(group, e);\n\t\t};\n\t\t_this.discardActiveGroup = function (e) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.discardActiveGroup(e);\n\t\t};\n\t\t_this.deactivateAll = function () {\n\t\t\treturn _this.state.canvas && _this.state.canvas.deactivateAll();\n\t\t};\n\t\t_this.deactivateAllWithDispatch = function (e) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.deactivateAllWithDispatch(e);\n\t\t};\n\t\t_this.dispose = function () {\n\t\t\treturn _this.state.canvas && _this.state.canvas.dispose();\n\t\t};\n\t\t_this.drawControls = function (ctx) {\n\t\t\treturn _this.state.canvas && _this.state.canvas.drawControls(ctx);\n\t\t};\n\t\treturn _this;\n\t}\n\n\treturn Canvas;\n}(_StaticCanvas3.default);\n\nexports.default = Canvas;\n\n\nCanvas.propTypes = Object.assign({}, _StaticCanvas3.default.propTypes, {\n\tuniScaleTransform: _propTypes2.default.bool,\n\tcenteredScaling: _propTypes2.default.bool,\n\tcenteredRotation: _propTypes2.default.bool,\n\tinteractive: _propTypes2.default.bool,\n\tselection: _propTypes2.default.bool,\n\tselectionColor: _propTypes2.default.string,\n\tselectionDashArray: _propTypes2.default.array,\n\tselectionBorderColor: _propTypes2.default.string,\n\tselectionLineWidth: _propTypes2.default.number,\n\thoverCursor: _propTypes2.default.string,\n\tmoveCursor: _propTypes2.default.string,\n\tdefaultCursor: _propTypes2.default.string,\n\tfreeDrawingCursor: _propTypes2.default.string,\n\trotationCursor: _propTypes2.default.string,\n\tcontainerClass: _propTypes2.default.string,\n\tperPixelTargetFind: _propTypes2.default.bool,\n\ttargetFindTolerance: _propTypes2.default.number,\n\tskipTargetFind: _propTypes2.default.bool,\n\tisDrawingMode: _propTypes2.default.bool\n});\n\nCanvas.defaultProps = Object.assign({}, _StaticCanvas3.default.defaultProps, {\n\tuniScaleTransform: false,\n\tcenteredScaling: false,\n\tcenteredRotation: false,\n\tinteractive: true,\n\tselection: true,\n\tselectionColor: 'rgba(100, 100, 255, 0.3)',\n\tselectionDashArray: [],\n\tselectionBorderColor: 'rgba(255, 255, 255, 0.3)',\n\tselectionLineWidth: 1,\n\thoverCursor: 'move',\n\tmoveCursor: 'move',\n\tdefaultCursor: 'default',\n\tfreeDrawingCursor: 'crosshair',\n\trotationCursor: 'crosshair',\n\tcontainerClass: 'canvas-container',\n\tperPixelTargetFind: false,\n\ttargetFindTolerance: 0,\n\tskipTargetFind: false,\n\tisDrawingMode: false\n});\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _react = __webpack_require__(10);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Object = __webpack_require__(4);\n\nvar _Object2 = _interopRequireDefault(_Object);\n\nvar _fabric = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar PI = Math.PI;\n\nvar Circle = function (_FabricObject) {\n\t_inherits(Circle, _FabricObject);\n\n\tfunction Circle(props, context) {\n\t\t_classCallCheck(this, Circle);\n\n\t\tvar _this = _possibleConstructorReturn(this, (Circle.__proto__ || Object.getPrototypeOf(Circle)).call(this, props, context));\n\n\t\t_this.state = {\n\t\t\tobject: null\n\t\t};\n\n\t\t_this.draw = _this.draw.bind(_this);\n\n\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t};\n\t\t_this.toSVG = function (reviver) {\n\t\t\treturn _this.state.object && _this.state.object.toSVG(reviver);\n\t\t};\n\t\t_this.getRadiusX = function () {\n\t\t\treturn _this.state.object && _this.state.object.getRadiusX();\n\t\t};\n\t\t_this.getRadiusY = function () {\n\t\t\treturn _this.state.object && _this.state.object.getRadiusY();\n\t\t};\n\t\t_this.setRadius = function (value) {\n\t\t\treturn _this.state.object && _this.state.object.setRadius(value);\n\t\t};\n\t\t_this.renderf = function (ctx, noTransform) {\n\t\t\treturn _this.state.object && _this.state.object.render(ctx, noTransform);\n\t\t};\n\t\t_this.complexity = function () {\n\t\t\treturn 1;\n\t\t};\n\t\treturn _this;\n\t}\n\n\t_createClass(Circle, [{\n\t\tkey: 'draw',\n\t\tvalue: function draw(cb) {\n\t\t\tvar object = void 0;\n\t\t\tif (this.props.element instanceof Object) {\n\t\t\t\tobject = _fabric.fabric.Circle.fromElement(this.props.element, this.props);\n\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\tobject = _fabric.fabric.Circle.fromObject(this.props.object);\n\t\t\t} else {\n\t\t\t\tobject = new _fabric.fabric.Circle(this.props);\n\t\t\t}\n\n\t\t\t_get(Circle.prototype.__proto__ || Object.getPrototypeOf(Circle.prototype), 'draw', this).call(this, object, cb);\n\t\t}\n\t}]);\n\n\treturn Circle;\n}(_Object2.default);\n\nexports.default = Circle;\n\n\nCircle.fromElement = function (element, options) {\n\treturn _fabric.fabric.Circle.fromElement(element, options);\n};\nCircle.fromObject = function (object) {\n\treturn _fabric.fabric.Circle.fromObject(object);\n};\nCircle.attribute = _fabric.fabric.Circle.ATTRIBUTE_NAMES;\n\nCircle.propTypes = Object.assign({}, _Object2.default.propTypes, {\n\tendAngle: _propTypes2.default.number,\n\tradius: _propTypes2.default.number,\n\tstartAngle: _propTypes2.default.number\n});\n\nCircle.defaultProps = Object.assign({}, _Object2.default.defaultProps, {\n\tendAngle: 2 * PI,\n\tradius: 0,\n\tstartAngle: 0,\n\ttype: 'circle'\n});\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Object = __webpack_require__(4);\n\nvar _Object2 = _interopRequireDefault(_Object);\n\nvar _fabric = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Ellipse = function (_FabricObject) {\n\t_inherits(Ellipse, _FabricObject);\n\n\tfunction Ellipse(props, context) {\n\t\t_classCallCheck(this, Ellipse);\n\n\t\tvar _this = _possibleConstructorReturn(this, (Ellipse.__proto__ || Object.getPrototypeOf(Ellipse)).call(this, props, context));\n\n\t\t_this.state = {\n\t\t\tobject: null\n\t\t};\n\n\t\t_this.draw = _this.draw.bind(_this);\n\n\t\t_this.getRx = function () {\n\t\t\treturn _this.state.object && _this.state.object.getRx();\n\t\t};\n\t\t_this.getRy = function () {\n\t\t\treturn _this.state.object && _this.state.object.getRy();\n\t\t};\n\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t};\n\t\t_this.toSVG = function (reviver) {\n\t\t\treturn _this.state.object && _this.state.object.toObject(reviver);\n\t\t};\n\t\t_this.renderf = function () {\n\t\t\treturn _this.state.object && _this.state.object.render();\n\t\t};\n\t\t_this.complexity = function () {\n\t\t\treturn 1;\n\t\t};\n\t\treturn _this;\n\t}\n\n\t_createClass(Ellipse, [{\n\t\tkey: 'draw',\n\t\tvalue: function draw(cb) {\n\t\t\tvar object = void 0;\n\t\t\tif (this.props.element instanceof Object) {\n\t\t\t\tobject = _fabric.fabric.Ellipse.fromElement(this.props.element, this.props);\n\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\tobject = _fabric.fabric.Ellipse.fromObject(this.props.object);\n\t\t\t} else {\n\t\t\t\tobject = new _fabric.fabric.Ellipse(this.props);\n\t\t\t}\n\t\t\t_get(Ellipse.prototype.__proto__ || Object.getPrototypeOf(Ellipse.prototype), 'draw', this).call(this, object, cb);\n\t\t}\n\t}]);\n\n\treturn Ellipse;\n}(_Object2.default);\n\nexports.default = Ellipse;\n\n\nEllipse.fromElement = function (element, options) {\n\treturn _fabric.fabric.Ellipse.fromElement(element, options);\n};\nEllipse.fromObject = function (object) {\n\treturn _fabric.fabric.Ellipse.fromObject(object);\n};\nEllipse.attribute = _fabric.fabric.Ellipse.ATTRIBUTE_NAMES;\n\nEllipse.propTypes = Object.assign({}, _Object2.default.propTypes, {\n\trx: _propTypes2.default.number,\n\try: _propTypes2.default.number\n});\n\nEllipse.defaultProps = Object.assign({}, _Object2.default.defaultProps, {\n\trx: 0,\n\try: 0,\n\ttype: 'ellipse'\n});\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Object = __webpack_require__(4);\n\nvar _Object2 = _interopRequireDefault(_Object);\n\nvar _fabric = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Line = function (_FabricObject) {\n\t_inherits(Line, _FabricObject);\n\n\tfunction Line(props, context) {\n\t\t_classCallCheck(this, Line);\n\n\t\tvar _this = _possibleConstructorReturn(this, (Line.__proto__ || Object.getPrototypeOf(Line)).call(this, props, context));\n\n\t\t_this.state = {\n\t\t\tobject: null\n\t\t};\n\n\t\t_this.draw = _this.draw.bind(_this);\n\n\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t};\n\t\t_this.calcLinePoints = function () {\n\t\t\treturn _this.state.object && _this.state.object.calcLinePoints();\n\t\t};\n\t\t_this.toSVG = function (reviver) {\n\t\t\treturn _this.state.object && _this.state.object.toSVG(reviver);\n\t\t};\n\t\t_this.complexity = function () {\n\t\t\treturn 1;\n\t\t};\n\n\t\treturn _this;\n\t}\n\n\t_createClass(Line, [{\n\t\tkey: 'draw',\n\t\tvalue: function draw(cb) {\n\t\t\tvar object = void 0;\n\t\t\tif (this.props.element instanceof Object) {\n\t\t\t\tobject = _fabric.fabric.Line.fromElement(this.props.element, this.props);\n\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\tobject = _fabric.fabric.Line.fromObject(this.props.object);\n\t\t\t} else {\n\t\t\t\tvar _props = this.props,\n\t\t\t\t    x1 = _props.x1,\n\t\t\t\t    y1 = _props.y1,\n\t\t\t\t    x2 = _props.x2,\n\t\t\t\t    y2 = _props.y2;\n\n\t\t\t\tvar coords = [x1, y1, x2, y2];\n\t\t\t\tobject = new _fabric.fabric.Line(coords, this.props);\n\t\t\t}\n\t\t\t_get(Line.prototype.__proto__ || Object.getPrototypeOf(Line.prototype), 'draw', this).call(this, object, cb);\n\t\t}\n\t}]);\n\n\treturn Line;\n}(_Object2.default);\n\nexports.default = Line;\n\n\nLine.fromElement = function (element, options) {\n\treturn _fabric.fabric.Line.fromElement(element, options);\n};\nLine.fromObject = function (object) {\n\treturn _fabric.fabric.Line.fromObject(object);\n};\nLine.attribute = _fabric.fabric.Line.ATTRIBUTE_NAMES;\n\nLine.propTypes = Object.assign({}, _Object2.default.propTypes, {\n\tx1: _propTypes2.default.number,\n\ty1: _propTypes2.default.number,\n\tx2: _propTypes2.default.number,\n\ty2: _propTypes2.default.number\n});\n\nLine.defaultProps = Object.assign({}, _Object2.default.defaultProps, {\n\ttype: 'line',\n\tx1: 0,\n\ty1: 0,\n\tx2: 0,\n\ty2: 0\n});\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Path2 = __webpack_require__(32);\n\nvar _Path3 = _interopRequireDefault(_Path2);\n\nvar _fabric = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar PathGroup = function (_Path) {\n\t_inherits(PathGroup, _Path);\n\n\tfunction PathGroup(props, context) {\n\t\t_classCallCheck(this, PathGroup);\n\n\t\tvar _this = _possibleConstructorReturn(this, (PathGroup.__proto__ || Object.getPrototypeOf(PathGroup)).call(this, props, context));\n\n\t\t_this.state = {\n\t\t\tobject: null\n\t\t};\n\n\t\t_this.draw = _this.draw.bind(_this);\n\n\t\t_this.parseDimensionsFromPaths = function (options) {\n\t\t\treturn _this.state.object && _this.state.object.parseDimensionsFromPaths(options);\n\t\t};\n\t\t_this.renderf = function (ctx) {\n\t\t\treturn _this.state.object && _this.state.object.renderf(ctx);\n\t\t};\n\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\treturn _this.state.object.toObject(propertiesToInclude);\n\t\t};\n\t\t_this.toDatalessObject = function (propertiesToInclude) {\n\t\t\treturn _this.state.object && _this.state.object.toDatalessObject(propertiesToInclude);\n\t\t};\n\t\t_this.toSVG = function (reviver) {\n\t\t\treturn _this.state.object && _this.state.object.toSVG(reviver);\n\t\t};\n\t\t_this.toString = function () {\n\t\t\treturn _this.state.object && _this.state.object.toSVG();\n\t\t};\n\t\t_this.isSameColor = function () {\n\t\t\treturn _this.state.object && _this.state.object.isSameColor();\n\t\t};\n\t\t_this.complexity = function () {\n\t\t\treturn _this.state.object && _this.state.object.complexity();\n\t\t};\n\t\t_this.getObjects = function () {\n\t\t\treturn _this.state.object && _this.state.object.getObjects();\n\t\t};\n\n\t\treturn _this;\n\t}\n\n\t_createClass(PathGroup, [{\n\t\tkey: 'draw',\n\t\tvalue: function draw(cb) {\n\t\t\tvar _this2 = this;\n\n\t\t\tif (this.props.element instanceof Object) {\n\t\t\t\t_fabric.fabric.PathGroup.fromElement(this.props.element, function (instance) {\n\t\t\t\t\treturn _get(PathGroup.prototype.__proto__ || Object.getPrototypeOf(PathGroup.prototype), 'draw', _this2).call(_this2, instance, cb);\n\t\t\t\t}, this.props);\n\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\t_fabric.fabric.PathGroup.fromObject(this.props.object, function (instance) {\n\t\t\t\t\treturn _get(PathGroup.prototype.__proto__ || Object.getPrototypeOf(PathGroup.prototype), 'draw', _this2).call(_this2, instance, cb);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tvar paths = [];\n\t\t\t\tif (this.props.children instanceof Array) {\n\t\t\t\t\tthis.props.children.forEach(function (child) {\n\t\t\t\t\t\treturn paths.push(new _fabric.fabric.Path(child.props.path, child.props));\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tpaths.push(new _fabric.fabric.Path(this.props.children.props.path, this.props.children.props));\n\t\t\t\t}\n\n\t\t\t\tvar object = new _fabric.fabric.PathGroup(paths, this.props);\n\t\t\t\t_get(PathGroup.prototype.__proto__ || Object.getPrototypeOf(PathGroup.prototype), 'draw', this).call(this, object, cb);\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn PathGroup;\n}(_Path3.default);\n\nexports.default = PathGroup;\n\n\nPathGroup.fromElement = function (element, callback, options) {\n\treturn _fabric.fabric.PathGroup.fromElement(element, callback, options);\n};\nPathGroup.fromObject = function (object, callback) {\n\treturn _fabric.fabric.PathGroup.fromObject(object, callback);\n};\nPathGroup.attribute = _fabric.fabric.PathGroup.ATTRIBUTE_NAMES;\n\nPathGroup.defaultProps = Object.assign({}, _Path3.default.defaultProps, {\n\ttype: 'path-group',\n\tfill: ''\n});\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Object = __webpack_require__(4);\n\nvar _Object2 = _interopRequireDefault(_Object);\n\nvar _fabric = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Polygon = function (_FabricObject) {\n\t_inherits(Polygon, _FabricObject);\n\n\tfunction Polygon(props, context) {\n\t\t_classCallCheck(this, Polygon);\n\n\t\tvar _this = _possibleConstructorReturn(this, (Polygon.__proto__ || Object.getPrototypeOf(Polygon)).call(this, props, context));\n\n\t\t_this.state = {\n\t\t\tobject: null\n\t\t};\n\n\t\t_this.draw = _this.draw.bind(_this);\n\n\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t};\n\t\t_this.toSVG = function (reviver) {\n\t\t\treturn _this.state.object && _this.state.object.toSVG(reviver);\n\t\t};\n\t\t_this.commonRender = function () {\n\t\t\treturn _this.state.object && _this.state.object.commonRender();\n\t\t};\n\n\t\t_this.complexity = function () {\n\t\t\treturn _this.props.points ? _this.props.points.length : 0;\n\t\t};\n\n\t\treturn _this;\n\t}\n\n\t_createClass(Polygon, [{\n\t\tkey: 'draw',\n\t\tvalue: function draw(cb) {\n\t\t\tvar object = void 0;\n\t\t\tif (this.props.element instanceof Object) {\n\t\t\t\tobject = _fabric.fabric.Polygon.fromElement(this.props.element, this.props);\n\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\tobject = _fabric.fabric.Polygon.fromObject(this.props.object);\n\t\t\t} else {\n\t\t\t\tobject = new _fabric.fabric.Polygon(this.props.points, this.props);\n\t\t\t}\n\t\t\t_get(Polygon.prototype.__proto__ || Object.getPrototypeOf(Polygon.prototype), 'draw', this).call(this, object, cb);\n\t\t}\n\t}]);\n\n\treturn Polygon;\n}(_Object2.default);\n\nexports.default = Polygon;\n\n\nPolygon.fromElement = function (element, options) {\n\treturn _fabric.fabric.Polygon.fromElement(element, options);\n};\nPolygon.fromObject = function (object) {\n\treturn _fabric.fabric.Polygon.fromObject(object);\n};\nPolygon.attribute = _fabric.fabric.Polygon.ATTRIBUTE_NAMES;\n\nPolygon.propTypes = Object.assign({}, _Object2.default.propTypes, {\n\tpoints: _propTypes2.default.array,\n\tminX: _propTypes2.default.number,\n\tminY: _propTypes2.default.number\n});\n\nPolygon.defaultProps = Object.assign({}, _Object2.default.defaultProps, {\n\ttype: 'polygon',\n\tpoints: null,\n\tminX: 0,\n\tminY: 0\n});\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Object = __webpack_require__(4);\n\nvar _Object2 = _interopRequireDefault(_Object);\n\nvar _fabric = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Polyline = function (_FabricObject) {\n\t_inherits(Polyline, _FabricObject);\n\n\tfunction Polyline(props, context) {\n\t\t_classCallCheck(this, Polyline);\n\n\t\tvar _this = _possibleConstructorReturn(this, (Polyline.__proto__ || Object.getPrototypeOf(Polyline)).call(this, props, context));\n\n\t\t_this.state = {\n\t\t\tobject: null\n\t\t};\n\n\t\t_this.draw = _this.draw.bind(_this);\n\n\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t};\n\t\t_this.toSVG = function (reviver) {\n\t\t\treturn _this.state.object && _this.state.object.toSVG(reviver);\n\t\t};\n\n\t\t_this.complexity = function () {\n\t\t\treturn _this.props.points ? _this.props.points.length : 0;\n\t\t};\n\t\treturn _this;\n\t}\n\n\t_createClass(Polyline, [{\n\t\tkey: 'draw',\n\t\tvalue: function draw(cb) {\n\t\t\tvar object = void 0;\n\t\t\tif (this.props.element instanceof Object) {\n\t\t\t\tobject = _fabric.fabric.Polyline.fromElement(this.props.element, this.props);\n\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\tobject = _fabric.fabric.Polyline.fromObject(this.props.object);\n\t\t\t} else {\n\t\t\t\tobject = new _fabric.fabric.Polyline(this.props.points, this.props);\n\t\t\t}\n\t\t\t_get(Polyline.prototype.__proto__ || Object.getPrototypeOf(Polyline.prototype), 'draw', this).call(this, object, cb);\n\t\t}\n\t}]);\n\n\treturn Polyline;\n}(_Object2.default);\n\nexports.default = Polyline;\n\n\nPolyline.fromElement = function (element, options) {\n\treturn _fabric.fabric.Polyline.fromElement(element, options);\n};\nPolyline.fromObject = function (object) {\n\treturn _fabric.fabric.Polyline.fromObject(object);\n};\nPolyline.attribute = _fabric.fabric.Polyline.ATTRIBUTE_NAMES;\n\nPolyline.propTypes = Object.assign({}, _Object2.default.propTypes, {\n\tpoints: _propTypes2.default.array,\n\tminX: _propTypes2.default.number,\n\tminY: _propTypes2.default.number\n});\n\nPolyline.defaultProps = Object.assign({}, _Object2.default.defaultProps, {\n\ttype: 'polyline',\n\tpoints: null,\n\tminX: 0,\n\tminY: 0\n});\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Object = __webpack_require__(4);\n\nvar _Object2 = _interopRequireDefault(_Object);\n\nvar _fabric = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Rect = function (_FabricObject) {\n\t_inherits(Rect, _FabricObject);\n\n\tfunction Rect(props, context) {\n\t\t_classCallCheck(this, Rect);\n\n\t\tvar _this = _possibleConstructorReturn(this, (Rect.__proto__ || Object.getPrototypeOf(Rect)).call(this, props, context));\n\n\t\t_this.state = {\n\t\t\tobject: null\n\t\t};\n\n\t\t_this.draw = _this.draw.bind(_this);\n\n\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t};\n\t\t_this.toSVG = function (reviver) {\n\t\t\treturn _this.state.object && _this.state.object.toSVG(reviver);\n\t\t};\n\n\t\t_this.complexity = function () {\n\t\t\treturn 1;\n\t\t};\n\t\treturn _this;\n\t}\n\n\t_createClass(Rect, [{\n\t\tkey: 'draw',\n\t\tvalue: function draw(cb) {\n\t\t\tvar object = void 0;\n\t\t\tif (this.props.element instanceof Object) {\n\t\t\t\tobject = _fabric.fabric.Rect.fromElement(this.props.element, this.props);\n\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\tobject = _fabric.fabric.Rect.fromObject(this.props.object);\n\t\t\t} else {\n\t\t\t\tobject = new _fabric.fabric.Rect(this.props);\n\t\t\t}\n\t\t\t_get(Rect.prototype.__proto__ || Object.getPrototypeOf(Rect.prototype), 'draw', this).call(this, object, cb);\n\t\t}\n\t}]);\n\n\treturn Rect;\n}(_Object2.default);\n\nexports.default = Rect;\n\n\nRect.fromElement = function (element, options) {\n\treturn _fabric.fabric.Rect.fromElement(element, options);\n};\nRect.fromObject = function (object) {\n\treturn _fabric.fabric.Rect.fromObject(object);\n};\nRect.attribute = _fabric.fabric.Rect.ATTRIBUTE_NAMES;\n\nRect.propTypes = Object.assign({}, _Object2.default.propTypes, {\n\trx: _propTypes2.default.number,\n\try: _propTypes2.default.number\n});\n\nRect.defaultProps = Object.assign({}, _Object2.default.defaultProps, {\n\ttype: 'rect',\n\trx: 0,\n\try: 0,\n\tstrokeDashArray: null\n});\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// import {PropTypes} from 'react';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _Object = __webpack_require__(4);\n\nvar _Object2 = _interopRequireDefault(_Object);\n\nvar _fabric = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Triangle = function (_FabricObject) {\n\t_inherits(Triangle, _FabricObject);\n\n\tfunction Triangle(props, context) {\n\t\t_classCallCheck(this, Triangle);\n\n\t\tvar _this = _possibleConstructorReturn(this, (Triangle.__proto__ || Object.getPrototypeOf(Triangle)).call(this, props, context));\n\n\t\t_this.state = {\n\t\t\tobject: null\n\t\t};\n\n\t\t_this.draw = _this.draw.bind(_this);\n\n\t\t_this.toSVG = function (reviver) {\n\t\t\treturn _this.state.object && _this.state.object.toSVG(reviver);\n\t\t};\n\n\t\t_this.complexity = function () {\n\t\t\treturn 1;\n\t\t};\n\t\treturn _this;\n\t}\n\n\t_createClass(Triangle, [{\n\t\tkey: 'draw',\n\t\tvalue: function draw(cb) {\n\t\t\tvar object = void 0;\n\t\t\tif (this.props.element instanceof Object) {\n\t\t\t\tobject = _fabric.fabric.Triangle.fromElement(this.props.element, this.props);\n\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\tobject = _fabric.fabric.Triangle.fromObject(this.props.object);\n\t\t\t} else {\n\t\t\t\tobject = new _fabric.fabric.Triangle(this.props);\n\t\t\t}\n\t\t\t_get(Triangle.prototype.__proto__ || Object.getPrototypeOf(Triangle.prototype), 'draw', this).call(this, object, cb);\n\t\t}\n\t}]);\n\n\treturn Triangle;\n}(_Object2.default);\n\nexports.default = Triangle;\n\n\nTriangle.fromObject = function (object) {\n\treturn _fabric.fabric.Triangle.fromObject(object);\n};\n\nTriangle.propTypes = Object.assign({}, _Object2.default.propTypes);\nTriangle.defaultProps = Object.assign({}, _Object2.default.defaultProps, {\n\ttype: 'triangle'\n});\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Object = __webpack_require__(4);\n\nvar _Object2 = _interopRequireDefault(_Object);\n\nvar _fabric = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Image = function (_FabricObject) {\n\t_inherits(Image, _FabricObject);\n\n\tfunction Image(props, context) {\n\t\t_classCallCheck(this, Image);\n\n\t\tvar _this = _possibleConstructorReturn(this, (Image.__proto__ || Object.getPrototypeOf(Image)).call(this, props, context));\n\n\t\t_this.state = { object: null };\n\n\t\t_this.getElement = function () {\n\t\t\treturn _this.state.object && _this.state.object.getElement();\n\t\t};\n\t\t_this.setElement = function (element, callback, options) {\n\t\t\treturn _this.state.object && _this.state.object.setElement(element, callback, options);\n\t\t};\n\t\t_this.setCrossOrigin = function (value) {\n\t\t\treturn _this.state.object && _this.state.object.setCrossOrigin(value);\n\t\t};\n\t\t_this.getOriginalSize = function () {\n\t\t\treturn _this.state.object && _this.state.object.getOriginalSize();\n\t\t};\n\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t};\n\t\t_this.toSVG = function (reviver) {\n\t\t\treturn _this.state.object && _this.state.object.toSVG(reviver);\n\t\t};\n\t\t_this.getSrc = function () {\n\t\t\treturn _this.state.object && _this.state.object.getSrc();\n\t\t};\n\t\t_this.setSrc = function (src, callback, options) {\n\t\t\treturn _this.state.object && _this.state.object.setSrc(src, callback, options);\n\t\t};\n\t\t_this.toString = function () {\n\t\t\treturn _this.state.object && _this.state.object.toString();\n\t\t};\n\t\t_this.clone = function (callback, propertiesToInclude) {\n\t\t\treturn _this.state.object && _this.state.object.clone(callback, propertiesToInclude);\n\t\t};\n\t\t_this.applyFilters = function (callback, filters, imgElement, forResizing) {\n\t\t\treturn _this.state.object && _this.state.object.applyFilters(callback, filters, imgElement, forResizing);\n\t\t};\n\t\t_this.complexity = function () {\n\t\t\treturn 1;\n\t\t};\n\t\treturn _this;\n\t}\n\n\t_createClass(Image, [{\n\t\tkey: 'draw',\n\t\tvalue: function draw(cb) {\n\t\t\tvar _this2 = this;\n\n\t\t\tif (typeof this.props.src === 'string') {\n\t\t\t\t_fabric.fabric.Image.fromURL(this.props.src, function (instance) {\n\t\t\t\t\treturn _get(Image.prototype.__proto__ || Object.getPrototypeOf(Image.prototype), 'draw', _this2).call(_this2, instance, cb);\n\t\t\t\t}, this.props);\n\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\t_fabric.fabric.Image.fromObject(this.props.object, function (instance) {\n\t\t\t\t\treturn _get(Image.prototype.__proto__ || Object.getPrototypeOf(Image.prototype), 'draw', _this2).call(_this2, instance, cb);\n\t\t\t\t});\n\t\t\t} else if (this.props.element instanceof Object) {\n\t\t\t\t_fabric.fabric.Image.fromElement(this.props.element, function (instance) {\n\t\t\t\t\treturn _get(Image.prototype.__proto__ || Object.getPrototypeOf(Image.prototype), 'draw', _this2).call(_this2, instance, cb);\n\t\t\t\t}, this.props);\n\t\t\t} else {\n\t\t\t\tvar instance = new _fabric.fabric.Image(this.props.imgElement, this.props);\n\t\t\t\t_get(Image.prototype.__proto__ || Object.getPrototypeOf(Image.prototype), 'draw', this).call(this, instance, cb);\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn Image;\n}(_Object2.default);\n\nexports.default = Image;\n\n\nImage.getSvgSrc = _fabric.fabric.Image.prototype.getSrc;\nImage.css = _fabric.fabric.Image.CSS_CANVAS;\nImage.fromObject = function (object, callback) {\n\treturn _fabric.fabric.Image.fromObject(object, callback);\n};\nImage.fromURL = function (url, callback, imgOptions) {\n\treturn _fabric.fabric.Image.fromURL(url, callback, imgOptions);\n};\nImage.fromElement = function (element, callback, options) {\n\treturn _fabric.fabric.Image.fromElement(element, callback, options);\n};\nImage.attribute = _fabric.fabric.Image.ATTRIBUTE_NAMES;\nImage.async = true;\nImage.pngCompression = 1;\n\nImage.propTypes = Object.assign({}, _Object2.default.propTypes, {\n\tcrossOrigin: _propTypes2.default.oneOf(['', 'anonymous', 'use-credentials']),\n\talignX: _propTypes2.default.oneOf(['none', 'mid', 'min', 'max']),\n\talignY: _propTypes2.default.oneOf(['none', 'mid', 'min', 'max']),\n\tmeetOrSlice: _propTypes2.default.oneOf(['meet', 'slice'])\n});\n\nImage.defaultProps = Object.assign({}, _Object2.default.defaultProps, {\n\ttype: 'image',\n\tcrossOrigin: '',\n\talignX: 'none',\n\talignY: 'none',\n\tmeetOrSlice: 'meet',\n\tstrokeWidth: 0\n});\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Text2 = __webpack_require__(33);\n\nvar _Text3 = _interopRequireDefault(_Text2);\n\nvar _Object = __webpack_require__(4);\n\nvar _Object2 = _interopRequireDefault(_Object);\n\nvar _fabric = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar IText = function (_Text) {\n    _inherits(IText, _Text);\n\n    function IText(props, context) {\n        _classCallCheck(this, IText);\n\n        var _this = _possibleConstructorReturn(this, (IText.__proto__ || Object.getPrototypeOf(IText)).call(this, props, context));\n\n        _this.state = { object: null };\n\n        _this.isEmptyStyles = function () {\n            return _this.state.object && _this.state.object.isEmptyStyles();\n        };\n        _this.setSelectionStart = function (index) {\n            return _this.state.object && _this.state.object.setSelectionStart(index);\n        };\n        _this.setSelectionEnd = function (index) {\n            return _this.state.object && _this.state.object.setSelectionEnd(index);\n        };\n        _this.getSelectionStyles = function () {\n            return _this.state.object && _this.state.object.getSelectionStyles();\n        };\n        _this.setSelectionStyles = function (styles) {\n            return _this.state.object && _this.state.object.setSelectionStyles(styles);\n        };\n        _this.renderCursorOrSelection = function () {\n            return _this.state.object && _this.state.object.renderCursorOrSelection();\n        };\n        _this.get2DCursorLocation = function (selectionStart) {\n            return _this.state.object && _this.state.object.get2DCursorLocation(selectionStart);\n        };\n        _this.getCurrentCharStyle = function (lineIndex, charIndex) {\n            return _this.state.object && _this.state.object.getCurrentCharStyle(lineIndex, charIndex);\n        };\n        _this.getCurrentCharFontSize = function (lineIndex, charIndex) {\n            return _this.state.object && _this.state.object.getCurrentCharFontSize(lineIndex, charIndex);\n        };\n        _this.getCurrentCharColor = function (lineIndex, charIndex) {\n            return _this.state.object && _this.state.object.getCurrentCharColor(lineIndex, charIndex);\n        };\n        _this.renderCursor = function (boundaries, ctx) {\n            return _this.state.object && _this.state.object.renderCursor(boundaries, ctx);\n        };\n        _this.renderSelection = function (chars, boundaries, ctx) {\n            return _this.state.object && _this.state.object.renderSelection(chars, boundaries, ctx);\n        };\n        _this.toObject = function (propertiesToInclude) {\n            return _this.state.object && _this.state.object.toObject(propertiesToInclude);\n        };\n        return _this;\n    }\n\n    _createClass(IText, [{\n        key: 'draw',\n        value: function draw(canvas) {\n            var object = void 0;\n            if (this.props.object instanceof Object) {\n                object = _fabric.fabric.IText.fromObject(this.props.object);\n            } else {\n                object = new _fabric.fabric.IText(this.props.text, this.props);\n            }\n\n            _get(IText.prototype.__proto__ || Object.getPrototypeOf(IText.prototype), 'draw', this).call(this, canvas, object);\n        }\n    }, {\n        key: 'initEvent',\n        value: function initEvent() {\n            var object = this.state.object;\n\n            if (!(object instanceof _fabric.fabric.Object)) return;\n\n            _get(IText.prototype.__proto__ || Object.getPrototypeOf(IText.prototype), 'initEvent', this).call(this);\n            if (this.props.onChanged instanceof Function) {\n                object.on('changed', this.props.onChanged);\n            }\n            if (this.props.onSelectionChanged instanceof Function) {\n                object.on('selection:changed', this.props.onSelectionChanged);\n            }\n            if (this.props.onEditingEntered instanceof Function) {\n                object.on('editing:entered', this.props.onEditingEntered);\n            }\n            if (this.props.onEditingExited instanceof Function) {\n                object.on('editing:exited', this.props.onEditingExited);\n            }\n        }\n    }, {\n        key: 'eventChanged',\n        value: function eventChanged(nextProps) {\n            var object = this.state.object;\n\n            if (!(object instanceof _fabric.fabric.Object)) return;\n\n            _get(IText.prototype.__proto__ || Object.getPrototypeOf(IText.prototype), 'eventChanged', this).call(this, nextProps);\n            if (this.props.onChanged && !nextProps.onChanged) {\n                object.off('changed');\n            } else if (nextProps.onChanged instanceof Function) {\n                object.off('changed');\n                object.on('changed', this.props.onChanged);\n            }\n            if (this.props.onSelectionChanged && !nextProps.onSelectionChanged) {\n                object.off('selection:changed');\n            } else if (nextProps.onSelectionChanged instanceof Function) {\n                object.off('selection:changed');\n                object.on('selection:changed', this.props.onSelectionChanged);\n            }\n            if (this.props.onEditingEntered && !nextProps.onEditingEntered) {\n                object.off('editing:entered');\n            } else if (nextProps.onEditingEntered instanceof Function) {\n                object.off('editing:entered');\n                object.on('editing:entered', this.props.onEditingEntered);\n            }\n            if (this.props.onEditingExited && !nextProps.onEditingExited) {\n                object.off('editing:exited');\n            } else if (nextProps.onEditingExited instanceof Function) {\n                object.off('editing:exited');\n                object.on('editing:exited', this.props.onEditingExited);\n            }\n        }\n    }]);\n\n    return IText;\n}(_Text3.default);\n\nexports.default = IText;\n\nIText.fromObject = function (object) {\n    return _fabric.fabric.IText.fromObject(object);\n};\n\nIText.propTypes = Object.assign({}, _Text3.default.propTypes, {\n    selectionStart: _propTypes2.default.number,\n    selectionEnd: _propTypes2.default.number,\n    selectionColor: _propTypes2.default.string,\n    isEditing: _propTypes2.default.bool,\n    editable: _propTypes2.default.bool,\n    editingBorderColor: _propTypes2.default.string,\n    cursorWidth: _propTypes2.default.number,\n    cursorColor: _propTypes2.default.string,\n    cursorDelay: _propTypes2.default.number,\n    cursorDuration: _propTypes2.default.number,\n    styles: _propTypes2.default.object,\n    caching: _propTypes2.default.bool\n});\n\nIText.defaultProps = Object.assign({}, _Text3.default.defaultProps, {\n    type: 'i-text',\n    selectionStart: 0,\n    selectionEnd: 0,\n    selectionColor: 'rgba(17,119,255,0.3)',\n    isEditing: false,\n    editable: true,\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n    cursorWidth: 2,\n    cursorColor: '#333',\n    cursorDelay: 1000,\n    cursorDuration: 600\n    // styles: [],\n    // caching: true,\n});\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Tint = exports.Sepia2 = exports.Sepia = exports.Resize = exports.RemoveWhite = exports.Pixelate = exports.Noise = exports.Multiply = exports.Mask = exports.Invert = exports.Grayscale = exports.GradientTransparency = exports.Convolute = exports.Brightness = exports.BaseFilter = undefined;\n\nvar _fabric = __webpack_require__(0);\n\nvar BaseFilter = exports.BaseFilter = _fabric.fabric.Image.filters.BaseFilter;\nvar Brightness = exports.Brightness = _fabric.fabric.Image.filters.Brightness;\nvar Convolute = exports.Convolute = _fabric.fabric.Image.filters.Convolute;\nvar GradientTransparency = exports.GradientTransparency = _fabric.fabric.Image.filters.GradientTransparency;\nvar Grayscale = exports.Grayscale = _fabric.fabric.Image.filters.Grayscale;\nvar Invert = exports.Invert = _fabric.fabric.Image.filters.Invert;\nvar Mask = exports.Mask = _fabric.fabric.Image.filters.Mask;\nvar Multiply = exports.Multiply = _fabric.fabric.Image.filters.Multiply;\n\nvar Noise = exports.Noise = _fabric.fabric.Image.filters.Noise;\nvar Pixelate = exports.Pixelate = _fabric.fabric.Image.filters.Pixelate;\nvar RemoveWhite = exports.RemoveWhite = _fabric.fabric.Image.filters.RemoveWhite;\nvar Resize = exports.Resize = _fabric.fabric.Image.filters.Resize;\nvar Sepia = exports.Sepia = _fabric.fabric.Image.filters.Sepia;\nvar Sepia2 = exports.Sepia2 = _fabric.fabric.Image.filters.Sepia2;\nvar Tint = exports.Tint = _fabric.fabric.Image.filters.Tint;\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _fabric = __webpack_require__(0);\n\nexports.default = _fabric.fabric.Color;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// react-fabric.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 34);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap eeb7f14a8a4c32a1b0be","/* build: `node build.js modules=ALL exclude=json,gestures minifier=uglifyjs` */\n /*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\nvar fabric = fabric || { version: \"1.7.19\" };\nif (typeof exports !== 'undefined') {\n  exports.fabric = fabric;\n}\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  fabric.document = document;\n  fabric.window = window;\n  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n  window.fabric = fabric;\n}\nelse {\n  // assume we're running under node.js when document/window are not present\n  fabric.document = require(\"jsdom\")\n    .jsdom(\n      decodeURIComponent(\"%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E\")\n    );\n\n  if (fabric.document.createWindow) {\n    fabric.window = fabric.document.createWindow();\n  } else {\n    fabric.window = fabric.document.parentWindow;\n  }\n}\n\n/**\n * True when in environment that supports touch events\n * @type boolean\n */\n\nfabric.isTouchSupported = 'ontouchstart' in fabric.window;\n\n/**\n * True when in environment that's probably Node.js\n * @type boolean\n */\nfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n                      typeof window === 'undefined';\n\n/* _FROM_SVG_START_ */\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nfabric.SHARED_ATTRIBUTES = [\n  \"display\",\n  \"transform\",\n  \"fill\", \"fill-opacity\", \"fill-rule\",\n  \"opacity\",\n  \"stroke\", \"stroke-dasharray\", \"stroke-linecap\",\n  \"stroke-linejoin\", \"stroke-miterlimit\",\n  \"stroke-opacity\", \"stroke-width\",\n  \"id\"\n];\n/* _FROM_SVG_END_ */\n\n/**\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n */\nfabric.DPI = 96;\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)';\nfabric.fontPaths = { };\nfabric.iMatrix = [1, 0, 0, 1, 0, 0];\nfabric.canvasModule = 'canvas';\n\n/**\n * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.perfLimitSizeTotal = 2097152;\n\n/**\n * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.maxCacheSideLimit = 4096;\n\n/**\n * Lowest pixel limit for cache canvases, set at 256PX\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.minCacheSideLimit = 256;\n\n/**\n * Cache Object for widths of chars in text rendering.\n */\nfabric.charWidthsCache = { };\n\n/**\n * Device Pixel Ratio\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n */\nfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n                          fabric.window.webkitDevicePixelRatio ||\n                          fabric.window.mozDevicePixelRatio ||\n                          1;\n\n\n(function() {\n\n  /**\n   * @private\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  function _removeEventListener(eventName, handler) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n    var eventListener = this.__eventListeners[eventName];\n    if (handler) {\n      eventListener[eventListener.indexOf(handler)] = false;\n    }\n    else {\n      fabric.util.array.fill(eventListener, false);\n    }\n  }\n\n  /**\n   * Observes specified event\n   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n   * @memberOf fabric.Observable\n   * @alias on\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function observe(eventName, handler) {\n    if (!this.__eventListeners) {\n      this.__eventListeners = { };\n    }\n    // one object with key/value pairs was passed\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        this.on(prop, eventName[prop]);\n      }\n    }\n    else {\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n      this.__eventListeners[eventName].push(handler);\n    }\n    return this;\n  }\n\n  /**\n   * Stops event observing for a particular event handler. Calling this method\n   * without arguments removes all handlers for all events\n   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n   * @memberOf fabric.Observable\n   * @alias off\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function to be deleted from EventListeners\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function stopObserving(eventName, handler) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (arguments.length === 0) {\n      for (eventName in this.__eventListeners) {\n        _removeEventListener.call(this, eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n      for (var prop in eventName) {\n        _removeEventListener.call(this, prop, eventName[prop]);\n      }\n    }\n    else {\n      _removeEventListener.call(this, eventName, handler);\n    }\n    return this;\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n   * @memberOf fabric.Observable\n   * @alias trigger\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function fire(eventName, options) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    var listenersForEvent = this.__eventListeners[eventName];\n    if (!listenersForEvent) {\n      return;\n    }\n\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n    }\n    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n      return value !== false;\n    });\n    return this;\n  }\n\n  /**\n   * @namespace fabric.Observable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n   * @see {@link http://fabricjs.com/events|Events demo}\n   */\n  fabric.Observable = {\n    observe: observe,\n    stopObserving: stopObserving,\n    fire: fire,\n\n    on: observe,\n    off: stopObserving,\n    trigger: fire\n  };\n})();\n\n\n/**\n * @namespace fabric.Collection\n */\nfabric.Collection = {\n\n  _objects: [],\n\n  /**\n   * Adds objects to collection, Canvas or Group, then renders canvas\n   * (if `renderOnAddRemove` is not `false`).\n   * in case of Group no changes to bounding box are made.\n   * Objects should be instances of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the add method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  add: function () {\n    this._objects.push.apply(this._objects, arguments);\n    if (this._onObjectAdded) {\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        this._onObjectAdded(arguments[i]);\n      }\n    }\n    this.renderOnAddRemove && this.renderAll();\n    return this;\n  },\n\n  /**\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * An object should be an instance of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the insertAt method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {Object} object Object to insert\n   * @param {Number} index Index to insert object at\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  insertAt: function (object, index, nonSplicing) {\n    var objects = this.getObjects();\n    if (nonSplicing) {\n      objects[index] = object;\n    }\n    else {\n      objects.splice(index, 0, object);\n    }\n    this._onObjectAdded && this._onObjectAdded(object);\n    this.renderOnAddRemove && this.renderAll();\n    return this;\n  },\n\n  /**\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  remove: function() {\n    var objects = this.getObjects(),\n        index, somethingRemoved = false;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      index = objects.indexOf(arguments[i]);\n\n      // only call onObjectRemoved if an object was actually removed\n      if (index !== -1) {\n        somethingRemoved = true;\n        objects.splice(index, 1);\n        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && somethingRemoved && this.renderAll();\n    return this;\n  },\n\n  /**\n   * Executes given function for each object in this group\n   * @param {Function} callback\n   *                   Callback invoked with current object as first argument,\n   *                   index - as second and an array of all objects - as third.\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n   *                   when no `context` argument is given\n   *\n   * @param {Object} context Context (aka thisObject)\n   * @return {Self} thisArg\n   * @chainable\n   */\n  forEachObject: function(callback, context) {\n    var objects = this.getObjects();\n    for (var i = 0, len = objects.length; i < len; i++) {\n      callback.call(context, objects[i], i, objects);\n    }\n    return this;\n  },\n\n  /**\n   * Returns an array of children objects of this instance\n   * Type parameter introduced in 1.3.10\n   * @param {String} [type] When specified, only objects of this type are returned\n   * @return {Array}\n   */\n  getObjects: function(type) {\n    if (typeof type === 'undefined') {\n      return this._objects;\n    }\n    return this._objects.filter(function(o) {\n      return o.type === type;\n    });\n  },\n\n  /**\n   * Returns object at specified index\n   * @param {Number} index\n   * @return {Self} thisArg\n   */\n  item: function (index) {\n    return this.getObjects()[index];\n  },\n\n  /**\n   * Returns true if collection contains no objects\n   * @return {Boolean} true if collection is empty\n   */\n  isEmpty: function () {\n    return this.getObjects().length === 0;\n  },\n\n  /**\n   * Returns a size of a collection (i.e: length of an array containing its objects)\n   * @return {Number} Collection size\n   */\n  size: function() {\n    return this.getObjects().length;\n  },\n\n  /**\n   * Returns true if collection contains an object\n   * @param {Object} object Object to check against\n   * @return {Boolean} `true` if collection contains an object\n   */\n  contains: function(object) {\n    return this.getObjects().indexOf(object) > -1;\n  },\n\n  /**\n   * Returns number representation of a collection complexity\n   * @return {Number} complexity\n   */\n  complexity: function () {\n    return this.getObjects().reduce(function (memo, current) {\n      memo += current.complexity ? current.complexity() : 0;\n      return memo;\n    }, 0);\n  }\n};\n\n\n/**\n * @namespace fabric.CommonMethods\n */\nfabric.CommonMethods = {\n\n  /**\n   * Sets object's properties from options\n   * @param {Object} [options] Options object\n   */\n  _setOptions: function(options) {\n    for (var prop in options) {\n      this.set(prop, options[prop]);\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Gradient to\n   */\n  _initGradient: function(filler, property) {\n    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n      this.set(property, new fabric.Gradient(filler));\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Pattern to\n   * @param {Function} [callback] callback to invoke after pattern load\n   */\n  _initPattern: function(filler, property, callback) {\n    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n      this.set(property, new fabric.Pattern(filler, callback));\n    }\n    else {\n      callback && callback();\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [options] Options object\n   */\n  _initClipping: function(options) {\n    if (!options.clipTo || typeof options.clipTo !== 'string') {\n      return;\n    }\n\n    var functionBody = fabric.util.getFunctionBody(options.clipTo);\n    if (typeof functionBody !== 'undefined') {\n      this.clipTo = new Function('ctx', functionBody);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _setObject: function(obj) {\n    for (var prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  },\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  set: function(key, value) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    }\n    else {\n      if (typeof value === 'function' && key !== 'clipTo') {\n        this._set(key, value(this.get(key)));\n      }\n      else {\n        this._set(key, value);\n      }\n    }\n    return this;\n  },\n\n  _set: function(key, value) {\n    this[key] = value;\n  },\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  toggle: function(property) {\n    var value = this.get(property);\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n    return this;\n  },\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get: function(property) {\n    return this[property];\n  }\n};\n\n\n(function(global) {\n\n  var sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      pow = Math.pow,\n      abs = Math.abs,\n      PiBy180 = Math.PI / 180;\n\n  /**\n   * @namespace fabric.util\n   */\n  fabric.util = {\n\n    /**\n     * Removes value from an array.\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} array\n     * @param {*} value\n     * @return {Array} original array\n     */\n    removeFromArray: function(array, value) {\n      var idx = array.indexOf(value);\n      if (idx !== -1) {\n        array.splice(idx, 1);\n      }\n      return array;\n    },\n\n    /**\n     * Returns random number between 2 specified ones.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} min lower limit\n     * @param {Number} max upper limit\n     * @return {Number} random value (between min and max)\n     */\n    getRandomInt: function(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\n     * Transforms degrees to radians.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} degrees value in degrees\n     * @return {Number} value in radians\n     */\n    degreesToRadians: function(degrees) {\n      return degrees * PiBy180;\n    },\n\n    /**\n     * Transforms radians to degrees.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} radians value in radians\n     * @return {Number} value in degrees\n     */\n    radiansToDegrees: function(radians) {\n      return radians / PiBy180;\n    },\n\n    /**\n     * Rotates `point` around `origin` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Point} point The point to rotate\n     * @param {fabric.Point} origin The origin of the rotation\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {fabric.Point} The new rotated point\n     */\n    rotatePoint: function(point, origin, radians) {\n      point.subtractEquals(origin);\n      var v = fabric.util.rotateVector(point, radians);\n      return new fabric.Point(v.x, v.y).addEquals(origin);\n    },\n\n    /**\n     * Rotates `vector` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} vector The vector to rotate (x and y)\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {Object} The new rotated point\n     */\n    rotateVector: function(vector, radians) {\n      var sin = Math.sin(radians),\n          cos = Math.cos(radians),\n          rx = vector.x * cos - vector.y * sin,\n          ry = vector.x * sin + vector.y * cos;\n      return {\n        x: rx,\n        y: ry\n      };\n    },\n\n    /**\n     * Apply transform t to point p\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Point} p The point to transform\n     * @param  {Array} t The transform\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n     * @return {fabric.Point} The transformed point\n     */\n    transformPoint: function(p, t, ignoreOffset) {\n      if (ignoreOffset) {\n        return new fabric.Point(\n          t[0] * p.x + t[2] * p.y,\n          t[1] * p.x + t[3] * p.y\n        );\n      }\n      return new fabric.Point(\n        t[0] * p.x + t[2] * p.y + t[4],\n        t[1] * p.x + t[3] * p.y + t[5]\n      );\n    },\n\n    /**\n     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n     * @param {Array} points 4 points array\n     * @return {Object} Object with left, top, width, height properties\n     */\n    makeBoundingBoxFromPoints: function(points) {\n      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n          minX = fabric.util.array.min(xPoints),\n          maxX = fabric.util.array.max(xPoints),\n          width = Math.abs(minX - maxX),\n          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n          minY = fabric.util.array.min(yPoints),\n          maxY = fabric.util.array.max(yPoints),\n          height = Math.abs(minY - maxY);\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Invert transformation t\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} t The transform\n     * @return {Array} The inverted transform\n     */\n    invertTransform: function(t) {\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n      r[4] = -o.x;\n      r[5] = -o.y;\n      return r;\n    },\n\n    /**\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number|String} number number to operate on\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n     * @return {Number}\n     */\n    toFixed: function(number, fractionDigits) {\n      return parseFloat(Number(number).toFixed(fractionDigits));\n    },\n\n    /**\n     * Converts from attribute value to pixel value if applicable.\n     * Returns converted pixels or original value not converted.\n     * @param {Number|String} value number to operate on\n     * @param {Number} fontSize\n     * @return {Number|String}\n     */\n    parseUnit: function(value, fontSize) {\n      var unit = /\\D{0,2}$/.exec(value),\n          number = parseFloat(value);\n      if (!fontSize) {\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      }\n      switch (unit[0]) {\n        case 'mm':\n          return number * fabric.DPI / 25.4;\n\n        case 'cm':\n          return number * fabric.DPI / 2.54;\n\n        case 'in':\n          return number * fabric.DPI;\n\n        case 'pt':\n          return number * fabric.DPI / 72; // or * 4 / 3\n\n        case 'pc':\n          return number * fabric.DPI / 72 * 12; // or * 16\n\n        case 'em':\n          return number * fontSize;\n\n        default:\n          return number;\n      }\n    },\n\n    /**\n     * Function which always returns `false`.\n     * @static\n     * @memberOf fabric.util\n     * @return {Boolean}\n     */\n    falseFunction: function() {\n      return false;\n    },\n\n    /**\n     * Returns klass \"Class\" object of given namespace\n     * @memberOf fabric.util\n     * @param {String} type Type of object (eg. 'circle')\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @return {Object} klass \"Class\"\n     */\n    getKlass: function(type, namespace) {\n      // capitalize first letter only\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n      return fabric.util.resolveNamespace(namespace)[type];\n    },\n\n    /**\n     * Returns object of given namespace\n     * @memberOf fabric.util\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n     * @return {Object} Object for given namespace (default fabric)\n     */\n    resolveNamespace: function(namespace) {\n      if (!namespace) {\n        return fabric;\n      }\n\n      var parts = namespace.split('.'),\n          len = parts.length, i,\n          obj = global || fabric.window;\n\n      for (i = 0; i < len; ++i) {\n        obj = obj[parts[i]];\n      }\n\n      return obj;\n    },\n\n    /**\n     * Loads image element from given url and passes it to a callback\n     * @memberOf fabric.util\n     * @param {String} url URL representing an image\n     * @param {Function} callback Callback; invoked with loaded image\n     * @param {*} [context] Context to invoke callback in\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n     */\n    loadImage: function(url, callback, context, crossOrigin) {\n      if (!url) {\n        callback && callback.call(context, url);\n        return;\n      }\n\n      var img = fabric.util.createImage();\n\n      /** @ignore */\n      img.onload = function () {\n        callback && callback.call(context, img);\n        img = img.onload = img.onerror = null;\n      };\n\n      /** @ignore */\n      img.onerror = function() {\n        fabric.log('Error loading ' + img.src);\n        callback && callback.call(context, null, true);\n        img = img.onload = img.onerror = null;\n      };\n\n      // data-urls appear to be buggy with crossOrigin\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n      if (url.indexOf('data') !== 0 && crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      img.src = url;\n    },\n\n    /**\n     * Creates corresponding fabric instances from their object representations\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenObjects: function(objects, callback, namespace, reviver) {\n      objects = objects || [];\n\n      function onLoaded() {\n        if (++numLoadedObjects === numTotalObjects) {\n          callback && callback(enlivenedObjects);\n        }\n      }\n\n      var enlivenedObjects = [],\n          numLoadedObjects = 0,\n          numTotalObjects = objects.length,\n          forceAsync = true;\n\n      if (!numTotalObjects) {\n        callback && callback(enlivenedObjects);\n        return;\n      }\n\n      objects.forEach(function (o, index) {\n        // if sparse array\n        if (!o || !o.type) {\n          onLoaded();\n          return;\n        }\n        var klass = fabric.util.getKlass(o.type, namespace);\n        klass.fromObject(o, function (obj, error) {\n          error || (enlivenedObjects[index] = obj);\n          reviver && reviver(o, obj, error);\n          onLoaded();\n        }, forceAsync);\n      });\n    },\n\n    /**\n     * Create and wait for loading of patterns\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenPatterns: function(patterns, callback) {\n      patterns = patterns || [];\n\n      function onLoaded() {\n        if (++numLoadedPatterns === numPatterns) {\n          callback && callback(enlivenedPatterns);\n        }\n      }\n\n      var enlivenedPatterns = [],\n          numLoadedPatterns = 0,\n          numPatterns = patterns.length;\n\n      if (!numPatterns) {\n        callback && callback(enlivenedPatterns);\n        return;\n      }\n\n      patterns.forEach(function (p, index) {\n        if (p && p.source) {\n          new fabric.Pattern(p, function(pattern) {\n            enlivenedPatterns[index] = pattern;\n            onLoaded();\n          });\n        }\n        else {\n          enlivenedPatterns[index] = p;\n          onLoaded();\n        }\n      });\n    },\n\n    /**\n     * Groups SVG elements (usually those retrieved from SVG document)\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} elements SVG elements to group\n     * @param {Object} [options] Options object\n     * @param {String} path Value to set sourcePath to\n     * @return {fabric.Object|fabric.PathGroup}\n     */\n    groupSVGElements: function(elements, options, path) {\n      var object;\n\n      object = new fabric.PathGroup(elements, options);\n\n      if (typeof path !== 'undefined') {\n        object.sourcePath = path;\n      }\n      return object;\n    },\n\n    /**\n     * Populates an object with properties of another object\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} source Source object\n     * @param {Object} destination Destination object\n     * @return {Array} properties Propertie names to include\n     */\n    populateWithProperties: function(source, destination, properties) {\n      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n        for (var i = 0, len = properties.length; i < len; i++) {\n          if (properties[i] in source) {\n            destination[properties[i]] = source[properties[i]];\n          }\n        }\n      }\n    },\n\n    /**\n     * Draws a dashed line between two points\n     *\n     * This method is used to draw dashed line around selection area.\n     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n     *\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x  start x coordinate\n     * @param {Number} y start y coordinate\n     * @param {Number} x2 end x coordinate\n     * @param {Number} y2 end y coordinate\n     * @param {Array} da dash array pattern\n     */\n    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n      var dx = x2 - x,\n          dy = y2 - y,\n          len = sqrt(dx * dx + dy * dy),\n          rot = atan2(dy, dx),\n          dc = da.length,\n          di = 0,\n          draw = true;\n\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.moveTo(0, 0);\n      ctx.rotate(rot);\n\n      x = 0;\n      while (len > x) {\n        x += da[di++ % dc];\n        if (x > len) {\n          x = len;\n        }\n        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n        draw = !draw;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Creates canvas element and initializes it via excanvas if necessary\n     * @static\n     * @memberOf fabric.util\n     * @param {CanvasElement} [canvasEl] optional canvas element to initialize;\n     * when not given, element is created implicitly\n     * @return {CanvasElement} initialized canvas element\n     */\n    createCanvasElement: function(canvasEl) {\n      canvasEl || (canvasEl = fabric.document.createElement('canvas'));\n      /* eslint-disable camelcase */\n      if (!canvasEl.getContext && typeof G_vmlCanvasManager !== 'undefined') {\n        G_vmlCanvasManager.initElement(canvasEl);\n      }\n      /* eslint-enable camelcase */\n      return canvasEl;\n    },\n\n    /**\n     * Creates image element (works on client and node)\n     * @static\n     * @memberOf fabric.util\n     * @return {HTMLImageElement} HTML image element\n     */\n    createImage: function() {\n      return fabric.isLikelyNode\n        ? new (require('canvas').Image)()\n        : fabric.document.createElement('img');\n    },\n\n    /**\n     * Creates accessors (getXXX, setXXX) for a \"class\", based on \"stateProperties\" array\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} klass \"Class\" to create accessors for\n     */\n    createAccessors: function(klass) {\n      var proto = klass.prototype, i, propName,\n          capitalizedPropName, setterName, getterName;\n\n      for (i = proto.stateProperties.length; i--; ) {\n\n        propName = proto.stateProperties[i];\n        capitalizedPropName = propName.charAt(0).toUpperCase() + propName.slice(1);\n        setterName = 'set' + capitalizedPropName;\n        getterName = 'get' + capitalizedPropName;\n\n        // using `new Function` for better introspection\n        if (!proto[getterName]) {\n          proto[getterName] = (function(property) {\n            return new Function('return this.get(\"' + property + '\")');\n          })(propName);\n        }\n        if (!proto[setterName]) {\n          proto[setterName] = (function(property) {\n            return new Function('value', 'return this.set(\"' + property + '\", value)');\n          })(propName);\n        }\n      }\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Object} receiver Object implementing `clipTo` method\n     * @param {CanvasRenderingContext2D} ctx Context to clip\n     */\n    clipContext: function(receiver, ctx) {\n      ctx.save();\n      ctx.beginPath();\n      receiver.clipTo(ctx);\n      ctx.clip();\n    },\n\n    /**\n     * Multiply matrix A by matrix B to nest transformations\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a First transformMatrix\n     * @param  {Array} b Second transformMatrix\n     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n     * @return {Array} The product of the two transform matrices\n     */\n    multiplyTransformMatrices: function(a, b, is2x2) {\n      // Matrix multiply a * b\n      return [\n        a[0] * b[0] + a[2] * b[1],\n        a[1] * b[0] + a[3] * b[1],\n        a[0] * b[2] + a[2] * b[3],\n        a[1] * b[2] + a[3] * b[3],\n        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n      ];\n    },\n\n    /**\n     * Decomposes standard 2x2 matrix into transform componentes\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a transformMatrix\n     * @return {Object} Components of transform\n     */\n    qrDecompose: function(a) {\n      var angle = atan2(a[1], a[0]),\n          denom = pow(a[0], 2) + pow(a[1], 2),\n          scaleX = sqrt(denom),\n          scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\n          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n      return {\n        angle: angle  / PiBy180,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX / PiBy180,\n        skewY: 0,\n        translateX: a[4],\n        translateY: a[5]\n      };\n    },\n\n    customTransformMatrix: function(scaleX, scaleY, skewX) {\n      var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],\n          scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];\n      return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\n    },\n\n    resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.flipX = false;\n      target.flipY = false;\n      target.setAngle(0);\n    },\n\n    /**\n     * Returns string representation of function body\n     * @param {Function} fn Function to get body of\n     * @return {String} Function body\n     */\n    getFunctionBody: function(fn) {\n      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n    },\n\n    /**\n     * Returns true if context has transparent pixel\n     * at specified location (taking tolerance into account)\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Number} tolerance Tolerance\n     */\n    isTransparent: function(ctx, x, y, tolerance) {\n\n      // If tolerance is > 0 adjust start coords to take into account.\n      // If moves off Canvas fix to 0\n      if (tolerance > 0) {\n        if (x > tolerance) {\n          x -= tolerance;\n        }\n        else {\n          x = 0;\n        }\n        if (y > tolerance) {\n          y -= tolerance;\n        }\n        else {\n          y = 0;\n        }\n      }\n\n      var _isTransparent = true, i, temp,\n          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\n          l = imageData.data.length;\n\n      // Split image data - for tolerance > 1, pixelDataSize = 4;\n      for (i = 3; i < l; i += 4) {\n        temp = imageData.data[i];\n        _isTransparent = temp <= 0;\n        if (_isTransparent === false) {\n          break; // Stop if colour found\n        }\n      }\n\n      imageData = null;\n\n      return _isTransparent;\n    },\n\n    /**\n     * Parse preserveAspectRatio attribute from element\n     * @param {string} attribute to be parsed\n     * @return {Object} an object containing align and meetOrSlice attribute\n     */\n    parsePreserveAspectRatioAttribute: function(attribute) {\n      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n          aspectRatioAttrs = attribute.split(' '), align;\n\n      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n        meetOrSlice = aspectRatioAttrs.pop();\n        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n          align = meetOrSlice;\n          meetOrSlice = 'meet';\n        }\n        else if (aspectRatioAttrs.length) {\n          align = aspectRatioAttrs.pop();\n        }\n      }\n      //divide align in alignX and alignY\n      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n      return {\n        meetOrSlice: meetOrSlice,\n        alignX: alignX,\n        alignY: alignY\n      };\n    },\n\n    /**\n     * Clear char widths cache for a font family.\n     * @memberOf fabric.util\n     * @param {String} [fontFamily] font family to clear\n     */\n    clearFabricFontCache: function(fontFamily) {\n      if (!fontFamily) {\n        fabric.charWidthsCache = { };\n      }\n      else if (fabric.charWidthsCache[fontFamily]) {\n        delete fabric.charWidthsCache[fontFamily];\n      }\n    },\n\n    /**\n     * Clear char widths cache for a font family.\n     * @memberOf fabric.util\n     * @param {Number} ar aspect ratio\n     * @param {Number} maximumArea Maximum area you want to achieve\n     * @param {Number} maximumSide biggest side allowed\n     * @return {Object.x} Limited dimensions by X\n     * @return {Object.y} Limited dimensions by Y\n     */\n    limitDimsByArea: function(ar, maximumArea) {\n      var roughWidth = Math.sqrt(maximumArea * ar),\n          perfLimitSizeY = Math.floor(maximumArea / roughWidth);\n      return { x: Math.floor(roughWidth), y: perfLimitSizeY };\n    },\n\n    capValue: function(min, value, max) {\n      return Math.max(min, Math.min(value, max));\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var arcToSegmentsCache = { },\n      segmentToBezierCache = { },\n      boundsOfCurveCache = { },\n      _join = Array.prototype.join;\n\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n   * http://mozilla.org/MPL/2.0/\n   */\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n    var argsString = _join.call(arguments);\n    if (arcToSegmentsCache[argsString]) {\n      return arcToSegmentsCache[argsString];\n    }\n\n    var PI = Math.PI, th = rotateX * PI / 180,\n        sinTh = Math.sin(th),\n        cosTh = Math.cos(th),\n        fromX = 0, fromY = 0;\n\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n        root = 0;\n\n    if (pl < 0) {\n      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n      rx *= s;\n      ry *= s;\n    }\n    else {\n      root = (large === sweep ? -1.0 : 1.0) *\n              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\n    }\n\n    var cx = root * rx * py / ry,\n        cy = -root * ry * px / rx,\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\n    if (sweep === 0 && dtheta > 0) {\n      dtheta -= 2 * PI;\n    }\n    else if (sweep === 1 && dtheta < 0) {\n      dtheta += 2 * PI;\n    }\n\n    // Convert into cubic bezier segments <= 90deg\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n        result = [], mDelta = dtheta / segments,\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n        th3 = mTheta + mDelta;\n\n    for (var i = 0; i < segments; i++) {\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n      fromX = result[i][4];\n      fromY = result[i][5];\n      mTheta = th3;\n      th3 += mDelta;\n    }\n    arcToSegmentsCache[argsString] = result;\n    return result;\n  }\n\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n    var argsString2 = _join.call(arguments);\n    if (segmentToBezierCache[argsString2]) {\n      return segmentToBezierCache[argsString2];\n    }\n\n    var costh2 = Math.cos(th2),\n        sinth2 = Math.sin(th2),\n        costh3 = Math.cos(th3),\n        sinth3 = Math.sin(th3),\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\n        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\n        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\n    segmentToBezierCache[argsString2] = [\n      cp1X, cp1Y,\n      cp2X, cp2Y,\n      toX, toY\n    ];\n    return segmentToBezierCache[argsString2];\n  }\n\n  /*\n   * Private\n   */\n  function calcVectorAngle(ux, uy, vx, vy) {\n    var ta = Math.atan2(uy, ux),\n        tb = Math.atan2(vy, vx);\n    if (tb >= ta) {\n      return tb - ta;\n    }\n    else {\n      return 2 * Math.PI - (ta - tb);\n    }\n  }\n\n  /**\n   * Draws arc\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Array} coords\n   */\n  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n    var rx = coords[0],\n        ry = coords[1],\n        rot = coords[2],\n        large = coords[3],\n        sweep = coords[4],\n        tx = coords[5],\n        ty = coords[6],\n        segs = [[], [], [], []],\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\n      segs[i][0] = segsNorm[i][0] + fx;\n      segs[i][1] = segsNorm[i][1] + fy;\n      segs[i][2] = segsNorm[i][2] + fx;\n      segs[i][3] = segsNorm[i][3] + fy;\n      segs[i][4] = segsNorm[i][4] + fx;\n      segs[i][5] = segsNorm[i][5] + fy;\n      ctx.bezierCurveTo.apply(ctx, segs[i]);\n    }\n  };\n\n  /**\n   * Calculate bounding box of a elliptic-arc\n   * @param {Number} fx start point of arc\n   * @param {Number} fy\n   * @param {Number} rx horizontal radius\n   * @param {Number} ry vertical radius\n   * @param {Number} rot angle of horizontal axe\n   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n   * @param {Number} tx end point of arc\n   * @param {Number} ty\n   */\n  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\n    var fromX = 0, fromY = 0, bound, bounds = [],\n        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segs.length; i < len; i++) {\n      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n      bounds.push({ x: bound[0].x + fx, y: bound[0].y + fy });\n      bounds.push({ x: bound[1].x + fx, y: bound[1].y + fy });\n      fromX = segs[i][4];\n      fromY = segs[i][5];\n    }\n    return bounds;\n  };\n\n  /**\n   * Calculate bounding box of a beziercurve\n   * @param {Number} x0 starting point\n   * @param {Number} y0\n   * @param {Number} x1 first control point\n   * @param {Number} y1\n   * @param {Number} x2 secondo control point\n   * @param {Number} y2\n   * @param {Number} x3 end of beizer\n   * @param {Number} y3\n   */\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var argsString = _join.call(arguments);\n    if (boundsOfCurveCache[argsString]) {\n      return boundsOfCurveCache[argsString];\n    }\n\n    var sqrt = Math.sqrt,\n        min = Math.min, max = Math.max,\n        abs = Math.abs, tvalues = [],\n        bounds = [[], []],\n        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n    b = 6 * x0 - 12 * x1 + 6 * x2;\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n    c = 3 * x1 - 3 * x0;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i > 0) {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      if (b2ac < 0) {\n        continue;\n      }\n      sqrtb2ac = sqrt(b2ac);\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x, y, j = tvalues.length, jlen = j, mt;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n      bounds[0][j] = x;\n\n      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n      bounds[1][j] = y;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    var result = [\n      {\n        x: min.apply(null, bounds[0]),\n        y: min.apply(null, bounds[1])\n      },\n      {\n        x: max.apply(null, bounds[0]),\n        y: max.apply(null, bounds[1])\n      }\n    ];\n    boundsOfCurveCache[argsString] = result;\n    return result;\n  }\n\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice;\n\n  /* _ES5_COMPAT_START_ */\n\n  if (!Array.prototype.indexOf) {\n    /**\n     * Finds index of an element in an array\n     * @param {*} searchElement\n     * @return {Number}\n     */\n    Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n      if (this === void 0 || this === null) {\n        throw new TypeError();\n      }\n      var t = Object(this), len = t.length >>> 0;\n      if (len === 0) {\n        return -1;\n      }\n      var n = 0;\n      if (arguments.length > 0) {\n        n = Number(arguments[1]);\n        if (n !== n) { // shortcut for verifying if it's NaN\n          n = 0;\n        }\n        else if (n !== 0 && n !== Number.POSITIVE_INFINITY && n !== Number.NEGATIVE_INFINITY) {\n          n = (n > 0 || -1) * Math.floor(Math.abs(n));\n        }\n      }\n      if (n >= len) {\n        return -1;\n      }\n      var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n      for (; k < len; k++) {\n        if (k in t && t[k] === searchElement) {\n          return k;\n        }\n      }\n      return -1;\n    };\n  }\n\n  if (!Array.prototype.forEach) {\n    /**\n     * Iterates an array, invoking callback for each element\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Array}\n     */\n    Array.prototype.forEach = function(fn, context) {\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this) {\n          fn.call(context, this[i], i, this);\n        }\n      }\n    };\n  }\n\n  if (!Array.prototype.map) {\n    /**\n     * Returns a result of iterating over an array, invoking callback for each element\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Array}\n     */\n    Array.prototype.map = function(fn, context) {\n      var result = [];\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this) {\n          result[i] = fn.call(context, this[i], i, this);\n        }\n      }\n      return result;\n    };\n  }\n\n  if (!Array.prototype.every) {\n    /**\n     * Returns true if a callback returns truthy value for all elements in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Boolean}\n     */\n    Array.prototype.every = function(fn, context) {\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this && !fn.call(context, this[i], i, this)) {\n          return false;\n        }\n      }\n      return true;\n    };\n  }\n\n  if (!Array.prototype.some) {\n    /**\n     * Returns true if a callback returns truthy value for at least one element in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Boolean}\n     */\n    Array.prototype.some = function(fn, context) {\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this && fn.call(context, this[i], i, this)) {\n          return true;\n        }\n      }\n      return false;\n    };\n  }\n\n  if (!Array.prototype.filter) {\n    /**\n     * Returns the result of iterating over elements in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Array}\n     */\n    Array.prototype.filter = function(fn, context) {\n      var result = [], val;\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this) {\n          val = this[i]; // in case fn mutates this\n          if (fn.call(context, val, i, this)) {\n            result.push(val);\n          }\n        }\n      }\n      return result;\n    };\n  }\n\n  if (!Array.prototype.reduce) {\n    /**\n     * Returns \"folded\" (reduced) result of iterating over elements in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @return {*}\n     */\n    Array.prototype.reduce = function(fn /*, initial*/) {\n      var len = this.length >>> 0,\n          i = 0,\n          rv;\n\n      if (arguments.length > 1) {\n        rv = arguments[1];\n      }\n      else {\n        do {\n          if (i in this) {\n            rv = this[i++];\n            break;\n          }\n          // if array contains no values, no initial value to return\n          if (++i >= len) {\n            throw new TypeError();\n          }\n        }\n        while (true);\n      }\n      for (; i < len; i++) {\n        if (i in this) {\n          rv = fn.call(null, rv, this[i], i, this);\n        }\n      }\n      return rv;\n    };\n  }\n\n  /* _ES5_COMPAT_END_ */\n\n  /**\n   * Invokes method on all items in a given array\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} method Name of a method to invoke\n   * @return {Array}\n   */\n  function invoke(array, method) {\n    var args = slice.call(arguments, 2), result = [];\n    for (var i = 0, len = array.length; i < len; i++) {\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n    }\n    return result;\n  }\n\n  /**\n   * Finds maximum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function max(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 >= value2;\n    });\n  }\n\n  /**\n   * Finds minimum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function min(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 < value2;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function fill(array, value) {\n    var k = array.length;\n    while (k--) {\n      array[k] = value;\n    }\n    return array;\n  }\n\n  /**\n   * @private\n   */\n  function find(array, byProperty, condition) {\n    if (!array || array.length === 0) {\n      return;\n    }\n\n    var i = array.length - 1,\n        result = byProperty ? array[i][byProperty] : array[i];\n    if (byProperty) {\n      while (i--) {\n        if (condition(array[i][byProperty], result)) {\n          result = array[i][byProperty];\n        }\n      }\n    }\n    else {\n      while (i--) {\n        if (condition(array[i], result)) {\n          result = array[i];\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @namespace fabric.util.array\n   */\n  fabric.util.array = {\n    fill: fill,\n    invoke: invoke,\n    min: min,\n    max: max\n  };\n\n})();\n\n\n(function() {\n  /**\n   * Copies all enumerable properties of one js object to another\n   * Does not clone or extend fabric.Object subclasses.\n   * @memberOf fabric.util.object\n   * @param {Object} destination Where to copy to\n   * @param {Object} source Where to copy from\n   * @return {Object}\n   */\n\n  function extend(destination, source, deep) {\n    // JScript DontEnum bug is not taken care of\n    // the deep clone is for internal use, is not meant to avoid\n    // javascript traps or cloning html element or self referenced objects.\n    if (deep) {\n      if (!fabric.isLikelyNode && source instanceof Element) {\n        // avoid cloning deep images, canvases,\n        destination = source;\n      }\n      else if (source instanceof Array) {\n        destination = [];\n        for (var i = 0, len = source.length; i < len; i++) {\n          destination[i] = extend({ }, source[i], deep);\n        }\n      }\n      else if (source && typeof source === 'object') {\n        for (var property in source) {\n          if (source.hasOwnProperty(property)) {\n            destination[property] = extend({ }, source[property], deep);\n          }\n        }\n      }\n      else {\n        // this sounds odd for an extend but is ok for recursive use\n        destination = source;\n      }\n    }\n    else {\n      for (var property in source) {\n        destination[property] = source[property];\n      }\n    }\n    return destination;\n  }\n\n  /**\n   * Creates an empty object and copies all enumerable properties of another object to it\n   * @memberOf fabric.util.object\n   * @param {Object} object Object to clone\n   * @return {Object}\n   */\n  function clone(object, deep) {\n    return extend({ }, object, deep);\n  }\n\n  /** @namespace fabric.util.object */\n  fabric.util.object = {\n    extend: extend,\n    clone: clone\n  };\n\n})();\n\n\n(function() {\n\n  /* _ES5_COMPAT_START_ */\n  if (!String.prototype.trim) {\n    /**\n     * Trims a string (removing whitespace from the beginning and the end)\n     * @function external:String#trim\n     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/Trim\">String#trim on MDN</a>\n     */\n    String.prototype.trim = function () {\n      // this trim is not fully ES3 or ES5 compliant, but it should cover most cases for now\n      return this.replace(/^[\\s\\xA0]+/, '').replace(/[\\s\\xA0]+$/, '');\n    };\n  }\n  /* _ES5_COMPAT_END_ */\n\n  /**\n   * Camelizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to camelize\n   * @return {String} Camelized version of a string\n   */\n  function camelize(string) {\n    return string.replace(/-+(.)?/g, function(match, character) {\n      return character ? character.toUpperCase() : '';\n    });\n  }\n\n  /**\n   * Capitalizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to capitalize\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n   * and other letters stay untouched, if false first letter is capitalized\n   * and other letters are converted to lowercase.\n   * @return {String} Capitalized version of a string\n   */\n  function capitalize(string, firstLetterOnly) {\n    return string.charAt(0).toUpperCase() +\n      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n  }\n\n  /**\n   * Escapes XML in a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to escape\n   * @return {String} Escaped version of a string\n   */\n  function escapeXml(string) {\n    return string.replace(/&/g, '&amp;')\n       .replace(/\"/g, '&quot;')\n       .replace(/'/g, '&apos;')\n       .replace(/</g, '&lt;')\n       .replace(/>/g, '&gt;');\n  }\n\n  /**\n   * String utilities\n   * @namespace fabric.util.string\n   */\n  fabric.util.string = {\n    camelize: camelize,\n    capitalize: capitalize,\n    escapeXml: escapeXml\n  };\n})();\n\n\n/* _ES5_COMPAT_START_ */\n(function() {\n\n  var slice = Array.prototype.slice,\n      apply = Function.prototype.apply,\n      Dummy = function() { };\n\n  if (!Function.prototype.bind) {\n    /**\n     * Cross-browser approximation of ES5 Function.prototype.bind (not fully spec conforming)\n     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind\">Function#bind on MDN</a>\n     * @param {Object} thisArg Object to bind function to\n     * @param {Any[]} Values to pass to a bound function\n     * @return {Function}\n     */\n    Function.prototype.bind = function(thisArg) {\n      var _this = this, args = slice.call(arguments, 1), bound;\n      if (args.length) {\n        bound = function() {\n          return apply.call(_this, this instanceof Dummy ? this : thisArg, args.concat(slice.call(arguments)));\n        };\n      }\n      else {\n        /** @ignore */\n        bound = function() {\n          return apply.call(_this, this instanceof Dummy ? this : thisArg, arguments);\n        };\n      }\n      Dummy.prototype = this.prototype;\n      bound.prototype = new Dummy();\n\n      return bound;\n    };\n  }\n\n})();\n/* _ES5_COMPAT_END_ */\n\n\n(function() {\n\n  var slice = Array.prototype.slice, emptyFunction = function() { },\n\n      IS_DONTENUM_BUGGY = (function() {\n        for (var p in { toString: 1 }) {\n          if (p === 'toString') {\n            return false;\n          }\n        }\n        return true;\n      })(),\n\n      /** @ignore */\n      addMethods = function(klass, source, parent) {\n        for (var property in source) {\n\n          if (property in klass.prototype &&\n              typeof klass.prototype[property] === 'function' &&\n              (source[property] + '').indexOf('callSuper') > -1) {\n\n            klass.prototype[property] = (function(property) {\n              return function() {\n\n                var superclass = this.constructor.superclass;\n                this.constructor.superclass = parent;\n                var returnValue = source[property].apply(this, arguments);\n                this.constructor.superclass = superclass;\n\n                if (property !== 'initialize') {\n                  return returnValue;\n                }\n              };\n            })(property);\n          }\n          else {\n            klass.prototype[property] = source[property];\n          }\n\n          if (IS_DONTENUM_BUGGY) {\n            if (source.toString !== Object.prototype.toString) {\n              klass.prototype.toString = source.toString;\n            }\n            if (source.valueOf !== Object.prototype.valueOf) {\n              klass.prototype.valueOf = source.valueOf;\n            }\n          }\n        }\n      };\n\n  function Subclass() { }\n\n  function callSuper(methodName) {\n    var parentMethod = null,\n        _this = this;\n\n    // climb prototype chain to find method not equal to callee's method\n    while (_this.constructor.superclass) {\n      var superClassMethod = _this.constructor.superclass.prototype[methodName];\n      if (_this[methodName] !== superClassMethod) {\n        parentMethod = superClassMethod;\n        break;\n      }\n      // eslint-disable-next-line\n      _this = _this.constructor.superclass.prototype;\n    }\n\n    if (!parentMethod) {\n      return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\n    }\n\n    return (arguments.length > 1)\n      ? parentMethod.apply(this, slice.call(arguments, 1))\n      : parentMethod.call(this);\n  }\n\n  /**\n   * Helper for creation of \"classes\".\n   * @memberOf fabric.util\n   * @param {Function} [parent] optional \"Class\" to inherit from\n   * @param {Object} [properties] Properties shared by all instances of this class\n   *                  (be careful modifying objects defined here as this would affect all instances)\n   */\n  function createClass() {\n    var parent = null,\n        properties = slice.call(arguments, 0);\n\n    if (typeof properties[0] === 'function') {\n      parent = properties.shift();\n    }\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      Subclass.prototype = parent.prototype;\n      klass.prototype = new Subclass();\n      parent.subclasses.push(klass);\n    }\n    for (var i = 0, length = properties.length; i < length; i++) {\n      addMethods(klass, properties[i], parent);\n    }\n    if (!klass.prototype.initialize) {\n      klass.prototype.initialize = emptyFunction;\n    }\n    klass.prototype.constructor = klass;\n    klass.prototype.callSuper = callSuper;\n    return klass;\n  }\n\n  fabric.util.createClass = createClass;\n})();\n\n\n(function () {\n\n  var unknown = 'unknown';\n\n  /* EVENT HANDLING */\n\n  function areHostMethods(object) {\n    var methodNames = Array.prototype.slice.call(arguments, 1),\n        t, i, len = methodNames.length;\n    for (i = 0; i < len; i++) {\n      t = typeof object[methodNames[i]];\n      if (!(/^(?:function|object|unknown)$/).test(t)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /** @ignore */\n  var getElement,\n      setElement,\n      getUniqueId = (function () {\n        var uid = 0;\n        return function (element) {\n          return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);\n        };\n      })();\n\n  (function () {\n    var elements = { };\n    /** @ignore */\n    getElement = function (uid) {\n      return elements[uid];\n    };\n    /** @ignore */\n    setElement = function (uid, element) {\n      elements[uid] = element;\n    };\n  })();\n\n  function createListener(uid, handler) {\n    return {\n      handler: handler,\n      wrappedHandler: createWrappedHandler(uid, handler)\n    };\n  }\n\n  function createWrappedHandler(uid, handler) {\n    return function (e) {\n      handler.call(getElement(uid), e || fabric.window.event);\n    };\n  }\n\n  function createDispatcher(uid, eventName) {\n    return function (e) {\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          handlersForEvent[i].call(this, e || fabric.window.event);\n        }\n      }\n    };\n  }\n\n  var shouldUseAddListenerRemoveListener = (\n        areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') &&\n        areHostMethods(fabric.window, 'addEventListener', 'removeEventListener')),\n\n      shouldUseAttachEventDetachEvent = (\n        areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') &&\n        areHostMethods(fabric.window, 'attachEvent', 'detachEvent')),\n\n      // IE branch\n      listeners = { },\n\n      // DOM L0 branch\n      handlers = { },\n\n      addListener, removeListener;\n\n  if (shouldUseAddListenerRemoveListener) {\n    /** @ignore */\n    addListener = function (element, eventName, handler, options) {\n      // since ie10 or ie9 can use addEventListener but they do not support options, i need to check\n      element && element.addEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler, options) {\n      element && element.removeEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n  }\n\n  else if (shouldUseAttachEventDetachEvent) {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      setElement(uid, element);\n      if (!listeners[uid]) {\n        listeners[uid] = { };\n      }\n      if (!listeners[uid][eventName]) {\n        listeners[uid][eventName] = [];\n\n      }\n      var listener = createListener(uid, handler);\n      listeners[uid][eventName].push(listener);\n      element.attachEvent('on' + eventName, listener.wrappedHandler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element), listener;\n      if (listeners[uid] && listeners[uid][eventName]) {\n        for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\n          listener = listeners[uid][eventName][i];\n          if (listener && listener.handler === handler) {\n            element.detachEvent('on' + eventName, listener.wrappedHandler);\n            listeners[uid][eventName][i] = null;\n          }\n        }\n      }\n    };\n  }\n  else {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      if (!handlers[uid]) {\n        handlers[uid] = { };\n      }\n      if (!handlers[uid][eventName]) {\n        handlers[uid][eventName] = [];\n        var existingHandler = element['on' + eventName];\n        if (existingHandler) {\n          handlers[uid][eventName].push(existingHandler);\n        }\n        element['on' + eventName] = createDispatcher(uid, eventName);\n      }\n      handlers[uid][eventName].push(handler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          if (handlersForEvent[i] === handler) {\n            handlersForEvent.splice(i, 1);\n          }\n        }\n      }\n    };\n  }\n\n  /**\n   * Adds an event listener to an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.addListener = addListener;\n\n  /**\n   * Removes an event listener from an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.removeListener = removeListener;\n\n  /**\n   * Cross-browser wrapper for getting event's coordinates\n   * @memberOf fabric.util\n   * @param {Event} event Event object\n   */\n  function getPointer(event) {\n    event || (event = fabric.window.event);\n\n    var element = event.target ||\n                  (typeof event.srcElement !== unknown ? event.srcElement : null),\n\n        scroll = fabric.util.getScrollLeftTop(element);\n\n    return {\n      x: pointerX(event) + scroll.left,\n      y: pointerY(event) + scroll.top\n    };\n  }\n\n  var pointerX = function(event) {\n    // looks like in IE (<9) clientX at certain point (apparently when mouseup fires on VML element)\n    // is represented as COM object, with all the consequences, like \"unknown\" type and error on [[Get]]\n    // need to investigate later\n        return (typeof event.clientX !== unknown ? event.clientX : 0);\n      },\n\n      pointerY = function(event) {\n        return (typeof event.clientY !== unknown ? event.clientY : 0);\n      };\n\n  function _getPointer(event, pageProp, clientProp) {\n    var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';\n\n    return (event[touchProp] && event[touchProp][0]\n      ? (event[touchProp][0][pageProp] - (event[touchProp][0][pageProp] - event[touchProp][0][clientProp]))\n        || event[clientProp]\n      : event[clientProp]);\n  }\n\n  if (fabric.isTouchSupported) {\n    pointerX = function(event) {\n      return _getPointer(event, 'pageX', 'clientX');\n    };\n    pointerY = function(event) {\n      return _getPointer(event, 'pageY', 'clientY');\n    };\n  }\n\n  fabric.util.getPointer = getPointer;\n\n  fabric.util.object.extend(fabric.util, fabric.Observable);\n\n})();\n\n\n(function () {\n\n  /**\n   * Cross-browser wrapper for setting element's style\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {HTMLElement} Element that was passed as a first argument\n   */\n  function setStyle(element, styles) {\n    var elementStyle = element.style;\n    if (!elementStyle) {\n      return element;\n    }\n    if (typeof styles === 'string') {\n      element.style.cssText += ';' + styles;\n      return styles.indexOf('opacity') > -1\n        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n        : element;\n    }\n    for (var property in styles) {\n      if (property === 'opacity') {\n        setOpacity(element, styles[property]);\n      }\n      else {\n        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n          : property;\n        elementStyle[normalizedProperty] = styles[property];\n      }\n    }\n    return element;\n  }\n\n  var parseEl = fabric.document.createElement('div'),\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\n      supportsFilters = typeof parseEl.style.filter === 'string',\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\n      /** @ignore */\n      setOpacity = function (element) { return element; };\n\n  if (supportsOpacity) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      element.style.opacity = value;\n      return element;\n    };\n  }\n  else if (supportsFilters) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      var es = element.style;\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\n        es.zoom = 1;\n      }\n      if (reOpacity.test(es.filter)) {\n        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n        es.filter = es.filter.replace(reOpacity, value);\n      }\n      else {\n        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n      }\n      return element;\n    };\n  }\n\n  fabric.util.setStyle = setStyle;\n\n})();\n\n\n(function() {\n\n  var _slice = Array.prototype.slice;\n\n  /**\n   * Takes id and returns an element with that id (if one exists in a document)\n   * @memberOf fabric.util\n   * @param {String|HTMLElement} id\n   * @return {HTMLElement|null}\n   */\n  function getById(id) {\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n  }\n\n  var sliceCanConvertNodelists,\n      /**\n       * Converts an array-like object (e.g. arguments or NodeList) to an array\n       * @memberOf fabric.util\n       * @param {Object} arrayLike\n       * @return {Array}\n       */\n      toArray = function(arrayLike) {\n        return _slice.call(arrayLike, 0);\n      };\n\n  try {\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n  }\n  catch (err) { }\n\n  if (!sliceCanConvertNodelists) {\n    toArray = function(arrayLike) {\n      var arr = new Array(arrayLike.length), i = arrayLike.length;\n      while (i--) {\n        arr[i] = arrayLike[i];\n      }\n      return arr;\n    };\n  }\n\n  /**\n   * Creates specified element with specified attributes\n   * @memberOf fabric.util\n   * @param {String} tagName Type of an element to create\n   * @param {Object} [attributes] Attributes to set on an element\n   * @return {HTMLElement} Newly created element\n   */\n  function makeElement(tagName, attributes) {\n    var el = fabric.document.createElement(tagName);\n    for (var prop in attributes) {\n      if (prop === 'class') {\n        el.className = attributes[prop];\n      }\n      else if (prop === 'for') {\n        el.htmlFor = attributes[prop];\n      }\n      else {\n        el.setAttribute(prop, attributes[prop]);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Adds class to an element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to add class to\n   * @param {String} className Class to add to an element\n   */\n  function addClass(element, className) {\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n      element.className += (element.className ? ' ' : '') + className;\n    }\n  }\n\n  /**\n   * Wraps element with another element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to wrap\n   * @param {HTMLElement|String} wrapper Element to wrap with\n   * @param {Object} [attributes] Attributes to set on a wrapper\n   * @return {HTMLElement} wrapper\n   */\n  function wrapElement(element, wrapper, attributes) {\n    if (typeof wrapper === 'string') {\n      wrapper = makeElement(wrapper, attributes);\n    }\n    if (element.parentNode) {\n      element.parentNode.replaceChild(wrapper, element);\n    }\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n\n  /**\n   * Returns element scroll offsets\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to operate on\n   * @return {Object} Object with left/top values\n   */\n  function getScrollLeftTop(element) {\n\n    var left = 0,\n        top = 0,\n        docElement = fabric.document.documentElement,\n        body = fabric.document.body || {\n          scrollLeft: 0, scrollTop: 0\n        };\n\n    // While loop checks (and then sets element to) .parentNode OR .host\n    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n    while (element && (element.parentNode || element.host)) {\n\n      // Set element to element parent, or 'host' in case of ShadowDOM\n      element = element.parentNode || element.host;\n\n      if (element === fabric.document) {\n        left = body.scrollLeft || docElement.scrollLeft || 0;\n        top = body.scrollTop ||  docElement.scrollTop || 0;\n      }\n      else {\n        left += element.scrollLeft || 0;\n        top += element.scrollTop || 0;\n      }\n\n      if (element.nodeType === 1 &&\n          fabric.util.getElementStyle(element, 'position') === 'fixed') {\n        break;\n      }\n    }\n\n    return { left: left, top: top };\n  }\n\n  /**\n   * Returns offset for a given element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get offset for\n   * @return {Object} Object with \"left\" and \"top\" properties\n   */\n  function getElementOffset(element) {\n    var docElem,\n        doc = element && element.ownerDocument,\n        box = { left: 0, top: 0 },\n        offset = { left: 0, top: 0 },\n        scrollLeftTop,\n        offsetAttributes = {\n          borderLeftWidth: 'left',\n          borderTopWidth:  'top',\n          paddingLeft:     'left',\n          paddingTop:      'top'\n        };\n\n    if (!doc) {\n      return offset;\n    }\n\n    for (var attr in offsetAttributes) {\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n    }\n\n    docElem = doc.documentElement;\n    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n      box = element.getBoundingClientRect();\n    }\n\n    scrollLeftTop = getScrollLeftTop(element);\n\n    return {\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n    };\n  }\n\n  /**\n   * Returns style attribute value of a given element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get style attribute for\n   * @param {String} attr Style attribute to get for element\n   * @return {String} Style attribute value of the given element.\n   */\n  var getElementStyle;\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n    getElementStyle = function(element, attr) {\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\n      return style ? style[attr] : undefined;\n    };\n  }\n  else {\n    getElementStyle = function(element, attr) {\n      var value = element.style[attr];\n      if (!value && element.currentStyle) {\n        value = element.currentStyle[attr];\n      }\n      return value;\n    };\n  }\n\n  (function () {\n    var style = fabric.document.documentElement.style,\n        selectProp = 'userSelect' in style\n          ? 'userSelect'\n          : 'MozUserSelect' in style\n            ? 'MozUserSelect'\n            : 'WebkitUserSelect' in style\n              ? 'WebkitUserSelect'\n              : 'KhtmlUserSelect' in style\n                ? 'KhtmlUserSelect'\n                : '';\n\n    /**\n     * Makes element unselectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make unselectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementUnselectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = fabric.util.falseFunction;\n      }\n      if (selectProp) {\n        element.style[selectProp] = 'none';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = 'on';\n      }\n      return element;\n    }\n\n    /**\n     * Makes element selectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make selectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementSelectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = null;\n      }\n      if (selectProp) {\n        element.style[selectProp] = '';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = '';\n      }\n      return element;\n    }\n\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\n    fabric.util.makeElementSelectable = makeElementSelectable;\n  })();\n\n  (function() {\n\n    /**\n     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n     * @memberOf fabric.util\n     * @param {String} url URL of a script to load\n     * @param {Function} callback Callback to execute when script is finished loading\n     */\n    function getScript(url, callback) {\n      var headEl = fabric.document.getElementsByTagName('head')[0],\n          scriptEl = fabric.document.createElement('script'),\n          loading = true;\n\n      /** @ignore */\n      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n        if (loading) {\n          if (typeof this.readyState === 'string' &&\n              this.readyState !== 'loaded' &&\n              this.readyState !== 'complete') {\n            return;\n          }\n          loading = false;\n          callback(e || fabric.window.event);\n          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n        }\n      };\n      scriptEl.src = url;\n      headEl.appendChild(scriptEl);\n      // causes issue in Opera\n      // headEl.removeChild(scriptEl);\n    }\n\n    fabric.util.getScript = getScript;\n  })();\n\n  fabric.util.getById = getById;\n  fabric.util.toArray = toArray;\n  fabric.util.makeElement = makeElement;\n  fabric.util.addClass = addClass;\n  fabric.util.wrapElement = wrapElement;\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\n  fabric.util.getElementOffset = getElementOffset;\n  fabric.util.getElementStyle = getElementStyle;\n\n})();\n\n\n(function() {\n\n  function addParamToUrl(url, param) {\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\n  }\n\n  var makeXHR = (function() {\n    var factories = [\n      function() { return new ActiveXObject('Microsoft.XMLHTTP'); },\n      function() { return new ActiveXObject('Msxml2.XMLHTTP'); },\n      function() { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); },\n      function() { return new XMLHttpRequest(); }\n    ];\n    for (var i = factories.length; i--; ) {\n      try {\n        var req = factories[i]();\n        if (req) {\n          return factories[i];\n        }\n      }\n      catch (err) { }\n    }\n  })();\n\n  function emptyFn() { }\n\n  /**\n   * Cross-browser abstraction for sending XMLHttpRequest\n   * @memberOf fabric.util\n   * @param {String} url URL to send XMLHttpRequest to\n   * @param {Object} [options] Options object\n   * @param {String} [options.method=\"GET\"]\n   * @param {String} [options.parameters] parameters to append to url in GET or in body\n   * @param {String} [options.body] body to send with POST or PUT request\n   * @param {Function} options.onComplete Callback to invoke when request is completed\n   * @return {XMLHttpRequest} request\n   */\n  function request(url, options) {\n\n    options || (options = { });\n\n    var method = options.method ? options.method.toUpperCase() : 'GET',\n        onComplete = options.onComplete || function() { },\n        xhr = makeXHR(),\n        body = options.body || options.parameters;\n\n    /** @ignore */\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        onComplete(xhr);\n        xhr.onreadystatechange = emptyFn;\n      }\n    };\n\n    if (method === 'GET') {\n      body = null;\n      if (typeof options.parameters === 'string') {\n        url = addParamToUrl(url, options.parameters);\n      }\n    }\n\n    xhr.open(method, url, true);\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.send(body);\n    return xhr;\n  }\n\n  fabric.util.request = request;\n})();\n\n\n/**\n * Wrapper around `console.log` (when available)\n * @param {*} [values] Values to log\n */\nfabric.log = function() { };\n\n/**\n * Wrapper around `console.warn` (when available)\n * @param {*} [values] Values to log as a warning\n */\nfabric.warn = function() { };\n\n/* eslint-disable */\nif (typeof console !== 'undefined') {\n\n  ['log', 'warn'].forEach(function(methodName) {\n\n    if (typeof console[methodName] !== 'undefined' &&\n        typeof console[methodName].apply === 'function') {\n\n      fabric[methodName] = function() {\n        return console[methodName].apply(console, arguments);\n      };\n    }\n  });\n}\n/* eslint-enable */\n\n\n(function() {\n\n  function noop() {\n    return false;\n  }\n\n  /**\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Number} [options.startValue=0] Starting value\n   * @param {Number} [options.endValue=100] Ending value\n   * @param {Number} [options.byValue=100] Value to modify the property by\n   * @param {Function} [options.easing] Easing function\n   * @param {Number} [options.duration=500] Duration of change (in ms)\n   */\n  function animate(options) {\n\n    requestAnimFrame(function(timestamp) {\n      options || (options = { });\n\n      var start = timestamp || +new Date(),\n          duration = options.duration || 500,\n          finish = start + duration, time,\n          onChange = options.onChange || noop,\n          abort = options.abort || noop,\n          onComplete = options.onComplete || noop,\n          easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},\n          startValue = 'startValue' in options ? options.startValue : 0,\n          endValue = 'endValue' in options ? options.endValue : 100,\n          byValue = options.byValue || endValue - startValue;\n\n      options.onStart && options.onStart();\n\n      (function tick(ticktime) {\n        if (abort()) {\n          onComplete(endValue, 1, 1);\n          return;\n        }\n        time = ticktime || +new Date();\n        var currentTime = time > finish ? duration : (time - start),\n            timePerc = currentTime / duration,\n            current = easing(currentTime, startValue, byValue, duration),\n            valuePerc = Math.abs((current - startValue) / byValue);\n        onChange(current, valuePerc, timePerc);\n        if (time > finish) {\n          options.onComplete && options.onComplete();\n          return;\n        }\n        requestAnimFrame(tick);\n      })(start);\n    });\n\n  }\n\n  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n                          fabric.window.webkitRequestAnimationFrame ||\n                          fabric.window.mozRequestAnimationFrame    ||\n                          fabric.window.oRequestAnimationFrame      ||\n                          fabric.window.msRequestAnimationFrame     ||\n                          function(callback) {\n                            fabric.window.setTimeout(callback, 1000 / 60);\n                          };\n\n  /**\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n   * @memberOf fabric.util\n   * @param {Function} callback Callback to invoke\n   * @param {DOMElement} element optional Element to associate with animation\n   */\n  function requestAnimFrame() {\n    return _requestAnimFrame.apply(fabric.window, arguments);\n  }\n\n  fabric.util.animate = animate;\n  fabric.util.requestAnimFrame = requestAnimFrame;\n\n})();\n\n\n(function() {\n  // Calculate an in-between color. Returns a \"rgba()\" string.\n  // Credit: Edwin Martin <edwin@bitstorm.org>\n  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\n  function calculateColor(begin, end, pos) {\n    var color = 'rgba('\n        + parseInt((begin[0] + pos * (end[0] - begin[0])), 10) + ','\n        + parseInt((begin[1] + pos * (end[1] - begin[1])), 10) + ','\n        + parseInt((begin[2] + pos * (end[2] - begin[2])), 10);\n\n    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n    color += ')';\n    return color;\n  }\n\n  /**\n   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {String} fromColor The starting color in hex or rgb(a) format.\n   * @param {String} toColor The starting color in hex or rgb(a) format.\n   * @param {Number} [duration] Duration of change (in ms).\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\n   */\n  function animateColor(fromColor, toColor, duration, options) {\n    var startColor = new fabric.Color(fromColor).getSource(),\n        endColor = new fabric.Color(toColor).getSource();\n\n    options = options || {};\n\n    fabric.util.animate(fabric.util.object.extend(options, {\n      duration: duration || 500,\n      startValue: startColor,\n      endValue: endColor,\n      byValue: endColor,\n      easing: function (currentTime, startValue, byValue, duration) {\n        var posValue = options.colorEasing\n              ? options.colorEasing(currentTime, duration)\n              : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n        return calculateColor(startValue, byValue, posValue);\n      }\n    }));\n  }\n\n  fabric.util.animateColor = animateColor;\n\n})();\n\n\n(function() {\n\n  function normalize(a, c, p, s) {\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    }\n    else {\n      //handle the 0/0 case:\n      if (c === 0 && a === 0) {\n        s = p / (2 * Math.PI) * Math.asin(1);\n      }\n      else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n    }\n    return { a: a, c: c, p: p, s: s };\n  }\n\n  function elastic(opts, t, d) {\n    return opts.a *\n      Math.pow(2, 10 * (t -= 1)) *\n      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n  }\n\n  /**\n   * Cubic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n\n  /**\n   * Cubic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCubic(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n\n  /**\n   * Quartic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n  /**\n   * Quartic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n\n  /**\n   * Quartic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuart(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n\n  /**\n   * Quintic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n\n  /**\n   * Quintic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n\n  /**\n   * Quintic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuint(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n\n  /**\n   * Sinusoidal easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Sinusoidal easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n\n  /**\n   * Sinusoidal easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n\n  /**\n   * Exponential easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInExpo(t, b, c, d) {\n    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n\n  /**\n   * Exponential easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutExpo(t, b, c, d) {\n    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n\n  /**\n   * Exponential easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  /**\n   * Circular easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n\n  /**\n   * Circular easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n\n  /**\n   * Circular easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCirc(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n\n  /**\n   * Elastic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return -elastic(opts, t, d) + b;\n  }\n\n  /**\n   * Elastic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n  }\n\n  /**\n   * Elastic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d / 2;\n    if (t === 2) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n    var opts = normalize(a, c, p, s);\n    if (t < 1) {\n      return -0.5 * elastic(opts, t, d) + b;\n    }\n    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n  }\n\n  /**\n   * Backwards easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n\n  /**\n   * Backwards easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n\n  /**\n   * Backwards easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n    }\n    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n  }\n\n  /**\n   * Bouncing easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBounce(t, b, c, d) {\n    return c - easeOutBounce (d - t, 0, c, d) + b;\n  }\n\n  /**\n   * Bouncing easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBounce(t, b, c, d) {\n    if ((t /= d) < (1 / 2.75)) {\n      return c * (7.5625 * t * t) + b;\n    }\n    else if (t < (2 / 2.75)) {\n      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n    }\n    else if (t < (2.5 / 2.75)) {\n      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n    }\n    else {\n      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n    }\n  }\n\n  /**\n   * Bouncing easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n    }\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n\n  /**\n   * Easing functions\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n   * @namespace fabric.util.ease\n   */\n  fabric.util.ease = {\n\n    /**\n     * Quadratic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInQuad: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n\n    /**\n     * Quadratic easing out\n     * @memberOf fabric.util.ease\n     */\n    easeOutQuad: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n\n    /**\n     * Quadratic easing in and out\n     * @memberOf fabric.util.ease\n     */\n    easeInOutQuad: function(t, b, c, d) {\n      t /= (d / 2);\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    },\n\n    /**\n     * Cubic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInCubic: function(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n\n    easeOutCubic: easeOutCubic,\n    easeInOutCubic: easeInOutCubic,\n    easeInQuart: easeInQuart,\n    easeOutQuart: easeOutQuart,\n    easeInOutQuart: easeInOutQuart,\n    easeInQuint: easeInQuint,\n    easeOutQuint: easeOutQuint,\n    easeInOutQuint: easeInOutQuint,\n    easeInSine: easeInSine,\n    easeOutSine: easeOutSine,\n    easeInOutSine: easeInOutSine,\n    easeInExpo: easeInExpo,\n    easeOutExpo: easeOutExpo,\n    easeInOutExpo: easeInOutExpo,\n    easeInCirc: easeInCirc,\n    easeOutCirc: easeOutCirc,\n    easeInOutCirc: easeInOutCirc,\n    easeInElastic: easeInElastic,\n    easeOutElastic: easeOutElastic,\n    easeInOutElastic: easeInOutElastic,\n    easeInBack: easeInBack,\n    easeOutBack: easeOutBack,\n    easeInOutBack: easeInOutBack,\n    easeInBounce: easeInBounce,\n    easeOutBounce: easeOutBounce,\n    easeInOutBounce: easeInOutBounce\n  };\n\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  /**\n   * @name fabric\n   * @namespace\n   */\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      parseUnit = fabric.util.parseUnit,\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\n      reAllowedSVGTagNames = /^(path|circle|polygon|polyline|ellipse|rect|line|image|text)$/i,\n      reViewBoxTagNames = /^(symbol|image|marker|pattern|view|svg)$/i,\n      reNotAllowedAncestors = /^(?:pattern|defs|symbol|metadata|clipPath|mask)$/i,\n      reAllowedParents = /^(symbol|g|a|svg)$/i,\n\n      attributesMap = {\n        cx:                   'left',\n        x:                    'left',\n        r:                    'radius',\n        cy:                   'top',\n        y:                    'top',\n        display:              'visible',\n        visibility:           'visible',\n        transform:            'transformMatrix',\n        'fill-opacity':       'fillOpacity',\n        'fill-rule':          'fillRule',\n        'font-family':        'fontFamily',\n        'font-size':          'fontSize',\n        'font-style':         'fontStyle',\n        'font-weight':        'fontWeight',\n        'stroke-dasharray':   'strokeDashArray',\n        'stroke-linecap':     'strokeLineCap',\n        'stroke-linejoin':    'strokeLineJoin',\n        'stroke-miterlimit':  'strokeMiterLimit',\n        'stroke-opacity':     'strokeOpacity',\n        'stroke-width':       'strokeWidth',\n        'text-decoration':    'textDecoration',\n        'text-anchor':        'originX',\n        opacity:              'opacity'\n      },\n\n      colorAttributes = {\n        stroke: 'strokeOpacity',\n        fill:   'fillOpacity'\n      };\n\n  fabric.cssRules = { };\n  fabric.gradientDefs = { };\n\n  function normalizeAttr(attr) {\n    // transform attribute names\n    if (attr in attributesMap) {\n      return attributesMap[attr];\n    }\n    return attr;\n  }\n\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\n    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n        parsed;\n\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n      value = '';\n    }\n    else if (attr === 'strokeDashArray') {\n      if (value === 'none') {\n        value = null;\n      }\n      else {\n        value = value.replace(/,/g, ' ').split(/\\s+/).map(function(n) {\n          return parseFloat(n);\n        });\n      }\n    }\n    else if (attr === 'transformMatrix') {\n      if (parentAttributes && parentAttributes.transformMatrix) {\n        value = multiplyTransformMatrices(\n          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n      }\n      else {\n        value = fabric.parseTransformAttribute(value);\n      }\n    }\n    else if (attr === 'visible') {\n      value = (value === 'none' || value === 'hidden') ? false : true;\n      // display=none on parent element always takes precedence over child element\n      if (parentAttributes && parentAttributes.visible === false) {\n        value = false;\n      }\n    }\n    else if (attr === 'opacity') {\n      value = parseFloat(value);\n      if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n        value *= parentAttributes.opacity;\n      }\n    }\n    else if (attr === 'originX' /* text-anchor */) {\n      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n    }\n    else {\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n    }\n\n    return (!isArray && isNaN(parsed) ? value : parsed);\n  }\n\n  /**\n   * @private\n   * @param {Object} attributes Array of attributes to parse\n   */\n  function _setStrokeFillOpacity(attributes) {\n    for (var attr in colorAttributes) {\n\n      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n        continue;\n      }\n\n      if (typeof attributes[attr] === 'undefined') {\n        if (!fabric.Object.prototype[attr]) {\n          continue;\n        }\n        attributes[attr] = fabric.Object.prototype[attr];\n      }\n\n      if (attributes[attr].indexOf('url(') === 0) {\n        continue;\n      }\n\n      var color = new fabric.Color(attributes[attr]);\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n    }\n    return attributes;\n  }\n\n  /**\n   * @private\n   */\n  function _getMultipleNodes(doc, nodeNames) {\n    var nodeName, nodeArray = [], nodeList;\n    for (var i = 0; i < nodeNames.length; i++) {\n      nodeName = nodeNames[i];\n      nodeList = doc.getElementsByTagName(nodeName);\n      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n    }\n    return nodeArray;\n  }\n\n  /**\n   * Parses \"transform\" attribute, returning an array of values\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {String} attributeValue String containing attribute value\n   * @return {Array} Array of 6 elements representing transformation matrix\n   */\n  fabric.parseTransformAttribute = (function() {\n    function rotateMatrix(matrix, args) {\n      var cos = Math.cos(args[0]), sin = Math.sin(args[0]),\n          x = 0, y = 0;\n      if (args.length === 3) {\n        x = args[1];\n        y = args[2];\n      }\n\n      matrix[0] = cos;\n      matrix[1] = sin;\n      matrix[2] = -sin;\n      matrix[3] = cos;\n      matrix[4] = x - (cos * x - sin * y);\n      matrix[5] = y - (sin * x + cos * y);\n    }\n\n    function scaleMatrix(matrix, args) {\n      var multiplierX = args[0],\n          multiplierY = (args.length === 2) ? args[1] : args[0];\n\n      matrix[0] = multiplierX;\n      matrix[3] = multiplierY;\n    }\n\n    function skewMatrix(matrix, args, pos) {\n      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function translateMatrix(matrix, args) {\n      matrix[4] = args[0];\n      if (args.length === 2) {\n        matrix[5] = args[1];\n      }\n    }\n\n    // identity matrix\n    var iMatrix = [\n          1, // a\n          0, // b\n          0, // c\n          1, // d\n          0, // e\n          0  // f\n        ],\n\n        // == begin transform regexp\n        number = fabric.reNum,\n\n        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + ')' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' +\n                  '\\\\s*\\\\))',\n\n        transform = '(?:' +\n                    matrix + '|' +\n                    translate + '|' +\n                    scale + '|' +\n                    rotate + '|' +\n                    skewX + '|' +\n                    skewY +\n                    ')',\n\n        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n        reTransformList = new RegExp(transformList),\n        // == end transform regexp\n\n        reTransform = new RegExp(transform, 'g');\n\n    return function(attributeValue) {\n\n      // start with identity matrix\n      var matrix = iMatrix.concat(),\n          matrices = [];\n\n      // return if no argument was given or\n      // an argument does not match transform attribute regexp\n      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n        return matrix;\n      }\n\n      attributeValue.replace(reTransform, function(match) {\n\n        var m = new RegExp(transform).exec(match).filter(function (match) {\n              // match !== '' && match != null\n              return (!!match);\n            }),\n            operation = m[1],\n            args = m.slice(2).map(parseFloat);\n\n        switch (operation) {\n          case 'translate':\n            translateMatrix(matrix, args);\n            break;\n          case 'rotate':\n            args[0] = fabric.util.degreesToRadians(args[0]);\n            rotateMatrix(matrix, args);\n            break;\n          case 'scale':\n            scaleMatrix(matrix, args);\n            break;\n          case 'skewX':\n            skewMatrix(matrix, args, 2);\n            break;\n          case 'skewY':\n            skewMatrix(matrix, args, 1);\n            break;\n          case 'matrix':\n            matrix = args;\n            break;\n        }\n\n        // snapshot current matrix into matrices array\n        matrices.push(matrix.concat());\n        // reset\n        matrix = iMatrix.concat();\n      });\n\n      var combinedMatrix = matrices[0];\n      while (matrices.length > 1) {\n        matrices.shift();\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n      }\n      return combinedMatrix;\n    };\n  })();\n\n  /**\n   * @private\n   */\n  function parseStyleString(style, oStyle) {\n    var attr, value;\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n      var pair = chunk.split(':');\n\n      attr = pair[0].trim().toLowerCase();\n      value =  pair[1].trim();\n\n      oStyle[attr] = value;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function parseStyleObject(style, oStyle) {\n    var attr, value;\n    for (var prop in style) {\n      if (typeof style[prop] === 'undefined') {\n        continue;\n      }\n\n      attr = prop.toLowerCase();\n      value = style[prop];\n\n      oStyle[attr] = value;\n    }\n  }\n\n  /**\n   * @private\n   */\n  function getGlobalStylesForElement(element, svgUid) {\n    var styles = { };\n    for (var rule in fabric.cssRules[svgUid]) {\n      if (elementMatchesRule(element, rule.split(' '))) {\n        for (var property in fabric.cssRules[svgUid][rule]) {\n          styles[property] = fabric.cssRules[svgUid][rule][property];\n        }\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * @private\n   */\n  function elementMatchesRule(element, selectors) {\n    var firstMatching, parentMatching = true;\n    //start from rightmost selector.\n    firstMatching = selectorMatches(element, selectors.pop());\n    if (firstMatching && selectors.length) {\n      parentMatching = doesSomeParentMatch(element, selectors);\n    }\n    return firstMatching && parentMatching && (selectors.length === 0);\n  }\n\n  function doesSomeParentMatch(element, selectors) {\n    var selector, parentMatching = true;\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n      if (parentMatching) {\n        selector = selectors.pop();\n      }\n      element = element.parentNode;\n      parentMatching = selectorMatches(element, selector);\n    }\n    return selectors.length === 0;\n  }\n\n  /**\n   * @private\n   */\n  function selectorMatches(element, selector) {\n    var nodeName = element.nodeName,\n        classNames = element.getAttribute('class'),\n        id = element.getAttribute('id'), matcher;\n    // i check if a selector matches slicing away part from it.\n    // if i get empty string i should match\n    matcher = new RegExp('^' + nodeName, 'i');\n    selector = selector.replace(matcher, '');\n    if (id && selector.length) {\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n      selector = selector.replace(matcher, '');\n    }\n    if (classNames && selector.length) {\n      classNames = classNames.split(' ');\n      for (var i = classNames.length; i--;) {\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n        selector = selector.replace(matcher, '');\n      }\n    }\n    return selector.length === 0;\n  }\n\n  /**\n   * @private\n   * to support IE8 missing getElementById on SVGdocument\n   */\n  function elementById(doc, id) {\n    var el;\n    doc.getElementById && (el = doc.getElementById(id));\n    if (el) {\n      return el;\n    }\n    var node, i, nodelist = doc.getElementsByTagName('*');\n    for (i = 0; i < nodelist.length; i++) {\n      node = nodelist[i];\n      if (id === node.getAttribute('id')) {\n        return node;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function parseUseDirectives(doc) {\n    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\n\n    while (nodelist.length && i < nodelist.length) {\n      var el = nodelist[i],\n          xlink = el.getAttribute('xlink:href').substr(1),\n          x = el.getAttribute('x') || 0,\n          y = el.getAttribute('y') || 0,\n          el2 = elementById(doc, xlink).cloneNode(true),\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n          parentNode, oldLength = nodelist.length, attr, j, attrs, l;\n\n      applyViewboxTransform(el2);\n      if (/^svg$/i.test(el2.nodeName)) {\n        var el3 = el2.ownerDocument.createElement('g');\n        for (j = 0, attrs = el2.attributes, l = attrs.length; j < l; j++) {\n          attr = attrs.item(j);\n          el3.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n        // el2.firstChild != null\n        while (el2.firstChild) {\n          el3.appendChild(el2.firstChild);\n        }\n        el2 = el3;\n      }\n\n      for (j = 0, attrs = el.attributes, l = attrs.length; j < l; j++) {\n        attr = attrs.item(j);\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' || attr.nodeName === 'xlink:href') {\n          continue;\n        }\n\n        if (attr.nodeName === 'transform') {\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\n        }\n        else {\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n      }\n\n      el2.setAttribute('transform', currentTrans);\n      el2.setAttribute('instantiated_by_use', '1');\n      el2.removeAttribute('id');\n      parentNode = el.parentNode;\n      parentNode.replaceChild(el2, el);\n      // some browsers do not shorten nodelist after replaceChild (IE8)\n      if (nodelist.length === oldLength) {\n        i++;\n      }\n    }\n  }\n\n  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  // matches, e.g.: +14.56e-12, etc.\n  var reViewBoxAttrValue = new RegExp(\n    '^' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n    '$'\n  );\n\n  /**\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n   */\n  function applyViewboxTransform(element) {\n\n    var viewBoxAttr = element.getAttribute('viewBox'),\n        scaleX = 1,\n        scaleY = 1,\n        minX = 0,\n        minY = 0,\n        viewBoxWidth, viewBoxHeight, matrix, el,\n        widthAttr = element.getAttribute('width'),\n        heightAttr = element.getAttribute('height'),\n        x = element.getAttribute('x') || 0,\n        y = element.getAttribute('y') || 0,\n        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n        missingViewBox = (!viewBoxAttr || !reViewBoxTagNames.test(element.nodeName)\n                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n        toBeParsed = missingViewBox && missingDimAttr,\n        parsedDim = { }, translateMatrix = '';\n\n    parsedDim.width = 0;\n    parsedDim.height = 0;\n    parsedDim.toBeParsed = toBeParsed;\n\n    if (toBeParsed) {\n      return parsedDim;\n    }\n\n    if (missingViewBox) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      return parsedDim;\n    }\n\n    minX = -parseFloat(viewBoxAttr[1]);\n    minY = -parseFloat(viewBoxAttr[2]);\n    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n\n    if (!missingDimAttr) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      scaleX = parsedDim.width / viewBoxWidth;\n      scaleY = parsedDim.height / viewBoxHeight;\n    }\n    else {\n      parsedDim.width = viewBoxWidth;\n      parsedDim.height = viewBoxHeight;\n    }\n\n    // default is to preserve aspect ratio\n    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n    if (preserveAspectRatio.alignX !== 'none') {\n      //translate all container for the effect of Mid, Min, Max\n      scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n    }\n\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n      return parsedDim;\n    }\n\n    if (x || y) {\n      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n    }\n\n    matrix = translateMatrix + ' matrix(' + scaleX +\n                  ' 0' +\n                  ' 0 ' +\n                  scaleY + ' ' +\n                  (minX * scaleX) + ' ' +\n                  (minY * scaleY) + ') ';\n\n    if (element.nodeName === 'svg') {\n      el = element.ownerDocument.createElement('g');\n      // element.firstChild != null\n      while (element.firstChild) {\n        el.appendChild(element.firstChild);\n      }\n      element.appendChild(el);\n    }\n    else {\n      el = element;\n      matrix = el.getAttribute('transform') + matrix;\n    }\n\n    el.setAttribute('transform', matrix);\n    return parsedDim;\n  }\n\n  function hasAncestorWithNodeName(element, nodeName) {\n    while (element && (element = element.parentNode)) {\n      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\n        && !element.getAttribute('instantiated_by_use')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {SVGDocument} doc SVG document to parse\n   * @param {Function} callback Callback to call when parsing is finished;\n   * It's being passed an array of elements (parsed from a document).\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n   * @param {Object} [parsingOptions] options for parsing document\n   * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\n   */\n  fabric.parseSVGDocument = function(doc, callback, reviver, parsingOptions) {\n    if (!doc) {\n      return;\n    }\n\n    parseUseDirectives(doc);\n\n    var svgUid =  fabric.Object.__uid++,\n        options = applyViewboxTransform(doc),\n        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n    options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\n    options.svgUid = svgUid;\n\n    if (descendants.length === 0 && fabric.isLikelyNode) {\n      // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n      // https://github.com/ajaxorg/node-o3-xml/issues/21\n      descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n      var arr = [];\n      for (var i = 0, len = descendants.length; i < len; i++) {\n        arr[i] = descendants[i];\n      }\n      descendants = arr;\n    }\n\n    var elements = descendants.filter(function(el) {\n      applyViewboxTransform(el);\n      return reAllowedSVGTagNames.test(el.nodeName.replace('svg:', '')) &&\n            !hasAncestorWithNodeName(el, reNotAllowedAncestors); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n    });\n\n    if (!elements || (elements && !elements.length)) {\n      callback && callback([], {});\n      return;\n    }\n\n    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n    // Precedence of rules:   style > class > attribute\n    fabric.parseElements(elements, function(instances) {\n      if (callback) {\n        callback(instances, options);\n      }\n    }, clone(options), reviver, parsingOptions);\n  };\n\n  var reFontDeclaration = new RegExp(\n    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n      fabric.reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\n  extend(fabric, {\n    /**\n     * Parses a short font declaration, building adding its properties to a style object\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {String} value font declaration\n     * @param {Object} oStyle definition\n     */\n    parseFontDeclaration: function(value, oStyle) {\n      var match = value.match(reFontDeclaration);\n\n      if (!match) {\n        return;\n      }\n      var fontStyle = match[1],\n          // font variant is not used\n          // fontVariant = match[2],\n          fontWeight = match[3],\n          fontSize = match[4],\n          lineHeight = match[5],\n          fontFamily = match[6];\n\n      if (fontStyle) {\n        oStyle.fontStyle = fontStyle;\n      }\n      if (fontWeight) {\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n      }\n      if (fontSize) {\n        oStyle.fontSize = parseUnit(fontSize);\n      }\n      if (fontFamily) {\n        oStyle.fontFamily = fontFamily;\n      }\n      if (lineHeight) {\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n      }\n    },\n\n    /**\n     * Parses an SVG document, returning all of the gradient declarations found in it\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n     */\n    getGradientDefs: function(doc) {\n      var tagArray = [\n            'linearGradient',\n            'radialGradient',\n            'svg:linearGradient',\n            'svg:radialGradient'],\n          elList = _getMultipleNodes(doc, tagArray),\n          el, j = 0, id, xlink,\n          gradientDefs = { }, idsToXlinkMap = { };\n\n      j = elList.length;\n\n      while (j--) {\n        el = elList[j];\n        xlink = el.getAttribute('xlink:href');\n        id = el.getAttribute('id');\n        if (xlink) {\n          idsToXlinkMap[id] = xlink.substr(1);\n        }\n        gradientDefs[id] = el;\n      }\n\n      for (id in idsToXlinkMap) {\n        var el2 = gradientDefs[idsToXlinkMap[id]].cloneNode(true);\n        el = gradientDefs[id];\n        while (el2.firstChild) {\n          el.appendChild(el2.firstChild);\n        }\n      }\n      return gradientDefs;\n    },\n\n    /**\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\n     * Parses parent \"g\" nodes recursively upwards.\n     * @static\n     * @memberOf fabric\n     * @param {DOMElement} element Element to parse\n     * @param {Array} attributes Array of attributes to parse\n     * @return {Object} object containing parsed attributes' names/values\n     */\n    parseAttributes: function(element, attributes, svgUid) {\n\n      if (!element) {\n        return;\n      }\n\n      var value,\n          parentAttributes = { },\n          fontSize;\n\n      if (typeof svgUid === 'undefined') {\n        svgUid = element.getAttribute('svgUid');\n      }\n      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n      if (element.parentNode && reAllowedParents.test(element.parentNode.nodeName)) {\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n      }\n      fontSize = (parentAttributes && parentAttributes.fontSize ) ||\n                 element.getAttribute('font-size') || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\n      var ownAttributes = attributes.reduce(function(memo, attr) {\n        value = element.getAttribute(attr);\n        if (value) { // eslint-disable-line\n          memo[attr] = value;\n        }\n        return memo;\n      }, { });\n      // add values parsed from style, which take precedence over attributes\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n      ownAttributes = extend(ownAttributes,\n        extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n\n      var normalizedAttr, normalizedValue, normalizedStyle = {};\n      for (var attr in ownAttributes) {\n        normalizedAttr = normalizeAttr(attr);\n        normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\n        normalizedStyle[normalizedAttr] = normalizedValue;\n      }\n      if (normalizedStyle && normalizedStyle.font) {\n        fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\n      }\n      var mergedAttrs = extend(parentAttributes, normalizedStyle);\n      return reAllowedParents.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\n    },\n\n    /**\n     * Transforms an array of svg elements to corresponding fabric.* instances\n     * @static\n     * @memberOf fabric\n     * @param {Array} elements Array of elements to parse\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n     * @param {Object} [options] Options object\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    parseElements: function(elements, callback, options, reviver, parsingOptions) {\n      new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\n    },\n\n    /**\n     * Parses \"style\" attribute, retuning an object with values\n     * @static\n     * @memberOf fabric\n     * @param {SVGElement} element Element to parse\n     * @return {Object} Objects with values parsed from style attribute of an element\n     */\n    parseStyleAttribute: function(element) {\n      var oStyle = { },\n          style = element.getAttribute('style');\n\n      if (!style) {\n        return oStyle;\n      }\n\n      if (typeof style === 'string') {\n        parseStyleString(style, oStyle);\n      }\n      else {\n        parseStyleObject(style, oStyle);\n      }\n\n      return oStyle;\n    },\n\n    /**\n     * Parses \"points\" attribute, returning an array of values\n     * @static\n     * @memberOf fabric\n     * @param {String} points points attribute string\n     * @return {Array} array of points\n     */\n    parsePointsAttribute: function(points) {\n\n      // points attribute is required and must not be empty\n      if (!points) {\n        return null;\n      }\n\n      // replace commas with whitespace and remove bookending whitespace\n      points = points.replace(/,/g, ' ').trim();\n\n      points = points.split(/\\s+/);\n      var parsedPoints = [], i, len;\n\n      i = 0;\n      len = points.length;\n      for (; i < len; i += 2) {\n        parsedPoints.push({\n          x: parseFloat(points[i]),\n          y: parseFloat(points[i + 1])\n        });\n      }\n\n      // odd number of points is an error\n      // if (parsedPoints.length % 2 !== 0) {\n      //   return null;\n      // }\n\n      return parsedPoints;\n    },\n\n    /**\n     * Returns CSS rules for a given SVG document\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} CSS rules of this document\n     */\n    getCSSRules: function(doc) {\n      var styles = doc.getElementsByTagName('style'),\n          allRules = { }, rules;\n\n      // very crude parsing of style contents\n      for (var i = 0, len = styles.length; i < len; i++) {\n        // IE9 doesn't support textContent, but provides text instead.\n        var styleContents = styles[i].textContent || styles[i].text;\n\n        // remove comments\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n        if (styleContents.trim() === '') {\n          continue;\n        }\n        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n        rules = rules.map(function(rule) { return rule.trim(); });\n        rules.forEach(function(rule) {\n\n          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n              ruleObj = { }, declaration = match[2].trim(),\n              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\n          for (var i = 0, len = propertyValuePairs.length; i < len; i++) {\n            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n                property = pair[0],\n                value = pair[1];\n            ruleObj[property] = value;\n          }\n          rule = match[1];\n          rule.split(',').forEach(function(_rule) {\n            _rule = _rule.replace(/^svg/i, '').trim();\n            if (_rule === '') {\n              return;\n            }\n            if (allRules[_rule]) {\n              fabric.util.object.extend(allRules[_rule], ruleObj);\n            }\n            else {\n              allRules[_rule] = fabric.util.object.clone(ruleObj);\n            }\n          });\n        });\n      }\n      return allRules;\n    },\n\n    /**\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n     * @memberOf fabric\n     * @param {String} url\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromURL: function(url, callback, reviver, options) {\n\n      url = url.replace(/^\\n\\s*/, '').trim();\n      new fabric.util.request(url, {\n        method: 'get',\n        onComplete: onComplete\n      });\n\n      function onComplete(r) {\n\n        var xml = r.responseXML;\n        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n          xml = new ActiveXObject('Microsoft.XMLDOM');\n          xml.async = 'false';\n          //IE chokes on DOCTYPE\n          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n        }\n        if (!xml || !xml.documentElement) {\n          callback && callback(null);\n        }\n\n        fabric.parseSVGDocument(xml.documentElement, function (results, _options) {\n          callback && callback(results, _options);\n        }, reviver, options);\n      }\n    },\n\n    /**\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n     * @memberOf fabric\n     * @param {String} string\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromString: function(string, callback, reviver, options) {\n      string = string.trim();\n      var doc;\n      if (typeof DOMParser !== 'undefined') {\n        var parser = new DOMParser();\n        if (parser && parser.parseFromString) {\n          doc = parser.parseFromString(string, 'text/xml');\n        }\n      }\n      else if (fabric.window.ActiveXObject) {\n        doc = new ActiveXObject('Microsoft.XMLDOM');\n        doc.async = 'false';\n        // IE chokes on DOCTYPE\n        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n      }\n\n      fabric.parseSVGDocument(doc.documentElement, function (results, _options) {\n        callback(results, _options);\n      }, reviver, options);\n    }\n  });\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.ElementsParser = function(elements, callback, options, reviver, parsingOptions) {\n  this.elements = elements;\n  this.callback = callback;\n  this.options = options;\n  this.reviver = reviver;\n  this.svgUid = (options && options.svgUid) || 0;\n  this.parsingOptions = parsingOptions;\n};\n\nfabric.ElementsParser.prototype.parse = function() {\n  this.instances = new Array(this.elements.length);\n  this.numElements = this.elements.length;\n\n  this.createObjects();\n};\n\nfabric.ElementsParser.prototype.createObjects = function() {\n  for (var i = 0, len = this.elements.length; i < len; i++) {\n    this.elements[i].setAttribute('svgUid', this.svgUid);\n    (function(_obj, i) {\n      setTimeout(function() {\n        _obj.createObject(_obj.elements[i], i);\n      }, 0);\n    })(this, i);\n  }\n};\n\nfabric.ElementsParser.prototype.createObject = function(el, index) {\n  var klass = fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n  if (klass && klass.fromElement) {\n    try {\n      this._createObject(klass, el, index);\n    }\n    catch (err) {\n      fabric.log(err);\n    }\n  }\n  else {\n    this.checkIfDone();\n  }\n};\n\nfabric.ElementsParser.prototype._createObject = function(klass, el, index) {\n  if (klass.async) {\n    klass.fromElement(el, this.createCallback(index, el), this.options);\n  }\n  else {\n    var obj = klass.fromElement(el, this.options);\n    this.resolveGradient(obj, 'fill');\n    this.resolveGradient(obj, 'stroke');\n    this.reviver && this.reviver(el, obj);\n    this.instances[index] = obj;\n    this.checkIfDone();\n  }\n};\n\nfabric.ElementsParser.prototype.createCallback = function(index, el) {\n  var _this = this;\n  return function(obj) {\n    _this.resolveGradient(obj, 'fill');\n    _this.resolveGradient(obj, 'stroke');\n    _this.reviver && _this.reviver(el, obj);\n    _this.instances[index] = obj;\n    _this.checkIfDone();\n  };\n};\n\nfabric.ElementsParser.prototype.resolveGradient = function(obj, property) {\n\n  var instanceFillValue = obj.get(property);\n  if (!(/^url\\(/).test(instanceFillValue)) {\n    return;\n  }\n  var gradientId = instanceFillValue.slice(5, instanceFillValue.length - 1);\n  if (fabric.gradientDefs[this.svgUid][gradientId]) {\n    obj.set(property,\n      fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][gradientId], obj));\n  }\n};\n\nfabric.ElementsParser.prototype.checkIfDone = function() {\n  if (--this.numElements === 0) {\n    this.instances = this.instances.filter(function(el) {\n      // eslint-disable-next-line no-eq-null, eqeqeq\n      return el != null;\n    });\n    this.callback(this.instances);\n  }\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Point) {\n    fabric.warn('fabric.Point is already defined');\n    return;\n  }\n\n  fabric.Point = Point;\n\n  /**\n   * Point class\n   * @class fabric.Point\n   * @memberOf fabric\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @return {fabric.Point} thisArg\n   */\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype = /** @lends fabric.Point.prototype */ {\n\n    type: 'point',\n\n    constructor: Point,\n\n    /**\n     * Adds another point to this one and returns another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point instance with added values\n     */\n    add: function (that) {\n      return new Point(this.x + that.x, this.y + that.y);\n    },\n\n    /**\n     * Adds another point to this one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    addEquals: function (that) {\n      this.x += that.x;\n      this.y += that.y;\n      return this;\n    },\n\n    /**\n     * Adds value to this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point} new Point with added value\n     */\n    scalarAdd: function (scalar) {\n      return new Point(this.x + scalar, this.y + scalar);\n    },\n\n    /**\n     * Adds value to this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarAddEquals: function (scalar) {\n      this.x += scalar;\n      this.y += scalar;\n      return this;\n    },\n\n    /**\n     * Subtracts another point from this point and returns a new one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point object with subtracted values\n     */\n    subtract: function (that) {\n      return new Point(this.x - that.x, this.y - that.y);\n    },\n\n    /**\n     * Subtracts another point from this point\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    subtractEquals: function (that) {\n      this.x -= that.x;\n      this.y -= that.y;\n      return this;\n    },\n\n    /**\n     * Subtracts value from this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    scalarSubtract: function (scalar) {\n      return new Point(this.x - scalar, this.y - scalar);\n    },\n\n    /**\n     * Subtracts value from this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarSubtractEquals: function (scalar) {\n      this.x -= scalar;\n      this.y -= scalar;\n      return this;\n    },\n\n    /**\n     * Miltiplies this point by a value and returns a new one\n     * TODO: rename in scalarMultiply in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    multiply: function (scalar) {\n      return new Point(this.x * scalar, this.y * scalar);\n    },\n\n    /**\n     * Miltiplies this point by a value\n     * TODO: rename in scalarMultiplyEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    multiplyEquals: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n\n    /**\n     * Divides this point by a value and returns a new one\n     * TODO: rename in scalarDivide in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    divide: function (scalar) {\n      return new Point(this.x / scalar, this.y / scalar);\n    },\n\n    /**\n     * Divides this point by a value\n     * TODO: rename in scalarDivideEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    divideEquals: function (scalar) {\n      this.x /= scalar;\n      this.y /= scalar;\n      return this;\n    },\n\n    /**\n     * Returns true if this point is equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    eq: function (that) {\n      return (this.x === that.x && this.y === that.y);\n    },\n\n    /**\n     * Returns true if this point is less than another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lt: function (that) {\n      return (this.x < that.x && this.y < that.y);\n    },\n\n    /**\n     * Returns true if this point is less than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lte: function (that) {\n      return (this.x <= that.x && this.y <= that.y);\n    },\n\n    /**\n\n     * Returns true if this point is greater another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gt: function (that) {\n      return (this.x > that.x && this.y > that.y);\n    },\n\n    /**\n     * Returns true if this point is greater than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gte: function (that) {\n      return (this.x >= that.x && this.y >= that.y);\n    },\n\n    /**\n     * Returns new point which is the result of linear interpolation with this one and another one\n     * @param {fabric.Point} that\n     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n     * @return {fabric.Point}\n     */\n    lerp: function (that, t) {\n      if (typeof t === 'undefined') {\n        t = 0.5;\n      }\n      t = Math.max(Math.min(1, t), 0);\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n    },\n\n    /**\n     * Returns distance from this point and another one\n     * @param {fabric.Point} that\n     * @return {Number}\n     */\n    distanceFrom: function (that) {\n      var dx = this.x - that.x,\n          dy = this.y - that.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /**\n     * Returns the point between this point and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    midPointFrom: function (that) {\n      return this.lerp(that);\n    },\n\n    /**\n     * Returns a new point which is the min of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    min: function (that) {\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n    },\n\n    /**\n     * Returns a new point which is the max of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    max: function (that) {\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n    },\n\n    /**\n     * Returns string representation of this point\n     * @return {String}\n     */\n    toString: function () {\n      return this.x + ',' + this.y;\n    },\n\n    /**\n     * Sets x/y of this point\n     * @param {Number} x\n     * @param {Number} y\n     * @chainable\n     */\n    setXY: function (x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x of this point\n     * @param {Number} x\n     * @chainable\n     */\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n\n    /**\n     * Sets y of this point\n     * @param {Number} y\n     * @chainable\n     */\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x/y of this point from another point\n     * @param {fabric.Point} that\n     * @chainable\n     */\n    setFromPoint: function (that) {\n      this.x = that.x;\n      this.y = that.y;\n      return this;\n    },\n\n    /**\n     * Swaps x/y of this point and another point\n     * @param {fabric.Point} that\n     */\n    swap: function (that) {\n      var x = this.x,\n          y = this.y;\n      this.x = that.x;\n      this.y = that.y;\n      that.x = x;\n      that.y = y;\n    },\n\n    /**\n     * return a cloned instance of the point\n     * @return {fabric.Point}\n     */\n    clone: function () {\n      return new Point(this.x, this.y);\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Intersection) {\n    fabric.warn('fabric.Intersection is already defined');\n    return;\n  }\n\n  /**\n   * Intersection class\n   * @class fabric.Intersection\n   * @memberOf fabric\n   * @constructor\n   */\n  function Intersection(status) {\n    this.status = status;\n    this.points = [];\n  }\n\n  fabric.Intersection = Intersection;\n\n  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\n    constructor: Intersection,\n\n    /**\n     * Appends a point to intersection\n     * @param {fabric.Point} point\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoint: function (point) {\n      this.points.push(point);\n      return this;\n    },\n\n    /**\n     * Appends points to intersection\n     * @param {Array} points\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoints: function (points) {\n      this.points = this.points.concat(points);\n      return this;\n    }\n  };\n\n  /**\n   * Checks if one line intersects another\n   * TODO: rename in intersectSegmentSegment\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {fabric.Point} b1\n   * @param {fabric.Point} b2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n    var result,\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n    if (uB !== 0) {\n      var ua = uaT / uB,\n          ub = ubT / uB;\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n        result = new Intersection('Intersection');\n        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n      }\n      else {\n        result = new Intersection();\n      }\n    }\n    else {\n      if (uaT === 0 || ubT === 0) {\n        result = new Intersection('Coincident');\n      }\n      else {\n        result = new Intersection('Parallel');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Checks if line intersects polygon\n   * TODO: rename in intersectSegmentPolygon\n   * fix detection of coincident\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {Array} points\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n    var result = new Intersection(),\n        length = points.length,\n        b1, b2, inter;\n\n    for (var i = 0; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects another polygon\n   * @static\n   * @param {Array} points1\n   * @param {Array} points2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n    var result = new Intersection(),\n        length = points1.length;\n\n    for (var i = 0; i < length; i++) {\n      var a1 = points1[i],\n          a2 = points1[(i + 1) % length],\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @param {Array} points\n   * @param {fabric.Point} r1\n   * @param {fabric.Point} r2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n    var min = r1.min(r2),\n        max = r1.max(r2),\n        topRight = new fabric.Point(max.x, min.y),\n        bottomLeft = new fabric.Point(min.x, max.y),\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n        result = new Intersection();\n\n    result.appendPoints(inter1.points);\n    result.appendPoints(inter2.points);\n    result.appendPoints(inter3.points);\n    result.appendPoints(inter4.points);\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Color) {\n    fabric.warn('fabric.Color is already defined.');\n    return;\n  }\n\n  /**\n   * Color class\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n   *\n   * @class fabric.Color\n   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n   * @return {fabric.Color} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n   */\n  function Color(color) {\n    if (!color) {\n      this.setSource([0, 0, 0, 1]);\n    }\n    else {\n      this._tryParsingColor(color);\n    }\n  }\n\n  fabric.Color = Color;\n\n  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\n    /**\n     * @private\n     * @param {String|Array} color Color value to parse\n     */\n    _tryParsingColor: function(color) {\n      var source;\n\n      if (color in Color.colorNameMap) {\n        color = Color.colorNameMap[color];\n      }\n\n      if (color === 'transparent') {\n        source = [255, 255, 255, 0];\n      }\n\n      if (!source) {\n        source = Color.sourceFromHex(color);\n      }\n      if (!source) {\n        source = Color.sourceFromRgb(color);\n      }\n      if (!source) {\n        source = Color.sourceFromHsl(color);\n      }\n      if (!source) {\n        //if color is not recognize let's make black as canvas does\n        source = [0, 0, 0, 1];\n      }\n      if (source) {\n        this.setSource(source);\n      }\n    },\n\n    /**\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n     * @private\n     * @param {Number} r Red color value\n     * @param {Number} g Green color value\n     * @param {Number} b Blue color value\n     * @return {Array} Hsl color\n     */\n    _rgbToHsl: function(r, g, b) {\n      r /= 255; g /= 255; b /= 255;\n\n      var h, s, l,\n          max = fabric.util.array.max([r, g, b]),\n          min = fabric.util.array.min([r, g, b]);\n\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      }\n      else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n\n      return [\n        Math.round(h * 360),\n        Math.round(s * 100),\n        Math.round(l * 100)\n      ];\n    },\n\n    /**\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @return {Array}\n     */\n    getSource: function() {\n      return this._source;\n    },\n\n    /**\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @param {Array} source\n     */\n    setSource: function(source) {\n      this._source = source;\n    },\n\n    /**\n     * Returns color representation in RGB format\n     * @return {String} ex: rgb(0-255,0-255,0-255)\n     */\n    toRgb: function() {\n      var source = this.getSource();\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n    },\n\n    /**\n     * Returns color representation in RGBA format\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n     */\n    toRgba: function() {\n      var source = this.getSource();\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HSL format\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n     */\n    toHsl: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n    },\n\n    /**\n     * Returns color representation in HSLA format\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n     */\n    toHsla: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HEX format\n     * @return {String} ex: FF5555\n     */\n    toHex: function() {\n      var source = this.getSource(), r, g, b;\n\n      r = source[0].toString(16);\n      r = (r.length === 1) ? ('0' + r) : r;\n\n      g = source[1].toString(16);\n      g = (g.length === 1) ? ('0' + g) : g;\n\n      b = source[2].toString(16);\n      b = (b.length === 1) ? ('0' + b) : b;\n\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n    },\n\n    /**\n     * Returns color representation in HEXA format\n     * @return {String} ex: FF5555CC\n     */\n    toHexa: function() {\n      var source = this.getSource(), a;\n\n      a = source[3] * 255;\n      a = a.toString(16);\n      a = (a.length === 1) ? ('0' + a) : a;\n\n      return this.toHex() + a.toUpperCase();\n    },\n\n    /**\n     * Gets value of alpha channel for this color\n     * @return {Number} 0-1\n     */\n    getAlpha: function() {\n      return this.getSource()[3];\n    },\n\n    /**\n     * Sets value of alpha channel for this color\n     * @param {Number} alpha Alpha value 0-1\n     * @return {fabric.Color} thisArg\n     */\n    setAlpha: function(alpha) {\n      var source = this.getSource();\n      source[3] = alpha;\n      this.setSource(source);\n      return this;\n    },\n\n    /**\n     * Transforms color to its grayscale representation\n     * @return {fabric.Color} thisArg\n     */\n    toGrayscale: function() {\n      var source = this.getSource(),\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n          currentAlpha = source[3];\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Transforms color to its black and white representation\n     * @param {Number} threshold\n     * @return {fabric.Color} thisArg\n     */\n    toBlackWhite: function(threshold) {\n      var source = this.getSource(),\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n          currentAlpha = source[3];\n\n      threshold = threshold || 127;\n\n      average = (Number(average) < Number(threshold)) ? 0 : 255;\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Overlays color with another color\n     * @param {String|fabric.Color} otherColor\n     * @return {fabric.Color} thisArg\n     */\n    overlayWith: function(otherColor) {\n      if (!(otherColor instanceof Color)) {\n        otherColor = new Color(otherColor);\n      }\n\n      var result = [],\n          alpha = this.getAlpha(),\n          otherAlpha = 0.5,\n          source = this.getSource(),\n          otherSource = otherColor.getSource();\n\n      for (var i = 0; i < 3; i++) {\n        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n      }\n\n      result[3] = alpha;\n      this.setSource(result);\n      return this;\n    }\n  };\n\n  /**\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n   // eslint-disable-next-line max-len\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/;\n\n  /**\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\n  /**\n   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n\n  /**\n   * Map of the 17 basic color names with HEX code\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   * @see: http://www.w3.org/TR/CSS2/syndata.html#color-units\n   */\n  fabric.Color.colorNameMap = {\n    aqua:    '#00FFFF',\n    black:   '#000000',\n    blue:    '#0000FF',\n    fuchsia: '#FF00FF',\n    gray:    '#808080',\n    grey:    '#808080',\n    green:   '#008000',\n    lime:    '#00FF00',\n    maroon:  '#800000',\n    navy:    '#000080',\n    olive:   '#808000',\n    orange:  '#FFA500',\n    purple:  '#800080',\n    red:     '#FF0000',\n    silver:  '#C0C0C0',\n    teal:    '#008080',\n    white:   '#FFFFFF',\n    yellow:  '#FFFF00'\n  };\n\n  /**\n   * @private\n   * @param {Number} p\n   * @param {Number} q\n   * @param {Number} t\n   * @return {Number}\n   */\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n    if (t > 1) {\n      t -= 1;\n    }\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n      return q;\n    }\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgb = function(color) {\n    return Color.fromSource(Color.sourceFromRgb(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromRgb = function(color) {\n    var match = color.match(Color.reRGBa);\n    if (match) {\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\n      return [\n        parseInt(r, 10),\n        parseInt(g, 10),\n        parseInt(b, 10),\n        match[4] ? parseFloat(match[4]) : 1\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgba = Color.fromRgb;\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf fabric.Color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsl = function(color) {\n    return Color.fromSource(Color.sourceFromHsl(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {Array} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  fabric.Color.sourceFromHsl = function(color) {\n    var match = color.match(Color.reHSLa);\n    if (!match) {\n      return;\n    }\n\n    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n        r, g, b;\n\n    if (s === 0) {\n      r = g = b = l;\n    }\n    else {\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n          p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      match[4] ? parseFloat(match[4]) : 1\n    ];\n  };\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsla = Color.fromHsl;\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: FF5555\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHex = function(color) {\n    return Color.fromSource(Color.sourceFromHex(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromHex = function(color) {\n    if (color.match(Color.reHex)) {\n      var value = color.slice(color.indexOf('#') + 1),\n          isShortNotation = (value.length === 3 || value.length === 4),\n          isRGBa = (value.length === 8 || value.length === 4),\n          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\n          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\n\n      return [\n        parseInt(r, 16),\n        parseInt(g, 16),\n        parseInt(b, 16),\n        parseFloat((parseInt(a, 16) / 255).toFixed(2))\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n   * @static\n   * @memberOf fabric.Color\n   * @param {Array} source\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromSource = function(source) {\n    var oColor = new Color();\n    oColor.setSource(source);\n    return oColor;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /* _FROM_SVG_START_ */\n  function getColorStop(el) {\n    var style = el.getAttribute('style'),\n        offset = el.getAttribute('offset') || 0,\n        color, colorAlpha, opacity;\n\n    // convert percents to absolute values\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n    if (style) {\n      var keyValuePairs = style.split(/\\s*;\\s*/);\n\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n        keyValuePairs.pop();\n      }\n\n      for (var i = keyValuePairs.length; i--; ) {\n\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n            key = split[0].trim(),\n            value = split[1].trim();\n\n        if (key === 'stop-color') {\n          color = value;\n        }\n        else if (key === 'stop-opacity') {\n          opacity = value;\n        }\n      }\n    }\n\n    if (!color) {\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n    }\n    if (!opacity) {\n      opacity = el.getAttribute('stop-opacity');\n    }\n\n    color = new fabric.Color(color);\n    colorAlpha = color.getAlpha();\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n    opacity *= colorAlpha;\n\n    return {\n      offset: offset,\n      color: color.toRgb(),\n      opacity: opacity\n    };\n  }\n\n  function getLinearCoords(el) {\n    return {\n      x1: el.getAttribute('x1') || 0,\n      y1: el.getAttribute('y1') || 0,\n      x2: el.getAttribute('x2') || '100%',\n      y2: el.getAttribute('y2') || 0\n    };\n  }\n\n  function getRadialCoords(el) {\n    return {\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n      r1: 0,\n      x2: el.getAttribute('cx') || '50%',\n      y2: el.getAttribute('cy') || '50%',\n      r2: el.getAttribute('r') || '50%'\n    };\n  }\n  /* _FROM_SVG_END_ */\n\n  var clone = fabric.util.object.clone;\n\n  /**\n   * Gradient class\n   * @class fabric.Gradient\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n   * @see {@link fabric.Gradient#initialize} for constructor definition\n   */\n  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\n    /**\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\n     * @return {fabric.Gradient} thisArg\n     */\n    initialize: function(options) {\n      options || (options = { });\n\n      var coords = { };\n\n      this.id = fabric.Object.__uid++;\n      this.type = options.type || 'linear';\n\n      coords = {\n        x1: options.coords.x1 || 0,\n        y1: options.coords.y1 || 0,\n        x2: options.coords.x2 || 0,\n        y2: options.coords.y2 || 0\n      };\n\n      if (this.type === 'radial') {\n        coords.r1 = options.coords.r1 || 0;\n        coords.r2 = options.coords.r2 || 0;\n      }\n      this.coords = coords;\n      this.colorStops = options.colorStops.slice();\n      if (options.gradientTransform) {\n        this.gradientTransform = options.gradientTransform;\n      }\n      this.offsetX = options.offsetX || this.offsetX;\n      this.offsetY = options.offsetY || this.offsetY;\n    },\n\n    /**\n     * Adds another colorStop\n     * @param {Object} colorStop Object with offset and color\n     * @return {fabric.Gradient} thisArg\n     */\n    addColorStop: function(colorStops) {\n      for (var position in colorStops) {\n        var color = new fabric.Color(colorStops[position]);\n        this.colorStops.push({\n          offset: parseFloat(position),\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n      return this;\n    },\n\n    /**\n     * Returns object representation of a gradient\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object}\n     */\n    toObject: function(propertiesToInclude) {\n      var object = {\n        type: this.type,\n        coords: this.coords,\n        colorStops: this.colorStops,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY,\n        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an gradient\n     * @param {Object} object Object to create a gradient for\n     * @return {String} SVG representation of an gradient (linear/radial)\n     */\n    toSVG: function(object) {\n      var coords = clone(this.coords, true),\n          markup, commonAttributes, colorStops = clone(this.colorStops, true),\n          needsSwap = coords.r1 > coords.r2;\n      // colorStops must be sorted ascending\n      colorStops.sort(function(a, b) {\n        return a.offset - b.offset;\n      });\n\n      if (!(object.group && object.group.type === 'path-group')) {\n        for (var prop in coords) {\n          if (prop === 'x1' || prop === 'x2') {\n            coords[prop] += this.offsetX - object.width / 2;\n          }\n          else if (prop === 'y1' || prop === 'y2') {\n            coords[prop] += this.offsetY - object.height / 2;\n          }\n        }\n      }\n\n      commonAttributes = 'id=\"SVGID_' + this.id +\n                     '\" gradientUnits=\"userSpaceOnUse\"';\n      if (this.gradientTransform) {\n        commonAttributes += ' gradientTransform=\"matrix(' + this.gradientTransform.join(' ') + ')\" ';\n      }\n      if (this.type === 'linear') {\n        markup = [\n          '<linearGradient ',\n          commonAttributes,\n          ' x1=\"', coords.x1,\n          '\" y1=\"', coords.y1,\n          '\" x2=\"', coords.x2,\n          '\" y2=\"', coords.y2,\n          '\">\\n'\n        ];\n      }\n      else if (this.type === 'radial') {\n        // svg radial gradient has just 1 radius. the biggest.\n        markup = [\n          '<radialGradient ',\n          commonAttributes,\n          ' cx=\"', needsSwap ? coords.x1 : coords.x2,\n          '\" cy=\"', needsSwap ? coords.y1 : coords.y2,\n          '\" r=\"', needsSwap ? coords.r1 : coords.r2,\n          '\" fx=\"', needsSwap ? coords.x2 : coords.x1,\n          '\" fy=\"', needsSwap ? coords.y2 : coords.y1,\n          '\">\\n'\n        ];\n      }\n\n      if (this.type === 'radial') {\n        if (needsSwap) {\n          // svg goes from internal to external radius. if radius are inverted, swap color stops.\n          colorStops = colorStops.concat();\n          colorStops.reverse();\n          for (var i = 0; i < colorStops.length; i++) {\n            colorStops[i].offset = 1 - colorStops[i].offset;\n          }\n        }\n        var minRadius = Math.min(coords.r1, coords.r2);\n        if (minRadius > 0) {\n          // i have to shift all colorStops and add new one in 0.\n          var maxRadius = Math.max(coords.r1, coords.r2),\n              percentageShift = minRadius / maxRadius;\n          for (var i = 0; i < colorStops.length; i++) {\n            colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\n          }\n        }\n      }\n\n      for (var i = 0; i < colorStops.length; i++) {\n        var colorStop = colorStops[i];\n        markup.push(\n          '<stop ',\n            'offset=\"', (colorStop.offset * 100) + '%',\n            '\" style=\"stop-color:', colorStop.color,\n            (colorStop.opacity !== null ? ';stop-opacity: ' + colorStop.opacity : ';'),\n          '\"/>\\n'\n        );\n      }\n\n      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\n      return markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns an instance of CanvasGradient\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} object\n     * @return {CanvasGradient}\n     */\n    toLive: function(ctx, object) {\n      var gradient, prop, coords = fabric.util.object.clone(this.coords);\n\n      if (!this.type) {\n        return;\n      }\n\n      if (object.group && object.group.type === 'path-group') {\n        for (prop in coords) {\n          if (prop === 'x1' || prop === 'x2') {\n            coords[prop] += -this.offsetX + object.width / 2;\n          }\n          else if (prop === 'y1' || prop === 'y2') {\n            coords[prop] += -this.offsetY + object.height / 2;\n          }\n        }\n      }\n\n      if (this.type === 'linear') {\n        gradient = ctx.createLinearGradient(\n          coords.x1, coords.y1, coords.x2, coords.y2);\n      }\n      else if (this.type === 'radial') {\n        gradient = ctx.createRadialGradient(\n          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n      }\n\n      for (var i = 0, len = this.colorStops.length; i < len; i++) {\n        var color = this.colorStops[i].color,\n            opacity = this.colorStops[i].opacity,\n            offset = this.colorStops[i].offset;\n\n        if (typeof opacity !== 'undefined') {\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n        }\n        gradient.addColorStop(offset, color);\n      }\n\n      return gradient;\n    }\n  });\n\n  fabric.util.object.extend(fabric.Gradient, {\n\n    /* _FROM_SVG_START_ */\n    /**\n     * Returns {@link fabric.Gradient} instance from an SVG element\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {SVGGradientElement} el SVG gradient element\n     * @param {fabric.Object} instance\n     * @return {fabric.Gradient} Gradient instance\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n     */\n    fromElement: function(el, instance) {\n\n      /**\n       *  @example:\n       *\n       *  <linearGradient id=\"linearGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <linearGradient id=\"linearGrad2\">\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *  </radialGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad2\">\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n       *  </radialGradient>\n       *\n       */\n\n      var colorStopEls = el.getElementsByTagName('stop'),\n          type,\n          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\n          gradientTransform = el.getAttribute('gradientTransform'),\n          colorStops = [],\n          coords, ellipseMatrix;\n\n      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n        type = 'linear';\n      }\n      else {\n        type = 'radial';\n      }\n\n      if (type === 'linear') {\n        coords = getLinearCoords(el);\n      }\n      else if (type === 'radial') {\n        coords = getRadialCoords(el);\n      }\n\n      for (var i = colorStopEls.length; i--; ) {\n        colorStops.push(getColorStop(colorStopEls[i]));\n      }\n\n      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n\n      var gradient = new fabric.Gradient({\n        type: type,\n        coords: coords,\n        colorStops: colorStops,\n        offsetX: -instance.left,\n        offsetY: -instance.top\n      });\n\n      if (gradientTransform || ellipseMatrix !== '') {\n        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\n      }\n      return gradient;\n    },\n    /* _FROM_SVG_END_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from its object representation\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {Object} obj\n     * @param {Object} [options] Options object\n     */\n    forObject: function(obj, options) {\n      options || (options = { });\n      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\n      return new fabric.Gradient(options);\n    }\n  });\n\n  /**\n   * @private\n   */\n  function _convertPercentUnitsToValues(object, options, gradientUnits) {\n    var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';\n    for (var prop in options) {\n      if (options[prop] === 'Infinity') {\n        options[prop] = 1;\n      }\n      else if (options[prop] === '-Infinity') {\n        options[prop] = 0;\n      }\n      propValue = parseFloat(options[prop], 10);\n      if (typeof options[prop] === 'string' && /^\\d+%$/.test(options[prop])) {\n        multFactor = 0.01;\n      }\n      else {\n        multFactor = 1;\n      }\n      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\n      }\n      else if (prop === 'y1' || prop === 'y2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\n      }\n      options[prop] = propValue * multFactor + addFactor;\n    }\n    if (object.type === 'ellipse' &&\n        options.r2 !== null &&\n        gradientUnits === 'objectBoundingBox' &&\n        object.rx !== object.ry) {\n\n      var scaleFactor = object.ry / object.rx;\n      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\n      if (options.y1) {\n        options.y1 /= scaleFactor;\n      }\n      if (options.y2) {\n        options.y2 /= scaleFactor;\n      }\n    }\n    return ellipseMatrix;\n  }\n})();\n\n\n(function() {\n\n  'use strict';\n\n  var toFixed = fabric.util.toFixed;\n\n  /**\n   * Pattern class\n   * @class fabric.Pattern\n   * @see {@link http://fabricjs.com/patterns|Pattern demo}\n   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n   * @see {@link fabric.Pattern#initialize} for constructor definition\n   */\n\n\n  fabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\n    /**\n     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @type String\n     * @default\n     */\n    repeat: 'repeat',\n\n    /**\n     * Pattern horizontal offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Pattern vertical offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @param {Function} [callback] function to invoke after callback init.\n     * @return {fabric.Pattern} thisArg\n     */\n    initialize: function(options, callback) {\n      options || (options = { });\n\n      this.id = fabric.Object.__uid++;\n      this.setOptions(options);\n      if (!options.source || (options.source && typeof options.source !== 'string')) {\n        callback && callback(this);\n        return;\n      }\n      // function string\n      if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n        this.source = new Function(fabric.util.getFunctionBody(options.source));\n        callback && callback(this);\n      }\n      else {\n        // img src string\n        var _this = this;\n        this.source = fabric.util.createImage();\n        fabric.util.loadImage(options.source, function(img) {\n          _this.source = img;\n          callback && callback(_this);\n        });\n      }\n    },\n\n    /**\n     * Returns object representation of a pattern\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of a pattern instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          source, object;\n\n      // callback\n      if (typeof this.source === 'function') {\n        source = String(this.source);\n      }\n      // <img> element\n      else if (typeof this.source.src === 'string') {\n        source = this.source.src;\n      }\n      // <canvas> element\n      else if (typeof this.source === 'object' && this.source.toDataURL) {\n        source = this.source.toDataURL();\n      }\n\n      object = {\n        type: 'pattern',\n        source: source,\n        repeat: this.repeat,\n        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a pattern\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a pattern\n     */\n    toSVG: function(object) {\n      var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n          patternWidth = patternSource.width / object.width,\n          patternHeight = patternSource.height / object.height,\n          patternOffsetX = this.offsetX / object.width,\n          patternOffsetY = this.offsetY / object.height,\n          patternImgSrc = '';\n      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n        patternHeight = 1;\n      }\n      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n        patternWidth = 1;\n      }\n      if (patternSource.src) {\n        patternImgSrc = patternSource.src;\n      }\n      else if (patternSource.toDataURL) {\n        patternImgSrc = patternSource.toDataURL();\n      }\n\n      return '<pattern id=\"SVGID_' + this.id +\n                    '\" x=\"' + patternOffsetX +\n                    '\" y=\"' + patternOffsetY +\n                    '\" width=\"' + patternWidth +\n                    '\" height=\"' + patternHeight + '\">\\n' +\n               '<image x=\"0\" y=\"0\"' +\n                      ' width=\"' + patternSource.width +\n                      '\" height=\"' + patternSource.height +\n                      '\" xlink:href=\"' + patternImgSrc +\n               '\"></image>\\n' +\n             '</pattern>\\n';\n    },\n    /* _TO_SVG_END_ */\n\n    setOptions: function(options) {\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n    },\n\n    /**\n     * Returns an instance of CanvasPattern\n     * @param {CanvasRenderingContext2D} ctx Context to create pattern\n     * @return {CanvasPattern}\n     */\n    toLive: function(ctx) {\n      var source = typeof this.source === 'function' ? this.source() : this.source;\n\n      // if the image failed to load, return, and allow rest to continue loading\n      if (!source) {\n        return '';\n      }\n\n      // if an image\n      if (typeof source.src !== 'undefined') {\n        if (!source.complete) {\n          return '';\n        }\n        if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n          return '';\n        }\n      }\n      return ctx.createPattern(source, this.repeat);\n    }\n  });\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Shadow) {\n    fabric.warn('fabric.Shadow is already defined.');\n    return;\n  }\n\n  /**\n   * Shadow class\n   * @class fabric.Shadow\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @see {@link fabric.Shadow#initialize} for constructor definition\n   */\n  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\n    /**\n     * Shadow color\n     * @type String\n     * @default\n     */\n    color: 'rgb(0,0,0)',\n\n    /**\n     * Shadow blur\n     * @type Number\n     */\n    blur: 0,\n\n    /**\n     * Shadow horizontal offset\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Shadow vertical offset\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Whether the shadow should affect stroke operations\n     * @type Boolean\n     * @default\n     */\n    affectStroke: false,\n\n    /**\n     * Indicates whether toObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Constructor\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetX properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px, \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @return {fabric.Shadow} thisArg\n     */\n    initialize: function(options) {\n\n      if (typeof options === 'string') {\n        options = this._parseShadow(options);\n      }\n\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.id = fabric.Object.__uid++;\n    },\n\n    /**\n     * @private\n     * @param {String} shadow Shadow value to parse\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n     */\n    _parseShadow: function(shadow) {\n      var shadowStr = shadow.trim(),\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\n      return {\n        color: color.trim(),\n        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n        blur: parseInt(offsetsAndBlur[3], 10) || 0\n      };\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n     * @return {String} Returns CSS3 text-shadow declaration\n     */\n    toString: function() {\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a shadow\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a shadow\n     */\n    toSVG: function(object) {\n      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          offset = fabric.util.rotateVector(\n            { x: this.offsetX, y: this.offsetY },\n            fabric.util.degreesToRadians(-object.angle)),\n          BLUR_BOX = 20;\n\n      if (object.width && object.height) {\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n        // we add some extra space to filter box to contain the blur ( 20 )\n        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n      }\n      if (object.flipX) {\n        offset.x *= -1;\n      }\n      if (object.flipY) {\n        offset.y *= -1;\n      }\n      return (\n        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n          '\\t<feFlood flood-color=\"' + this.color + '\"/>\\n' +\n          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n          '\\t<feMerge>\\n' +\n            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n          '\\t</feMerge>\\n' +\n        '</filter>\\n');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns object representation of a shadow\n     * @return {Object} Object representation of a shadow instance\n     */\n    toObject: function() {\n      if (this.includeDefaultValues) {\n        return {\n          color: this.color,\n          blur: this.blur,\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          affectStroke: this.affectStroke\n        };\n      }\n      var obj = { }, proto = fabric.Shadow.prototype;\n\n      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke'].forEach(function(prop) {\n        if (this[prop] !== proto[prop]) {\n          obj[prop] = this[prop];\n        }\n      }, this);\n\n      return obj;\n    }\n  });\n\n  /**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * @static\n   * @field\n   * @memberOf fabric.Shadow\n   */\n  // eslint-disable-next-line max-len\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function () {\n\n  'use strict';\n\n  if (fabric.StaticCanvas) {\n    fabric.warn('fabric.StaticCanvas is already defined.');\n    return;\n  }\n\n  // aliases for faster resolution\n  var extend = fabric.util.object.extend,\n      getElementOffset = fabric.util.getElementOffset,\n      removeFromArray = fabric.util.removeFromArray,\n      toFixed = fabric.util.toFixed,\n      transformPoint = fabric.util.transformPoint,\n      invertTransform = fabric.util.invertTransform,\n\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\n  /**\n   * Static canvas class\n   * @class fabric.StaticCanvas\n   * @mixes fabric.Collection\n   * @mixes fabric.Observable\n   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n   * @fires before:render\n   * @fires after:render\n   * @fires canvas:cleared\n   * @fires object:added\n   * @fires object:removed\n   */\n  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n\n      this._initStatic(el, options);\n    },\n\n    /**\n     * Background color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Background image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n     * @type fabric.Image\n     * @default\n     */\n    backgroundImage: null,\n\n    /**\n     * Overlay color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n     * @since 1.3.9\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    overlayColor: '',\n\n    /**\n     * Overlay image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n     * @type fabric.Image\n     * @default\n     */\n    overlayImage: null,\n\n    /**\n     * Indicates whether toObject/toDatalessObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Indicates whether objects' state should be saved\n     * @type Boolean\n     * @default\n     */\n    stateful: false,\n\n    /**\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove} should also re-render canvas.\n     * Disabling this option could give a great performance boost when adding/removing a lot of objects to/from canvas at once\n     * (followed by a manual rendering after addition/deletion)\n     * @type Boolean\n     * @default\n     */\n    renderOnAddRemove: true,\n\n    /**\n     * Function that determines clipping of entire canvas area\n     * Being passed context as first argument. See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n     * @type Function\n     * @default\n     */\n    clipTo: null,\n\n    /**\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\n     * @type Boolean\n     * @default\n     */\n    controlsAboveOverlay: false,\n\n    /**\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n     * @type Boolean\n     * @default\n     */\n    allowTouchScrolling: false,\n\n    /**\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n     * @type Boolean\n     * @default\n     */\n    imageSmoothingEnabled: true,\n\n    /**\n     * The transformation (in the format of Canvas transform) which focuses the viewport\n     * @type Array\n     * @default\n     */\n    viewportTransform: fabric.iMatrix.concat(),\n\n    /**\n     * if set to false background image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    backgroundVpt: true,\n\n    /**\n     * if set to false overlya image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    overlayVpt: true,\n\n    /**\n     * Callback; invoked right before object is about to be scaled/rotated\n     */\n    onBeforeScaleRotate: function () {\n      /* NOOP */\n    },\n\n    /**\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n     */\n    enableRetinaScaling: true,\n\n    /**\n     * Describe canvas element extension over design\n     * properties are tl,tr,bl,br.\n     * if canvas is not zoomed/panned those points are the four corner of canvas\n     * if canvas is viewportTransformed you those points indicate the extension\n     * of canvas element in plain untrasformed coordinates\n     * The coordinates get updated with @method calcViewportBoundaries.\n     * @memberOf fabric.StaticCanvas.prototype\n     */\n    vptCoords: { },\n\n    /**\n     * Based on vptCoords and object.aCoords, skip rendering of objects that\n     * are not included in current viewport.\n     * May greatly help in applications with crowded canvas and use of zoom/pan\n     * If One of the corner of the bounding box of the object is on the canvas\n     * the objects get rendered.\n     * @memberOf fabric.StaticCanvas.prototype\n     */\n    skipOffscreen: false,\n\n    /**\n     * @private\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     */\n    _initStatic: function(el, options) {\n      var cb = fabric.StaticCanvas.prototype.renderAll.bind(this);\n      this._objects = [];\n      this._createLowerCanvas(el);\n      this._initOptions(options);\n      this._setImageSmoothing();\n      // only initialize retina scaling once\n      if (!this.interactive) {\n        this._initRetinaScaling();\n      }\n\n      if (options.overlayImage) {\n        this.setOverlayImage(options.overlayImage, cb);\n      }\n      if (options.backgroundImage) {\n        this.setBackgroundImage(options.backgroundImage, cb);\n      }\n      if (options.backgroundColor) {\n        this.setBackgroundColor(options.backgroundColor, cb);\n      }\n      if (options.overlayColor) {\n        this.setOverlayColor(options.overlayColor, cb);\n      }\n      this.calcOffset();\n    },\n\n    /**\n     * @private\n     */\n    _isRetinaScaling: function() {\n      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\n    },\n\n    /**\n     * @private\n     * @return {Number} retinaScaling if applied, otherwise 1;\n     */\n    getRetinaScaling: function() {\n      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n    },\n\n    /**\n     * @private\n     */\n    _initRetinaScaling: function() {\n      if (!this._isRetinaScaling()) {\n        return;\n      }\n      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\n      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    },\n\n    /**\n     * Calculates canvas element offset relative to the document\n     * This method is also attached as \"resize\" event handler of window\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    calcOffset: function () {\n      this._offset = getElementOffset(this.lowerCanvasEl);\n      return this;\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage with different properties</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage loaded from cross-origin</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setOverlayImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/YH9yD/|jsFiddle demo}\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage with different properties</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setBackgroundImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n     * @example <caption>Normal overlayColor - color value</caption>\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setOverlayColor: function(overlayColor, callback) {\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n     * @example <caption>Normal backgroundColor - color value</caption>\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setBackgroundColor: function(backgroundColor, callback) {\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n    },\n\n    /**\n     * @private\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n     */\n    _setImageSmoothing: function() {\n      var ctx = this.getContext();\n\n      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n        || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n     */\n    __setBgOverlayImage: function(property, image, callback, options) {\n      if (typeof image === 'string') {\n        fabric.util.loadImage(image, function(img) {\n          img && (this[property] = new fabric.Image(img, options));\n          callback && callback(img);\n        }, this, options && options.crossOrigin);\n      }\n      else {\n        options && image.setOptions(options);\n        this[property] = image;\n        callback && callback(image);\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\n     * @param {Function} [callback] Callback is invoked when color is set\n     */\n    __setBgOverlayColor: function(property, color, callback) {\n      this[property] = color;\n      this._initGradient(color, property);\n      this._initPattern(color, property, callback);\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _createCanvasElement: function(canvasEl) {\n      var element = fabric.util.createCanvasElement(canvasEl);\n      if (!element.style) {\n        element.style = { };\n      }\n      if (!element) {\n        throw CANVAS_INIT_ERROR;\n      }\n      if (typeof element.getContext === 'undefined') {\n        throw CANVAS_INIT_ERROR;\n      }\n      return element;\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initOptions: function (options) {\n      this._setOptions(options);\n\n      this.width = this.width || parseInt(this.lowerCanvasEl.width, 10) || 0;\n      this.height = this.height || parseInt(this.lowerCanvasEl.height, 10) || 0;\n\n      if (!this.lowerCanvasEl.style) {\n        return;\n      }\n\n      this.lowerCanvasEl.width = this.width;\n      this.lowerCanvasEl.height = this.height;\n\n      this.lowerCanvasEl.style.width = this.width + 'px';\n      this.lowerCanvasEl.style.height = this.height + 'px';\n\n      this.viewportTransform = this.viewportTransform.slice();\n    },\n\n    /**\n     * Creates a bottom canvas\n     * @private\n     * @param {HTMLElement} [canvasEl]\n     */\n    _createLowerCanvas: function (canvasEl) {\n      this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement(canvasEl);\n\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\n      if (this.interactive) {\n        this._applyCanvasStyle(this.lowerCanvasEl);\n      }\n\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns canvas width (in px)\n     * @return {Number}\n     */\n    getWidth: function () {\n      return this.width;\n    },\n\n    /**\n     * Returns canvas height (in px)\n     * @return {Number}\n     */\n    getHeight: function () {\n      return this.height;\n    },\n\n    /**\n     * Sets width of this canvas instance\n     * @param {Number|String} value                         Value to set width to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setWidth: function (value, options) {\n      return this.setDimensions({ width: value }, options);\n    },\n\n    /**\n     * Sets height of this canvas instance\n     * @param {Number|String} value                         Value to set height to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setHeight: function (value, options) {\n      return this.setDimensions({ height: value }, options);\n    },\n\n    /**\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n     * @param {Object}        dimensions                    Object with width/height properties\n     * @param {Number|String} [dimensions.width]            Width of canvas element\n     * @param {Number|String} [dimensions.height]           Height of canvas element\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setDimensions: function (dimensions, options) {\n      var cssValue;\n\n      options = options || {};\n\n      for (var prop in dimensions) {\n        cssValue = dimensions[prop];\n\n        if (!options.cssOnly) {\n          this._setBackstoreDimension(prop, dimensions[prop]);\n          cssValue += 'px';\n        }\n\n        if (!options.backstoreOnly) {\n          this._setCssDimension(prop, cssValue);\n        }\n      }\n      this._initRetinaScaling();\n      this._setImageSmoothing();\n      this.calcOffset();\n\n      if (!options.cssOnly) {\n        this.renderAll();\n      }\n\n      return this;\n    },\n\n    /**\n     * Helper for setting width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {Number} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setBackstoreDimension: function (prop, value) {\n      this.lowerCanvasEl[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl[prop] = value;\n      }\n\n      if (this.cacheCanvasEl) {\n        this.cacheCanvasEl[prop] = value;\n      }\n\n      this[prop] = value;\n\n      return this;\n    },\n\n    /**\n     * Helper for setting css width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {String} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setCssDimension: function (prop, value) {\n      this.lowerCanvasEl.style[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.style[prop] = value;\n      }\n\n      if (this.wrapperEl) {\n        this.wrapperEl.style[prop] = value;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns canvas zoom level\n     * @return {Number}\n     */\n    getZoom: function () {\n      return this.viewportTransform[0];\n    },\n\n    /**\n     * Sets viewport transform of this canvas instance\n     * @param {Array} vpt the transform in the form of context.transform\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setViewportTransform: function (vpt) {\n      var activeGroup = this._activeGroup, object, ignoreVpt = false, skipAbsolute = true;\n      this.viewportTransform = vpt;\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        object = this._objects[i];\n        object.group || object.setCoords(ignoreVpt, skipAbsolute);\n      }\n      if (activeGroup) {\n        activeGroup.setCoords(ignoreVpt, skipAbsolute);\n      }\n      this.calcViewportBoundaries();\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance, zoom centered around point\n     * @param {fabric.Point} point to zoom with respect to\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    zoomToPoint: function (point, value) {\n      // TODO: just change the scale, preserve other transformations\n      var before = point, vpt = this.viewportTransform.slice(0);\n      point = transformPoint(point, invertTransform(this.viewportTransform));\n      vpt[0] = value;\n      vpt[3] = value;\n      var after = transformPoint(point, vpt);\n      vpt[4] += before.x - after.x;\n      vpt[5] += before.y - after.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Sets zoom level of this canvas instance\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setZoom: function (value) {\n      this.zoomToPoint(new fabric.Point(0, 0), value);\n      return this;\n    },\n\n    /**\n     * Pan viewport so as to place point at top left corner of canvas\n     * @param {fabric.Point} point to move to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    absolutePan: function (point) {\n      var vpt = this.viewportTransform.slice(0);\n      vpt[4] = -point.x;\n      vpt[5] = -point.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Pans viewpoint relatively\n     * @param {fabric.Point} point (position vector) to move by\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    relativePan: function (point) {\n      return this.absolutePan(new fabric.Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5]\n      ));\n    },\n\n    /**\n     * Returns &lt;canvas> element corresponding to this instance\n     * @return {HTMLCanvasElement}\n     */\n    getElement: function () {\n      return this.lowerCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was added\n     */\n    _onObjectAdded: function(obj) {\n      this.stateful && obj.setupState();\n      obj._set('canvas', this);\n      obj.setCoords();\n      this.fire('object:added', { target: obj });\n      obj.fire('added');\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      this.fire('object:removed', { target: obj });\n      obj.fire('removed');\n      delete obj.canvas;\n    },\n\n    /**\n     * Clears specified context of canvas element\n     * @param {CanvasRenderingContext2D} ctx Context to clear\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clearContext: function(ctx) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      return this;\n    },\n\n    /**\n     * Returns context of canvas where objects are drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getContext: function () {\n      return this.contextContainer;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this._objects.length = 0;\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this.backgroundColor = '';\n      this.overlayColor = '';\n      if (this._hasITextHandlers) {\n        this.off('mouse:up', this._mouseUpITextHandler);\n        this._iTextInstances = null;\n        this._hasITextHandlers = false;\n      }\n      this.clearContext(this.contextContainer);\n      this.fire('canvas:cleared');\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Renders the canvas\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._objects);\n      return this;\n    },\n\n    /**\n     * Calculate the position of the 4 corner of canvas with current viewportTransform.\n     * helps to determinate when an object is in the current rendering viewport using\n     * object absolute coordinates ( aCoords )\n     * @return {Object} points.tl\n     * @chainable\n     */\n    calcViewportBoundaries: function() {\n      var points = { }, width = this.getWidth(), height = this.getHeight(),\n          iVpt = invertTransform(this.viewportTransform);\n      points.tl = transformPoint({ x: 0, y: 0 }, iVpt);\n      points.br = transformPoint({ x: width, y: height }, iVpt);\n      points.tr = new fabric.Point(points.br.x, points.tl.y);\n      points.bl = new fabric.Point(points.tl.x, points.br.y);\n      this.vptCoords = points;\n      return points;\n    },\n\n    /**\n     * Renders background, objects, overlay and controls.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Array} objects to render\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderCanvas: function(ctx, objects) {\n      this.calcViewportBoundaries();\n      this.clearContext(ctx);\n      this.fire('before:render');\n      if (this.clipTo) {\n        fabric.util.clipContext(this, ctx);\n      }\n      this._renderBackground(ctx);\n\n      ctx.save();\n      //apply viewport transform once for all rendering process\n      ctx.transform.apply(ctx, this.viewportTransform);\n      this._renderObjects(ctx, objects);\n      ctx.restore();\n      if (!this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      if (this.clipTo) {\n        ctx.restore();\n      }\n      this._renderOverlay(ctx);\n      if (this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      this.fire('after:render');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} objects to render\n     */\n    _renderObjects: function(ctx, objects) {\n      for (var i = 0, length = objects.length; i < length; ++i) {\n        objects[i] && objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {string} property 'background' or 'overlay'\n     */\n    _renderBackgroundOrOverlay: function(ctx, property) {\n      var object = this[property + 'Color'];\n      if (object) {\n        ctx.fillStyle = object.toLive\n          ? object.toLive(ctx, this)\n          : object;\n\n        ctx.fillRect(\n          object.offsetX || 0,\n          object.offsetY || 0,\n          this.width,\n          this.height);\n      }\n      object = this[property + 'Image'];\n      if (object) {\n        if (this[property + 'Vpt']) {\n          ctx.save();\n          ctx.transform.apply(ctx, this.viewportTransform);\n        }\n        object.render(ctx);\n        this[property + 'Vpt'] && ctx.restore();\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'background');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderOverlay: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'overlay');\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * Returned value is an object with top and left properties\n     * @return {Object} object with \"top\" and \"left\" number values\n     */\n    getCenter: function () {\n      return {\n        top: this.getHeight() / 2,\n        left: this.getWidth() / 2\n      };\n    },\n\n    /**\n     * Centers object horizontally in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center horizontally\n     * @return {fabric.Canvas} thisArg\n     */\n    centerObjectH: function (object) {\n      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObjectV: function (object) {\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObject: function(object) {\n      var center = this.getCenter();\n\n      return this._centerObject(object, new fabric.Point(center.left, center.top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the viewport\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObject: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, vpCenter);\n    },\n\n    /**\n     * Centers object horizontally in the viewport, object.top is unchanged\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectH: function(object) {\n      var vpCenter = this.getVpCenter();\n      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n      return this;\n    },\n\n    /**\n     * Centers object Vertically in the viewport, object.top is unchanged\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectV: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n    },\n\n    /**\n     * Calculate the point in canvas that correspond to the center of actual viewport.\n     * @return {fabric.Point} vpCenter, viewport center\n     * @chainable\n     */\n    getVpCenter: function() {\n      var center = this.getCenter(),\n          iVpt = invertTransform(this.viewportTransform);\n      return transformPoint({ x: center.left, y: center.top }, iVpt);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} object Object to center\n     * @param {fabric.Point} center Center point\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    _centerObject: function(object, center) {\n      object.setPositionByOrigin(center, 'center', 'center');\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Returs dataless JSON representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {String} json string\n     */\n    toDatalessJSON: function (propertiesToInclude) {\n      return this.toDatalessObject(propertiesToInclude);\n    },\n\n    /**\n     * Returns object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toObject', propertiesToInclude);\n    },\n\n    /**\n     * Returns dataless object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n    },\n\n    /**\n     * @private\n     */\n    _toObjectMethod: function (methodName, propertiesToInclude) {\n\n      var data = {\n        objects: this._toObjects(methodName, propertiesToInclude)\n      };\n\n      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    _toObjects: function(methodName, propertiesToInclude) {\n      return this.getObjects().filter(function(object) {\n        return !object.excludeFromExport;\n      }).map(function(instance) {\n        return this._toObject(instance, methodName, propertiesToInclude);\n      }, this);\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      var originalValue;\n\n      if (!this.includeDefaultValues) {\n        originalValue = instance.includeDefaultValues;\n        instance.includeDefaultValues = false;\n      }\n\n      var object = instance[methodName](propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        instance.includeDefaultValues = originalValue;\n      }\n      return object;\n    },\n\n    /**\n     * @private\n     */\n    __serializeBgOverlay: function(methodName, propertiesToInclude) {\n      var data = { }, bgImage = this.backgroundImage, overlay = this.overlayImage;\n\n      if (this.backgroundColor) {\n        data.background = this.backgroundColor.toObject\n          ? this.backgroundColor.toObject(propertiesToInclude)\n          : this.backgroundColor;\n      }\n\n      if (this.overlayColor) {\n        data.overlay = this.overlayColor.toObject\n          ? this.overlayColor.toObject(propertiesToInclude)\n          : this.overlayColor;\n      }\n      if (bgImage && !bgImage.excludeFromExport) {\n        data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\n      }\n      if (overlay && !overlay.excludeFromExport) {\n        data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);\n      }\n\n      return data;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n     * a zoomed canvas will then produce zoomed SVG output.\n     * @type Boolean\n     * @default\n     */\n    svgViewportTransformation: true,\n\n    /**\n     * Returns SVG representation of canvas\n     * @function\n     * @param {Object} [options] Options object for SVG output\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n     * @param {Object} [options.viewBox] SVG viewbox object\n     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n     * @param {Number} [options.viewBox.width] Width of viewbox\n     * @param {Number} [options.viewBox.height] Height of viewbox\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n     * @param {String} [options.width] desired width of svg with or without units\n     * @param {String} [options.height] desired height of svg with or without units\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n     * @return {String} SVG string\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n     * @example <caption>Normal SVG output</caption>\n     * var svg = canvas.toSVG();\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n     * var svg = canvas.toSVG({suppressPreamble: true});\n     * @example <caption>SVG output with viewBox attribute</caption>\n     * var svg = canvas.toSVG({\n     *   viewBox: {\n     *     x: 100,\n     *     y: 100,\n     *     width: 200,\n     *     height: 300\n     *   }\n     * });\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n     * @example <caption>Modify SVG output with reviver function</caption>\n     * var svg = canvas.toSVG(null, function(svg) {\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n     * });\n     */\n    toSVG: function(options, reviver) {\n      options || (options = { });\n\n      var markup = [];\n\n      this._setSVGPreamble(markup, options);\n      this._setSVGHeader(markup, options);\n\n      this._setSVGBgOverlayColor(markup, 'backgroundColor');\n      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n\n      this._setSVGObjects(markup, reviver);\n\n      this._setSVGBgOverlayColor(markup, 'overlayColor');\n      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n      markup.push('</svg>');\n\n      return markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGPreamble: function(markup, options) {\n      if (options.suppressPreamble) {\n        return;\n      }\n      markup.push(\n        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n          '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n            '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n      );\n    },\n\n    /**\n     * @private\n     */\n    _setSVGHeader: function(markup, options) {\n      var width = options.width || this.width,\n          height = options.height || this.height,\n          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (options.viewBox) {\n        viewBox = 'viewBox=\"' +\n                options.viewBox.x + ' ' +\n                options.viewBox.y + ' ' +\n                options.viewBox.width + ' ' +\n                options.viewBox.height + '\" ';\n      }\n      else {\n        if (this.svgViewportTransformation) {\n          vpt = this.viewportTransform;\n          viewBox = 'viewBox=\"' +\n                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n        }\n      }\n\n      markup.push(\n        '<svg ',\n          'xmlns=\"http://www.w3.org/2000/svg\" ',\n          'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n          'version=\"1.1\" ',\n          'width=\"', width, '\" ',\n          'height=\"', height, '\" ',\n          viewBox,\n          'xml:space=\"preserve\">\\n',\n        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n        '<defs>\\n',\n          this.createSVGFontFacesMarkup(),\n          this.createSVGRefElementsMarkup(),\n        '</defs>\\n'\n      );\n    },\n\n    /**\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n     * @return {String}\n     */\n    createSVGRefElementsMarkup: function() {\n      var _this = this,\n          markup = ['backgroundColor', 'overlayColor'].map(function(prop) {\n            var fill = _this[prop];\n            if (fill && fill.toLive) {\n              return fill.toSVG(_this, false);\n            }\n          });\n      return markup.join('');\n    },\n\n    /**\n     * Creates markup containing SVG font faces,\n     * font URLs for font faces must be collected by developers\n     * and are not extracted from the DOM by fabricjs\n     * @param {Array} objects Array of fabric objects\n     * @return {String}\n     */\n    createSVGFontFacesMarkup: function() {\n      var markup = '', fontList = { }, obj, fontFamily,\n          style, row, rowIndex, _char, charIndex,\n          fontPaths = fabric.fontPaths, objects = this.getObjects();\n\n      for (var i = 0, len = objects.length; i < len; i++) {\n        obj = objects[i];\n        fontFamily = obj.fontFamily;\n        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n          continue;\n        }\n        fontList[fontFamily] = true;\n        if (!obj.styles) {\n          continue;\n        }\n        style = obj.styles;\n        for (rowIndex in style) {\n          row = style[rowIndex];\n          for (charIndex in row) {\n            _char = row[charIndex];\n            fontFamily = _char.fontFamily;\n            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n              fontList[fontFamily] = true;\n            }\n          }\n        }\n      }\n\n      for (var j in fontList) {\n        markup += [\n          '\\t\\t@font-face {\\n',\n          '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n          '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n          '\\t\\t}\\n'\n        ].join('');\n      }\n\n      if (markup) {\n        markup = [\n          '\\t<style type=\"text/css\">',\n          '<![CDATA[\\n',\n          markup,\n          ']]>',\n          '</style>\\n'\n        ].join('');\n      }\n\n      return markup;\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObjects: function(markup, reviver) {\n      var instance;\n      for (var i = 0, objects = this.getObjects(), len = objects.length; i < len; i++) {\n        instance = objects[i];\n        if (instance.excludeFromExport) {\n          continue;\n        }\n        this._setSVGObject(markup, instance, reviver);\n      }\n    },\n\n    /**\n     * push single object svg representation in the markup\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      markup.push(instance.toSVG(reviver));\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayImage: function(markup, property, reviver) {\n      if (this[property] && this[property].toSVG) {\n        markup.push(this[property].toSVG(reviver));\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayColor: function(markup, property) {\n      var filler = this[property];\n      if (!filler) {\n        return;\n      }\n      if (filler.toLive) {\n        var repeat = filler.repeat;\n        markup.push(\n          '<rect transform=\"translate(', this.width / 2, ',', this.height / 2, ')\"',\n            ' x=\"', filler.offsetX - this.width / 2, '\" y=\"', filler.offsetY - this.height / 2, '\" ',\n            'width=\"',\n              (repeat === 'repeat-y' || repeat === 'no-repeat'\n                ? filler.source.width\n                : this.width),\n            '\" height=\"',\n              (repeat === 'repeat-x' || repeat === 'no-repeat'\n                ? filler.source.height\n                : this.height),\n            '\" fill=\"url(#SVGID_' + filler.id + ')\"',\n          '></rect>\\n'\n        );\n      }\n      else {\n        markup.push(\n          '<rect x=\"0\" y=\"0\" ',\n            'width=\"', this.width,\n            '\" height=\"', this.height,\n            '\" fill=\"', this[property], '\"',\n          '></rect>\\n'\n        );\n      }\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendToBack: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeGroup = this._activeGroup,\n          i, obj, objs;\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.unshift(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.unshift(object);\n      }\n      return this.renderAll && this.renderAll();\n    },\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringToFront: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeGroup = this._activeGroup,\n          i, obj, objs;\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.push(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.push(object);\n      }\n      return this.renderAll && this.renderAll();\n    },\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendBackwards: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n\n      var activeGroup = this._activeGroup,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx > 0 + objsMoved) {\n            newIdx = idx - 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== 0) {\n          // if object is not on the bottom of stack\n          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderAll && this.renderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewLowerIndex: function(object, idx, intersecting) {\n      var newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse down the stack looking for the nearest intersecting object\n        for (var i = idx - 1; i >= 0; --i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringForward: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n\n      var activeGroup = this._activeGroup,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx < this._objects.length - 1 - objsMoved) {\n            newIdx = idx + 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== this._objects.length - 1) {\n          // if object is not on top of stack (last item in an array)\n          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderAll && this.renderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewUpperIndex: function(object, idx, intersecting) {\n      var newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse up the stack looking for the nearest intersecting object\n        for (var i = idx + 1; i < this._objects.length; ++i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Number} index Position to move to\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    moveTo: function (object, index) {\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      return this.renderAll && this.renderAll();\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      this.clear();\n      return this;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n               '{ objects: ' + this.getObjects().length + ' }>';\n    }\n  });\n\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\n  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\n    /**\n     * @static\n     * @type String\n     * @default\n     */\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\n    /**\n     * Provides a way to check support of some of the canvas methods\n     * (either those of HTMLCanvasElement itself, or rendering context)\n     *\n     * @param {String} methodName Method to check support for;\n     *                            Could be one of \"getImageData\", \"toDataURL\", \"toDataURLWithQuality\" or \"setLineDash\"\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\n     *                          `null` if canvas element or context can not be initialized\n     */\n    supports: function (methodName) {\n      var el = fabric.util.createCanvasElement();\n\n      if (!el || !el.getContext) {\n        return null;\n      }\n\n      var ctx = el.getContext('2d');\n      if (!ctx) {\n        return null;\n      }\n\n      switch (methodName) {\n\n        case 'getImageData':\n          return typeof ctx.getImageData !== 'undefined';\n\n        case 'setLineDash':\n          return typeof ctx.setLineDash !== 'undefined';\n\n        case 'toDataURL':\n          return typeof el.toDataURL !== 'undefined';\n\n        case 'toDataURLWithQuality':\n          try {\n            el.toDataURL('image/jpeg', 0);\n            return true;\n          }\n          catch (e) { }\n          return false;\n\n        default:\n          return null;\n      }\n    }\n  });\n\n  /**\n   * Returns JSON representation of canvas\n   * @function\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} JSON string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n   * @example <caption>JSON without default values</caption>\n   * canvas.includeDefaultValues = false;\n   * var json = canvas.toJSON();\n   */\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\n})();\n\n\n/**\n * BaseBrush class\n * @class fabric.BaseBrush\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color: 'rgb(0, 0, 0)',\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 1,\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type fabric.Shadow\n   * @default\n   */\n  shadow: null,\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: 'round',\n\n  /**\n   * Corner style of a brush (one of \"bevil\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: 'round',\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: null,\n\n  /**\n   * Sets shadow of an object\n   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  setShadow: function(options) {\n    this.shadow = new fabric.Shadow(options);\n    return this;\n  },\n\n  /**\n   * Sets brush styles\n   * @private\n   */\n  _setBrushStyles: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.lineJoin = this.strokeLineJoin;\n    if (this.strokeDashArray && fabric.StaticCanvas.supports('setLineDash')) {\n      ctx.setLineDash(this.strokeDashArray);\n    }\n  },\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  _setShadow: function() {\n    if (!this.shadow) {\n      return;\n    }\n\n    var ctx = this.canvas.contextTop,\n        zoom = this.canvas.getZoom();\n\n    ctx.shadowColor = this.shadow.color;\n    ctx.shadowBlur = this.shadow.blur * zoom;\n    ctx.shadowOffsetX = this.shadow.offsetX * zoom;\n    ctx.shadowOffsetY = this.shadow.offsetY * zoom;\n  },\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  _resetShadow: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n});\n\n\n(function() {\n\n  /**\n   * PencilBrush class\n   * @class fabric.PencilBrush\n   * @extends fabric.BaseBrush\n   */\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\n    /**\n     * Constructor\n     * @param {fabric.Canvas} canvas\n     * @return {fabric.PencilBrush} Instance of a pencil brush\n     */\n    initialize: function(canvas) {\n      this.canvas = canvas;\n      this._points = [];\n    },\n\n    /**\n     * Inovoked on mouse down\n     * @param {Object} pointer\n     */\n    onMouseDown: function(pointer) {\n      this._prepareForDrawing(pointer);\n      // capture coordinates immediately\n      // this allows to draw dots (when movement never occurs)\n      this._captureDrawingPath(pointer);\n      this._render();\n    },\n\n    /**\n     * Inovoked on mouse move\n     * @param {Object} pointer\n     */\n    onMouseMove: function(pointer) {\n      this._captureDrawingPath(pointer);\n      // redraw curve\n      // clear top canvas\n      this.canvas.clearContext(this.canvas.contextTop);\n      this._render();\n    },\n\n    /**\n     * Invoked on mouse up\n     */\n    onMouseUp: function() {\n      this._finalizeAndAddPath();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _prepareForDrawing: function(pointer) {\n\n      var p = new fabric.Point(pointer.x, pointer.y);\n\n      this._reset();\n      this._addPoint(p);\n\n      this.canvas.contextTop.moveTo(p.x, p.y);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Point} point Point to be added to points array\n     */\n    _addPoint: function(point) {\n      this._points.push(point);\n    },\n\n    /**\n     * Clear points array and set contextTop canvas style.\n     * @private\n     */\n    _reset: function() {\n      this._points.length = 0;\n\n      this._setBrushStyles();\n      this._setShadow();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _captureDrawingPath: function(pointer) {\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n      this._addPoint(pointerPoint);\n    },\n\n    /**\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\n     * @private\n     */\n    _render: function() {\n      var ctx  = this.canvas.contextTop, i, len,\n          v = this.canvas.viewportTransform,\n          p1 = this._points[0],\n          p2 = this._points[1];\n\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      ctx.beginPath();\n\n      //if we only have 2 points in the path and they are the same\n      //it means that the user only clicked the canvas without moving the mouse\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\n      //that's why we set them apart a bit\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n        var width = this.width / 1000;\n        p1 = new fabric.Point(p1.x, p1.y);\n        p2 = new fabric.Point(p2.x, p2.y);\n        p1.x -= width;\n        p2.x += width;\n      }\n      ctx.moveTo(p1.x, p1.y);\n\n      for (i = 1, len = this._points.length; i < len; i++) {\n        // we pick the point between pi + 1 & pi + 2 as the\n        // end point and p1 as our control point.\n        var midPoint = p1.midPointFrom(p2);\n        ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n\n        p1 = this._points[i];\n        p2 = this._points[i + 1];\n      }\n      // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n      ctx.lineTo(p1.x, p1.y);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Converts points to SVG path\n     * @param {Array} points Array of points\n     * @return {String} SVG path\n     */\n    convertPointsToSVGPath: function(points) {\n      var path = [], i, width = this.width / 1000,\n          p1 = new fabric.Point(points[0].x, points[0].y),\n          p2 = new fabric.Point(points[1].x, points[1].y),\n          len = points.length;\n\n      path.push('M ', p1.x - width, ' ', p1.y, ' ');\n      for (i = 1; i < len; i++) {\n        if (!p1.eq(p2)) {\n          var midPoint = p1.midPointFrom(p2);\n          // p1 is our bezier control point\n          // midpoint is our endpoint\n          // start point is p(i-1) value.\n          path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n        }\n        p1 = points[i];\n        if ((i + 1) < points.length) {\n          p2 = points[i + 1];\n        }\n      }\n      path.push('L ', p1.x + width, ' ', p1.y, ' ');\n      return path;\n    },\n\n    /**\n     * Creates fabric.Path object to add on canvas\n     * @param {String} pathData Path data\n     * @return {fabric.Path} Path to add on canvas\n     */\n    createPath: function(pathData) {\n      var path = new fabric.Path(pathData, {\n        fill: null,\n        stroke: this.color,\n        strokeWidth: this.width,\n        strokeLineCap: this.strokeLineCap,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeDashArray: this.strokeDashArray,\n      });\n      var position = new fabric.Point(path.left + path.width / 2, path.top + path.height / 2);\n      position = path.translateToGivenOrigin(position, 'center', 'center', path.originX, path.originY);\n      path.top = position.y;\n      path.left = position.x;\n      if (this.shadow) {\n        this.shadow.affectStroke = true;\n        path.setShadow(this.shadow);\n      }\n\n      return path;\n    },\n\n    /**\n     * On mouseup after drawing the path on contextTop canvas\n     * we use the points captured to create an new fabric path object\n     * and add it to the fabric canvas.\n     */\n    _finalizeAndAddPath: function() {\n      var ctx = this.canvas.contextTop;\n      ctx.closePath();\n\n      var pathData = this.convertPointsToSVGPath(this._points).join('');\n      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n        // do not create 0 width/height paths, as they are\n        // rendered inconsistently across browsers\n        // Firefox 4, for example, renders a dot,\n        // whereas Chrome 10 renders nothing\n        this.canvas.renderAll();\n        return;\n      }\n\n      var path = this.createPath(pathData);\n\n      this.canvas.add(path);\n      path.setCoords();\n\n      this.canvas.clearContext(this.canvas.contextTop);\n      this._resetShadow();\n      this.canvas.renderAll();\n\n      // fire event 'path' created\n      this.canvas.fire('path:created', { path: path });\n    }\n  });\n})();\n\n\n/**\n * CircleBrush class\n * @class fabric.CircleBrush\n */\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.CircleBrush} Instance of a circle brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.points = [];\n  },\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Object} pointer\n   */\n  drawDot: function(pointer) {\n    var point = this.addPoint(pointer),\n        ctx = this.canvas.contextTop,\n        v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown: function(pointer) {\n    this.points.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var circles = [];\n\n    for (var i = 0, len = this.points.length; i < len; i++) {\n      var point = this.points[i],\n          circle = new fabric.Circle({\n            radius: point.radius,\n            left: point.x,\n            top: point.y,\n            originX: 'center',\n            originY: 'center',\n            fill: point.fill\n          });\n\n      this.shadow && circle.setShadow(this.shadow);\n\n      circles.push(circle);\n    }\n    var group = new fabric.Group(circles, { originX: 'center', originY: 'center' });\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.renderAll();\n  },\n\n  /**\n   * @param {Object} pointer\n   * @return {fabric.Point} Just added pointer point\n   */\n  addPoint: function(pointer) {\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\n        circleRadius = fabric.util.getRandomInt(\n                        Math.max(0, this.width - 20), this.width + 20) / 2,\n\n        circleColor = new fabric.Color(this.color)\n                        .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n                        .toRgba();\n\n    pointerPoint.radius = circleRadius;\n    pointerPoint.fill = circleColor;\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n});\n\n\n/**\n * SprayBrush class\n * @class fabric.SprayBrush\n */\nfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width:              10,\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density:            20,\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth:           1,\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance:   1,\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity:        false,\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping:  true,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.SprayBrush} Instance of a spray brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.sprayChunks = [];\n  },\n\n  /**\n   * Invoked on mouse down\n   * @param {Object} pointer\n   */\n  onMouseDown: function(pointer) {\n    this.sprayChunks.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.render();\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.addSprayChunk(pointer);\n    this.render();\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var rects = [];\n\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      var sprayChunk = this.sprayChunks[i];\n\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\n        var rect = new fabric.Rect({\n          width: sprayChunk[j].width,\n          height: sprayChunk[j].width,\n          left: sprayChunk[j].x + 1,\n          top: sprayChunk[j].y + 1,\n          originX: 'center',\n          originY: 'center',\n          fill: this.color\n        });\n\n        this.shadow && rect.setShadow(this.shadow);\n        rects.push(rect);\n      }\n    }\n\n    if (this.optimizeOverlapping) {\n      rects = this._getOptimizedRects(rects);\n    }\n\n    var group = new fabric.Group(rects, { originX: 'center', originY: 'center' });\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.renderAll();\n  },\n\n  /**\n   * @private\n   * @param {Array} rects\n   */\n  _getOptimizedRects: function(rects) {\n\n    // avoid creating duplicate rects at the same coordinates\n    var uniqueRects = { }, key;\n\n    for (var i = 0, len = rects.length; i < len; i++) {\n      key = rects[i].left + '' + rects[i].top;\n      if (!uniqueRects[key]) {\n        uniqueRects[key] = rects[i];\n      }\n    }\n    var uniqueRectsArray = [];\n    for (key in uniqueRects) {\n      uniqueRectsArray.push(uniqueRects[key]);\n    }\n\n    return uniqueRectsArray;\n  },\n\n  /**\n   * Renders brush\n   */\n  render: function() {\n    var ctx = this.canvas.contextTop;\n    ctx.fillStyle = this.color;\n\n    var v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\n    for (var i = 0, len = this.sprayChunkPoints.length; i < len; i++) {\n      var point = this.sprayChunkPoints[i];\n      if (typeof point.opacity !== 'undefined') {\n        ctx.globalAlpha = point.opacity;\n      }\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * @param {Object} pointer\n   */\n  addSprayChunk: function(pointer) {\n    this.sprayChunkPoints = [];\n\n    var x, y, width, radius = this.width / 2;\n\n    for (var i = 0; i < this.density; i++) {\n\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\n      if (this.dotWidthVariance) {\n        width = fabric.util.getRandomInt(\n          // bottom clamp width to 1\n          Math.max(1, this.dotWidth - this.dotWidthVariance),\n          this.dotWidth + this.dotWidthVariance);\n      }\n      else {\n        width = this.dotWidth;\n      }\n\n      var point = new fabric.Point(x, y);\n      point.width = width;\n\n      if (this.randomOpacity) {\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n      }\n\n      this.sprayChunkPoints.push(point);\n    }\n\n    this.sprayChunks.push(this.sprayChunkPoints);\n  }\n});\n\n\n/**\n * PatternBrush class\n * @class fabric.PatternBrush\n * @extends fabric.BaseBrush\n */\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\n  getPatternSrc: function() {\n\n    var dotWidth = 20,\n        dotDistance = 5,\n        patternCanvas = fabric.document.createElement('canvas'),\n        patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\n    patternCtx.fillStyle = this.color;\n    patternCtx.beginPath();\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n    patternCtx.closePath();\n    patternCtx.fill();\n\n    return patternCanvas;\n  },\n\n  getPatternSrcFunction: function() {\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n  },\n\n  /**\n   * Creates \"pattern\" instance property\n   */\n  getPattern: function() {\n    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  },\n\n  /**\n   * Sets brush styles\n   */\n  _setBrushStyles: function() {\n    this.callSuper('_setBrushStyles');\n    this.canvas.contextTop.strokeStyle = this.getPattern();\n  },\n\n  /**\n   * Creates path\n   */\n  createPath: function(pathData) {\n    var path = this.callSuper('createPath', pathData),\n        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new fabric.Pattern({\n      source: this.source || this.getPatternSrcFunction(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y\n    });\n    return path;\n  }\n});\n\n\n(function() {\n\n  var getPointer = fabric.util.getPointer,\n      degreesToRadians = fabric.util.degreesToRadians,\n      radiansToDegrees = fabric.util.radiansToDegrees,\n      atan2 = Math.atan2,\n      abs = Math.abs,\n      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\n      STROKE_OFFSET = 0.5;\n\n  /**\n   * Canvas class\n   * @class fabric.Canvas\n   * @extends fabric.StaticCanvas\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n   * @see {@link fabric.Canvas#initialize} for constructor definition\n   *\n   * @fires object:added\n   * @fires object:modified\n   * @fires object:rotating\n   * @fires object:scaling\n   * @fires object:moving\n   * @fires object:selected\n   *\n   * @fires before:selection:cleared\n   * @fires selection:cleared\n   * @fires selection:created\n   *\n   * @fires path:created\n   * @fires mouse:down\n   * @fires mouse:move\n   * @fires mouse:up\n   * @fires mouse:over\n   * @fires mouse:out\n   *\n   */\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n\n      this._initStatic(el, options);\n      this._initInteractive();\n      this._createCacheCanvas();\n    },\n\n    /**\n     * When true, objects can be transformed by one side (unproportionally)\n     * @type Boolean\n     * @default\n     */\n    uniScaleTransform:      false,\n\n    /**\n     * Indicates which key enable unproportional scaling\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    uniScaleKey:           'shiftKey',\n\n    /**\n     * When true, objects use center point as the origin of scale transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:        false,\n\n    /**\n     * When true, objects use center point as the origin of rotate transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:       false,\n\n    /**\n     * Indicates which key enable centered Transfrom\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    centeredKey:           'altKey',\n\n    /**\n     * Indicates which key enable alternate action on corner\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    altActionKey:           'shiftKey',\n\n    /**\n     * Indicates that canvas is interactive. This property should not be changed.\n     * @type Boolean\n     * @default\n     */\n    interactive:            true,\n\n    /**\n     * Indicates whether group selection should be enabled\n     * @type Boolean\n     * @default\n     */\n    selection:              true,\n\n    /**\n     * Indicates which key enable multiple click selection\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    selectionKey:           'shiftKey',\n\n    /**\n     * Indicates which key enable alternative selection\n     * in case of target overlapping with active object\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.5\n     * @type null|String\n     * @default\n     */\n    altSelectionKey:           null,\n\n    /**\n     * Color of selection\n     * @type String\n     * @default\n     */\n    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\n    /**\n     * Default dash array pattern\n     * If not empty the selection border is dashed\n     * @type Array\n     */\n    selectionDashArray:     [],\n\n    /**\n     * Color of the border of selection (usually slightly darker than color of selection itself)\n     * @type String\n     * @default\n     */\n    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\n    /**\n     * Width of a line used in object/group selection\n     * @type Number\n     * @default\n     */\n    selectionLineWidth:     1,\n\n    /**\n     * Default cursor value used when hovering over an object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:            'move',\n\n    /**\n     * Default cursor value used when moving an object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:             'move',\n\n    /**\n     * Default cursor value used for the entire canvas\n     * @type String\n     * @default\n     */\n    defaultCursor:          'default',\n\n    /**\n     * Cursor value used during free drawing\n     * @type String\n     * @default\n     */\n    freeDrawingCursor:      'crosshair',\n\n    /**\n     * Cursor value used for rotation point\n     * @type String\n     * @default\n     */\n    rotationCursor:         'crosshair',\n\n    /**\n     * Default element class that's given to wrapper (div) element of canvas\n     * @type String\n     * @default\n     */\n    containerClass:         'canvas-container',\n\n    /**\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:     false,\n\n    /**\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\n     * @type Number\n     * @default\n     */\n    targetFindTolerance:    0,\n\n    /**\n     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n     * @type Boolean\n     * @default\n     */\n    skipTargetFind:         false,\n\n    /**\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n     * After mousedown, mousemove creates a shape,\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n     * @type Boolean\n     * @default\n     */\n    isDrawingMode:          false,\n\n    /**\n     * Indicates whether objects should remain in current stack position when selected.\n     * When false objects are brought to top and rendered as part of the selection group\n     * @type Boolean\n     * @default\n     */\n    preserveObjectStacking: false,\n\n    /**\n     * Indicates the angle that an object will lock to while rotating.\n     * @type Number\n     * @since 1.6.7\n     * @default\n     */\n    snapAngle: 0,\n\n    /**\n     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n     * When `null`, the snapThreshold will default to the snapAngle.\n     * @type null|Number\n     * @since 1.6.7\n     * @default\n     */\n    snapThreshold: null,\n\n    /**\n     * Indicates if the right click on canvas can output the context menu or not\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    stopContextMenu: false,\n\n    /**\n     * Indicates if the canvas can fire right click events\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    fireRightClick: false,\n\n    /**\n     * Indicates if the canvas can fire middle click events\n     * @type Boolean\n     * @since 1.7.8\n     * @default\n     */\n    fireMiddleClick: false,\n\n    /**\n     * @private\n     */\n    _initInteractive: function() {\n      this._currentTransform = null;\n      this._groupSelector = null;\n      this._initWrapperElement();\n      this._createUpperCanvas();\n      this._initEventListeners();\n\n      this._initRetinaScaling();\n\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\n      this.calcOffset();\n    },\n\n    /**\n     * Divides objects in two groups, one to render immediately\n     * and one to render as activeGroup.\n     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n     */\n    _chooseObjectsToRender: function() {\n      var activeGroup = this.getActiveGroup(),\n          activeObject = this.getActiveObject(),\n          object, objsToRender = [], activeGroupObjects = [];\n\n      if ((activeGroup || activeObject) && !this.preserveObjectStacking) {\n        for (var i = 0, length = this._objects.length; i < length; i++) {\n          object = this._objects[i];\n          if ((!activeGroup || !activeGroup.contains(object)) && object !== activeObject) {\n            objsToRender.push(object);\n          }\n          else {\n            activeGroupObjects.push(object);\n          }\n        }\n        if (activeGroup) {\n          activeGroup._set('_objects', activeGroupObjects);\n          objsToRender.push(activeGroup);\n        }\n        activeObject && objsToRender.push(activeObject);\n      }\n      else {\n        objsToRender = this._objects;\n      }\n      return objsToRender;\n    },\n\n    /**\n     * Renders both the top canvas and the secondary container canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n        this.clearContext(this.contextTop);\n        this.contextTopDirty = false;\n      }\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n      return this;\n    },\n\n    /**\n     * Method to render only the top canvas.\n     * Also used to render the group selection box.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    renderTop: function () {\n      var ctx = this.contextTop;\n      this.clearContext(ctx);\n\n      // we render the top context - last object\n      if (this.selection && this._groupSelector) {\n        this._drawSelection(ctx);\n      }\n\n      this.fire('after:render');\n      this.contextTopDirty = true;\n      return this;\n    },\n\n    /**\n     * Resets the current transform to its original values and chooses the type of resizing based on the event\n     * @private\n     */\n    _resetCurrentTransform: function() {\n      var t = this._currentTransform;\n\n      t.target.set({\n        scaleX: t.original.scaleX,\n        scaleY: t.original.scaleY,\n        skewX: t.original.skewX,\n        skewY: t.original.skewY,\n        left: t.original.left,\n        top: t.original.top\n      });\n\n      if (this._shouldCenterTransform(t.target)) {\n        if (t.action === 'rotate') {\n          this._setOriginToCenter(t.target);\n        }\n        else {\n          if (t.originX !== 'center') {\n            if (t.originX === 'right') {\n              t.mouseXSign = -1;\n            }\n            else {\n              t.mouseXSign = 1;\n            }\n          }\n          if (t.originY !== 'center') {\n            if (t.originY === 'bottom') {\n              t.mouseYSign = -1;\n            }\n            else {\n              t.mouseYSign = 1;\n            }\n          }\n\n          t.originX = 'center';\n          t.originY = 'center';\n        }\n      }\n      else {\n        t.originX = t.original.originX;\n        t.originY = t.original.originY;\n      }\n    },\n\n    /**\n     * Checks if point is contained within an area of given object\n     * @param {Event} e Event object\n     * @param {fabric.Object} target Object to test against\n     * @param {Object} [point] x,y object of point coordinates we want to check.\n     * @return {Boolean} true if point is contained within an area of given object\n     */\n    containsPoint: function (e, target, point) {\n      var ignoreZoom = true,\n          pointer = point || this.getPointer(e, ignoreZoom),\n          xy;\n\n      if (target.group && target.group === this.getActiveGroup()) {\n        xy = this._normalizePointer(target.group, pointer);\n      }\n      else {\n        xy = { x: pointer.x, y: pointer.y };\n      }\n      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n    },\n\n    /**\n     * @private\n     */\n    _normalizePointer: function (object, pointer) {\n      var m = object.calcTransformMatrix(),\n          invertedM = fabric.util.invertTransform(m),\n          vptPointer = this.restorePointerVpt(pointer);\n      return fabric.util.transformPoint(vptPointer, invertedM);\n    },\n\n    /**\n     * Returns true if object is transparent at a certain location\n     * @param {fabric.Object} target Object to check\n     * @param {Number} x Left coordinate\n     * @param {Number} y Top coordinate\n     * @return {Boolean}\n     */\n    isTargetTransparent: function (target, x, y) {\n      var hasBorders = target.hasBorders,\n          transparentCorners = target.transparentCorners,\n          ctx = this.contextCache,\n          originalColor = target.selectionBackgroundColor;\n\n      target.hasBorders = target.transparentCorners = false;\n      target.selectionBackgroundColor = '';\n\n      ctx.save();\n      ctx.transform.apply(ctx, this.viewportTransform);\n      target.render(ctx);\n      ctx.restore();\n\n      target.active && target._renderControls(ctx);\n\n      target.hasBorders = hasBorders;\n      target.transparentCorners = transparentCorners;\n      target.selectionBackgroundColor = originalColor;\n\n      var isTransparent = fabric.util.isTransparent(\n        ctx, x, y, this.targetFindTolerance);\n\n      this.clearContext(ctx);\n\n      return isTransparent;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldClearSelection: function (e, target) {\n      var activeGroup = this.getActiveGroup(),\n          activeObject = this.getActiveObject();\n\n      return (\n        !target\n        ||\n        (target &&\n          activeGroup &&\n          !activeGroup.contains(target) &&\n          activeGroup !== target &&\n          !e[this.selectionKey])\n        ||\n        (target && !target.evented)\n        ||\n        (target &&\n          !target.selectable &&\n          activeObject &&\n          activeObject !== target)\n      );\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} target\n     */\n    _shouldCenterTransform: function (target) {\n      if (!target) {\n        return;\n      }\n\n      var t = this._currentTransform,\n          centerTransform;\n\n      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n        centerTransform = this.centeredScaling || target.centeredScaling;\n      }\n      else if (t.action === 'rotate') {\n        centerTransform = this.centeredRotation || target.centeredRotation;\n      }\n\n      return centerTransform ? !t.altKey : t.altKey;\n    },\n\n    /**\n     * @private\n     */\n    _getOriginFromCorner: function(target, corner) {\n      var origin = {\n        x: target.originX,\n        y: target.originY\n      };\n\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n        origin.x = 'right';\n      }\n      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n        origin.x = 'left';\n      }\n\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n        origin.y = 'bottom';\n      }\n      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n        origin.y = 'top';\n      }\n\n      return origin;\n    },\n\n    /**\n     * @private\n     */\n    _getActionFromCorner: function(target, corner, e) {\n      if (!corner) {\n        return 'drag';\n      }\n\n      switch (corner) {\n        case 'mtr':\n          return 'rotate';\n        case 'ml':\n        case 'mr':\n          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n        case 'mt':\n        case 'mb':\n          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n        default:\n          return 'scale';\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _setupCurrentTransform: function (e, target) {\n      if (!target) {\n        return;\n      }\n\n      var pointer = this.getPointer(e),\n          corner = target._findTargetCorner(this.getPointer(e, true)),\n          action = this._getActionFromCorner(target, corner, e),\n          origin = this._getOriginFromCorner(target, corner);\n\n      this._currentTransform = {\n        target: target,\n        action: action,\n        corner: corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        left: target.left,\n        top: target.top,\n        theta: degreesToRadians(target.angle),\n        width: target.width * target.scaleX,\n        mouseXSign: 1,\n        mouseYSign: 1,\n        shiftKey: e.shiftKey,\n        altKey: e[this.centeredKey]\n      };\n\n      this._currentTransform.original = {\n        left: target.left,\n        top: target.top,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        originX: origin.x,\n        originY: origin.y\n      };\n\n      this._resetCurrentTransform();\n    },\n\n    /**\n     * Translates object by \"setting\" its left/top\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the translation occurred\n     */\n    _translateObject: function (x, y) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          newLeft = x - transform.offsetX,\n          newTop = y - transform.offsetY,\n          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n          moveY = !target.get('lockMovementY') && target.top !== newTop;\n\n      moveX && target.set('left', newLeft);\n      moveY && target.set('top', newTop);\n      return moveX || moveY;\n    },\n\n    /**\n     * Check if we are increasing a positive skew or lower it,\n     * checking mouse direction and pressed corner.\n     * @private\n     */\n    _changeSkewTransformOrigin: function(mouseMove, t, by) {\n      var property = 'originX', origins = { 0: 'center' },\n          skew = t.target.skewX, originA = 'left', originB = 'right',\n          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n          flipSign = 1;\n\n      mouseMove = mouseMove > 0 ? 1 : -1;\n      if (by === 'y') {\n        skew = t.target.skewY;\n        originA = 'top';\n        originB = 'bottom';\n        property = 'originY';\n      }\n      origins[-1] = originA;\n      origins[1] = originB;\n\n      t.target.flipX && (flipSign *= -1);\n      t.target.flipY && (flipSign *= -1);\n\n      if (skew === 0) {\n        t.skewSign = -corner * mouseMove * flipSign;\n        t[property] = origins[-mouseMove];\n      }\n      else {\n        skew = skew > 0 ? 1 : -1;\n        t.skewSign = skew;\n        t[property] = origins[skew * corner * flipSign];\n      }\n    },\n\n    /**\n     * Skew object by mouse events\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y'\n     * @return {Boolean} true if the skewing occurred\n     */\n    _skewObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target, skewed = false,\n          lockSkewingX = target.get('lockSkewingX'),\n          lockSkewingY = target.get('lockSkewingY');\n\n      if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\n        return false;\n      }\n\n      // Get the constraint point\n      var center = target.getCenterPoint(),\n          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n          actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n\n      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n      // Actually skew the object\n      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n      t.lastX = x;\n      t.lastY = y;\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return skewed;\n    },\n\n    /**\n     * Set object skew\n     * @private\n     * @return {Boolean} true if the skewing occurred\n     */\n    _setObjectSkew: function(localMouse, transform, by, _dim) {\n      var target = transform.target, newValue, skewed = false,\n          skewSign = transform.skewSign, newDim, dimNoSkew,\n          otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n\n      if (by === 'x') {\n        otherBy = 'y';\n        _otherBy = 'Y';\n        _by = 'X';\n        skewX = 0;\n        skewY = target.skewY;\n      }\n      else {\n        otherBy = 'x';\n        _otherBy = 'X';\n        _by = 'Y';\n        skewX = target.skewX;\n        skewY = 0;\n      }\n\n      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n      if (newDimMouse <= 2) {\n        newValue = 0;\n      }\n      else {\n        newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\n                                        (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n        newValue = fabric.util.radiansToDegrees(newValue);\n      }\n      skewed = target['skew' + _by] !== newValue;\n      target.set('skew' + _by, newValue);\n      if (target['skew' + _otherBy] !== 0) {\n        newDim = target._getTransformedDimensions();\n        newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\n        target.set('scale' + _otherBy, newValue);\n      }\n      return skewed;\n    },\n\n    /**\n     * Scales object by invoking its scaleX/scaleY methods\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n     *                    When not provided, an object is scaled by both dimensions equally\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          lockScalingX = target.get('lockScalingX'),\n          lockScalingY = target.get('lockScalingY'),\n          lockScalingFlip = target.get('lockScalingFlip');\n\n      if (lockScalingX && lockScalingY) {\n        return false;\n      }\n\n      // Get the constraint point\n      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n          dim = target._getTransformedDimensions(), scaled = false;\n\n      this._setLocalMouse(localMouse, t);\n\n      // Actually scale the object\n      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n      var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\n          changeX, changeY, scaleX, scaleY;\n\n      scaleX = localMouse.x * target.scaleX / _dim.x;\n      scaleY = localMouse.y * target.scaleY / _dim.y;\n      changeX = target.scaleX !== scaleX;\n      changeY = target.scaleY !== scaleY;\n\n      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n        forbidScalingX = true;\n      }\n\n      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n        forbidScalingY = true;\n      }\n\n      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n        forbidScalingX || forbidScalingY || (scaled = this._scaleObjectEqually(localMouse, target, transform, _dim));\n      }\n      else if (!by) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      else if (by === 'x' && !target.get('lockUniScaling')) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n      }\n      else if (by === 'y' && !target.get('lockUniScaling')) {\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n\n      var dist = localMouse.y + localMouse.x,\n          lastDist = _dim.y * transform.original.scaleY / target.scaleY +\n                     _dim.x * transform.original.scaleX / target.scaleX,\n          scaled, signX = localMouse.x / Math.abs(localMouse.x),\n          signY = localMouse.y / Math.abs(localMouse.y);\n\n      // We use transform.scaleX/Y instead of target.scaleX/Y\n      // because the object may have a min scale and we'll loose the proportions\n      transform.newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);\n      transform.newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);\n      scaled = transform.newScaleX !== target.scaleX || transform.newScaleY !== target.scaleY;\n      target.set('scaleX', transform.newScaleX);\n      target.set('scaleY', transform.newScaleY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     */\n    _flipObject: function(transform, by) {\n      if (transform.newScaleX < 0 && by !== 'y') {\n        if (transform.originX === 'left') {\n          transform.originX = 'right';\n        }\n        else if (transform.originX === 'right') {\n          transform.originX = 'left';\n        }\n      }\n\n      if (transform.newScaleY < 0 && by !== 'x') {\n        if (transform.originY === 'top') {\n          transform.originY = 'bottom';\n        }\n        else if (transform.originY === 'bottom') {\n          transform.originY = 'top';\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setLocalMouse: function(localMouse, t) {\n      var target = t.target, zoom = this.getZoom(),\n          padding = target.padding / zoom;\n\n      if (t.originX === 'right') {\n        localMouse.x *= -1;\n      }\n      else if (t.originX === 'center') {\n        localMouse.x *= t.mouseXSign * 2;\n        if (localMouse.x < 0) {\n          t.mouseXSign = -t.mouseXSign;\n        }\n      }\n\n      if (t.originY === 'bottom') {\n        localMouse.y *= -1;\n      }\n      else if (t.originY === 'center') {\n        localMouse.y *= t.mouseYSign * 2;\n        if (localMouse.y < 0) {\n          t.mouseYSign = -t.mouseYSign;\n        }\n      }\n\n      // adjust the mouse coordinates when dealing with padding\n      if (abs(localMouse.x) > padding) {\n        if (localMouse.x < 0) {\n          localMouse.x += padding;\n        }\n        else {\n          localMouse.x -= padding;\n        }\n      }\n      else { // mouse is within the padding, set to 0\n        localMouse.x = 0;\n      }\n\n      if (abs(localMouse.y) > padding) {\n        if (localMouse.y < 0) {\n          localMouse.y += padding;\n        }\n        else {\n          localMouse.y -= padding;\n        }\n      }\n      else {\n        localMouse.y = 0;\n      }\n    },\n\n    /**\n     * Rotates object by invoking its rotate method\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the rotation occurred\n     */\n    _rotateObject: function (x, y) {\n\n      var t = this._currentTransform;\n\n      if (t.target.get('lockRotation')) {\n        return false;\n      }\n\n      var lastAngle = atan2(t.ey - t.top, t.ex - t.left),\n          curAngle = atan2(y - t.top, x - t.left),\n          angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n          hasRoated = true;\n\n      if (t.target.snapAngle > 0) {\n        var snapAngle  = t.target.snapAngle,\n            snapThreshold  = t.target.snapThreshold || snapAngle,\n            rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n            leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n        if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n          angle = leftAngleLocked;\n        }\n        else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n          angle = rightAngleLocked;\n        }\n      }\n\n      // normalize angle to positive value\n      if (angle < 0) {\n        angle = 360 + angle;\n      }\n      angle %= 360;\n\n      if (t.target.angle === angle) {\n        hasRoated = false;\n      }\n      else {\n        t.target.angle = angle;\n      }\n\n      return hasRoated;\n    },\n\n    /**\n     * Set the cursor type of the canvas element\n     * @param {String} value Cursor type of the canvas element.\n     * @see http://www.w3.org/TR/css3-ui/#cursor\n     */\n    setCursor: function (value) {\n      this.upperCanvasEl.style.cursor = value;\n    },\n\n    /**\n     * @param {fabric.Object} target to reset transform\n     * @private\n     */\n    _resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.setAngle(0);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n     */\n    _drawSelection: function (ctx) {\n      var groupSelector = this._groupSelector,\n          left = groupSelector.left,\n          top = groupSelector.top,\n          aleft = abs(left),\n          atop = abs(top);\n\n      if (this.selectionColor) {\n        ctx.fillStyle = this.selectionColor;\n\n        ctx.fillRect(\n          groupSelector.ex - ((left > 0) ? 0 : -left),\n          groupSelector.ey - ((top > 0) ? 0 : -top),\n          aleft,\n          atop\n        );\n      }\n\n      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n        return;\n      }\n      ctx.lineWidth = this.selectionLineWidth;\n      ctx.strokeStyle = this.selectionBorderColor;\n\n      // selection border\n      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n\n        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);\n\n        ctx.beginPath();\n\n        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\n        ctx.closePath();\n        ctx.stroke();\n      }\n      else {\n        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n        ctx.strokeRect(\n          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n          aleft,\n          atop\n        );\n      }\n    },\n\n    /**\n     * Method that determines what object we are clicking on\n     * the skipGroup parameter is for internal use, is needed for shift+click action\n     * @param {Event} e mouse event\n     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n     */\n    findTarget: function (e, skipGroup) {\n      if (this.skipTargetFind) {\n        return;\n      }\n\n      var ignoreZoom = true,\n          pointer = this.getPointer(e, ignoreZoom),\n          activeGroup = this.getActiveGroup(),\n          activeObject = this.getActiveObject(),\n          activeTarget, activeTargetSubs;\n      // first check current group (if one exists)\n      // active group does not check sub targets like normal groups.\n      // if active group just exits.\n      this.targets = [];\n      if (activeGroup && !skipGroup && activeGroup === this._searchPossibleTargets([activeGroup], pointer)) {\n        this._fireOverOutEvents(activeGroup, e);\n        return activeGroup;\n      }\n      // if we hit the corner of an activeObject, let's return that.\n      if (activeObject && activeObject._findTargetCorner(pointer)) {\n        this._fireOverOutEvents(activeObject, e);\n        return activeObject;\n      }\n      if (activeObject && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        if (!this.preserveObjectStacking) {\n          this._fireOverOutEvents(activeObject, e);\n          return activeObject;\n        }\n        else {\n          activeTarget = activeObject;\n          activeTargetSubs = this.targets;\n          this.targets = [];\n        }\n      }\n\n      var target = this._searchPossibleTargets(this._objects, pointer);\n      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n        target = activeTarget;\n        this.targets = activeTargetSubs;\n      }\n      this._fireOverOutEvents(target, e);\n      return target;\n    },\n\n    /**\n     * @private\n     */\n    _fireOverOutEvents: function(target, e) {\n      var overOpt, outOpt, hoveredTarget = this._hoveredTarget;\n      if (hoveredTarget !== target) {\n        overOpt = { e: e, target: target, previousTarget: this._hoveredTarget };\n        outOpt = { e: e, target: this._hoveredTarget, nextTarget: target };\n        this._hoveredTarget = target;\n      }\n      if (target) {\n        if (hoveredTarget !== target) {\n          if (hoveredTarget) {\n            this.fire('mouse:out', outOpt);\n            hoveredTarget.fire('mouseout', outOpt);\n          }\n          this.fire('mouse:over', overOpt);\n          target.fire('mouseover', overOpt);\n        }\n      }\n      else if (hoveredTarget) {\n        this.fire('mouse:out', outOpt);\n        hoveredTarget.fire('mouseout', outOpt);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _checkTarget: function(pointer, obj) {\n      if (obj &&\n          obj.visible &&\n          obj.evented &&\n          this.containsPoint(null, obj, pointer)){\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n          var isTransparent = this.isTargetTransparent(obj, pointer.x, pointer.y);\n          if (!isTransparent) {\n            return true;\n          }\n        }\n        else {\n          return true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _searchPossibleTargets: function(objects, pointer) {\n\n      // Cache all targets where their bounding box contains point.\n      var target, i = objects.length, normalizedPointer, subTarget;\n      // Do not check for currently grouped objects, since we check the parent group itself.\n      // untill we call this function specifically to search inside the activeGroup\n      while (i--) {\n        if (this._checkTarget(pointer, objects[i])) {\n          target = objects[i];\n          if (target.type === 'group' && target.subTargetCheck) {\n            normalizedPointer = this._normalizePointer(target, pointer);\n            subTarget = this._searchPossibleTargets(target._objects, normalizedPointer);\n            subTarget && this.targets.push(subTarget);\n          }\n          break;\n        }\n      }\n      return target;\n    },\n\n    /**\n     * Returns pointer coordinates without the effect of the viewport\n     * @param {Object} pointer with \"x\" and \"y\" number values\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    restorePointerVpt: function(pointer) {\n      return fabric.util.transformPoint(\n        pointer,\n        fabric.util.invertTransform(this.viewportTransform)\n      );\n    },\n\n    /**\n     * Returns pointer coordinates relative to canvas.\n     * Can return coordinates with or without viewportTransform.\n     * ignoreZoom false gives back coordinates that represent\n     * the point clicked on canvas element.\n     * ignoreZoom true gives back coordinates after being processed\n     * by the viewportTransform ( sort of coordinates of what is displayed\n     * on the canvas where you are clicking.\n     * To interact with your shapes top and left you want to use ignoreZoom true\n     * most of the time, while ignoreZoom false will give you coordinates\n     * compatible with the object.oCoords system.\n     * of the time.\n     * @param {Event} e\n     * @param {Boolean} ignoreZoom\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    getPointer: function (e, ignoreZoom, upperCanvasEl) {\n      if (!upperCanvasEl) {\n        upperCanvasEl = this.upperCanvasEl;\n      }\n      var pointer = getPointer(e),\n          bounds = upperCanvasEl.getBoundingClientRect(),\n          boundsWidth = bounds.width || 0,\n          boundsHeight = bounds.height || 0,\n          cssScale;\n\n      if (!boundsWidth || !boundsHeight ) {\n        if ('top' in bounds && 'bottom' in bounds) {\n          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n        }\n        if ('right' in bounds && 'left' in bounds) {\n          boundsWidth = Math.abs( bounds.right - bounds.left );\n        }\n      }\n\n      this.calcOffset();\n\n      pointer.x = pointer.x - this._offset.left;\n      pointer.y = pointer.y - this._offset.top;\n      if (!ignoreZoom) {\n        pointer = this.restorePointerVpt(pointer);\n      }\n\n      if (boundsWidth === 0 || boundsHeight === 0) {\n        // If bounds are not available (i.e. not visible), do not apply scale.\n        cssScale = { width: 1, height: 1 };\n      }\n      else {\n        cssScale = {\n          width: upperCanvasEl.width / boundsWidth,\n          height: upperCanvasEl.height / boundsHeight\n        };\n      }\n\n      return {\n        x: pointer.x * cssScale.width,\n        y: pointer.y * cssScale.height\n      };\n    },\n\n    /**\n     * @private\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n     */\n    _createUpperCanvas: function () {\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, '');\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.className = '';\n      }\n      else {\n        this.upperCanvasEl = this._createCanvasElement();\n      }\n      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\n      this.wrapperEl.appendChild(this.upperCanvasEl);\n\n      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n      this._applyCanvasStyle(this.upperCanvasEl);\n      this.contextTop = this.upperCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _createCacheCanvas: function () {\n      this.cacheCanvasEl = this._createCanvasElement();\n      this.cacheCanvasEl.setAttribute('width', this.width);\n      this.cacheCanvasEl.setAttribute('height', this.height);\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _initWrapperElement: function () {\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n        'class': this.containerClass\n      });\n      fabric.util.setStyle(this.wrapperEl, {\n        width: this.getWidth() + 'px',\n        height: this.getHeight() + 'px',\n        position: 'relative'\n      });\n      fabric.util.makeElementUnselectable(this.wrapperEl);\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element canvas element to apply styles on\n     */\n    _applyCanvasStyle: function (element) {\n      var width = this.getWidth() || element.width,\n          height = this.getHeight() || element.height;\n\n      fabric.util.setStyle(element, {\n        position: 'absolute',\n        width: width + 'px',\n        height: height + 'px',\n        left: 0,\n        top: 0,\n        'touch-action': 'none'\n      });\n      element.width = width;\n      element.height = height;\n      fabric.util.makeElementUnselectable(element);\n    },\n\n    /**\n     * Copys the the entire inline style from one element (fromEl) to another (toEl)\n     * @private\n     * @param {Element} fromEl Element style is copied from\n     * @param {Element} toEl Element copied style is applied to\n     */\n    _copyCanvasStyle: function (fromEl, toEl) {\n      toEl.style.cssText = fromEl.style.cssText;\n    },\n\n    /**\n     * Returns context of canvas where object selection is drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getSelectionContext: function() {\n      return this.contextTop;\n    },\n\n    /**\n     * Returns &lt;canvas> element on which object selection is drawn\n     * @return {HTMLCanvasElement}\n     */\n    getSelectionElement: function () {\n      return this.upperCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _setActiveObject: function(object) {\n      var obj = this._activeObject;\n      if (obj) {\n        obj.set('active', false);\n        if (object !== obj && obj.onDeselect && typeof obj.onDeselect === 'function') {\n          obj.onDeselect();\n        }\n      }\n      this._activeObject = object;\n      object.set('active', true);\n    },\n\n    /**\n     * Sets given object as the only active object on canvas\n     * @param {fabric.Object} object Object to set as an active one\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveObject: function (object, e) {\n      var currentActiveObject = this.getActiveObject();\n      if (currentActiveObject && currentActiveObject !== object) {\n        currentActiveObject.fire('deselected', { e: e });\n      }\n      this._setActiveObject(object);\n      this.fire('object:selected', { target: object, e: e });\n      object.fire('selected', { e: e });\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Returns currently active object\n     * @return {fabric.Object} active object\n     */\n    getActiveObject: function () {\n      return this._activeObject;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      // removing active object should fire \"selection:cleared\" events\n      if (this.getActiveObject() === obj) {\n        this.fire('before:selection:cleared', { target: obj });\n        this._discardActiveObject();\n        this.fire('selection:cleared', { target: obj });\n        obj.fire('deselected');\n      }\n      if (this._hoveredTarget === obj) {\n        this._hoveredTarget = null;\n      }\n      this.callSuper('_onObjectRemoved', obj);\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveObject: function() {\n      var obj = this._activeObject;\n      if (obj) {\n        obj.set('active', false);\n        if (obj.onDeselect && typeof obj.onDeselect === 'function') {\n          obj.onDeselect();\n        }\n      }\n      this._activeObject = null;\n    },\n\n    /**\n     * Discards currently active object and fire events. If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parmater and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @param {event} e\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveObject: function (e) {\n      var activeObject = this._activeObject;\n      if (activeObject) {\n        this.fire('before:selection:cleared', { target: activeObject, e: e });\n        this._discardActiveObject();\n        this.fire('selection:cleared', { e: e });\n        activeObject.fire('deselected', { e: e });\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Group} group\n     */\n    _setActiveGroup: function(group) {\n      this._activeGroup = group;\n      if (group) {\n        group.set('active', true);\n      }\n    },\n\n    /**\n     * Sets active group to a specified one. If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parmater and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @param {fabric.Group} group Group to set as a current one\n     * @param {Event} e Event object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveGroup: function (group, e) {\n      this._setActiveGroup(group);\n      if (group) {\n        this.fire('object:selected', { target: group, e: e });\n        group.fire('selected', { e: e });\n      }\n      return this;\n    },\n\n    /**\n     * Returns currently active group\n     * @return {fabric.Group} Current group\n     */\n    getActiveGroup: function () {\n      return this._activeGroup;\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveGroup: function() {\n      var g = this.getActiveGroup();\n      if (g) {\n        g.destroy();\n      }\n      this.setActiveGroup(null);\n    },\n\n    /**\n     * Discards currently active group and fire events If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parmater and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveGroup: function (e) {\n      var g = this.getActiveGroup();\n      if (g) {\n        this.fire('before:selection:cleared', { e: e, target: g });\n        this._discardActiveGroup();\n        this.fire('selection:cleared', { e: e });\n      }\n      return this;\n    },\n\n    /**\n     * Deactivates all objects on canvas, removing any active group or object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    deactivateAll: function () {\n      var allObjects = this.getObjects(),\n          i = 0,\n          len = allObjects.length,\n          obj;\n      for ( ; i < len; i++) {\n        obj = allObjects[i];\n        obj && obj.set('active', false);\n      }\n      this._discardActiveGroup();\n      this._discardActiveObject();\n      return this;\n    },\n\n    /**\n     * Deactivates all objects and dispatches appropriate events If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parmater and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    deactivateAllWithDispatch: function (e) {\n      var allObjects = this.getObjects(),\n          i = 0,\n          len = allObjects.length,\n          obj;\n      for ( ; i < len; i++) {\n        obj = allObjects[i];\n        obj && obj.set('active', false);\n      }\n      this.discardActiveGroup(e);\n      this.discardActiveObject(e);\n      return this;\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      fabric.StaticCanvas.prototype.dispose.call(this);\n      var wrapper = this.wrapperEl;\n      this.removeListeners();\n      wrapper.removeChild(this.upperCanvasEl);\n      wrapper.removeChild(this.lowerCanvasEl);\n      delete this.upperCanvasEl;\n      if (wrapper.parentNode) {\n        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n      }\n      delete this.wrapperEl;\n      return this;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this.discardActiveGroup();\n      this.discardActiveObject();\n      this.clearContext(this.contextTop);\n      return this.callSuper('clear');\n    },\n\n    /**\n     * Draws objects' controls (borders/controls)\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n     */\n    drawControls: function(ctx) {\n      var activeGroup = this.getActiveGroup();\n\n      if (activeGroup) {\n        activeGroup._renderControls(ctx);\n      }\n      else {\n        this._drawObjectsControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _drawObjectsControls: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; ++i) {\n        if (!this._objects[i] || !this._objects[i].active) {\n          continue;\n        }\n        this._objects[i]._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      //If the object is part of the current selection group, it should\n      //be transformed appropriately\n      //i.e. it should be serialised as it would appear if the selection group\n      //were to be destroyed.\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\n          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\n      //Undo the damage we did by changing all of its properties\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n      return object;\n    },\n\n    /**\n     * Realises an object's group transformation on it\n     * @private\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n     * @returns the original values of instance which were changed\n     */\n    _realizeGroupTransformOnObject: function(instance) {\n      if (instance.group && instance.group === this.getActiveGroup()) {\n        //Copy all the positionally relevant properties across now\n        var originalValues = {},\n            layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top'];\n        layoutProps.forEach(function(prop) {\n          originalValues[prop] = instance[prop];\n        });\n        this.getActiveGroup().realizeTransform(instance);\n        return originalValues;\n      }\n      else {\n        return null;\n      }\n    },\n\n    /**\n     * Restores the changed properties of instance\n     * @private\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n     */\n    _unwindGroupTransformOnObject: function(instance, originalValues) {\n      if (originalValues) {\n        instance.set(originalValues);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      var originalProperties;\n      //If the object is in a selection group, simulate what would happen to that\n      //object when the group is deselected\n      originalProperties = this._realizeGroupTransformOnObject(instance);\n      this.callSuper('_setSVGObject', markup, instance, reviver);\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n    },\n  });\n\n  // copying static properties manually to work around Opera's bug,\n  // where \"prototype\" property is enumerable and overrides existing prototype\n  for (var prop in fabric.StaticCanvas) {\n    if (prop !== 'prototype') {\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n    }\n  }\n\n  if (fabric.isTouchSupported) {\n    /** @ignore */\n    fabric.Canvas.prototype._setCursorFromEvent = function() { };\n  }\n\n  /**\n   * @ignore\n   * @class fabric.Element\n   * @alias fabric.Canvas\n   * @deprecated Use {@link fabric.Canvas} instead.\n   * @constructor\n   */\n  fabric.Element = fabric.Canvas;\n})();\n\n\n(function() {\n\n  var cursorOffset = {\n        mt: 0, // n\n        tr: 1, // ne\n        mr: 2, // e\n        br: 3, // se\n        mb: 4, // s\n        bl: 5, // sw\n        ml: 6, // w\n        tl: 7 // nw\n      },\n      addListener = fabric.util.addListener,\n      removeListener = fabric.util.removeListener,\n      RIGHT_CLICK = 3, MIDDLE_CLICK = 2, LEFT_CLICK = 1;\n\n  function checkClick(e, value) {\n    return 'which' in e ? e.which === value : e.button === value - 1;\n  }\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Map of cursor style values for each of the object controls\n     * @private\n     */\n    cursorMap: [\n      'n-resize',\n      'ne-resize',\n      'e-resize',\n      'se-resize',\n      's-resize',\n      'sw-resize',\n      'w-resize',\n      'nw-resize'\n    ],\n\n    /**\n     * Adds mouse listeners to canvas\n     * @private\n     */\n    _initEventListeners: function () {\n      // in case we initialized the class twice. This should not happen normally\n      // but in some kind of applications where the canvas element may be changed\n      // this is a workaround to having double listeners.\n      this.removeListeners();\n      this._bindEvents();\n\n      addListener(fabric.window, 'resize', this._onResize);\n\n      // mouse events\n      addListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      addListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n      addListener(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n      addListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n      addListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n\n      // touch events\n      addListener(this.upperCanvasEl, 'touchstart', this._onMouseDown, { passive: false });\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, { passive: false });\n\n      if (typeof eventjs !== 'undefined' && 'add' in eventjs) {\n        eventjs.add(this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs.add(this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs.add(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs.add(this.upperCanvasEl, 'shake', this._onShake);\n        eventjs.add(this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _bindEvents: function() {\n      if (this.eventsBinded) {\n        // for any reason we pass here twice we do not want to bind events twice.\n        return;\n      }\n      this._onMouseDown = this._onMouseDown.bind(this);\n      this._onMouseMove = this._onMouseMove.bind(this);\n      this._onMouseUp = this._onMouseUp.bind(this);\n      this._onResize = this._onResize.bind(this);\n      this._onGesture = this._onGesture.bind(this);\n      this._onDrag = this._onDrag.bind(this);\n      this._onShake = this._onShake.bind(this);\n      this._onLongPress = this._onLongPress.bind(this);\n      this._onOrientationChange = this._onOrientationChange.bind(this);\n      this._onMouseWheel = this._onMouseWheel.bind(this);\n      this._onMouseOut = this._onMouseOut.bind(this);\n      this._onMouseEnter = this._onMouseEnter.bind(this);\n      this._onContextMenu = this._onContextMenu.bind(this);\n      this.eventsBinded = true;\n    },\n\n    /**\n     * Removes all event listeners\n     */\n    removeListeners: function() {\n      removeListener(fabric.window, 'resize', this._onResize);\n\n      removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      removeListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n      removeListener(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n      removeListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n      removeListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n\n      removeListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (typeof eventjs !== 'undefined' && 'remove' in eventjs) {\n        eventjs.remove(this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs.remove(this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs.remove(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs.remove(this.upperCanvasEl, 'shake', this._onShake);\n        eventjs.remove(this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js gesture\n     * @param {Event} [self] Inner Event object\n     */\n    _onGesture: function(e, self) {\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js drag\n     * @param {Event} [self] Inner Event object\n     */\n    _onDrag: function(e, self) {\n      this.__onDrag && this.__onDrag(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on wheel event\n     */\n    _onMouseWheel: function(e) {\n      this.__onMouseWheel(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseOut: function(e) {\n      var target = this._hoveredTarget;\n      this.fire('mouse:out', { target: target, e: e });\n      this._hoveredTarget = null;\n      target && target.fire('mouseout', { e: e });\n      if (this._iTextInstances) {\n        this._iTextInstances.forEach(function(obj) {\n          if (obj.isEditing) {\n            obj.hiddenTextarea.focus();\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseenter\n     */\n    _onMouseEnter: function(e) {\n      if (!this.findTarget(e)) {\n        this.fire('mouse:over', { target: null, e: e });\n        this._hoveredTarget = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js orientation change\n     * @param {Event} [self] Inner Event object\n     */\n    _onOrientationChange: function(e, self) {\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onShake: function(e, self) {\n      this.__onShake && this.__onShake(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onLongPress: function(e, self) {\n      this.__onLongPress && this.__onLongPress(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onContextMenu: function (e) {\n      if (this.stopContextMenu) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDown: function (e) {\n      this.__onMouseDown(e);\n\n      addListener(fabric.document, 'touchend', this._onMouseUp, { passive: false });\n      addListener(fabric.document, 'touchmove', this._onMouseMove, { passive: false });\n\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (e.type === 'touchstart') {\n        // Unbind mousedown to prevent double triggers from touch devices\n        removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      }\n      else {\n        addListener(fabric.document, 'mouseup', this._onMouseUp);\n        addListener(fabric.document, 'mousemove', this._onMouseMove);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUp: function (e) {\n      this.__onMouseUp(e);\n\n      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onMouseUp);\n\n      removeListener(fabric.document, 'mousemove', this._onMouseMove);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove);\n\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, { passive: false });\n\n      if (e.type === 'touchend') {\n        // Wait 400ms before rebinding mousedown to prevent double triggers\n        // from touch devices\n        var _this = this;\n        setTimeout(function() {\n          addListener(_this.upperCanvasEl, 'mousedown', _this._onMouseDown);\n        }, 400);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMove: function (e) {\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n      this.__onMouseMove(e);\n    },\n\n    /**\n     * @private\n     */\n    _onResize: function () {\n      this.calcOffset();\n    },\n\n    /**\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n     * @private\n     * @param {Object} target\n     * @param {Object} pointer\n     */\n    _shouldRender: function(target, pointer) {\n      var activeObject = this.getActiveGroup() || this.getActiveObject();\n\n      if (activeObject && activeObject.isEditing && target === activeObject) {\n        // if we mouse up/down over a editing textbox a cursor change,\n        // there is no need to re render\n        return false;\n      }\n      return !!(\n        (target && (\n          target.isMoving ||\n          target !== activeObject))\n        ||\n        (!target && !!activeObject)\n        ||\n        (!target && !activeObject && !this._groupSelector)\n        ||\n        (pointer &&\n          this._previousPointer &&\n          this.selection && (\n          pointer.x !== this._previousPointer.x ||\n          pointer.y !== this._previousPointer.y))\n      );\n    },\n\n    /**\n     * Method that defines the actions when mouse is released on canvas.\n     * The method resets the currentTransform parameters, store the image corner\n     * position in the image object and render the canvas on top.\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseUp: function (e) {\n\n      var target;\n      // if right/middle click just fire events and return\n      // target undefined will make the _handleEvent search the target\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'up', target, RIGHT_CLICK);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'up', target, MIDDLE_CLICK);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this._onMouseUpInDrawingMode(e);\n        return;\n      }\n\n      var searchTarget = true, transform = this._currentTransform,\n          groupSelector = this._groupSelector,\n          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n\n      if (transform) {\n        this._finalizeCurrentTransform(e);\n        searchTarget = !transform.actionPerformed;\n      }\n\n      target = searchTarget ? this.findTarget(e, true) : transform.target;\n\n      var shouldRender = this._shouldRender(target, this.getPointer(e));\n\n      if (target || !isClick) {\n        this._maybeGroupObjects(e);\n      }\n      else {\n        // those are done by default on mouse up\n        // by _maybeGroupObjects, we are skipping it in case of no target find\n        this._groupSelector = null;\n        this._currentTransform = null;\n      }\n\n      if (target) {\n        target.isMoving = false;\n      }\n      this._setCursorFromEvent(e, target);\n      this._handleEvent(e, 'up', target ? target : null, LEFT_CLICK, isClick);\n      target && (target.__corner = 0);\n      shouldRender && this.renderAll();\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @param {fabric.Object} targetObj receiving event\n     * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\n     * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\n     */\n    _handleEvent: function(e, eventType, targetObj, button, isClick) {\n      var target = typeof targetObj === 'undefined' ? this.findTarget(e) : targetObj,\n          targets = this.targets || [],\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n            button: button || LEFT_CLICK,\n            isClick: isClick || false\n          };\n      this.fire('mouse:' + eventType, options);\n      target && target.fire('mouse' + eventType, options);\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire('mouse' + eventType, options);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n     */\n    _finalizeCurrentTransform: function(e) {\n\n      var transform = this._currentTransform,\n          target = transform.target;\n\n      if (target._scaling) {\n        target._scaling = false;\n      }\n\n      target.setCoords();\n      this._restoreOriginXY(target);\n\n      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n        this.fire('object:modified', { target: target, e: e });\n        target.fire('modified', { e: e });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object to restore\n     */\n    _restoreOriginXY: function(target) {\n      if (this._previousOriginX && this._previousOriginY) {\n\n        var originPoint = target.translateToOriginPoint(\n          target.getCenterPoint(),\n          this._previousOriginX,\n          this._previousOriginY);\n\n        target.originX = this._previousOriginX;\n        target.originY = this._previousOriginY;\n\n        target.left = originPoint.x;\n        target.top = originPoint.y;\n\n        this._previousOriginX = null;\n        this._previousOriginY = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDownInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = true;\n      this.discardActiveObject(e).renderAll();\n      if (this.clipTo) {\n        fabric.util.clipContext(this, this.contextTop);\n      }\n      var pointer = this.getPointer(e);\n      this.freeDrawingBrush.onMouseDown(pointer);\n      this._handleEvent(e, 'down');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMoveInDrawingMode: function(e) {\n      if (this._isCurrentlyDrawing) {\n        var pointer = this.getPointer(e);\n        this.freeDrawingBrush.onMouseMove(pointer);\n      }\n      this.setCursor(this.freeDrawingCursor);\n      this._handleEvent(e, 'move');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUpInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = false;\n      if (this.clipTo) {\n        this.contextTop.restore();\n      }\n      this.freeDrawingBrush.onMouseUp();\n      this._handleEvent(e, 'up');\n    },\n\n    /**\n     * Method that defines the actions when mouse is clicked on canvas.\n     * The method inits the currentTransform parameters and renders all the\n     * canvas so the current image can be placed on the top canvas and the rest\n     * in on the container one.\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    __onMouseDown: function (e) {\n\n      var target = this.findTarget(e);\n\n      // if right click just fire events\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'down', target ? target : null, RIGHT_CLICK);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'down', target ? target : null, MIDDLE_CLICK);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode) {\n        this._onMouseDownInDrawingMode(e);\n        return;\n      }\n\n      // ignore if some object is being transformed at this moment\n      if (this._currentTransform) {\n        return;\n      }\n\n      // save pointer for check in __onMouseUp event\n      var pointer = this.getPointer(e, true);\n      this._previousPointer = pointer;\n\n      var shouldRender = this._shouldRender(target, pointer),\n          shouldGroup = this._shouldGroup(e, target);\n\n      if (this._shouldClearSelection(e, target)) {\n        this.deactivateAllWithDispatch(e);\n      }\n      else if (shouldGroup) {\n        this._handleGrouping(e, target);\n        target = this.getActiveGroup();\n      }\n\n      if (this.selection && (!target || (!target.selectable && !target.isEditing))) {\n        this._groupSelector = {\n          ex: pointer.x,\n          ey: pointer.y,\n          top: 0,\n          left: 0\n        };\n      }\n\n      if (target) {\n        if (target.selectable && (target.__corner || !shouldGroup)) {\n          this._beforeTransform(e, target);\n          this._setupCurrentTransform(e, target);\n        }\n        var activeObject = this.getActiveObject();\n        if (target !== this.getActiveGroup() && target !== activeObject) {\n          this.deactivateAll();\n          if (target.selectable) {\n            activeObject && activeObject.fire('deselected', { e: e });\n            this.setActiveObject(target, e);\n          }\n        }\n      }\n      this._handleEvent(e, 'down', target ? target : null);\n      // we must renderAll so that we update the visuals\n      shouldRender && this.renderAll();\n    },\n\n    /**\n     * @private\n     */\n    _beforeTransform: function(e, target) {\n      this.stateful && target.saveState();\n\n      // determine if it's a drag or rotate case\n      if (target._findTargetCorner(this.getPointer(e))) {\n        this.onBeforeScaleRotate(target);\n      }\n\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object for that origin is set to center\n     */\n    _setOriginToCenter: function(target) {\n      this._previousOriginX = this._currentTransform.target.originX;\n      this._previousOriginY = this._currentTransform.target.originY;\n\n      var center = target.getCenterPoint();\n\n      target.originX = 'center';\n      target.originY = 'center';\n\n      target.left = center.x;\n      target.top = center.y;\n\n      this._currentTransform.left = target.left;\n      this._currentTransform.top = target.top;\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object for that center is set to origin\n     */\n    _setCenterToOrigin: function(target) {\n      var originPoint = target.translateToOriginPoint(\n        target.getCenterPoint(),\n        this._previousOriginX,\n        this._previousOriginY);\n\n      target.originX = this._previousOriginX;\n      target.originY = this._previousOriginY;\n\n      target.left = originPoint.x;\n      target.top = originPoint.y;\n\n      this._previousOriginX = null;\n      this._previousOriginY = null;\n    },\n\n    /**\n     * Method that defines the actions when mouse is hovering the canvas.\n     * The currentTransform parameter will definde whether the user is rotating/scaling/translating\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n     * all any other type of action.\n     * In case of an image transformation only the top canvas will be rendered.\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    __onMouseMove: function (e) {\n\n      var target, pointer;\n\n      if (this.isDrawingMode) {\n        this._onMouseMoveInDrawingMode(e);\n        return;\n      }\n      if (typeof e.touches !== 'undefined' && e.touches.length > 1) {\n        return;\n      }\n\n      var groupSelector = this._groupSelector;\n\n      // We initially clicked in an empty area, so we draw a box for multiple selection\n      if (groupSelector) {\n        pointer = this.getPointer(e, true);\n\n        groupSelector.left = pointer.x - groupSelector.ex;\n        groupSelector.top = pointer.y - groupSelector.ey;\n\n        this.renderTop();\n      }\n      else if (!this._currentTransform) {\n        target = this.findTarget(e);\n        this._setCursorFromEvent(e, target);\n      }\n      else {\n        this._transformObject(e);\n      }\n      this._handleEvent(e, 'move', target ? target : null);\n    },\n\n    /**\n     * Method that defines actions when an Event Mouse Wheel\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseWheel: function(e) {\n      this._handleEvent(e, 'wheel');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event fired on mousemove\n     */\n    _transformObject: function(e) {\n      var pointer = this.getPointer(e),\n          transform = this._currentTransform;\n\n      transform.reset = false;\n      transform.target.isMoving = true;\n      transform.shiftKey = e.shiftKey;\n      transform.altKey = e[this.centeredKey];\n\n      this._beforeScaleTransform(e, transform);\n      this._performTransformAction(e, transform, pointer);\n\n      transform.actionPerformed && this.renderAll();\n    },\n\n    /**\n     * @private\n     */\n    _performTransformAction: function(e, transform, pointer) {\n      var x = pointer.x,\n          y = pointer.y,\n          target = transform.target,\n          action = transform.action,\n          actionPerformed = false;\n\n      if (action === 'rotate') {\n        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', target, e);\n      }\n      else if (action === 'scale') {\n        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', target, e);\n      }\n      else if (action === 'scaleX') {\n        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', target, e);\n      }\n      else if (action === 'scaleY') {\n        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', target, e);\n      }\n      else if (action === 'skewX') {\n        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', target, e);\n      }\n      else if (action === 'skewY') {\n        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', target, e);\n      }\n      else {\n        actionPerformed = this._translateObject(x, y);\n        if (actionPerformed) {\n          this._fire('moving', target, e);\n          this.setCursor(target.moveCursor || this.moveCursor);\n        }\n      }\n      transform.actionPerformed = transform.actionPerformed || actionPerformed;\n    },\n\n    /**\n     * @private\n     */\n    _fire: function(eventName, target, e) {\n      this.fire('object:' + eventName, { target: target, e: e });\n      target.fire(eventName, { e: e });\n    },\n\n    /**\n     * @private\n     */\n    _beforeScaleTransform: function(e, transform) {\n      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n        var centerTransform = this._shouldCenterTransform(transform.target);\n\n        // Switch from a normal resize to center-based\n        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n           // Switch from center-based resize to normal one\n           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n        ) {\n          this._resetCurrentTransform();\n          transform.reset = true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {Object} transform current tranform\n     * @param {Number} x mouse position x from origin\n     * @param {Number} y mouse poistion y from origin\n     * @return {Boolean} true if the scaling occurred\n     */\n    _onScale: function(e, transform, x, y) {\n      if ((e[this.uniScaleKey] || this.uniScaleTransform) && !transform.target.get('lockUniScaling')) {\n        transform.currentAction = 'scale';\n        return this._scaleObject(x, y);\n      }\n      else {\n        // Switch from a normal resize to proportional\n        if (!transform.reset && transform.currentAction === 'scale') {\n          this._resetCurrentTransform();\n        }\n\n        transform.currentAction = 'scaleEqually';\n        return this._scaleObject(x, y, 'equally');\n      }\n    },\n\n    /**\n     * Sets the cursor depending on where the canvas is being hovered.\n     * Note: very buggy in Opera\n     * @param {Event} e Event object\n     * @param {Object} target Object that the mouse is hovering, if so.\n     */\n    _setCursorFromEvent: function (e, target) {\n      if (!target) {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n\n      var hoverCursor = target.hoverCursor || this.hoverCursor,\n          activeGroup = this.getActiveGroup(),\n          // only show proper corner when group selection is not active\n          corner = target._findTargetCorner\n                    && (!activeGroup || !activeGroup.contains(target))\n                    && target._findTargetCorner(this.getPointer(e, true));\n\n      if (!corner) {\n        this.setCursor(hoverCursor);\n      }\n      else {\n        this._setCornerCursor(corner, target, e);\n      }\n      //actually unclear why it should return something\n      //is never evaluated\n      return true;\n    },\n\n    /**\n     * @private\n     */\n    _setCornerCursor: function(corner, target, e) {\n      if (corner in cursorOffset) {\n        this.setCursor(this._getRotatedCornerCursor(corner, target, e));\n      }\n      else if (corner === 'mtr' && target.hasRotatingPoint) {\n        this.setCursor(this.rotationCursor);\n      }\n      else {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getRotatedCornerCursor: function(corner, target, e) {\n      var n = Math.round((target.getAngle() % 360) / 45);\n\n      if (n < 0) {\n        n += 8; // full circle ahead\n      }\n      n += cursorOffset[corner];\n      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n        //if we are holding shift and we are on a mx corner...\n        n += 2;\n      }\n      // normalize n to be from 0 to 7\n      n %= 8;\n\n      return this.cursorMap[n];\n    }\n  });\n})();\n\n\n(function() {\n\n  var min = Math.min,\n      max = Math.max;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     * @return {Boolean}\n     */\n    _shouldGroup: function(e, target) {\n      var activeObject = this.getActiveObject();\n      return e[this.selectionKey] && target && target.selectable &&\n            (this.getActiveGroup() || (activeObject && activeObject !== target))\n            && this.selection;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _handleGrouping: function (e, target) {\n      var activeGroup = this.getActiveGroup();\n\n      if (target === activeGroup) {\n        // if it's a group, find target again, using activeGroup objects\n        target = this.findTarget(e, true);\n        // if even object is not found, bail out\n        if (!target) {\n          return;\n        }\n      }\n      if (activeGroup) {\n        this._updateActiveGroup(target, e);\n      }\n      else {\n        this._createActiveGroup(target, e);\n      }\n\n      if (this._activeGroup) {\n        this._activeGroup.saveCoords();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateActiveGroup: function(target, e) {\n      var activeGroup = this.getActiveGroup();\n\n      if (activeGroup.contains(target)) {\n\n        activeGroup.removeWithUpdate(target);\n        target.set('active', false);\n\n        if (activeGroup.size() === 1) {\n          // remove group alltogether if after removal it only contains 1 object\n          this.discardActiveGroup(e);\n          // activate last remaining object\n          this.setActiveObject(activeGroup.item(0), e);\n          return;\n        }\n      }\n      else {\n        activeGroup.addWithUpdate(target);\n      }\n      this.fire('selection:created', { target: activeGroup, e: e });\n      activeGroup.set('active', true);\n    },\n\n    /**\n     * @private\n     */\n    _createActiveGroup: function(target, e) {\n\n      if (this._activeObject && target !== this._activeObject) {\n\n        var group = this._createGroup(target);\n        group.addWithUpdate();\n\n        this.setActiveGroup(group, e);\n        this._activeObject = null;\n\n        this.fire('selection:created', { target: group, e: e });\n      }\n\n      target.set('active', true);\n    },\n\n    /**\n     * @private\n     * @param {Object} target\n     */\n    _createGroup: function(target) {\n\n      var objects = this.getObjects(),\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n          groupObjects = isActiveLower\n            ? [this._activeObject, target]\n            : [target, this._activeObject];\n      this._activeObject.isEditing && this._activeObject.exitEditing();\n      return new fabric.Group(groupObjects, {\n        canvas: this\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e mouse event\n     */\n    _groupSelectedObjects: function (e) {\n\n      var group = this._collectObjects();\n\n      // do not create group for 1 element only\n      if (group.length === 1) {\n        this.setActiveObject(group[0], e);\n      }\n      else if (group.length > 1) {\n        group = new fabric.Group(group.reverse(), {\n          canvas: this\n        });\n        group.addWithUpdate();\n        this.setActiveGroup(group, e);\n        group.saveCoords();\n        this.fire('selection:created', { target: group, e: e });\n        this.renderAll();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _collectObjects: function() {\n      var group = [],\n          currentObject,\n          x1 = this._groupSelector.ex,\n          y1 = this._groupSelector.ey,\n          x2 = x1 + this._groupSelector.left,\n          y2 = y1 + this._groupSelector.top,\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n          isClick = x1 === x2 && y1 === y2;\n\n      for (var i = this._objects.length; i--; ) {\n        currentObject = this._objects[i];\n\n        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n          continue;\n        }\n\n        if (currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2) ||\n            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n            currentObject.containsPoint(selectionX1Y1) ||\n            currentObject.containsPoint(selectionX2Y2)\n        ) {\n          currentObject.set('active', true);\n          group.push(currentObject);\n\n          // only add one object if it's a click\n          if (isClick) {\n            break;\n          }\n        }\n      }\n\n      return group;\n    },\n\n    /**\n     * @private\n     */\n    _maybeGroupObjects: function(e) {\n      if (this.selection && this._groupSelector) {\n        this._groupSelectedObjects(e);\n      }\n\n      var activeGroup = this.getActiveGroup();\n      if (activeGroup) {\n        activeGroup.setObjectsCoords().setCoords();\n        activeGroup.isMoving = false;\n        this.setCursor(this.defaultCursor);\n      }\n\n      // clear selection and current transformation\n      this._groupSelector = null;\n      this._currentTransform = null;\n    }\n  });\n\n})();\n\n\n(function () {\n\n  var supportQuality = fabric.StaticCanvas.supports('toDataURLWithQuality');\n\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n     * @param {Object} [options] Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'jpeg',\n     *   quality: 0.8\n     * });\n     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   left: 100,\n     *   top: 100,\n     *   width: 200,\n     *   height: 200\n     * });\n     * @example <caption>Generate double scaled png dataURL</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   multiplier: 2\n     * });\n     */\n    toDataURL: function (options) {\n      options || (options = { });\n\n      var format = options.format || 'png',\n          quality = options.quality || 1,\n          multiplier = options.multiplier || 1,\n          cropping = {\n            left: options.left || 0,\n            top: options.top || 0,\n            width: options.width || 0,\n            height: options.height || 0,\n          };\n      return this.__toDataURLWithMultiplier(format, quality, cropping, multiplier);\n    },\n\n    /**\n     * @private\n     */\n    __toDataURLWithMultiplier: function(format, quality, cropping, multiplier) {\n\n      var origWidth = this.getWidth(),\n          origHeight = this.getHeight(),\n          scaledWidth = (cropping.width || this.getWidth()) * multiplier,\n          scaledHeight = (cropping.height || this.getHeight()) * multiplier,\n          zoom = this.getZoom(),\n          newZoom = zoom * multiplier,\n          vp = this.viewportTransform,\n          translateX = (vp[4] - cropping.left) * multiplier,\n          translateY = (vp[5] - cropping.top) * multiplier,\n          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n          originalInteractive = this.interactive;\n\n      this.viewportTransform = newVp;\n      // setting interactive to false avoid exporting controls\n      this.interactive && (this.interactive = false);\n      if (origWidth !== scaledWidth || origHeight !== scaledHeight) {\n        // this.setDimensions is going to renderAll also;\n        this.setDimensions({ width: scaledWidth, height: scaledHeight });\n      }\n      else {\n        this.renderAll();\n      }\n      var data = this.__toDataURL(format, quality, cropping);\n      originalInteractive && (this.interactive = originalInteractive);\n      this.viewportTransform = vp;\n      //setDimensions with no option object is taking care of:\n      //this.width, this.height, this.renderAll()\n      this.setDimensions({ width: origWidth, height: origHeight });\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    __toDataURL: function(format, quality) {\n\n      var canvasEl = this.contextContainer.canvas;\n      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n      if (format === 'jpg') {\n        format = 'jpeg';\n      }\n\n      var data = supportQuality\n                ? canvasEl.toDataURL('image/' + format, quality)\n                : canvasEl.toDataURL('image/' + format);\n\n      return data;\n    },\n\n    /**\n     * Exports canvas element to a dataurl image (allowing to change image size via multiplier).\n     * @deprecated since 1.0.13\n     * @param {String} format (png|jpeg)\n     * @param {Number} multiplier\n     * @param {Number} quality (0..1)\n     * @return {String}\n     */\n    toDataURLWithMultiplier: function (format, multiplier, quality) {\n      return this.toDataURL({\n        format: format,\n        multiplier: multiplier,\n        quality: quality\n      });\n    },\n  });\n\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Populates canvas with data from the specified dataless JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n   * @deprecated since 1.2.2\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   */\n  loadFromDatalessJSON: function (json, callback, reviver) {\n    return this.loadFromJSON(json, callback, reviver);\n  },\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * });\n   */\n  loadFromJSON: function (json, callback, reviver) {\n    if (!json) {\n      return;\n    }\n\n    // serialize if it wasn't already\n    var serialized = (typeof json === 'string')\n      ? JSON.parse(json)\n      : fabric.util.object.clone(json);\n\n    var _this = this,\n        renderOnAddRemove = this.renderOnAddRemove;\n    this.renderOnAddRemove = false;\n\n    this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\n      _this.clear();\n      _this._setBgOverlay(serialized, function () {\n        enlivenedObjects.forEach(function(obj, index) {\n          // we splice the array just in case some custom classes restored from JSON\n          // will add more object to canvas at canvas init.\n          _this.insertAt(obj, index);\n        });\n        _this.renderOnAddRemove = renderOnAddRemove;\n        // remove parts i cannot set as options\n        delete serialized.objects;\n        delete serialized.backgroundImage;\n        delete serialized.overlayImage;\n        delete serialized.background;\n        delete serialized.overlay;\n        // this._initOptions does too many things to just\n        // call it. Normally loading an Object from JSON\n        // create the Object instance. Here the Canvas is\n        // already an instance and we are just loading things over it\n        _this._setOptions(serialized);\n        _this.renderAll();\n        callback && callback();\n      });\n    }, reviver);\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  _setBgOverlay: function(serialized, callback) {\n    var loaded = {\n      backgroundColor: false,\n      overlayColor: false,\n      backgroundImage: false,\n      overlayImage: false\n    };\n\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n      callback && callback();\n      return;\n    }\n\n    var cbIfLoaded = function () {\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n        callback && callback();\n      }\n    };\n\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n   * @param {(Object|String)} value Value to set\n   * @param {Object} loaded Set loaded property to true if property is set\n   * @param {Object} callback Callback function to invoke after property is set\n   */\n  __setBgOverlay: function(property, value, loaded, callback) {\n    var _this = this;\n\n    if (!value) {\n      loaded[property] = true;\n      callback && callback();\n      return;\n    }\n\n    if (property === 'backgroundImage' || property === 'overlayImage') {\n      fabric.util.enlivenObjects([value], function(enlivedObject){\n        _this[property] = enlivedObject[0];\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n    else {\n      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {Array} objects\n   * @param {Function} callback\n   * @param {Function} [reviver]\n   */\n  _enlivenObjects: function (objects, callback, reviver) {\n    if (!objects || objects.length === 0) {\n      callback && callback([]);\n      return;\n    }\n\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n      callback && callback(enlivenedObjects);\n    }, null, reviver);\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Function} callback\n   */\n  _toDataURL: function (format, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURL(format));\n    });\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Number} multiplier\n   * @param {Function} callback\n   */\n  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\n    });\n  },\n\n  /**\n   * Clones canvas instance\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone: function (callback, properties) {\n    var data = JSON.stringify(this.toJSON(properties));\n    this.cloneWithoutData(function(clone) {\n      clone.loadFromJSON(data, function() {\n        callback && callback(clone);\n      });\n    });\n  },\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions, clipping properties, etc.\n   * but leaves data empty (so that you can populate it with your own)\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   */\n  cloneWithoutData: function(callback) {\n    var el = fabric.document.createElement('canvas');\n\n    el.width = this.getWidth();\n    el.height = this.getHeight();\n\n    var clone = new fabric.Canvas(el);\n    clone.clipTo = this.clipTo;\n    if (this.backgroundImage) {\n      clone.setBackgroundImage(this.backgroundImage.src, function() {\n        clone.renderAll();\n        callback && callback(clone);\n      });\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n      clone.backgroundImageStretch = this.backgroundImageStretch;\n    }\n    else {\n      callback && callback(clone);\n    }\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      capitalize = fabric.util.string.capitalize,\n      degreesToRadians = fabric.util.degreesToRadians,\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      objectCaching = !fabric.isLikelyNode,\n      ALIASING_LIMIT = 2;\n\n  if (fabric.Object) {\n    return;\n  }\n\n  /**\n   * Root object class from which all 2d shape classes inherit from\n   * @class fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n   * @see {@link fabric.Object#initialize} for constructor definition\n   *\n   * @fires added\n   * @fires removed\n   *\n   * @fires selected\n   * @fires deselected\n   * @fires modified\n   * @fires rotating\n   * @fires scaling\n   * @fires moving\n   * @fires skewing\n   *\n   * @fires mousedown\n   * @fires mouseup\n   * @fires mouseover\n   * @fires mouseout\n   * @fires mousewheel\n   */\n  fabric.Object = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Retrieves object's {@link fabric.Object#clipTo|clipping function}\n     * @method getClipTo\n     * @memberOf fabric.Object.prototype\n     * @return {Function}\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#clipTo|clipping function}\n     * @method setClipTo\n     * @memberOf fabric.Object.prototype\n     * @param {Function} clipTo Clipping function\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#transformMatrix|transformMatrix}\n     * @method getTransformMatrix\n     * @memberOf fabric.Object.prototype\n     * @return {Array} transformMatrix\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#transformMatrix|transformMatrix}\n     * @method setTransformMatrix\n     * @memberOf fabric.Object.prototype\n     * @param {Array} transformMatrix\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#visible|visible} state\n     * @method getVisible\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} True if visible\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#visible|visible} state\n     * @method setVisible\n     * @memberOf fabric.Object.prototype\n     * @param {Boolean} value visible value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#shadow|shadow}\n     * @method getShadow\n     * @memberOf fabric.Object.prototype\n     * @return {Object} Shadow instance\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#stroke|stroke}\n     * @method getStroke\n     * @memberOf fabric.Object.prototype\n     * @return {String} stroke value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#stroke|stroke}\n     * @method setStroke\n     * @memberOf fabric.Object.prototype\n     * @param {String} value stroke value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#strokeWidth|strokeWidth}\n     * @method getStrokeWidth\n     * @memberOf fabric.Object.prototype\n     * @return {Number} strokeWidth value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#strokeWidth|strokeWidth}\n     * @method setStrokeWidth\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value strokeWidth value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#originX|originX}\n     * @method getOriginX\n     * @memberOf fabric.Object.prototype\n     * @return {String} originX value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#originX|originX}\n     * @method setOriginX\n     * @memberOf fabric.Object.prototype\n     * @param {String} value originX value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#originY|originY}\n     * @method getOriginY\n     * @memberOf fabric.Object.prototype\n     * @return {String} originY value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#originY|originY}\n     * @method setOriginY\n     * @memberOf fabric.Object.prototype\n     * @param {String} value originY value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#fill|fill}\n     * @method getFill\n     * @memberOf fabric.Object.prototype\n     * @return {String} Fill value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#fill|fill}\n     * @method setFill\n     * @memberOf fabric.Object.prototype\n     * @param {String} value Fill value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#opacity|opacity}\n     * @method getOpacity\n     * @memberOf fabric.Object.prototype\n     * @return {Number} Opacity value (0-1)\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#opacity|opacity}\n     * @method setOpacity\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value Opacity value (0-1)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#angle|angle} (in degrees)\n     * @method getAngle\n     * @memberOf fabric.Object.prototype\n     * @return {Number}\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#top|top position}\n     * @method getTop\n     * @memberOf fabric.Object.prototype\n     * @return {Number} Top value (in pixels)\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#top|top position}\n     * @method setTop\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value Top value (in pixels)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#left|left position}\n     * @method getLeft\n     * @memberOf fabric.Object.prototype\n     * @return {Number} Left value (in pixels)\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#left|left position}\n     * @method setLeft\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value Left value (in pixels)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#scaleX|scaleX} value\n     * @method getScaleX\n     * @memberOf fabric.Object.prototype\n     * @return {Number} scaleX value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#scaleX|scaleX} value\n     * @method setScaleX\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value scaleX value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#scaleY|scaleY} value\n     * @method getScaleY\n     * @memberOf fabric.Object.prototype\n     * @return {Number} scaleY value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#scaleY|scaleY} value\n     * @method setScaleY\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value scaleY value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#flipX|flipX} value\n     * @method getFlipX\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} flipX value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#flipX|flipX} value\n     * @method setFlipX\n     * @memberOf fabric.Object.prototype\n     * @param {Boolean} value flipX value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#flipY|flipY} value\n     * @method getFlipY\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} flipY value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#flipY|flipY} value\n     * @method setFlipY\n     * @memberOf fabric.Object.prototype\n     * @param {Boolean} value flipY value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Type of an object (rect, circle, path, etc.).\n     * Note that this property is meant to be read-only and not meant to be modified.\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n     * @type String\n     * @default\n     */\n    type:                     'object',\n\n    /**\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originX:                  'left',\n\n    /**\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originY:                  'top',\n\n    /**\n     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n     * @type Number\n     * @default\n     */\n    top:                      0,\n\n    /**\n     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n     * @type Number\n     * @default\n     */\n    left:                     0,\n\n    /**\n     * Object width\n     * @type Number\n     * @default\n     */\n    width:                    0,\n\n    /**\n     * Object height\n     * @type Number\n     * @default\n     */\n    height:                   0,\n\n    /**\n     * Object scale factor (horizontal)\n     * @type Number\n     * @default\n     */\n    scaleX:                   1,\n\n    /**\n     * Object scale factor (vertical)\n     * @type Number\n     * @default\n     */\n    scaleY:                   1,\n\n    /**\n     * When true, an object is rendered as flipped horizontally\n     * @type Boolean\n     * @default\n     */\n    flipX:                    false,\n\n    /**\n     * When true, an object is rendered as flipped vertically\n     * @type Boolean\n     * @default\n     */\n    flipY:                    false,\n\n    /**\n     * Opacity of an object\n     * @type Number\n     * @default\n     */\n    opacity:                  1,\n\n    /**\n     * Angle of rotation of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    angle:                    0,\n\n    /**\n     * Angle of skew on x axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewX:                    0,\n\n    /**\n     * Angle of skew on y axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewY:                    0,\n\n    /**\n     * Size of object's controlling corners (in pixels)\n     * @type Number\n     * @default\n     */\n    cornerSize:               13,\n\n    /**\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n     * @type Boolean\n     * @default\n     */\n    transparentCorners:       true,\n\n    /**\n     * Default cursor value used when hovering over this object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:              null,\n\n    /**\n     * Default cursor value used when moving this object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:               null,\n\n    /**\n     * Padding between object and its controlling borders (in pixels)\n     * @type Number\n     * @default\n     */\n    padding:                  0,\n\n    /**\n     * Color of controlling borders of an object (when it's active)\n     * @type String\n     * @default\n     */\n    borderColor:              'rgba(102,153,255,0.75)',\n\n    /**\n     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    borderDashArray:          null,\n\n    /**\n     * Color of controlling corners of an object (when it's active)\n     * @type String\n     * @default\n     */\n    cornerColor:              'rgba(102,153,255,0.5)',\n\n    /**\n     * Color of controlling corners of an object (when it's active and transparentCorners false)\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    cornerStrokeColor:        null,\n\n    /**\n     * Specify style of control, 'rect' or 'circle'\n     * @since 1.6.2\n     * @type String\n     */\n    cornerStyle:          'rect',\n\n    /**\n     * Array specifying dash pattern of an object's control (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    cornerDashArray:          null,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being scaled via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:          false,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being rotated via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:         true,\n\n    /**\n     * Color of object's fill\n     * @type String\n     * @default\n     */\n    fill:                     'rgb(0,0,0)',\n\n    /**\n     * Fill rule used to fill an object\n     * accepted values are nonzero, evenodd\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n     * @type String\n     * @default\n     */\n    fillRule:                 'nonzero',\n\n    /**\n     * Composite rule used for canvas globalCompositeOperation\n     * @type String\n     * @default\n     */\n    globalCompositeOperation: 'source-over',\n\n    /**\n     * Background color of an object.\n     * @type String\n     * @default\n     */\n    backgroundColor:          '',\n\n    /**\n     * Selection Background color of an object. colored layer behind the object when it is active.\n     * does not mix good with globalCompositeOperation methods.\n     * @type String\n     * @default\n     */\n    selectionBackgroundColor:          '',\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color\n     * @type String\n     * @default\n     */\n    stroke:                   null,\n\n    /**\n     * Width of a stroke used to render this object\n     * @type Number\n     * @default\n     */\n    strokeWidth:              1,\n\n    /**\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n     * @type Array\n     */\n    strokeDashArray:          null,\n\n    /**\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n     * @type String\n     * @default\n     */\n    strokeLineCap:            'butt',\n\n    /**\n     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n     * @type String\n     * @default\n     */\n    strokeLineJoin:           'miter',\n\n    /**\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeMiterLimit:         10,\n\n    /**\n     * Shadow object representing shadow of this shape\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:                   null,\n\n    /**\n     * Opacity of object's controlling borders when object is active and moving\n     * @type Number\n     * @default\n     */\n    borderOpacityWhenMoving:  0.4,\n\n    /**\n     * Scale factor of object's controlling borders\n     * @type Number\n     * @default\n     */\n    borderScaleFactor:        1,\n\n    /**\n     * Transform matrix (similar to SVG's transform matrix)\n     * @type Array\n     */\n    transformMatrix:          null,\n\n    /**\n     * Minimum allowed scale value of an object\n     * @type Number\n     * @default\n     */\n    minScaleLimit:            0.01,\n\n    /**\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n     * But events still fire on it.\n     * @type Boolean\n     * @default\n     */\n    selectable:               true,\n\n    /**\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n     * @type Boolean\n     * @default\n     */\n    evented:                  true,\n\n    /**\n     * When set to `false`, an object is not rendered on canvas\n     * @type Boolean\n     * @default\n     */\n    visible:                  true,\n\n    /**\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n     * @type Boolean\n     * @default\n     */\n    hasControls:              true,\n\n    /**\n     * When set to `false`, object's controlling borders are not rendered\n     * @type Boolean\n     * @default\n     */\n    hasBorders:               true,\n\n    /**\n     * When set to `false`, object's controlling rotating point will not be visible or selectable\n     * @type Boolean\n     * @default\n     */\n    hasRotatingPoint:         true,\n\n    /**\n     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n     * @type Number\n     * @default\n     */\n    rotatingPointOffset:      40,\n\n    /**\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:       false,\n\n    /**\n     * When `false`, default object's values are not included in its serialization\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues:     true,\n\n    /**\n     * Function that determines clipping of an object (context is passed as a first argument)\n     * Note that context origin is at the object's center point (not left/top corner)\n     * @type Function\n     */\n    clipTo:                   null,\n\n    /**\n     * When `true`, object horizontal movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementX:            false,\n\n    /**\n     * When `true`, object vertical movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementY:            false,\n\n    /**\n     * When `true`, object rotation is locked\n     * @type Boolean\n     * @default\n     */\n    lockRotation:             false,\n\n    /**\n     * When `true`, object horizontal scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingX:             false,\n\n    /**\n     * When `true`, object vertical scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingY:             false,\n\n    /**\n     * When `true`, object non-uniform scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockUniScaling:           false,\n\n    /**\n     * When `true`, object horizontal skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingX:             false,\n\n    /**\n     * When `true`, object vertical skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingY:             false,\n\n    /**\n     * When `true`, object cannot be flipped by scaling into negative values\n     * @type Boolean\n     * @default\n     */\n    lockScalingFlip:          false,\n\n    /**\n     * When `true`, object is not exported in SVG or OBJECT/JSON\n     * since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    excludeFromExport:        false,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    objectCaching:            objectCaching,\n\n    /**\n     * When `true`, object properties are checked for cache invalidation. In some particular\n     * situation you may want this to be disabled ( spray brush, very big pathgroups, groups)\n     * or if your application does not allow you to modify properties for groups child you want\n     * to disable it for groups.\n     * default to false\n     * since 1.7.0\n     * @type Boolean\n     * @default false\n     */\n    statefullCache:            false,\n\n    /**\n     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n     * too much and will be redrawn with correct details at the end of scaling.\n     * this setting is performance and application dependant.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    noScaleCache:              true,\n\n    /**\n     * When set to `true`, object's cache will be rerendered next render call.\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    dirty:                true,\n\n    /**\n     * List of properties to consider when checking if state\n     * of an object is changed (fabric.Object#hasStateChanged)\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: (\n      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n      'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' +\n      'angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor ' +\n      'skewX skewY fillRule'\n    ).split(' '),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: (\n      'fill stroke strokeWidth strokeDashArray width height' +\n      ' strokeLineCap strokeLineJoin strokeMiterLimit backgroundColor'\n    ).split(' '),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      options = options || { };\n      if (options) {\n        this.setOptions(options);\n      }\n    },\n\n    /**\n     * Create a the canvas used to keep the cached copy of the object\n     * @private\n     */\n    _createCacheCanvas: function() {\n      this._cacheProperties = {};\n      this._cacheCanvas = fabric.document.createElement('canvas');\n      this._cacheContext = this._cacheCanvas.getContext('2d');\n      this._updateCacheCanvas();\n    },\n\n    /**\n     * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\n     * and each side do not cross fabric.cacheSideLimit\n     * those numbers are configurable so that you can get as much detail as you want\n     * making bargain with performances.\n     * @param {Object} dims\n     * @param {Object} dims.width width of canvas\n     * @param {Object} dims.height height of canvas\n     * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _limitCacheSize: function(dims) {\n      var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\n          maximumSide = fabric.cacheSideLimit,\n          width = dims.width, height = dims.height,\n          ar = width / height, limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal, maximumSide),\n          capValue = fabric.util.capValue, max = fabric.maxCacheSideLimit, min = fabric.minCacheSideLimit,\n          x = capValue(min, limitedDims.x, max),\n          y = capValue(min, limitedDims.y, max);\n      if (width > x) {\n        dims.zoomX /= width / x;\n        dims.width = x;\n      }\n      else if (width < min) {\n        dims.width = min;\n      }\n      if (height > y) {\n        dims.zoomY /= height / y;\n        dims.height = y;\n      }\n      else if (height < min) {\n        dims.height = min;\n      }\n      return dims;\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var zoom = this.canvas && this.canvas.getZoom() || 1,\n          objectScale = this.getObjectScaling(),\n          dim = this._getNonTransformedDimensions(),\n          retina = this.canvas && this.canvas._isRetinaScaling() ? fabric.devicePixelRatio : 1,\n          zoomX = objectScale.scaleX * zoom * retina,\n          zoomY = objectScale.scaleY * zoom * retina,\n          width = dim.x * zoomX,\n          height = dim.y * zoomY;\n      return {\n        width: width + ALIASING_LIMIT,\n        height: height + ALIASING_LIMIT,\n        zoomX: zoomX,\n        zoomY: zoomY\n      };\n    },\n\n    /**\n     * Update width and height of the canvas for cache\n     * returns true or false if canvas needed resize.\n     * @private\n     * @return {Boolean} true if the canvas has been resized\n     */\n    _updateCacheCanvas: function() {\n      if (this.noScaleCache && this.canvas && this.canvas._currentTransform) {\n        var action = this.canvas._currentTransform.action;\n        if (action.slice && action.slice(0, 5) === 'scale') {\n          return false;\n        }\n      }\n      var dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          minCacheSize = fabric.minCacheSideLimit,\n          width = dims.width, height = dims.height,\n          zoomX = dims.zoomX, zoomY = dims.zoomY,\n          dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\n          zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\n          shouldRedraw = dimensionsChanged || zoomChanged,\n          additionalWidth = 0, additionalHeight = 0, shouldResizeCanvas = false;\n      if (dimensionsChanged) {\n        var canvasWidth = this._cacheCanvas.width,\n            canvasHeight = this._cacheCanvas.height,\n            sizeGrowing = width > canvasWidth || height > canvasHeight,\n            sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\n              canvasWidth > minCacheSize && canvasHeight > minCacheSize;\n        shouldResizeCanvas = sizeGrowing || sizeShrinking;\n        if (sizeGrowing) {\n          additionalWidth = (width * 0.1) & ~1;\n          additionalHeight = (height * 0.1) & ~1;\n        }\n      }\n      if (shouldRedraw) {\n        if (shouldResizeCanvas) {\n          this._cacheCanvas.width = Math.max(Math.ceil(width) + additionalWidth, minCacheSize);\n          this._cacheCanvas.height = Math.max(Math.ceil(height) + additionalHeight, minCacheSize);\n          this.cacheTranslationX = (width + additionalWidth) / 2;\n          this.cacheTranslationY = (height + additionalHeight) / 2;\n        }\n        else {\n          this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\n          this._cacheContext.clearRect(0, 0, this._cacheCanvas.width, this._cacheCanvas.height);\n        }\n        this.cacheWidth = width;\n        this.cacheHeight = height;\n        this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\n        this._cacheContext.scale(zoomX, zoomY);\n        this.zoomX = zoomX;\n        this.zoomY = zoomY;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Sets object's properties from options\n     * @param {Object} [options] Options object\n     */\n    setOptions: function(options) {\n      this._setOptions(options);\n      this._initGradient(options.fill, 'fill');\n      this._initGradient(options.stroke, 'stroke');\n      this._initClipping(options);\n      this._initPattern(options.fill, 'fill');\n      this._initPattern(options.stroke, 'stroke');\n    },\n\n    /**\n     * Transforms context when rendering an object\n     * @param {CanvasRenderingContext2D} ctx Context\n     * @param {Boolean} fromLeft When true, context is transformed to object's top/left corner. This is used when rendering text on Node\n     */\n    transform: function(ctx, fromLeft) {\n      if (this.group && !this.group._transformDone && this.group === this.canvas._activeGroup) {\n        this.group.transform(ctx);\n      }\n      var center = fromLeft ? this._getLeftTopCoords() : this.getCenterPoint();\n      ctx.translate(center.x, center.y);\n      this.angle && ctx.rotate(degreesToRadians(this.angle));\n      ctx.scale(\n        this.scaleX * (this.flipX ? -1 : 1),\n        this.scaleY * (this.flipY ? -1 : 1)\n      );\n      this.skewX && ctx.transform(1, 0, Math.tan(degreesToRadians(this.skewX)), 1, 0, 0);\n      this.skewY && ctx.transform(1, Math.tan(degreesToRadians(this.skewY)), 0, 1, 0, 0);\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          object = {\n            type:                     this.type,\n            originX:                  this.originX,\n            originY:                  this.originY,\n            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n            strokeLineCap:            this.strokeLineCap,\n            strokeLineJoin:           this.strokeLineJoin,\n            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n            angle:                    toFixed(this.getAngle(), NUM_FRACTION_DIGITS),\n            flipX:                    this.flipX,\n            flipY:                    this.flipY,\n            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n            visible:                  this.visible,\n            clipTo:                   this.clipTo && String(this.clipTo),\n            backgroundColor:          this.backgroundColor,\n            fillRule:                 this.fillRule,\n            globalCompositeOperation: this.globalCompositeOperation,\n            transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : null,\n            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS)\n          };\n\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      if (!this.includeDefaultValues) {\n        object = this._removeDefaultValues(object);\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns (dataless) object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      // will be overwritten by subclasses\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _removeDefaultValues: function(object) {\n      var prototype = fabric.util.getKlass(object.type).prototype,\n          stateProperties = prototype.stateProperties;\n      stateProperties.forEach(function(prop) {\n        if (object[prop] === prototype[prop]) {\n          delete object[prop];\n        }\n        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\n        // basically a check for [] === []\n        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n          delete object[prop];\n        }\n      });\n\n      return object;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.' + capitalize(this.type) + '>';\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getObjectScaling: function() {\n      var scaleX = this.scaleX, scaleY = this.scaleY;\n      if (this.group) {\n        var scaling = this.group.getObjectScaling();\n        scaleX *= scaling.scaleX;\n        scaleY *= scaling.scaleY;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Object} thisArg\n     */\n    _set: function(key, value) {\n      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY');\n\n      if (shouldConstrainValue) {\n        value = this._constrainScale(value);\n      }\n      if (key === 'scaleX' && value < 0) {\n        this.flipX = !this.flipX;\n        value *= -1;\n      }\n      else if (key === 'scaleY' && value < 0) {\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n        value = new fabric.Shadow(value);\n      }\n      else if (key === 'dirty' && this.group) {\n        this.group.set('dirty', value);\n      }\n\n      this[key] = value;\n\n      if (this.cacheProperties.indexOf(key) > -1) {\n        if (this.group) {\n          this.group.set('dirty', true);\n        }\n        this.dirty = true;\n      }\n\n      if (this.group && this.stateProperties.indexOf(key) > -1) {\n        this.group.set('dirty', true);\n      }\n\n      if (key === 'width' || key === 'height') {\n        this.minScaleLimit = Math.min(0.1, 1 / Math.max(this.width, this.height));\n      }\n\n      return this;\n    },\n\n    /**\n     * This callback function is called by the parent group of an object every\n     * time a non-delegated property changes on the group. It is passed the key\n     * and value as parameters. Not adding in this function's signature to avoid\n     * Travis build error about unused variables.\n     */\n    setOnGroup: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n    /**\n     * Sets sourcePath of an object\n     * @param {String} value Value to set sourcePath to\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setSourcePath: function(value) {\n      this.sourcePath = value;\n      return this;\n    },\n\n    /**\n     * Retrieves viewportTransform from Object's canvas if possible\n     * @method getViewportTransform\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    getViewportTransform: function() {\n      if (this.canvas && this.canvas.viewportTransform) {\n        return this.canvas.viewportTransform;\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /*\n     * @private\n     * return if the object would be visible in rendering\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    isNotVisible: function() {\n      return this.opacity === 0 || (this.width === 0 && this.height === 0) || !this.visible;\n    },\n\n    /**\n     * Renders an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    render: function(ctx, noTransform) {\n      // do not render if width/height are zeros or object is not visible\n      if (this.isNotVisible()) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      ctx.save();\n      //setup fill rule for current object\n      this._setupCompositeOperation(ctx);\n      this.drawSelectionBackground(ctx);\n      if (!noTransform) {\n        this.transform(ctx);\n      }\n      this._setOpacity(ctx);\n      this._setShadow(ctx);\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      if (this.shouldCache(noTransform)) {\n        if (!this._cacheCanvas) {\n          this._createCacheCanvas();\n        }\n        if (this.isCacheDirty(noTransform)) {\n          this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\n          this.drawObject(this._cacheContext, noTransform);\n          this.dirty = false;\n        }\n        this.drawCacheOnCanvas(ctx);\n      }\n      else {\n        this.dirty = false;\n        this.drawObject(ctx, noTransform);\n        if (noTransform && this.objectCaching && this.statefullCache) {\n          this.saveState({ propertySet: 'cacheProperties' });\n        }\n      }\n      this.clipTo && ctx.restore();\n      ctx.restore();\n    },\n\n    /**\n     * When returns `true`, force the object to have its own cache, even if it is inside a group\n     * it may be needed when your object behave in a particular way on the cache and always needs\n     * its own isolated canvas to render correctly.\n     * This function is created to be subclassed by custom classes.\n     * since 1.7.12\n     * @type function\n     * @return false\n     */\n    needsItsOwnCache: function() {\n      return false;\n    },\n\n    /**\n     * Decide if the object should cache or not.\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @param {Boolean} noTransform if rendereing in pathGroup, caching is not supported at object level\n     * @return {Boolean}\n     */\n    shouldCache: function(noTransform) {\n      return !noTransform && this.objectCaching &&\n      (!this.group || this.needsItsOwnCache() || !this.group.isCaching());\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * used by Group.shouldCache to know if child has a shadow recursively\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    drawObject: function(ctx, noTransform) {\n      this._renderBackground(ctx);\n      this._setStrokeStyles(ctx);\n      this._setFillStyles(ctx);\n      this._render(ctx, noTransform);\n    },\n\n    /**\n     * Paint the cached copy of the object on the target context.\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawCacheOnCanvas: function(ctx) {\n      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n      ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\n    },\n\n    /**\n     * Check if cache is dirty\n     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n     * on parent canvas.\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.isNotVisible()) {\n        return false;\n      }\n      if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\n        // in this case the context is already cleared.\n        return true;\n      }\n      else {\n        if (this.dirty || (this.statefullCache && this.hasStateChanged('cacheProperties'))) {\n          if (this._cacheCanvas && !skipCanvas) {\n            var width = this.cacheWidth / this.zoomX;\n            var height = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Draws a background for the object big as its untrasformed dimensions\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n      var dim = this._getNonTransformedDimensions();\n      ctx.fillStyle = this.backgroundColor;\n\n      ctx.fillRect(\n        -dim.x / 2,\n        -dim.y / 2,\n        dim.x,\n        dim.y\n      );\n      // if there is background color no other shadows\n      // should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setOpacity: function(ctx) {\n      ctx.globalAlpha *= this.opacity;\n    },\n\n    _setStrokeStyles: function(ctx) {\n      if (this.stroke) {\n        ctx.lineWidth = this.strokeWidth;\n        ctx.lineCap = this.strokeLineCap;\n        ctx.lineJoin = this.strokeLineJoin;\n        ctx.miterLimit = this.strokeMiterLimit;\n        ctx.strokeStyle = this.stroke.toLive\n          ? this.stroke.toLive(ctx, this)\n          : this.stroke;\n      }\n    },\n\n    _setFillStyles: function(ctx) {\n      if (this.fill) {\n        ctx.fillStyle = this.fill.toLive\n          ? this.fill.toLive(ctx, this)\n          : this.fill;\n      }\n    },\n\n    /**\n     * @private\n     * Sets line dash\n     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n     * @param {Array} dashArray array representing dashes\n     * @param {Function} alternative function to call if browaser does not support lineDash\n     */\n    _setLineDash: function(ctx, dashArray, alternative) {\n      if (!dashArray) {\n        return;\n      }\n      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n      if (1 & dashArray.length) {\n        dashArray.push.apply(dashArray, dashArray);\n      }\n      if (supportsLineDash) {\n        ctx.setLineDash(dashArray);\n      }\n      else {\n        alternative && alternative(ctx);\n      }\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderControls: function(ctx) {\n      if (!this.active || (this.group && this.group !== this.canvas.getActiveGroup())) {\n        return;\n      }\n\n      var vpt = this.getViewportTransform(),\n          matrix = this.calcTransformMatrix(),\n          options;\n      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n      options = fabric.util.qrDecompose(matrix);\n\n      ctx.save();\n      ctx.translate(options.translateX, options.translateY);\n      ctx.lineWidth = 1 * this.borderScaleFactor;\n      if (!this.group) {\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      }\n      if (this.group && this.group === this.canvas.getActiveGroup()) {\n        ctx.rotate(degreesToRadians(options.angle));\n        this.drawBordersInGroup(ctx, options);\n      }\n      else {\n        ctx.rotate(degreesToRadians(this.angle));\n        this.drawBorders(ctx);\n      }\n      this.drawControls(ctx);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      var multX = (this.canvas && this.canvas.viewportTransform[0]) || 1,\n          multY = (this.canvas && this.canvas.viewportTransform[3]) || 1,\n          scaling = this.getObjectScaling();\n      if (this.canvas && this.canvas._isRetinaScaling()) {\n        multX *= fabric.devicePixelRatio;\n        multY *= fabric.devicePixelRatio;\n      }\n      ctx.shadowColor = this.shadow.color;\n      ctx.shadowBlur = this.shadow.blur * (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n      ctx.shadowOffsetX = this.shadow.offsetX * multX * scaling.scaleX;\n      ctx.shadowOffsetY = this.shadow.offsetY * multY * scaling.scaleY;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _removeShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      ctx.shadowColor = '';\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} filler fabric.Pattern or fabric.Gradient\n     */\n    _applyPatternGradientTransform: function(ctx, filler) {\n      if (!filler.toLive) {\n        return;\n      }\n      var transform = filler.gradientTransform || filler.patternTransform;\n      if (transform) {\n        ctx.transform.apply(ctx, transform);\n      }\n      var offsetX = -this.width / 2 + filler.offsetX || 0,\n          offsetY = -this.height / 2 + filler.offsetY || 0;\n      ctx.translate(offsetX, offsetY);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderFill: function(ctx) {\n      if (!this.fill) {\n        return;\n      }\n\n      ctx.save();\n      this._applyPatternGradientTransform(ctx, this.fill);\n      if (this.fillRule === 'evenodd') {\n        ctx.fill('evenodd');\n      }\n      else {\n        ctx.fill();\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderStroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n      this._applyPatternGradientTransform(ctx, this.stroke);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Clones an instance, some objects are async, so using callback method will work for every object.\n     * Using the direct return does not work for images and groups.\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {fabric.Object} clone of an instance\n     */\n    clone: function(callback, propertiesToInclude) {\n      if (this.constructor.fromObject) {\n        return this.constructor.fromObject(this.toObject(propertiesToInclude), callback);\n      }\n      return new fabric.Object(this.toObject(propertiesToInclude));\n    },\n\n    /**\n     * Creates an instance of fabric.Image out of an object\n     * @param {Function} callback callback, invoked with an instance as a first argument\n     * @param {Object} [options] for clone as image, passed to toDataURL\n     * @param {Boolean} [options.enableRetinaScaling] enable retina scaling for the cloned image\n     * @return {fabric.Object} thisArg\n     */\n    cloneAsImage: function(callback, options) {\n      var dataUrl = this.toDataURL(options);\n      fabric.util.loadImage(dataUrl, function(img) {\n        if (callback) {\n          callback(new fabric.Image(img));\n        }\n      });\n      return this;\n    },\n\n    /**\n     * Converts an object into a data-url-like string\n     * @param {Object} options Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetina] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toDataURL: function(options) {\n      options || (options = { });\n\n      var el = fabric.util.createCanvasElement(),\n          boundingRect = this.getBoundingRect();\n\n      el.width = boundingRect.width;\n      el.height = boundingRect.height;\n      fabric.util.wrapElement(el, 'div');\n      var canvas = new fabric.StaticCanvas(el, { enableRetinaScaling: options.enableRetinaScaling });\n      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n      if (options.format === 'jpg') {\n        options.format = 'jpeg';\n      }\n\n      if (options.format === 'jpeg') {\n        canvas.backgroundColor = '#fff';\n      }\n\n      var origParams = {\n        active: this.get('active'),\n        left: this.getLeft(),\n        top: this.getTop()\n      };\n\n      this.set('active', false);\n      this.setPositionByOrigin(new fabric.Point(canvas.getWidth() / 2, canvas.getHeight() / 2), 'center', 'center');\n\n      var originalCanvas = this.canvas;\n      canvas.add(this);\n      var data = canvas.toDataURL(options);\n\n      this.set(origParams).setCoords();\n      this.canvas = originalCanvas;\n\n      canvas.dispose();\n      canvas = null;\n\n      return data;\n    },\n\n    /**\n     * Returns true if specified type is identical to the type of an instance\n     * @param {String} type Type to check against\n     * @return {Boolean}\n     */\n    isType: function(type) {\n      return this.type === type;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance (is 1 unless subclassed)\n     */\n    complexity: function() {\n      return 1;\n    },\n\n    /**\n     * Returns a JSON representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} JSON\n     */\n    toJSON: function(propertiesToInclude) {\n      // delegate, not alias\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * Sets gradient (fill or stroke) of an object\n     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n     * @param {String} property Property name 'stroke' or 'fill'\n     * @param {Object} [options] Options object\n     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n     * @param {Number} [options.x1=0] x-coordinate of start point\n     * @param {Number} [options.y1=0] y-coordinate of start point\n     * @param {Number} [options.x2=0] x-coordinate of end point\n     * @param {Number} [options.y2=0] y-coordinate of end point\n     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n     * @param {Object} [options.gradientTransform] transforMatrix for gradient\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n     * @example <caption>Set linear gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'linear',\n     *   x1: -object.width / 2,\n     *   y1: 0,\n     *   x2: object.width / 2,\n     *   y2: 0,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     * @example <caption>Set radial gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'radial',\n     *   x1: 0,\n     *   y1: 0,\n     *   x2: 0,\n     *   y2: 0,\n     *   r1: object.width / 2,\n     *   r2: 10,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     */\n    setGradient: function(property, options) {\n      options || (options = { });\n\n      var gradient = { colorStops: [] };\n\n      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n      gradient.coords = {\n        x1: options.x1,\n        y1: options.y1,\n        x2: options.x2,\n        y2: options.y2\n      };\n\n      if (options.r1 || options.r2) {\n        gradient.coords.r1 = options.r1;\n        gradient.coords.r2 = options.r2;\n      }\n\n      gradient.gradientTransform = options.gradientTransform;\n      fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\n\n      return this.set(property, fabric.Gradient.forObject(this, gradient));\n    },\n\n    /**\n     * Sets pattern fill of an object\n     * @param {Object} options Options object\n     * @param {(String|HTMLImageElement)} options.source Pattern source\n     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n     * @example <caption>Set pattern</caption>\n     * fabric.util.loadImage('http://fabricjs.com/assets/escheresque_ste.png', function(img) {\n     *   object.setPatternFill({\n     *     source: img,\n     *     repeat: 'repeat'\n     *   });\n     *   canvas.renderAll();\n     * });\n     */\n    setPatternFill: function(options) {\n      return this.set('fill', new fabric.Pattern(options));\n    },\n\n    /**\n     * Sets {@link fabric.Object#shadow|shadow} of an object\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n     * @param {Number} [options.blur=0] Shadow blur\n     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n     * @param {Number} [options.offsetY=0] Shadow vertical offset\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n     * @example <caption>Set shadow with string notation</caption>\n     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n     * canvas.renderAll();\n     * @example <caption>Set shadow with object notation</caption>\n     * object.setShadow({\n     *   color: 'red',\n     *   blur: 10,\n     *   offsetX: 20,\n     *   offsetY: 20\n     * });\n     * canvas.renderAll();\n     */\n    setShadow: function(options) {\n      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n    },\n\n    /**\n     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n     * @param {String} color Color value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setColor: function(color) {\n      this.set('fill', color);\n      return this;\n    },\n\n    /**\n     * Sets \"angle\" of an instance\n     * @param {Number} angle Angle value (in degrees)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setAngle: function(angle) {\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\n      if (shouldCenterOrigin) {\n        this._setOriginToCenter();\n      }\n\n      this.set('angle', angle);\n\n      if (shouldCenterOrigin) {\n        this._resetOrigin();\n      }\n\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerH: function () {\n      this.canvas && this.canvas.centerObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterH: function () {\n      this.canvas && this.canvas.viewportCenterObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerV: function () {\n      this.canvas && this.canvas.centerObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterV: function () {\n      this.canvas && this.canvas.viewportCenterObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally on canvas to which is was added last\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    center: function () {\n      this.canvas && this.canvas.centerObject(this);\n      return this;\n    },\n\n    /**\n     * Centers object on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenter: function () {\n      this.canvas && this.canvas.viewportCenterObject(this);\n      return this;\n    },\n\n    /**\n     * Removes object from canvas to which it was added last\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    remove: function() {\n      if (this.canvas) {\n        if (this.group && this.group === this.canvas._activeGroup) {\n          this.group.remove(this);\n        }\n        this.canvas.remove(this);\n      }\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a pointer relative to an object\n     * @param {Event} e Event to operate upon\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n     * @return {Object} Coordinates of a pointer (x, y)\n     */\n    getLocalPointer: function(e, pointer) {\n      pointer = pointer || this.canvas.getPointer(e);\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\n          objectLeftTop = this._getLeftTopCoords();\n      if (this.angle) {\n        pClicked = fabric.util.rotatePoint(\n          pClicked, objectLeftTop, degreesToRadians(-this.angle));\n      }\n      return {\n        x: pClicked.x - objectLeftTop.x,\n        y: pClicked.y - objectLeftTop.y\n      };\n    },\n\n    /**\n     * Sets canvas globalCompositeOperation for specific object\n     * custom composition operation for the particular object can be specifed using globalCompositeOperation property\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n     */\n    _setupCompositeOperation: function (ctx) {\n      if (this.globalCompositeOperation) {\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\n      }\n    }\n  });\n\n  fabric.util.createAccessors(fabric.Object);\n\n  /**\n   * Alias for {@link fabric.Object.prototype.setAngle}\n   * @alias rotate -> setAngle\n   * @memberOf fabric.Object\n   */\n  fabric.Object.prototype.rotate = fabric.Object.prototype.setAngle;\n\n  extend(fabric.Object.prototype, fabric.Observable);\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type Number\n   */\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\n  fabric.Object._fromObject = function(className, object, callback, forceAsync, extraParam) {\n    var klass = fabric[className];\n    object = clone(object, true);\n    if (forceAsync) {\n      fabric.util.enlivenPatterns([object.fill, object.stroke], function(patterns) {\n        if (typeof patterns[0] !== 'undefined') {\n          object.fill = patterns[0];\n        }\n        if (typeof patterns[1] !== 'undefined') {\n          object.stroke = patterns[1];\n        }\n        var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n        callback && callback(instance);\n      });\n    }\n    else {\n      var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n      callback && callback(instance);\n      return instance;\n    }\n  };\n\n  /**\n   * Unique id used internally when creating SVG elements\n   * @static\n   * @memberOf fabric.Object\n   * @type Number\n   */\n  fabric.Object.__uid = 0;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      originXOffset = {\n        left: -0.5,\n        center: 0,\n        right: 0.5\n      },\n      originYOffset = {\n        top: -0.5,\n        center: 0,\n        bottom: 0.5\n      };\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n      var x = point.x,\n          y = point.y,\n          offsetX, offsetY, dim;\n\n      if (typeof fromOriginX === 'string') {\n        fromOriginX = originXOffset[fromOriginX];\n      }\n      else {\n        fromOriginX -= 0.5;\n      }\n\n      if (typeof toOriginX === 'string') {\n        toOriginX = originXOffset[toOriginX];\n      }\n      else {\n        toOriginX -= 0.5;\n      }\n\n      offsetX = toOriginX - fromOriginX;\n\n      if (typeof fromOriginY === 'string') {\n        fromOriginY = originYOffset[fromOriginY];\n      }\n      else {\n        fromOriginY -= 0.5;\n      }\n\n      if (typeof toOriginY === 'string') {\n        toOriginY = originYOffset[toOriginY];\n      }\n      else {\n        toOriginY -= 0.5;\n      }\n\n      offsetY = toOriginY - fromOriginY;\n\n      if (offsetX || offsetY) {\n        dim = this._getTransformedDimensions();\n        x = point.x + offsetX * dim.x;\n        y = point.y + offsetY * dim.y;\n      }\n\n      return new fabric.Point(x, y);\n    },\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToCenterPoint: function(point, originX, originY) {\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n     * @param {fabric.Point} center The point which corresponds to center of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToOriginPoint: function(center, originX, originY) {\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Returns the real center coordinates of the object\n     * @return {fabric.Point}\n     */\n    getCenterPoint: function() {\n      var leftTop = new fabric.Point(this.left, this.top);\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n    },\n\n    /**\n     * Returns the coordinates of the object based on center coordinates\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @return {fabric.Point}\n     */\n    // getOriginPoint: function(center) {\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n    // },\n\n    /**\n     * Returns the coordinates of the object as if it has a different origin\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    getPointByOrigin: function(originX, originY) {\n      var center = this.getCenterPoint();\n      return this.translateToOriginPoint(center, originX, originY);\n    },\n\n    /**\n     * Returns the point in local coordinates\n     * @param {fabric.Point} point The point relative to the global coordinate system\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    toLocalPoint: function(point, originX, originY) {\n      var center = this.getCenterPoint(),\n          p, p2;\n\n      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      }\n      else {\n        p = new fabric.Point(this.left, this.top);\n      }\n\n      p2 = new fabric.Point(point.x, point.y);\n      if (this.angle) {\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n      }\n      return p2.subtractEquals(p);\n    },\n\n    /**\n     * Returns the point in global coordinates\n     * @param {fabric.Point} The point relative to the local coordinate system\n     * @return {fabric.Point}\n     */\n    // toGlobalPoint: function(point) {\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n    // },\n\n    /**\n     * Sets the position of the object taking into consideration the object's origin\n     * @param {fabric.Point} pos The new position of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {void}\n     */\n    setPositionByOrigin: function(pos, originX, originY) {\n      var center = this.translateToCenterPoint(pos, originX, originY),\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\n\n      this.set('left', position.x);\n      this.set('top', position.y);\n    },\n\n    /**\n     * @param {String} to One of 'left', 'center', 'right'\n     */\n    adjustPosition: function(to) {\n      var angle = degreesToRadians(this.angle),\n          hypotFull = this.getWidth(),\n          xFull = Math.cos(angle) * hypotFull,\n          yFull = Math.sin(angle) * hypotFull,\n          offsetFrom, offsetTo;\n\n      //TODO: this function does not consider mixed situation like top, center.\n      if (typeof this.originX === 'string') {\n        offsetFrom = originXOffset[this.originX];\n      }\n      else {\n        offsetFrom = this.originX - 0.5;\n      }\n      if (typeof to === 'string') {\n        offsetTo = originXOffset[to];\n      }\n      else {\n        offsetTo = to - 0.5;\n      }\n      this.left += xFull * (offsetTo - offsetFrom);\n      this.top += yFull * (offsetTo - offsetFrom);\n      this.setCoords();\n      this.originX = to;\n    },\n\n    /**\n     * Sets the origin/position of the object to it's center point\n     * @private\n     * @return {void}\n     */\n    _setOriginToCenter: function() {\n      this._originalOriginX = this.originX;\n      this._originalOriginY = this.originY;\n\n      var center = this.getCenterPoint();\n\n      this.originX = 'center';\n      this.originY = 'center';\n\n      this.left = center.x;\n      this.top = center.y;\n    },\n\n    /**\n     * Resets the origin/position of the object to it's original origin\n     * @private\n     * @return {void}\n     */\n    _resetOrigin: function() {\n      var originPoint = this.translateToOriginPoint(\n        this.getCenterPoint(),\n        this._originalOriginX,\n        this._originalOriginY);\n\n      this.originX = this._originalOriginX;\n      this.originY = this._originalOriginY;\n\n      this.left = originPoint.x;\n      this.top = originPoint.y;\n\n      this._originalOriginX = null;\n      this._originalOriginY = null;\n    },\n\n    /**\n     * @private\n     */\n    _getLeftTopCoords: function() {\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n    },\n\n    /**\n    * Callback; invoked right before object is about to go from active to inactive\n    */\n    onDeselect: function() {\n      /* NOOP */\n    }\n  });\n\n})();\n\n\n(function() {\n\n  function getCoords(coords) {\n    return [\n      new fabric.Point(coords.tl.x, coords.tl.y),\n      new fabric.Point(coords.tr.x, coords.tr.y),\n      new fabric.Point(coords.br.x, coords.br.y),\n      new fabric.Point(coords.bl.x, coords.bl.y)\n    ];\n  }\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      multiplyMatrices = fabric.util.multiplyTransformMatrices;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Describe object's corner position in canvas element coordinates.\n     * properties are tl,mt,tr,ml,mr,bl,mb,br,mtr for the main controls.\n     * each property is an object with x, y and corner.\n     * The `corner` property contains in a similar manner the 4 points of the\n     * interactive area of the corner.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, viewportTransform, top, left, padding.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords;\n     * @memberOf fabric.Object.prototype\n     */\n    oCoords: null,\n\n    /**\n     * Describe object's corner position in canvas object absolute coordinates\n     * properties are tl,tr,bl,br and describe the four main corner.\n     * each property is an object with x, y, instance of Fabric.Point.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, top, left.\n     * Those coordinates are usefull to understand where an object is. They get updated\n     * with oCoords but they do not need to be updated when zoom or panning change.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords(true);\n     * @memberOf fabric.Object.prototype\n     */\n    aCoords: null,\n\n    /**\n     * return correct set of coordinates for intersection\n     */\n    getCoords: function(absolute, calculate) {\n      if (!this.oCoords) {\n        this.setCoords();\n      }\n      var coords = absolute ? this.aCoords : this.oCoords;\n      return getCoords(calculate ? this.calcCoords(absolute) : coords);\n    },\n\n    /**\n     * Checks if object intersects with an area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with an area formed by 2 points\n     */\n    intersectsWithRect: function(pointTL, pointBR, absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate),\n          intersection = fabric.Intersection.intersectPolygonRectangle(\n            coords,\n            pointTL,\n            pointBR\n          );\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object intersects with another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with another object\n     */\n    intersectsWithObject: function(other, absolute, calculate) {\n      var intersection = fabric.Intersection.intersectPolygonPolygon(\n            this.getCoords(absolute, calculate),\n            other.getCoords(absolute, calculate)\n          );\n\n      return intersection.status === 'Intersection'\n        || other.isContainedWithinObject(this, absolute, calculate)\n        || this.isContainedWithinObject(other, absolute, calculate);\n    },\n\n    /**\n     * Checks if object is fully contained within area of another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area of another object\n     */\n    isContainedWithinObject: function(other, absolute, calculate) {\n      var points = this.getCoords(absolute, calculate),\n          i = 0, lines = other._getImageLines(\n            calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords\n          );\n      for (; i < 4; i++) {\n        if (!other.containsPoint(points[i], lines)) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Checks if object is fully contained within area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\n     */\n    isContainedWithinRect: function(pointTL, pointBR, absolute, calculate) {\n      var boundingRect = this.getBoundingRect(absolute, calculate);\n\n      return (\n        boundingRect.left >= pointTL.x &&\n        boundingRect.left + boundingRect.width <= pointBR.x &&\n        boundingRect.top >= pointTL.y &&\n        boundingRect.top + boundingRect.height <= pointBR.y\n      );\n    },\n\n    /**\n     * Checks if point is inside the object\n     * @param {fabric.Point} point Point to check against\n     * @param {Object} [lines] object returned from @method _getImageLines\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if point is inside the object\n     */\n    containsPoint: function(point, lines, absolute, calculate) {\n      var lines = lines || this._getImageLines(\n        calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords\n      ),\n          xPoints = this._findCrossPoints(point, lines);\n\n      // if xPoints is odd then point is inside the object\n      return (xPoints !== 0 && xPoints % 2 === 1);\n    },\n\n    /**\n     * Checks if object is contained within the canvas with current viewportTransform\n     * the check is done stopping at first point that appear on screen\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within canvas\n     */\n    isOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      var points = this.getCoords(true, calculate), point;\n      for (var i = 0; i < 4; i++) {\n        point = points[i];\n        if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {\n          return true;\n        }\n      }\n      // no points on screen, check intersection with absolute coordinates\n      if (this.intersectsWithRect(pointTL, pointBR, true)) {\n        return true;\n      }\n      // worst case scenario the object is so big that contanins the screen\n      var centerPoint = { x: (pointTL.x + pointBR.x) / 2, y: (pointTL.y + pointBR.y) / 2 };\n      if (this.containsPoint(centerPoint, null, true)) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\n     * @private\n     * @param {Object} oCoords Coordinates of the object corners\n     */\n    _getImageLines: function(oCoords) {\n      return {\n        topline: {\n          o: oCoords.tl,\n          d: oCoords.tr\n        },\n        rightline: {\n          o: oCoords.tr,\n          d: oCoords.br\n        },\n        bottomline: {\n          o: oCoords.br,\n          d: oCoords.bl\n        },\n        leftline: {\n          o: oCoords.bl,\n          d: oCoords.tl\n        }\n      };\n    },\n\n    /**\n     * Helper method to determine how many cross points are between the 4 object edges\n     * and the horizontal line determined by a point on canvas\n     * @private\n     * @param {fabric.Point} point Point to check\n     * @param {Object} lines Coordinates of the object being evaluated\n     */\n     // remove yi, not used but left code here just in case.\n    _findCrossPoints: function(point, lines) {\n      var b1, b2, a1, a2, xi, // yi,\n          xcount = 0,\n          iLine;\n\n      for (var lineKey in lines) {\n        iLine = lines[lineKey];\n        // optimisation 1: line below point. no cross\n        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n          continue;\n        }\n        // optimisation 2: line above point. no cross\n        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n          continue;\n        }\n        // optimisation 3: vertical line case\n        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n          xi = iLine.o.x;\n          // yi = point.y;\n        }\n        // calculate the intersection point\n        else {\n          b1 = 0;\n          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n          a1 = point.y - b1 * point.x;\n          a2 = iLine.o.y - b2 * iLine.o.x;\n\n          xi = -(a1 - a2) / (b1 - b2);\n          // yi = a1 + b1 * xi;\n        }\n        // dont count xi < point.x cases\n        if (xi >= point.x) {\n          xcount += 1;\n        }\n        // optimisation 4: specific for square images\n        if (xcount === 2) {\n          break;\n        }\n      }\n      return xcount;\n    },\n\n    /**\n     * Returns width of an object's bounding rectangle\n     * @deprecated since 1.0.4\n     * @return {Number} width value\n     */\n    getBoundingRectWidth: function() {\n      return this.getBoundingRect().width;\n    },\n\n    /**\n     * Returns height of an object's bounding rectangle\n     * @deprecated since 1.0.4\n     * @return {Number} height value\n     */\n    getBoundingRectHeight: function() {\n      return this.getBoundingRect().height;\n    },\n\n    /**\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n     * the box is intented as aligned to axis of canvas.\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Object} Object with left, top, width, height properties\n     */\n    getBoundingRect: function(absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate);\n      return fabric.util.makeBoundingBoxFromPoints(coords);\n    },\n\n    /**\n     * Returns width of an object bounding box counting transformations\n     * @return {Number} width value\n     */\n    getWidth: function() {\n      return this._getTransformedDimensions().x;\n    },\n\n    /**\n     * Returns height of an object bounding box counting transformations\n     * to be renamed in 2.0\n     * @return {Number} height value\n     */\n    getHeight: function() {\n      return this._getTransformedDimensions().y;\n    },\n\n    /**\n     * Makes sure the scale is valid and modifies it if necessary\n     * @private\n     * @param {Number} value\n     * @return {Number}\n     */\n    _constrainScale: function(value) {\n      if (Math.abs(value) < this.minScaleLimit) {\n        if (value < 0) {\n          return -this.minScaleLimit;\n        }\n        else {\n          return this.minScaleLimit;\n        }\n      }\n      return value;\n    },\n\n    /**\n     * Scales an object (equally by x and y)\n     * @param {Number} value Scale factor\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scale: function(value) {\n      value = this._constrainScale(value);\n\n      if (value < 0) {\n        this.flipX = !this.flipX;\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n\n      this.scaleX = value;\n      this.scaleY = value;\n      return this.setCoords();\n    },\n\n    /**\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New width value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToWidth: function(value) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect().width / this.getWidth();\n      return this.scale(value / this.width / boundingRectFactor);\n    },\n\n    /**\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New height value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToHeight: function(value) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect().height / this.getHeight();\n      return this.scale(value / this.height / boundingRectFactor);\n    },\n\n    /**\n     * Calculate and returns the .coords of an object.\n     * @return {Object} Object with tl, tr, br, bl ....\n     * @chainable\n     */\n    calcCoords: function(absolute) {\n      var theta = degreesToRadians(this.angle),\n          vpt = this.getViewportTransform(),\n          dim = absolute ? this._getTransformedDimensions() : this._calculateCurrentDimensions(),\n          currentWidth = dim.x, currentHeight = dim.y,\n          sinTh = Math.sin(theta),\n          cosTh = Math.cos(theta),\n          _angle = currentWidth > 0 ? Math.atan(currentHeight / currentWidth) : 0,\n          _hypotenuse = (currentWidth / Math.cos(_angle)) / 2,\n          offsetX = Math.cos(_angle + theta) * _hypotenuse,\n          offsetY = Math.sin(_angle + theta) * _hypotenuse,\n          center = this.getCenterPoint(),\n          // offset added for rotate and scale actions\n          coords = absolute ? center : fabric.util.transformPoint(center, vpt),\n          tl  = new fabric.Point(coords.x - offsetX, coords.y - offsetY),\n          tr  = new fabric.Point(tl.x + (currentWidth * cosTh), tl.y + (currentWidth * sinTh)),\n          bl  = new fabric.Point(tl.x - (currentHeight * sinTh), tl.y + (currentHeight * cosTh)),\n          br  = new fabric.Point(coords.x + offsetX, coords.y + offsetY);\n      if (!absolute) {\n        var ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n            mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n            mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n            mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n            mtr = new fabric.Point(mt.x + sinTh * this.rotatingPointOffset, mt.y - cosTh * this.rotatingPointOffset);\n      }\n\n      // debugging\n\n      /* setTimeout(function() {\n         canvas.contextTop.fillStyle = 'green';\n         canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n         canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n         canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n         canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n         canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n         canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n         canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n         canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n         canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n       }, 50); */\n\n      var coords = {\n        // corners\n        tl: tl, tr: tr, br: br, bl: bl,\n      };\n      if (!absolute) {\n        // middle\n        coords.ml = ml;\n        coords.mt = mt;\n        coords.mr = mr;\n        coords.mb = mb;\n        // rotating point\n        coords.mtr = mtr;\n      }\n      return coords;\n    },\n\n    /**\n     * Sets corner position coordinates based on current angle, width and height\n     * See https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords\n     * @param {Boolean} [ignoreZoom] set oCoords with or without the viewport transform.\n     * @param {Boolean} [skipAbsolute] skip calculation of aCoords, usefull in setViewportTransform\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setCoords: function(ignoreZoom, skipAbsolute) {\n      this.oCoords = this.calcCoords(ignoreZoom);\n      if (!skipAbsolute) {\n        this.aCoords = this.calcCoords(true);\n      }\n\n      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n      ignoreZoom || (this._setCornerCoords && this._setCornerCoords());\n\n      return this;\n    },\n\n    /**\n     * calculate rotation matrix of an object\n     * @return {Array} rotation matrix for the object\n     */\n    _calcRotateMatrix: function() {\n      if (this.angle) {\n        var theta = degreesToRadians(this.angle), cos = Math.cos(theta), sin = Math.sin(theta);\n        // trying to keep rounding error small, ugly but it works.\n        if (cos === 6.123233995736766e-17 || cos === -1.8369701987210297e-16) {\n          cos = 0;\n        }\n        return [cos, sin, -sin, cos, 0, 0];\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /**\n     * calculate trasform Matrix that represent current transformation from\n     * object properties.\n     * @param {Boolean} [skipGroup] return transformMatrix for object and not go upward with parents\n     * @return {Array} matrix Transform Matrix for the object\n     */\n    calcTransformMatrix: function(skipGroup) {\n      var center = this.getCenterPoint(),\n          translateMatrix = [1, 0, 0, 1, center.x, center.y],\n          rotateMatrix,\n          dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true),\n          matrix;\n      if (this.group && !skipGroup) {\n        matrix = multiplyMatrices(this.group.calcTransformMatrix(), translateMatrix);\n      }\n      else {\n        matrix = translateMatrix;\n      }\n      if (this.angle) {\n        rotateMatrix = this._calcRotateMatrix();\n        matrix = multiplyMatrices(matrix, rotateMatrix);\n      }\n      matrix = multiplyMatrices(matrix, dimensionMatrix);\n      return matrix;\n    },\n\n    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n      var skewMatrix,\n          scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),\n          scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),\n          scaleMatrix = [scaleX, 0, 0, scaleY, 0, 0];\n      if (skewX) {\n        skewMatrix = [1, 0, Math.tan(degreesToRadians(skewX)), 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      if (skewY) {\n        skewMatrix = [1, Math.tan(degreesToRadians(skewY)), 0, 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      return scaleMatrix;\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getNonTransformedDimensions: function() {\n      var strokeWidth = this.strokeWidth,\n          w = this.width + strokeWidth,\n          h = this.height + strokeWidth;\n      return { x: w, y: h };\n    },\n\n    /*\n     * Calculate object bounding boxdimensions from its properties scale, skew.\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getTransformedDimensions: function(skewX, skewY) {\n      if (typeof skewX === 'undefined') {\n        skewX = this.skewX;\n      }\n      if (typeof skewY === 'undefined') {\n        skewY = this.skewY;\n      }\n      var dimensions = this._getNonTransformedDimensions(),\n          dimX = dimensions.x / 2, dimY = dimensions.y / 2,\n          points = [\n            {\n              x: -dimX,\n              y: -dimY\n            },\n            {\n              x: dimX,\n              y: -dimY\n            },\n            {\n              x: -dimX,\n              y: dimY\n            },\n            {\n              x: dimX,\n              y: dimY\n            }],\n          i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),\n          bbox;\n      for (i = 0; i < points.length; i++) {\n        points[i] = fabric.util.transformPoint(points[i], transformMatrix);\n      }\n      bbox = fabric.util.makeBoundingBoxFromPoints(points);\n      return { x: bbox.width, y: bbox.height };\n    },\n\n    /*\n     * Calculate object dimensions for controls. include padding and canvas zoom\n     * private\n     */\n    _calculateCurrentDimensions: function()  {\n      var vpt = this.getViewportTransform(),\n          dim = this._getTransformedDimensions(),\n          p = fabric.util.transformPoint(dim, vpt, true);\n\n      return p.scalarAdd(2 * this.padding);\n    },\n  });\n})();\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * Moves an object to the bottom of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendToBack: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n    }\n    else {\n      this.canvas.sendToBack(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to the top of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringToFront: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n    }\n    else {\n      this.canvas.bringToFront(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object down in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendBackwards: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.sendBackwards(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object up in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringForward: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.bringForward(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to specified level in stack of drawn objects\n   * @param {Number} index New position of object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  moveTo: function(index) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n    }\n    else {\n      this.canvas.moveTo(this, index);\n    }\n    return this;\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n\n  function getSvgColorString(prop, value) {\n    if (!value) {\n      return prop + ': none; ';\n    }\n    else if (value.toLive) {\n      return prop + ': url(#SVGID_' + value.id + '); ';\n    }\n    else {\n      var color = new fabric.Color(value),\n          str = prop + ': ' + color.toRgb() + '; ',\n          opacity = color.getAlpha();\n      if (opacity !== 1) {\n        //change the color in rgb + opacity\n        str += prop + '-opacity: ' + opacity.toString() + '; ';\n      }\n      return str;\n    }\n  }\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n\n      var fillRule = this.fillRule,\n          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n          visibility = this.visible ? '' : ' visibility: hidden;',\n          filter = skipShadow ? '' : this.getSvgFilter(),\n          fill = getSvgColorString('fill', this.fill),\n          stroke = getSvgColorString('stroke', this.stroke);\n\n      return [\n        stroke,\n        'stroke-width: ', strokeWidth, '; ',\n        'stroke-dasharray: ', strokeDashArray, '; ',\n        'stroke-linecap: ', strokeLineCap, '; ',\n        'stroke-linejoin: ', strokeLineJoin, '; ',\n        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n        fill,\n        'fill-rule: ', fillRule, '; ',\n        'opacity: ', opacity, ';',\n        filter,\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns filter for svg shadow\n     * @return {String}\n     */\n    getSvgFilter: function() {\n      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n    },\n\n    /**\n     * Returns id attribute for svg output\n     * @return {String}\n     */\n    getSvgId: function() {\n      return this.id ? 'id=\"' + this.id + '\" ' : '';\n    },\n\n    /**\n     * Returns transform-string for svg-export\n     * @return {String}\n     */\n    getSvgTransform: function() {\n      if (this.group && this.group.type === 'path-group') {\n        return '';\n      }\n      var toFixed = fabric.util.toFixed,\n          angle = this.getAngle(),\n          skewX = (this.getSkewX() % 360),\n          skewY = (this.getSkewY() % 360),\n          center = this.getCenterPoint(),\n\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          translatePart = this.type === 'path-group' ? '' : 'translate(' +\n                            toFixed(center.x, NUM_FRACTION_DIGITS) +\n                            ' ' +\n                            toFixed(center.y, NUM_FRACTION_DIGITS) +\n                          ')',\n\n          anglePart = angle !== 0\n            ? (' rotate(' + toFixed(angle, NUM_FRACTION_DIGITS) + ')')\n            : '',\n\n          scalePart = (this.scaleX === 1 && this.scaleY === 1)\n            ? '' :\n            (' scale(' +\n              toFixed(this.scaleX, NUM_FRACTION_DIGITS) +\n              ' ' +\n              toFixed(this.scaleY, NUM_FRACTION_DIGITS) +\n            ')'),\n\n          skewXPart = skewX !== 0 ? ' skewX(' + toFixed(skewX, NUM_FRACTION_DIGITS) + ')' : '',\n\n          skewYPart = skewY !== 0 ? ' skewY(' + toFixed(skewY, NUM_FRACTION_DIGITS) + ')' : '',\n\n          addTranslateX = this.type === 'path-group' ? this.width : 0,\n\n          flipXPart = this.flipX ? ' matrix(-1 0 0 1 ' + addTranslateX + ' 0) ' : '',\n\n          addTranslateY = this.type === 'path-group' ? this.height : 0,\n\n          flipYPart = this.flipY ? ' matrix(1 0 0 -1 0 ' + addTranslateY + ')' : '';\n\n      return [\n        translatePart, anglePart, scalePart, flipXPart, flipYPart, skewXPart, skewYPart\n      ].join('');\n    },\n\n    /**\n     * Returns transform-string for svg-export from the transform matrix of single elements\n     * @return {String}\n     */\n    getSvgTransformMatrix: function() {\n      return this.transformMatrix ? ' matrix(' + this.transformMatrix.join(' ') + ') ' : '';\n    },\n\n    /**\n     * @private\n     */\n    _createBaseSVGMarkup: function() {\n      var markup = [];\n\n      if (this.fill && this.fill.toLive) {\n        markup.push(this.fill.toSVG(this, false));\n      }\n      if (this.stroke && this.stroke.toLive) {\n        markup.push(this.stroke.toSVG(this, false));\n      }\n      if (this.shadow) {\n        markup.push(this.shadow.toSVG(this));\n      }\n      return markup;\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function() {\n\n  var extend = fabric.util.object.extend,\n      originalSet = 'stateProperties';\n\n  /*\n    Depends on `stateProperties`\n  */\n  function saveProps(origin, destination, props) {\n    var tmpObj = { }, deep = true;\n    props.forEach(function(prop) {\n      tmpObj[prop] = origin[prop];\n    });\n    extend(origin[destination], tmpObj, deep);\n  }\n\n  function _isEqual(origValue, currentValue, firstPass) {\n    if (origValue === currentValue) {\n      // if the objects are identical, return\n      return true;\n    }\n    else if (Array.isArray(origValue)) {\n      if (origValue.length !== currentValue.length) {\n        return false;\n      }\n      for (var i = 0, len = origValue.length; i < len; i++) {\n        if (!_isEqual(origValue[i], currentValue[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    else if (origValue && typeof origValue === 'object') {\n      var keys = Object.keys(origValue), key;\n      if (!firstPass && keys.length !== Object.keys(currentValue).length) {\n        return false;\n      }\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        if (!_isEqual(origValue[key], currentValue[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Returns true if object state (one of its state properties) was changed\n     * @param {String} [propertySet] optional name for the set of property we want to save\n     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n     */\n    hasStateChanged: function(propertySet) {\n      propertySet = propertySet || originalSet;\n      var dashedPropertySet = '_' + propertySet;\n      if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\n        return true;\n      }\n      return !_isEqual(this[dashedPropertySet], this, true);\n    },\n\n    /**\n     * Saves state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    saveState: function(options) {\n      var propertySet = options && options.propertySet || originalSet,\n          destination = '_' + propertySet;\n      if (!this[destination]) {\n        return this.setupState(options);\n      }\n      saveProps(this, destination, this[propertySet]);\n      if (options && options.stateProperties) {\n        saveProps(this, destination, options.stateProperties);\n      }\n      return this;\n    },\n\n    /**\n     * Setups state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    setupState: function(options) {\n      options = options || { };\n      var propertySet = options.propertySet || originalSet;\n      options.propertySet = propertySet;\n      this['_' + propertySet] = { };\n      this.saveState(options);\n      return this;\n    }\n  });\n})();\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      /* eslint-disable camelcase */\n      isVML = function() { return typeof G_vmlCanvasManager !== 'undefined'; };\n      /* eslint-enable camelcase */\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * The object interactivity controls.\n     * @private\n     */\n    _controlsVisibility: null,\n\n    /**\n     * Determines which corner has been clicked\n     * @private\n     * @param {Object} pointer The pointer indicating the mouse position\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n     */\n    _findTargetCorner: function(pointer) {\n      if (!this.hasControls || !this.active) {\n        return false;\n      }\n\n      var ex = pointer.x,\n          ey = pointer.y,\n          xPoints,\n          lines;\n      this.__corner = 0;\n      for (var i in this.oCoords) {\n\n        if (!this.isControlVisible(i)) {\n          continue;\n        }\n\n        if (i === 'mtr' && !this.hasRotatingPoint) {\n          continue;\n        }\n\n        if (this.get('lockUniScaling') &&\n           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n          continue;\n        }\n\n        lines = this._getImageLines(this.oCoords[i].corner);\n\n        // debugging\n\n        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\n        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n        if (xPoints !== 0 && xPoints % 2 === 1) {\n          this.__corner = i;\n          return i;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Sets the coordinates of the draggable boxes in the corners of\n     * the image used to scale/rotate it.\n     * @private\n     */\n    _setCornerCoords: function() {\n      var coords = this.oCoords,\n          newTheta = degreesToRadians(45 - this.angle),\n          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n          /* 0.707106 stands for sqrt(2)/2 */\n          cornerHypotenuse = this.cornerSize * 0.707106,\n          cosHalfOffset = cornerHypotenuse * Math.cos(newTheta),\n          sinHalfOffset = cornerHypotenuse * Math.sin(newTheta),\n          x, y;\n\n      for (var point in coords) {\n        x = coords[point].x;\n        y = coords[point].y;\n        coords[point].corner = {\n          tl: {\n            x: x - sinHalfOffset,\n            y: y - cosHalfOffset\n          },\n          tr: {\n            x: x + cosHalfOffset,\n            y: y - sinHalfOffset\n          },\n          bl: {\n            x: x - cosHalfOffset,\n            y: y + sinHalfOffset\n          },\n          br: {\n            x: x + sinHalfOffset,\n            y: y + cosHalfOffset\n          }\n        };\n      }\n    },\n\n    /**\n     * Draws a colored layer behind the object, inside its selection borders.\n     * Requires public options: padding, selectionBackgroundColor\n     * this function is called when the context is transformed\n     * has checks to be skipped when the object is on a staticCanvas\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawSelectionBackground: function(ctx) {\n      if (!this.selectionBackgroundColor || this.group || !this.active ||\n        (this.canvas && !this.canvas.interactive)) {\n        return this;\n      }\n      ctx.save();\n      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n          vpt = this.canvas.viewportTransform;\n      ctx.translate(center.x, center.y);\n      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.fillStyle = this.selectionBackgroundColor;\n      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBorders: function(ctx) {\n      if (!this.hasBorders) {\n        return this;\n      }\n\n      var wh = this._calculateCurrentDimensions(),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n      ctx.strokeStyle = this.borderColor;\n      this._setLineDash(ctx, this.borderDashArray, null);\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      if (this.hasRotatingPoint && this.isControlVisible('mtr') && !this.get('lockRotation') && this.hasControls) {\n\n        var rotateHeight = -height / 2;\n\n        ctx.beginPath();\n        ctx.moveTo(0, rotateHeight);\n        ctx.lineTo(0, rotateHeight - this.rotatingPointOffset);\n        ctx.closePath();\n        ctx.stroke();\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box when it is inside a group.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {object} options object representing current object parameters\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBordersInGroup: function(ctx, options) {\n      if (!this.hasBorders) {\n        return this;\n      }\n\n      var p = this._getNonTransformedDimensions(),\n          matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),\n          wh = fabric.util.transformPoint(p, matrix),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n      this._setLineDash(ctx, this.borderDashArray, null);\n      ctx.strokeStyle = this.borderColor;\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws corners of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: cornerSize, padding\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawControls: function(ctx) {\n      if (!this.hasControls) {\n        return this;\n      }\n\n      var wh = this._calculateCurrentDimensions(),\n          width = wh.x,\n          height = wh.y,\n          scaleOffset = this.cornerSize,\n          left = -(width + scaleOffset) / 2,\n          top = -(height + scaleOffset) / 2,\n          methodName = this.transparentCorners ? 'stroke' : 'fill';\n\n      ctx.save();\n      ctx.strokeStyle = ctx.fillStyle = this.cornerColor;\n      if (!this.transparentCorners) {\n        ctx.strokeStyle = this.cornerStrokeColor;\n      }\n      this._setLineDash(ctx, this.cornerDashArray, null);\n\n      // top-left\n      this._drawControl('tl', ctx, methodName,\n        left,\n        top);\n\n      // top-right\n      this._drawControl('tr', ctx, methodName,\n        left + width,\n        top);\n\n      // bottom-left\n      this._drawControl('bl', ctx, methodName,\n        left,\n        top + height);\n\n      // bottom-right\n      this._drawControl('br', ctx, methodName,\n        left + width,\n        top + height);\n\n      if (!this.get('lockUniScaling')) {\n\n        // middle-top\n        this._drawControl('mt', ctx, methodName,\n          left + width / 2,\n          top);\n\n        // middle-bottom\n        this._drawControl('mb', ctx, methodName,\n          left + width / 2,\n          top + height);\n\n        // middle-right\n        this._drawControl('mr', ctx, methodName,\n          left + width,\n          top + height / 2);\n\n        // middle-left\n        this._drawControl('ml', ctx, methodName,\n          left,\n          top + height / 2);\n      }\n\n      // middle-top-rotate\n      if (this.hasRotatingPoint) {\n        this._drawControl('mtr', ctx, methodName,\n          left + width / 2,\n          top - this.rotatingPointOffset);\n      }\n\n      ctx.restore();\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _drawControl: function(control, ctx, methodName, left, top) {\n      if (!this.isControlVisible(control)) {\n        return;\n      }\n      var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n      switch (this.cornerStyle) {\n        case 'circle':\n          ctx.beginPath();\n          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n          ctx[methodName]();\n          if (stroke) {\n            ctx.stroke();\n          }\n          break;\n        default:\n          isVML() || this.transparentCorners || ctx.clearRect(left, top, size, size);\n          ctx[methodName + 'Rect'](left, top, size, size);\n          if (stroke) {\n            ctx.strokeRect(left, top, size, size);\n          }\n      }\n    },\n\n    /**\n     * Returns true if the specified control is visible, false otherwise.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @returns {Boolean} true if the specified control is visible, false otherwise\n     */\n    isControlVisible: function(controlName) {\n      return this._getControlsVisibility()[controlName];\n    },\n\n    /**\n     * Sets the visibility of the specified control.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlVisible: function(controlName, visible) {\n      this._getControlsVisibility()[controlName] = visible;\n      return this;\n    },\n\n    /**\n     * Sets the visibility state of object controls.\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlsVisibility: function(options) {\n      options || (options = { });\n\n      for (var p in options) {\n        this.setControlVisible(p, options[p]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the instance of the control visibility set for this object.\n     * @private\n     * @returns {Object}\n     */\n    _getControlsVisibility: function() {\n      if (!this._controlsVisibility) {\n        this._controlsVisibility = {\n          tl: true,\n          tr: true,\n          br: true,\n          bl: true,\n          ml: true,\n          mt: true,\n          mr: true,\n          mb: true,\n          mtr: true\n        };\n      }\n      return this._controlsVisibility;\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Animation duration (in ms) for fx* methods\n   * @type Number\n   * @default\n   */\n  FX_DURATION: 500,\n\n  /**\n   * Centers object horizontally with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectH: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.get('left'),\n      endValue: this.getCenter().left,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('left', value);\n        _this.renderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Centers object vertically with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectV: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.get('top'),\n      endValue: this.getCenter().top,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('top', value);\n        _this.renderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Same as `fabric.Canvas#remove` but animated\n   * @param {fabric.Object} object Object to remove\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxRemove: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.get('opacity'),\n      endValue: 0,\n      duration: this.FX_DURATION,\n      onStart: function() {\n        object.set('active', false);\n      },\n      onChange: function(value) {\n        object.set('opacity', value);\n        _this.renderAll();\n        onChange();\n      },\n      onComplete: function () {\n        _this.remove(object);\n        onComplete();\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n  /**\n   * Animates object's properties\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n   * @return {fabric.Object} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @chainable\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   *\n   * As string — one property\n   *\n   * object.animate('left', ...);\n   * object.animate('left', { duration: ... });\n   *\n   */\n  animate: function() {\n    if (arguments[0] && typeof arguments[0] === 'object') {\n      var propsToAnimate = [], prop, skipCallbacks;\n      for (prop in arguments[0]) {\n        propsToAnimate.push(prop);\n      }\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n        prop = propsToAnimate[i];\n        skipCallbacks = i !== len - 1;\n        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n      }\n    }\n    else {\n      this._animate.apply(this, arguments);\n    }\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n   */\n  _animate: function(property, to, options, skipCallbacks) {\n    var _this = this, propPair;\n\n    to = to.toString();\n\n    if (!options) {\n      options = { };\n    }\n    else {\n      options = fabric.util.object.clone(options);\n    }\n\n    if (~property.indexOf('.')) {\n      propPair = property.split('.');\n    }\n\n    var currentValue = propPair\n      ? this.get(propPair[0])[propPair[1]]\n      : this.get(property);\n\n    if (!('from' in options)) {\n      options.from = currentValue;\n    }\n\n    if (~to.indexOf('=')) {\n      to = currentValue + parseFloat(to.replace('=', ''));\n    }\n    else {\n      to = parseFloat(to);\n    }\n\n    fabric.util.animate({\n      startValue: options.from,\n      endValue: to,\n      byValue: options.by,\n      easing: options.easing,\n      duration: options.duration,\n      abort: options.abort && function() {\n        return options.abort.call(_this);\n      },\n      onChange: function(value, valueProgress, timeProgress) {\n        if (propPair) {\n          _this[propPair[0]][propPair[1]] = value;\n        }\n        else {\n          _this.set(property, value);\n        }\n        if (skipCallbacks) {\n          return;\n        }\n        options.onChange && options.onChange(value, valueProgress, timeProgress);\n      },\n      onComplete: function(value, valueProgress, timeProgress) {\n        if (skipCallbacks) {\n          return;\n        }\n\n        _this.setCoords();\n        options.onComplete && options.onComplete(value, valueProgress, timeProgress);\n      }\n    });\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Line) {\n    fabric.warn('fabric.Line is already defined');\n    return;\n  }\n\n  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n  cacheProperties.push(\n    'x1',\n    'x2',\n    'y1',\n    'y2'\n  );\n\n  /**\n   * Line class\n   * @class fabric.Line\n   * @extends fabric.Object\n   * @see {@link fabric.Line#initialize} for constructor definition\n   */\n  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'line',\n\n    /**\n     * x value or first line edge\n     * @type Number\n     * @default\n     */\n    x1: 0,\n\n    /**\n     * y value or first line edge\n     * @type Number\n     * @default\n     */\n    y1: 0,\n\n    /**\n     * x value or second line edge\n     * @type Number\n     * @default\n     */\n    x2: 0,\n\n    /**\n     * y value or second line edge\n     * @type Number\n     * @default\n     */\n    y2: 0,\n\n    cacheProperties: cacheProperties,\n\n    /**\n     * Constructor\n     * @param {Array} [points] Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Line} thisArg\n     */\n    initialize: function(points, options) {\n      if (!points) {\n        points = [0, 0, 0, 0];\n      }\n\n      this.callSuper('initialize', options);\n\n      this.set('x1', points[0]);\n      this.set('y1', points[1]);\n      this.set('x2', points[2]);\n      this.set('y2', points[3]);\n\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n\n      this.width = Math.abs(this.x2 - this.x1);\n      this.height = Math.abs(this.y2 - this.y1);\n\n      this.left = 'left' in options\n        ? options.left\n        : this._getLeftToOriginX();\n\n      this.top = 'top' in options\n        ? options.top\n        : this._getTopToOriginY();\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      if (typeof coordProps[key] !== 'undefined') {\n        this._setWidthHeight();\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n     */\n    _getLeftToOriginX: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originX',\n        axis1: 'x1',\n        axis2: 'x2',\n        dimension: 'width'\n      },\n      { // possible values of origin\n        nearest: 'left',\n        center: 'center',\n        farthest: 'right'\n      }\n    ),\n\n    /**\n     * @private\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n     */\n    _getTopToOriginY: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originY',\n        axis1: 'y1',\n        axis2: 'y2',\n        dimension: 'height'\n      },\n      { // possible values of origin\n        nearest: 'top',\n        center: 'center',\n        farthest: 'bottom'\n      }\n    ),\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n      ctx.beginPath();\n\n      if (noTransform) {\n        //  Line coords are distances from left-top of canvas to origin of line.\n        //  To render line in a path-group, we need to translate them to\n        //  distances from center of path-group to center of line.\n        var cp = this.getCenterPoint(),\n            offset = this.strokeWidth / 2;\n        ctx.translate(\n          cp.x - (this.strokeLineCap === 'butt' && this.height === 0 ? 0 : offset),\n          cp.y - (this.strokeLineCap === 'butt' && this.width === 0 ? 0 : offset)\n        );\n      }\n\n      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n        // move from center (of virtual box) to its left/top corner\n        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n        var p = this.calcLinePoints();\n        ctx.moveTo(p.x1, p.y1);\n        ctx.lineTo(p.x2, p.y2);\n      }\n\n      ctx.lineWidth = this.strokeWidth;\n\n      // TODO: test this\n      // make sure setting \"fill\" changes color of a line\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n      var origStrokeStyle = ctx.strokeStyle;\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n      this.stroke && this._renderStroke(ctx);\n      ctx.strokeStyle = origStrokeStyle;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p = this.calcLinePoints();\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @methd toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function() {\n      var dim = this.callSuper('_getNonTransformedDimensions');\n      if (this.strokeLineCap === 'butt') {\n        if (this.width === 0) {\n          dim.y -= this.strokeWidth;\n        }\n        if (this.height === 0) {\n          dim.x -= this.strokeWidth;\n        }\n      }\n      return dim;\n    },\n\n    /**\n     * Recalculates line points given width and height\n     * @private\n     */\n    calcLinePoints: function() {\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\n          yMult = this.y1 <= this.y2 ? -1 : 1,\n          x1 = (xMult * this.width * 0.5),\n          y1 = (yMult * this.height * 0.5),\n          x2 = (xMult * this.width * -0.5),\n          y2 = (yMult * this.height * -0.5);\n\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          p = { x1: this.x1, x2: this.x2, y1: this.y1, y2: this.y2 };\n\n      if (!(this.group && this.group.type === 'path-group')) {\n        p = this.calcLinePoints();\n      }\n      markup.push(\n        '<line ', this.getSvgId(),\n          'x1=\"', p.x1,\n          '\" y1=\"', p.y1,\n          '\" x2=\"', p.x2,\n          '\" y2=\"', p.y2,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n   * @static\n   * @memberOf fabric.Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\n  /**\n   * Returns fabric.Line instance from an SVG element\n   * @static\n   * @memberOf fabric.Line\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Line} instance of fabric.Line\n   */\n  fabric.Line.fromElement = function(element, options) {\n    options = options || { };\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n        points = [\n          parsedAttributes.x1 || 0,\n          parsedAttributes.y1 || 0,\n          parsedAttributes.x2 || 0,\n          parsedAttributes.y2 || 0\n        ];\n    options.originX = 'left';\n    options.originY = 'top';\n    return new fabric.Line(points, extend(parsedAttributes, options));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Line instance from an object representation\n   * @static\n   * @memberOf fabric.Line\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Line} instance of fabric.Line\n   */\n  fabric.Line.fromObject = function(object, callback, forceAsync) {\n    function _callback(instance) {\n      delete instance.points;\n      callback && callback(instance);\n    };\n    var options = clone(object, true);\n    options.points = [object.x1, object.y1, object.x2, object.y2];\n    var line = fabric.Object._fromObject('Line', options, _callback, forceAsync, 'points');\n    if (line) {\n      delete line.points;\n    }\n    return line;\n  };\n\n  /**\n   * Produces a function that calculates distance from canvas edge to Line origin.\n   */\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\n    var origin = propertyNames.origin,\n        axis1 = propertyNames.axis1,\n        axis2 = propertyNames.axis2,\n        dimension = propertyNames.dimension,\n        nearest = originValues.nearest,\n        center = originValues.center,\n        farthest = originValues.farthest;\n\n    return function() {\n      switch (this.get(origin)) {\n        case nearest:\n          return Math.min(this.get(axis1), this.get(axis2));\n        case center:\n          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n        case farthest:\n          return Math.max(this.get(axis1), this.get(axis2));\n      }\n    };\n\n  }\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      pi = Math.PI,\n      extend = fabric.util.object.extend;\n\n  if (fabric.Circle) {\n    fabric.warn('fabric.Circle is already defined.');\n    return;\n  }\n\n  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n  cacheProperties.push(\n    'radius'\n  );\n\n  /**\n   * Circle class\n   * @class fabric.Circle\n   * @extends fabric.Object\n   * @see {@link fabric.Circle#initialize} for constructor definition\n   */\n  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'circle',\n\n    /**\n     * Radius of this circle\n     * @type Number\n     * @default\n     */\n    radius: 0,\n\n    /**\n     * Start angle of the circle, moving clockwise\n     * @type Number\n     * @default 0\n     */\n    startAngle: 0,\n\n    /**\n     * End angle of the circle\n     * @type Number\n     * @default 2Pi\n     */\n    endAngle: pi * 2,\n\n    cacheProperties: cacheProperties,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Circle} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('radius', options && options.radius || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Circle} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key === 'radius') {\n        this.setRadius(value);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = 0, y = 0,\n          angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\n      if (angle === 0) {\n        if (this.group && this.group.type === 'path-group') {\n          x = this.left + this.radius;\n          y = this.top + this.radius;\n        }\n        markup.push(\n          '<circle ', this.getSvgId(),\n            'cx=\"' + x + '\" cy=\"' + y + '\" ',\n            'r=\"', this.radius,\n            '\" style=\"', this.getSvgStyles(),\n            '\" transform=\"', this.getSvgTransform(),\n            ' ', this.getSvgTransformMatrix(),\n          '\"/>\\n'\n        );\n      }\n      else {\n        var startX = Math.cos(this.startAngle) * this.radius,\n            startY = Math.sin(this.startAngle) * this.radius,\n            endX = Math.cos(this.endAngle) * this.radius,\n            endY = Math.sin(this.endAngle) * this.radius,\n            largeFlag = angle > pi ? '1' : '0';\n\n        markup.push(\n          '<path d=\"M ' + startX + ' ' + startY,\n          ' A ' + this.radius + ' ' + this.radius,\n          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          ' ', this.getSvgTransformMatrix(),\n          '\"/>\\n'\n        );\n      }\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _render: function(ctx, noTransform) {\n      ctx.beginPath();\n      ctx.arc(noTransform ? this.left + this.radius : 0,\n              noTransform ? this.top + this.radius : 0,\n              this.radius,\n              this.startAngle,\n              this.endAngle, false);\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusX: function() {\n      return this.get('radius') * this.get('scaleX');\n    },\n\n    /**\n     * Returns vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusY: function() {\n      return this.get('radius') * this.get('scaleY');\n    },\n\n    /**\n     * Sets radius of an object (and updates width accordingly)\n     * @return {fabric.Circle} thisArg\n     */\n    setRadius: function(value) {\n      this.radius = value;\n      return this.set('width', value * 2).set('height', value * 2);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n   * @static\n   * @memberOf fabric.Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\n  /**\n   * Returns {@link fabric.Circle} instance from an SVG element\n   * @static\n   * @memberOf fabric.Circle\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   * @return {fabric.Circle} Instance of fabric.Circle\n   */\n  fabric.Circle.fromElement = function(element, options) {\n    options || (options = { });\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\n    if (!isValidRadius(parsedAttributes)) {\n      throw new Error('value of `r` attribute is required and can not be negative');\n    }\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top = parsedAttributes.top || 0;\n\n    var obj = new fabric.Circle(extend(parsedAttributes, options));\n\n    obj.left -= obj.radius;\n    obj.top -= obj.radius;\n    return obj;\n  };\n\n  /**\n   * @private\n   */\n  function isValidRadius(attributes) {\n    return (('radius' in attributes) && (attributes.radius >= 0));\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Circle} instance from an object representation\n   * @static\n   * @memberOf fabric.Circle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {Object} Instance of fabric.Circle\n   */\n  fabric.Circle.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Circle', object, callback, forceAsync);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Triangle) {\n    fabric.warn('fabric.Triangle is already defined');\n    return;\n  }\n\n  /**\n   * Triangle class\n   * @class fabric.Triangle\n   * @extends fabric.Object\n   * @return {fabric.Triangle} thisArg\n   * @see {@link fabric.Triangle#initialize} for constructor definition\n   */\n  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'triangle',\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('width', options && options.width || 100)\n          .set('height', options && options.height || 100);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      ctx.moveTo(-widthBy2, heightBy2);\n      ctx.lineTo(0, -heightBy2);\n      ctx.lineTo(widthBy2, heightBy2);\n      ctx.closePath();\n\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2,\n          points = [\n            -widthBy2 + ' ' + heightBy2,\n            '0 ' + -heightBy2,\n            widthBy2 + ' ' + heightBy2\n          ]\n          .join(',');\n\n      markup.push(\n        '<polygon ', this.getSvgId(),\n          'points=\"', points,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n        '\"/>'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Triangle} instance from an object representation\n   * @static\n   * @memberOf fabric.Triangle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Triangle}\n   */\n  fabric.Triangle.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Triangle', object, callback, forceAsync);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      piBy2   = Math.PI * 2,\n      extend = fabric.util.object.extend;\n\n  if (fabric.Ellipse) {\n    fabric.warn('fabric.Ellipse is already defined.');\n    return;\n  }\n\n  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n  cacheProperties.push(\n    'rx',\n    'ry'\n  );\n\n  /**\n   * Ellipse class\n   * @class fabric.Ellipse\n   * @extends fabric.Object\n   * @return {fabric.Ellipse} thisArg\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\n   */\n  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'ellipse',\n\n    /**\n     * Horizontal radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: cacheProperties,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Ellipse} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('rx', options && options.rx || 0);\n      this.set('ry', options && options.ry || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Ellipse} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      switch (key) {\n\n        case 'rx':\n          this.rx = value;\n          this.set('width', value * 2);\n          break;\n\n        case 'ry':\n          this.ry = value;\n          this.set('height', value * 2);\n          break;\n\n      }\n      return this;\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRx: function() {\n      return this.get('rx') * this.get('scaleX');\n    },\n\n    /**\n     * Returns Vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRy: function() {\n      return this.get('ry') * this.get('scaleY');\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = 0, y = 0;\n      if (this.group && this.group.type === 'path-group') {\n        x = this.left + this.rx;\n        y = this.top + this.ry;\n      }\n      markup.push(\n        '<ellipse ', this.getSvgId(),\n          'cx=\"', x, '\" cy=\"', y, '\" ',\n          'rx=\"', this.rx,\n          '\" ry=\"', this.ry,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _render: function(ctx, noTransform) {\n      ctx.beginPath();\n      ctx.save();\n      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n      ctx.arc(\n        noTransform ? this.left + this.rx : 0,\n        noTransform ? (this.top + this.ry) * this.rx / this.ry : 0,\n        this.rx,\n        0,\n        piBy2,\n        false);\n      ctx.restore();\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n   * @static\n   * @memberOf fabric.Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an SVG element\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromElement = function(element, options) {\n    options || (options = { });\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top = parsedAttributes.top || 0;\n\n    var ellipse = new fabric.Ellipse(extend(parsedAttributes, options));\n\n    ellipse.top -= ellipse.ry;\n    ellipse.left -= ellipse.rx;\n    return ellipse;\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an object representation\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Ellipse', object, callback, forceAsync);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Rect) {\n    fabric.warn('fabric.Rect is already defined');\n    return;\n  }\n\n  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n  stateProperties.push('rx', 'ry');\n\n  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n  cacheProperties.push('rx', 'ry');\n\n  /**\n   * Rectangle class\n   * @class fabric.Rect\n   * @extends fabric.Object\n   * @return {fabric.Rect} thisArg\n   * @see {@link fabric.Rect#initialize} for constructor definition\n   */\n  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\n    /**\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: stateProperties,\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'rect',\n\n    /**\n     * Horizontal border radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical border radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: cacheProperties,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this._initRxRy();\n    },\n\n    /**\n     * Initializes rx/ry attributes\n     * @private\n     */\n    _initRxRy: function() {\n      if (this.rx && !this.ry) {\n        this.ry = this.rx;\n      }\n      else if (this.ry && !this.rx) {\n        this.rx = this.ry;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n\n      // optimize 1x1 case (used in spray brush)\n      if (this.width === 1 && this.height === 1) {\n        ctx.fillRect(-0.5, -0.5, 1, 1);\n        return;\n      }\n\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n          w = this.width,\n          h = this.height,\n          x = noTransform ? this.left : -this.width / 2,\n          y = noTransform ? this.top : -this.height / 2,\n          isRounded = rx !== 0 || ry !== 0,\n          /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n          k = 1 - 0.5522847498;\n      ctx.beginPath();\n\n      ctx.moveTo(x + rx, y);\n\n      ctx.lineTo(x + w - rx, y);\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\n      ctx.lineTo(x + w, y + h - ry);\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\n      ctx.lineTo(x + rx, y + h);\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\n      ctx.lineTo(x, y + ry);\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\n      ctx.closePath();\n\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = this.left, y = this.top;\n      if (!(this.group && this.group.type === 'path-group')) {\n        x = -this.width / 2;\n        y = -this.height / 2;\n      }\n      markup.push(\n        '<rect ', this.getSvgId(),\n          'x=\"', x, '\" y=\"', y,\n          '\" rx=\"', this.get('rx'), '\" ry=\"', this.get('ry'),\n          '\" width=\"', this.width, '\" height=\"', this.height,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          this.getSvgTransformMatrix(),\n        '\"/>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n   * @static\n   * @memberOf fabric.Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\n  /**\n   * Returns {@link fabric.Rect} instance from an SVG element\n   * @static\n   * @memberOf fabric.Rect\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Rect} Instance of fabric.Rect\n   */\n  fabric.Rect.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n    options = options || { };\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top  = parsedAttributes.top  || 0;\n    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n    return rect;\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Rect} instance from an object representation\n   * @static\n   * @memberOf fabric.Rect\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {Object} instance of fabric.Rect\n   */\n  fabric.Rect.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Rect', object, callback, forceAsync);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      toFixed = fabric.util.toFixed,\n      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n  if (fabric.Polyline) {\n    fabric.warn('fabric.Polyline is already defined');\n    return;\n  }\n\n  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n  cacheProperties.push('points');\n\n  /**\n   * Polyline class\n   * @class fabric.Polyline\n   * @extends fabric.Object\n   * @see {@link fabric.Polyline#initialize} for constructor definition\n   */\n  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polyline',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    /**\n     * Minimum X from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minX: 0,\n\n    /**\n     * Minimum Y from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minY: 0,\n\n    cacheProperties: cacheProperties,\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points (where each point is an object with x and y)\n     * @param {Object} [options] Options object\n     * @return {fabric.Polyline} thisArg\n     * @example\n     * var poly = new fabric.Polyline([\n     *     { x: 10, y: 10 },\n     *     { x: 50, y: 30 },\n     *     { x: 40, y: 70 },\n     *     { x: 60, y: 50 },\n     *     { x: 100, y: 150 },\n     *     { x: 40, y: 100 }\n     *   ], {\n     *   stroke: 'red',\n     *   left: 100,\n     *   top: 100\n     * });\n     */\n    initialize: function(points, options) {\n      options = options || {};\n      this.points = points || [];\n      this.callSuper('initialize', options);\n      this._calcDimensions();\n      if (!('top' in options)) {\n        this.top = this.minY;\n      }\n      if (!('left' in options)) {\n        this.left = this.minX;\n      }\n      this.pathOffset = {\n        x: this.minX + this.width / 2,\n        y: this.minY + this.height / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var points = this.points,\n          minX = min(points, 'x'),\n          minY = min(points, 'y'),\n          maxX = max(points, 'x'),\n          maxY = max(points, 'y');\n\n      this.width = (maxX - minX) || 0;\n      this.height = (maxY - minY) || 0;\n      this.minX = minX || 0;\n      this.minY = minY || 0;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        points: this.points.concat()\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var points = [],\n          diffX = 0,\n          diffY = 0,\n          markup = this._createBaseSVGMarkup();\n\n      if (!(this.group && this.group.type === 'path-group')) {\n        diffX = this.pathOffset.x;\n        diffY = this.pathOffset.y;\n      }\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        points.push(\n          toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',',\n          toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' '\n        );\n      }\n      markup.push(\n        '<', this.type, ' ', this.getSvgId(),\n          'points=\"', points.join(''),\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          ' ', this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    commonRender: function(ctx, noTransform) {\n      var point, len = this.points.length,\n          x = noTransform ? 0 : this.pathOffset.x,\n          y = noTransform ? 0 : this.pathOffset.y;\n\n      if (!len || isNaN(this.points[len - 1].y)) {\n        // do not draw if no points or odd points\n        // NaN comes from parseFloat of a empty string in parser\n        return false;\n      }\n      ctx.beginPath();\n      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n      for (var i = 0; i < len; i++) {\n        point = this.points[i];\n        ctx.lineTo(point.x - x, point.y - y);\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n      if (!this.commonRender(ctx, noTransform)) {\n        return;\n      }\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p1, p2;\n\n      ctx.beginPath();\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        p1 = this.points[i];\n        p2 = this.points[i + 1] || p1;\n        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.get('points').length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n   * @static\n   * @memberOf fabric.Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns fabric.Polyline instance from an SVG element\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Polyline} Instance of fabric.Polyline\n   */\n  fabric.Polyline.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\n\n    return new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polyline instance from an object representation\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Polyline} Instance of fabric.Polyline\n   */\n  fabric.Polyline.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Polyline', object, callback, forceAsync, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Polygon) {\n    fabric.warn('fabric.Polygon is already defined');\n    return;\n  }\n\n  /**\n   * Polygon class\n   * @class fabric.Polygon\n   * @extends fabric.Polyline\n   * @see {@link fabric.Polygon#initialize} for constructor definition\n   */\n  fabric.Polygon = fabric.util.createClass(fabric.Polyline, /** @lends fabric.Polygon.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polygon',\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n      if (!this.commonRender(ctx, noTransform)) {\n        return;\n      }\n      ctx.closePath();\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      this.callSuper('_renderDashedStroke', ctx);\n      ctx.closePath();\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n   * @static\n   * @memberOf fabric.Polygon\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n   */\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns {@link fabric.Polygon} instance from an SVG element\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Polygon} Instance of fabric.Polygon\n   */\n  fabric.Polygon.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\n\n    return new fabric.Polygon(points, extend(parsedAttributes, options));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polygon instance from an object representation\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Polygon} Instance of fabric.Polygon\n   */\n  fabric.Polygon.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Polygon', object, callback, forceAsync, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      extend = fabric.util.object.extend,\n      _toString = Object.prototype.toString,\n      drawArc = fabric.util.drawArc,\n      commandLengths = {\n        m: 2,\n        l: 2,\n        h: 1,\n        v: 1,\n        c: 6,\n        s: 4,\n        q: 4,\n        t: 2,\n        a: 7\n      },\n      repeatedCommands = {\n        m: 'l',\n        M: 'L'\n      };\n\n  if (fabric.Path) {\n    fabric.warn('fabric.Path is already defined');\n    return;\n  }\n\n  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n  stateProperties.push('path');\n\n  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n  cacheProperties.push('path', 'fillRule');\n\n  /**\n   * Path class\n   * @class fabric.Path\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.Path#initialize} for constructor definition\n   */\n  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path',\n\n    /**\n     * Array of path points\n     * @type Array\n     * @default\n     */\n    path: null,\n\n    /**\n     * Minimum X from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minX: 0,\n\n    /**\n     * Minimum Y from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minY: 0,\n\n    cacheProperties: cacheProperties,\n\n    stateProperties: stateProperties,\n\n    /**\n     * Constructor\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n     * @param {Object} [options] Options object\n     * @return {fabric.Path} thisArg\n     */\n    initialize: function(path, options) {\n      options = options || { };\n      this.callSuper('initialize', options);\n\n      if (!path) {\n        path = [];\n      }\n\n      var fromArray = _toString.call(path) === '[object Array]';\n\n      this.path = fromArray\n        ? path\n        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\n      if (!this.path) {\n        return;\n      }\n\n      if (!fromArray) {\n        this.path = this._parsePath();\n      }\n\n      this._setPositionDimensions(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} options Options object\n     */\n    _setPositionDimensions: function(options) {\n      var calcDim = this._parseDimensions();\n\n      this.minX = calcDim.left;\n      this.minY = calcDim.top;\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n\n      if (typeof options.left === 'undefined') {\n        this.left = calcDim.left + (this.originX === 'center'\n          ? this.width / 2\n          : this.originX === 'right'\n            ? this.width\n            : 0);\n      }\n\n      if (typeof options.top === 'undefined') {\n        this.top = calcDim.top + (this.originY === 'center'\n          ? this.height / 2\n          : this.originY === 'bottom'\n            ? this.height\n            : 0);\n      }\n\n      this.pathOffset = this.pathOffset || {\n        x: this.minX + this.width / 2,\n        y: this.minY + this.height / 2\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _renderPathCommands: function(ctx) {\n      var current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          l = -this.pathOffset.x,\n          t = -this.pathOffset.y;\n\n      if (this.group && this.group.type === 'path-group') {\n        l = 0;\n        t = 0;\n      }\n\n      ctx.beginPath();\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            ctx.bezierCurveTo(\n              x + current[1] + l, // x1\n              y + current[2] + t, // y1\n              controlX + l, // x2\n              controlY + t, // y2\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            ctx.bezierCurveTo(\n              current[1] + l,\n              current[2] + t,\n              controlX + l,\n              controlY + t,\n              x + l,\n              y + t\n            );\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              x + current[1] + l,\n              y + current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            ctx.quadraticCurveTo(\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x + l,\n              current[7] + y + t\n            ]);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + l,\n              current[7] + t\n            ]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            ctx.closePath();\n            break;\n        }\n        previous = current;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _render: function(ctx) {\n      this._renderPathCommands(ctx);\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Path (' + this.complexity() +\n        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var o = extend(this.callSuper('toObject', ['sourcePath', 'pathOffset'].concat(propertiesToInclude)), {\n        path: this.path.map(function(item) { return item.slice(); }),\n        top: this.top,\n        left: this.left,\n      });\n      return o;\n    },\n\n    /**\n     * Returns dataless object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(propertiesToInclude);\n      if (this.sourcePath) {\n        o.path = this.sourcePath;\n      }\n      delete o.sourcePath;\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var chunks = [],\n          markup = this._createBaseSVGMarkup(), addTransform = '';\n\n      for (var i = 0, len = this.path.length; i < len; i++) {\n        chunks.push(this.path[i].join(' '));\n      }\n      var path = chunks.join(' ');\n      if (!(this.group && this.group.type === 'path-group')) {\n        addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\n      }\n      markup.push(\n        '<path ', this.getSvgId(),\n          'd=\"', path,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(), addTransform,\n          this.getSvgTransformMatrix(), '\" stroke-linecap=\"round\" ',\n        '/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns number representation of an instance complexity\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.path.length;\n    },\n\n    /**\n     * @private\n     */\n    _parsePath: function() {\n      var result = [],\n          coords = [],\n          currentPath,\n          parsed,\n          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n          match,\n          coordsStr;\n\n      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n        currentPath = this.path[i];\n\n        coordsStr = currentPath.slice(1).trim();\n        coords.length = 0;\n\n        while ((match = re.exec(coordsStr))) {\n          coords.push(match[0]);\n        }\n\n        coordsParsed = [currentPath.charAt(0)];\n\n        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n          parsed = parseFloat(coords[j]);\n          if (!isNaN(parsed)) {\n            coordsParsed.push(parsed);\n          }\n        }\n\n        var command = coordsParsed[0],\n            commandLength = commandLengths[command.toLowerCase()],\n            repeatedCommand = repeatedCommands[command] || command;\n\n        if (coordsParsed.length - 1 > commandLength) {\n          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n            command = repeatedCommand;\n          }\n        }\n        else {\n          result.push(coordsParsed);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _parseDimensions: function() {\n\n      var aX = [],\n          aY = [],\n          current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          bounds;\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            bounds = [];\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            bounds = [];\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            bounds = [];\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            bounds = [];\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            bounds = [];\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            bounds = [];\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              x + current[1], // x1\n              y + current[2], // y1\n              controlX, // x2\n              controlY, // y2\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            controlX = current[3];\n            controlY = current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              current[1],\n              current[2],\n              controlX,\n              controlY,\n              current[5],\n              current[6]\n            );\n            x = current[5];\n            y = current[6];\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              x + current[1],\n              y + current[2],\n              tempX,\n              tempY\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              current[1],\n              current[2],\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            controlX = current[1];\n            controlY = current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              current[3],\n              current[4]\n            );\n            x = current[3];\n            y = current[4];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x,\n              current[7] + y\n            );\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6],\n              current[7]\n            );\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            break;\n        }\n        previous = current;\n        bounds.forEach(function (point) {\n          aX.push(point.x);\n          aY.push(point.y);\n        });\n        aX.push(x);\n        aY.push(y);\n      }\n\n      var minX = min(aX) || 0,\n          minY = min(aY) || 0,\n          maxX = max(aX) || 0,\n          maxY = max(aY) || 0,\n          deltaX = maxX - minX,\n          deltaY = maxY - minY,\n\n          o = {\n            left: minX,\n            top: minY,\n            width: deltaX,\n            height: deltaY\n          };\n\n      return o;\n    }\n  });\n\n  /**\n   * Creates an instance of fabric.Path from an object\n   * @static\n   * @memberOf fabric.Path\n   * @param {Object} object\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   */\n  fabric.Path.fromObject = function(object, callback, forceAsync) {\n    // remove this pattern rom 2.0, accept just object.\n    var path;\n    if (typeof object.path === 'string') {\n      fabric.loadSVGFromURL(object.path, function (elements) {\n        var pathUrl = object.path;\n        path = elements[0];\n        delete object.path;\n\n        path.setOptions(object);\n        path.setSourcePath(pathUrl);\n\n        callback && callback(path);\n      });\n    }\n    else {\n      return fabric.Object._fromObject('Path', object, callback, forceAsync, 'path');\n    }\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n   * @static\n   * @memberOf fabric.Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\n  /**\n   * Creates an instance of fabric.Path from an SVG <path> element\n   * @static\n   * @memberOf fabric.Path\n   * @param {SVGElement} element to parse\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   * @param {Object} [options] Options object\n   */\n  fabric.Path.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n    callback && callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @memberOf fabric.Path\n   * @type Boolean\n   * @default\n   */\n  fabric.Path.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.PathGroup) {\n    fabric.warn('fabric.PathGroup is already defined');\n    return;\n  }\n\n  /**\n   * Path group class\n   * @class fabric.PathGroup\n   * @extends fabric.Path\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.PathGroup#initialize} for constructor definition\n   */\n  fabric.PathGroup = fabric.util.createClass(fabric.Object, /** @lends fabric.PathGroup.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path-group',\n\n    /**\n     * Fill value\n     * @type String\n     * @default\n     */\n    fill: '',\n\n    /**\n     * Pathgroups are container, do not render anything on theyr own, ence no cache properties\n     * @type Boolean\n     * @default\n     */\n    cacheProperties: [],\n\n    /**\n     * Constructor\n     * @param {Array} paths\n     * @param {Object} [options] Options object\n     * @return {fabric.PathGroup} thisArg\n     */\n    initialize: function(paths, options) {\n\n      options = options || { };\n      this.paths = paths || [];\n\n      for (var i = this.paths.length; i--;) {\n        this.paths[i].group = this;\n      }\n\n      if (options.toBeParsed) {\n        this.parseDimensionsFromPaths(options);\n        delete options.toBeParsed;\n      }\n      this.setOptions(options);\n      this.setCoords();\n    },\n\n    /**\n     * Calculate width and height based on paths contained\n     */\n    parseDimensionsFromPaths: function(options) {\n      var points, p, xC = [], yC = [], path, height, width,\n          m;\n      for (var j = this.paths.length; j--;) {\n        path = this.paths[j];\n        height = path.height + path.strokeWidth;\n        width = path.width + path.strokeWidth;\n        points = [\n          { x: path.left, y: path.top },\n          { x: path.left + width, y: path.top },\n          { x: path.left, y: path.top + height },\n          { x: path.left + width, y: path.top + height }\n        ];\n        m = this.paths[j].transformMatrix;\n        for (var i = 0; i < points.length; i++) {\n          p = points[i];\n          if (m) {\n            p = fabric.util.transformPoint(p, m, false);\n          }\n          xC.push(p.x);\n          yC.push(p.y);\n        }\n      }\n      options.width = Math.max.apply(null, xC);\n      options.height = Math.max.apply(null, yC);\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    drawObject: function(ctx) {\n      ctx.save();\n      ctx.translate(-this.width / 2, -this.height / 2);\n      for (var i = 0, l = this.paths.length; i < l; ++i) {\n        this.paths[i].render(ctx, true);\n      }\n      ctx.restore();\n    },\n\n    /**\n     * Decide if the object should cache or not.\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      var parentCache = this.objectCaching && (!this.group || this.needsItsOwnCache() || !this.group.isCaching());\n      this.caching = parentCache;\n      if (parentCache) {\n        for (var i = 0, len = this.paths.length; i < len; i++) {\n          if (this.paths[i].willDrawShadow()) {\n            this.caching = false;\n            return false;\n          }\n        }\n      }\n      return parentCache;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      if (this.shadow) {\n        return true;\n      }\n      for (var i = 0, len = this.paths.length; i < len; i++) {\n        if (this.paths[i].willDrawShadow()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isCaching: function() {\n      return this.caching || this.group && this.group.isCaching();\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function() {\n      if (this.callSuper('isCacheDirty')) {\n        return true;\n      }\n      if (!this.statefullCache) {\n        return false;\n      }\n      for (var i = 0, len = this.paths.length; i < len; i++) {\n        if (this.paths[i].isCacheDirty(true)) {\n          if (this._cacheCanvas) {\n            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Sets certain property to a certain value\n     * @param {String} prop\n     * @param {*} value\n     * @return {fabric.PathGroup} thisArg\n     */\n    _set: function(prop, value) {\n\n      if (prop === 'fill' && value && this.isSameColor()) {\n        var i = this.paths.length;\n        while (i--) {\n          this.paths[i]._set(prop, value);\n        }\n      }\n\n      return this.callSuper('_set', prop, value);\n    },\n\n    /**\n     * Returns object representation of this path group\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var pathsToObject = this.paths.map(function(path) {\n        var originalDefaults = path.includeDefaultValues;\n        path.includeDefaultValues = path.group.includeDefaultValues;\n        var obj = path.toObject(propertiesToInclude);\n        path.includeDefaultValues = originalDefaults;\n        return obj;\n      });\n      var o = extend(this.callSuper('toObject', ['sourcePath'].concat(propertiesToInclude)), {\n        paths: pathsToObject\n      });\n      return o;\n    },\n\n    /**\n     * Returns dataless object representation of this path group\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} dataless object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(propertiesToInclude);\n      if (this.sourcePath) {\n        o.paths = this.sourcePath;\n      }\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var objects = this.getObjects(),\n          p = this.getPointByOrigin('left', 'top'),\n          translatePart = 'translate(' + p.x + ' ' + p.y + ')',\n          markup = this._createBaseSVGMarkup();\n      markup.push(\n        '<g ', this.getSvgId(),\n        'style=\"', this.getSvgStyles(), '\" ',\n        'transform=\"', this.getSvgTransformMatrix(), translatePart, this.getSvgTransform(), '\" ',\n        '>\\n'\n      );\n\n      for (var i = 0, len = objects.length; i < len; i++) {\n        markup.push('\\t', objects[i].toSVG(reviver));\n      }\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns a string representation of this path group\n     * @return {String} string representation of an object\n     */\n    toString: function() {\n      return '#<fabric.PathGroup (' + this.complexity() +\n        '): { top: ' + this.top + ', left: ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns true if all paths in this group are of same color\n     * @return {Boolean} true if all paths are of the same color (`fill`)\n     */\n    isSameColor: function() {\n      var firstPathFill = this.getObjects()[0].get('fill') || '';\n      if (typeof firstPathFill !== 'string') {\n        return false;\n      }\n      firstPathFill = firstPathFill.toLowerCase();\n      return this.getObjects().every(function(path) {\n        var pathFill = path.get('fill') || '';\n        return typeof pathFill === 'string' && (pathFill).toLowerCase() === firstPathFill;\n      });\n    },\n\n    /**\n     * Returns number representation of object's complexity\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return this.paths.reduce(function(total, path) {\n        return total + ((path && path.complexity) ? path.complexity() : 0);\n      }, 0);\n    },\n\n    /**\n     * Returns all paths in this path group\n     * @return {Array} array of path objects included in this path group\n     */\n    getObjects: function() {\n      return this.paths;\n    }\n  });\n\n  /**\n   * Creates fabric.PathGroup instance from an object representation\n   * @static\n   * @memberOf fabric.PathGroup\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.PathGroup instance is created\n   */\n  fabric.PathGroup.fromObject = function(object, callback) {\n    var originalPaths = object.paths;\n    delete object.paths;\n    if (typeof originalPaths === 'string') {\n      fabric.loadSVGFromURL(originalPaths, function (elements) {\n        var pathUrl = originalPaths;\n        var pathGroup = fabric.util.groupSVGElements(elements, object, pathUrl);\n        object.paths = originalPaths;\n        callback(pathGroup);\n      });\n    }\n    else {\n      fabric.util.enlivenObjects(originalPaths, function(enlivenedObjects) {\n        var pathGroup = new fabric.PathGroup(enlivenedObjects, object);\n        object.paths = originalPaths;\n        callback(pathGroup);\n      });\n    }\n  };\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @memberOf fabric.PathGroup\n   * @type Boolean\n   * @default\n   */\n  fabric.PathGroup.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max;\n\n  if (fabric.Group) {\n    return;\n  }\n\n  // lock-related properties, for use in fabric.Group#get\n  // to enable locking behavior on group\n  // when one of its objects has lock-related properties set\n  var _lockProperties = {\n    lockMovementX:  true,\n    lockMovementY:  true,\n    lockRotation:   true,\n    lockScalingX:   true,\n    lockScalingY:   true,\n    lockUniScaling: true\n  };\n\n  /**\n   * Group class\n   * @class fabric.Group\n   * @extends fabric.Object\n   * @mixes fabric.Collection\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.Group#initialize} for constructor definition\n   */\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'group',\n\n    /**\n     * Width of stroke\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * Indicates if click events should also check for subtargets\n     * @type Boolean\n     * @default\n     */\n    subTargetCheck: false,\n\n    /**\n     * Groups are container, do not render anything on theyr own, ence no cache properties\n     * @type Boolean\n     * @default\n     */\n    cacheProperties: [],\n\n    /**\n     * Constructor\n     * @param {Object} objects Group objects\n     * @param {Object} [options] Options object\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options, isAlreadyGrouped) {\n      options = options || { };\n\n      this._objects = [];\n      // if objects enclosed in a group have been grouped already,\n      // we cannot change properties of objects.\n      // Thus we need to set options to group without objects,\n      // because delegatedProperties propagate to objects.\n      isAlreadyGrouped && this.callSuper('initialize', options);\n\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n\n      if (isAlreadyGrouped) {\n        // do not change coordinate of objects enclosed in a group,\n        // because objects coordinate system have been group coodinate system already.\n        this._updateObjectsCoords(true);\n      }\n      else {\n        this._calcBounds();\n        this._updateObjectsCoords();\n        this.callSuper('initialize', options);\n      }\n\n      this.setCoords();\n      this.saveCoords();\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsCoords: function(skipCoordsChange) {\n      var center = this.getCenterPoint();\n      for (var i = this._objects.length; i--; ){\n        this._updateObjectCoords(this._objects[i], center, skipCoordsChange);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     * @param {fabric.Point} center, current center of group.\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of object dose not change\n     */\n    _updateObjectCoords: function(object, center, skipCoordsChange) {\n      // do not display corners of objects enclosed in a group\n      object.__origHasControls = object.hasControls;\n      object.hasControls = false;\n\n      if (skipCoordsChange) {\n        return;\n      }\n\n      var objectLeft = object.getLeft(),\n          objectTop = object.getTop(),\n          ignoreZoom = true, skipAbsolute = true;\n\n      object.set({\n        left: objectLeft - center.x,\n        top: objectTop - center.y\n      });\n      object.setCoords(ignoreZoom, skipAbsolute);\n    },\n\n    /**\n     * Returns string represenation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.Group: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Adds an object to a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    addWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      if (object) {\n        this._objects.push(object);\n        object.group = this;\n        object._set('canvas', this.canvas);\n      }\n      // since _restoreObjectsState set objects inactive\n      this.forEachObject(this._setObjectActive, this);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _setObjectActive: function(object) {\n      object.set('active', true);\n      object.group = this;\n    },\n\n    /**\n     * Removes an object from a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    removeWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      // since _restoreObjectsState set objects inactive\n      this.forEachObject(this._setObjectActive, this);\n\n      this.remove(object);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _onObjectAdded: function(object) {\n      this.dirty = true;\n      object.group = this;\n      object._set('canvas', this.canvas);\n    },\n\n    /**\n     * @private\n     */\n    _onObjectRemoved: function(object) {\n      this.dirty = true;\n      delete object.group;\n      object.set('active', false);\n    },\n\n    /**\n     * Properties that are delegated to group objects when reading/writing\n     * @param {Object} delegatedProperties\n     */\n    delegatedProperties: {\n      fill:             true,\n      stroke:           true,\n      strokeWidth:      true,\n      fontFamily:       true,\n      fontWeight:       true,\n      fontSize:         true,\n      fontStyle:        true,\n      lineHeight:       true,\n      textDecoration:   true,\n      textAlign:        true,\n      backgroundColor:  true\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n\n      if (this.delegatedProperties[key] || key === 'canvas') {\n        while (i--) {\n          this._objects[i].set(key, value);\n        }\n      }\n      else {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n\n      this.callSuper('_set', key, value);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var objsToObject = this.getObjects().map(function(obj) {\n        var originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = obj.group.includeDefaultValues;\n        var _obj = obj.toObject(propertiesToInclude);\n        obj.includeDefaultValues = originalDefaults;\n        return _obj;\n      });\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        objects: objsToObject\n      });\n    },\n\n    /**\n     * Returns object representation of an instance, in dataless mode.\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var objsToObject = this.getObjects().map(function(obj) {\n        var originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = obj.group.includeDefaultValues;\n        var _obj = obj.toDatalessObject(propertiesToInclude);\n        obj.includeDefaultValues = originalDefaults;\n        return _obj;\n      });\n      return extend(this.callSuper('toDatalessObject', propertiesToInclude), {\n        objects: objsToObject\n      });\n    },\n\n    /**\n     * Renders instance on a given context\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\n     */\n    render: function(ctx) {\n      this._transformDone = true;\n      this.callSuper('render', ctx);\n      this._transformDone = false;\n    },\n\n    /**\n     * Decide if the object should cache or not.\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      var parentCache = this.objectCaching && (!this.group || this.needsItsOwnCache() || !this.group.isCaching());\n      this.caching = parentCache;\n      if (parentCache) {\n        for (var i = 0, len = this._objects.length; i < len; i++) {\n          if (this._objects[i].willDrawShadow()) {\n            this.caching = false;\n            return false;\n          }\n        }\n      }\n      return parentCache;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      if (this.callSuper('willDrawShadow')) {\n        return true;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isCaching: function() {\n      return this.caching || this.group && this.group.isCaching();\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    drawObject: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._renderObject(this._objects[i], ctx);\n      }\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function() {\n      if (this.callSuper('isCacheDirty')) {\n        return true;\n      }\n      if (!this.statefullCache) {\n        return false;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].isCacheDirty(true)) {\n          if (this._cacheCanvas) {\n            // if this group has not a cache canvas there is nothing to clean\n            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _renderControls: function(ctx, noTransform) {\n      ctx.save();\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      this.callSuper('_renderControls', ctx, noTransform);\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i]._renderControls(ctx);\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     */\n    _renderObject: function(object, ctx) {\n      // do not render if object is not visible\n      if (!object.visible) {\n        return;\n      }\n\n      var originalHasRotatingPoint = object.hasRotatingPoint;\n      object.hasRotatingPoint = false;\n      object.render(ctx);\n      object.hasRotatingPoint = originalHasRotatingPoint;\n    },\n\n    /**\n     * Retores original state of each of group objects (original state is that which was before group was created).\n     * @private\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    _restoreObjectsState: function() {\n      this._objects.forEach(this._restoreObjectState, this);\n      return this;\n    },\n\n    /**\n     * Realises the transform from this group onto the supplied object\n     * i.e. it tells you what would happen if the supplied object was in\n     * the group, and then the group was destroyed. It mutates the supplied\n     * object.\n     * @param {fabric.Object} object\n     * @return {fabric.Object} transformedObject\n     */\n    realizeTransform: function(object) {\n      var matrix = object.calcTransformMatrix(),\n          options = fabric.util.qrDecompose(matrix),\n          center = new fabric.Point(options.translateX, options.translateY);\n      object.flipX = false;\n      object.flipY = false;\n      object.set('scaleX', options.scaleX);\n      object.set('scaleY', options.scaleY);\n      object.skewX = options.skewX;\n      object.skewY = options.skewY;\n      object.angle = options.angle;\n      object.setPositionByOrigin(center, 'center', 'center');\n      return object;\n    },\n\n    /**\n     * Restores original state of a specified object in group\n     * @private\n     * @param {fabric.Object} object\n     * @return {fabric.Group} thisArg\n     */\n    _restoreObjectState: function(object) {\n      this.realizeTransform(object);\n      object.setCoords();\n      object.hasControls = object.__origHasControls;\n      delete object.__origHasControls;\n      object.set('active', false);\n      delete object.group;\n\n      return this;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    destroy: function() {\n      // when group is destroyed objects needs to get a repaint to be eventually\n      // displayed on canvas.\n      this._objects.forEach(function(object) {\n        object.set('dirty', true);\n      });\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * Saves coordinates of this instance (to be used together with `hasMoved`)\n     * @saveCoords\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    saveCoords: function() {\n      this._originalLeft = this.get('left');\n      this._originalTop = this.get('top');\n      return this;\n    },\n\n    /**\n     * Checks whether this group was moved (since `saveCoords` was called last)\n     * @return {Boolean} true if an object was moved (since fabric.Group#saveCoords was called)\n     */\n    hasMoved: function() {\n      return this._originalLeft !== this.get('left') ||\n             this._originalTop !== this.get('top');\n    },\n\n    /**\n     * Sets coordinates of all objects inside group\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    setObjectsCoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      this.forEachObject(function(object) {\n        object.setCoords(ignoreZoom, skipAbsolute);\n      });\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcBounds: function(onlyWidthHeight) {\n      var aX = [],\n          aY = [],\n          o, prop,\n          props = ['tr', 'br', 'bl', 'tl'],\n          i = 0, iLen = this._objects.length,\n          j, jLen = props.length,\n          ignoreZoom = true;\n\n      for ( ; i < iLen; ++i) {\n        o = this._objects[i];\n        o.setCoords(ignoreZoom);\n        for (j = 0; j < jLen; j++) {\n          prop = props[j];\n          aX.push(o.oCoords[prop].x);\n          aY.push(o.oCoords[prop].y);\n        }\n      }\n\n      this.set(this._getBounds(aX, aY, onlyWidthHeight));\n    },\n\n    /**\n     * @private\n     */\n    _getBounds: function(aX, aY, onlyWidthHeight) {\n      var minXY = new fabric.Point(min(aX), min(aY)),\n          maxXY = new fabric.Point(max(aX), max(aY)),\n          obj = {\n            width: (maxXY.x - minXY.x) || 0,\n            height: (maxXY.y - minXY.y) || 0\n          };\n\n      if (!onlyWidthHeight) {\n        obj.left = minXY.x || 0;\n        obj.top = minXY.y || 0;\n        if (this.originX === 'center') {\n          obj.left += obj.width / 2;\n        }\n        if (this.originX === 'right') {\n          obj.left += obj.width;\n        }\n        if (this.originY === 'center') {\n          obj.top += obj.height / 2;\n        }\n        if (this.originY === 'bottom') {\n          obj.top += obj.height;\n        }\n      }\n      return obj;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup();\n      markup.push(\n        '<g ', this.getSvgId(), 'transform=\"',\n        /* avoiding styles intentionally */\n        this.getSvgTransform(),\n        this.getSvgTransformMatrix(),\n        '\" style=\"',\n        this.getSvgFilter(),\n        '\">\\n'\n      );\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        markup.push('\\t', this._objects[i].toSVG(reviver));\n      }\n\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns requested property\n     * @param {String} prop Property to get\n     * @return {*}\n     */\n    get: function(prop) {\n      if (prop in _lockProperties) {\n        if (this[prop]) {\n          return this[prop];\n        }\n        else {\n          for (var i = 0, len = this._objects.length; i < len; i++) {\n            if (this._objects[i][prop]) {\n              return true;\n            }\n          }\n          return false;\n        }\n      }\n      else {\n        if (prop in this.delegatedProperties) {\n          return this._objects[0] && this._objects[0].get(prop);\n        }\n        return this[prop];\n      }\n    }\n  });\n\n  /**\n   * Returns {@link fabric.Group} instance from an object representation\n   * @static\n   * @memberOf fabric.Group\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an group instance is created\n   */\n  fabric.Group.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      var options = fabric.util.object.clone(object, true);\n      delete options.objects;\n      callback && callback(new fabric.Group(enlivenedObjects, options, true));\n    });\n  };\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @memberOf fabric.Group\n   * @type Boolean\n   * @default\n   */\n  fabric.Group.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var extend = fabric.util.object.extend;\n\n  if (!global.fabric) {\n    global.fabric = { };\n  }\n\n  if (global.fabric.Image) {\n    fabric.warn('fabric.Image is already defined.');\n    return;\n  }\n\n  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n  stateProperties.push(\n    'alignX',\n    'alignY',\n    'meetOrSlice'\n  );\n\n  /**\n   * Image class\n   * @class fabric.Image\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n   * @see {@link fabric.Image#initialize} for constructor definition\n   */\n  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'image',\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * AlignX value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n     * This parameter defines how the picture is aligned to its viewport when image element width differs from image width.\n     * @type String\n     * @default\n     */\n    alignX: 'none',\n\n    /**\n     * AlignY value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n     * This parameter defines how the picture is aligned to its viewport when image element height differs from image height.\n     * @type String\n     * @default\n     */\n    alignY: 'none',\n\n    /**\n     * meetOrSlice value, part of preserveAspectRatio  (one of \"meet\", \"slice\").\n     * if meet the image is always fully visibile, if slice the viewport is always filled with image.\n     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n     * @type String\n     * @default\n     */\n    meetOrSlice: 'meet',\n\n    /**\n     * Width of a stroke.\n     * For image quality a stroke multiple of 2 gives better results.\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * private\n     * contains last value of scaleX to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleX: 1,\n\n    /**\n     * private\n     * contains last value of scaleY to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleY: 1,\n\n    /**\n     * minimum scale factor under which any resizeFilter is triggered to resize the image\n     * 0 will disable the automatic resize. 1 will trigger automatically always.\n     * number bigger than 1 can be used in case we want to scale with some filter above\n     * the natural image dimensions\n     * @type Number\n     */\n    minimumScaleTrigger: 0.5,\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: stateProperties,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * default to false for images\n     * since 1.7.0\n     * @type Boolean\n     * @default\n     */\n    objectCaching: false,\n\n    /**\n     * Constructor\n     * @param {HTMLImageElement | String} element Image element\n     * @param {Object} [options] Options object\n     * @param {function} [callback] callback function to call after eventual filters applied.\n     * @return {fabric.Image} thisArg\n     */\n    initialize: function(element, options, callback) {\n      options || (options = { });\n      this.filters = [];\n      this.resizeFilters = [];\n      this.callSuper('initialize', options);\n      this._initElement(element, options, callback);\n    },\n\n    /**\n     * Returns image element which this instance if based on\n     * @return {HTMLImageElement} Image element\n     */\n    getElement: function() {\n      return this._element;\n    },\n\n    /**\n     * Sets image element for this instance to a specified one.\n     * If filters defined they are applied to new image.\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n     * @param {HTMLImageElement} element\n     * @param {Function} [callback] Callback is invoked when all filters have been applied and new image is generated\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setElement: function(element, callback, options) {\n\n      var _callback, _this;\n\n      this._element = element;\n      this._originalElement = element;\n      this._initConfig(options);\n\n      if (this.resizeFilters.length === 0) {\n        _callback = callback;\n      }\n      else {\n        _this = this;\n        _callback = function() {\n          _this.applyFilters(callback, _this.resizeFilters, _this._filteredEl || _this._originalElement, true);\n        };\n      }\n\n      if (this.filters.length !== 0) {\n        this.applyFilters(_callback);\n      }\n      else if (_callback) {\n        _callback(this);\n      }\n\n      return this;\n    },\n\n    /**\n     * Sets crossOrigin value (on an instance and corresponding image element)\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setCrossOrigin: function(value) {\n      this.crossOrigin = value;\n      this._element.crossOrigin = value;\n\n      return this;\n    },\n\n    /**\n     * Returns original size of an image\n     * @return {Object} Object with \"width\" and \"height\" properties\n     */\n    getOriginalSize: function() {\n      var element = this.getElement();\n      return {\n        width: element.width,\n        height: element.height\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _stroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n      var w = this.width / 2, h = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-w, -h);\n      ctx.lineTo(w, -h);\n      ctx.lineTo(w, h);\n      ctx.lineTo(-w, h);\n      ctx.lineTo(-w, -h);\n      ctx.closePath();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.save();\n      this._setStrokeStyles(ctx);\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var filters = [], resizeFilters = [],\n          scaleX = 1, scaleY = 1;\n\n      this.filters.forEach(function(filterObj) {\n        if (filterObj) {\n          if (filterObj.type === 'Resize') {\n            scaleX *= filterObj.scaleX;\n            scaleY *= filterObj.scaleY;\n          }\n          filters.push(filterObj.toObject());\n        }\n      });\n\n      this.resizeFilters.forEach(function(filterObj) {\n        filterObj && resizeFilters.push(filterObj.toObject());\n      });\n      var object = extend(\n        this.callSuper(\n          'toObject',\n          ['crossOrigin', 'alignX', 'alignY', 'meetOrSlice'].concat(propertiesToInclude)\n        ), {\n          src: this.getSrc(),\n          filters: filters,\n          resizeFilters: resizeFilters,\n        });\n\n      object.width /= scaleX;\n      object.height /= scaleY;\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2,\n          preserveAspectRatio = 'none', filtered = true;\n      if (this.group && this.group.type === 'path-group') {\n        x = this.left;\n        y = this.top;\n      }\n      if (this.alignX !== 'none' && this.alignY !== 'none') {\n        preserveAspectRatio = 'x' + this.alignX + 'Y' + this.alignY + ' ' + this.meetOrSlice;\n      }\n      markup.push(\n        '<g transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\">\\n',\n          '<image ', this.getSvgId(), 'xlink:href=\"', this.getSvgSrc(filtered),\n            '\" x=\"', x, '\" y=\"', y,\n            '\" style=\"', this.getSvgStyles(),\n            // we're essentially moving origin of transformation from top/left corner to the center of the shape\n            // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n            // so that object's center aligns with container's left/top\n            '\" width=\"', this.width,\n            '\" height=\"', this.height,\n            '\" preserveAspectRatio=\"', preserveAspectRatio, '\"',\n          '></image>\\n'\n      );\n\n      if (this.stroke || this.strokeDashArray) {\n        var origFill = this.fill;\n        this.fill = null;\n        markup.push(\n          '<rect ',\n            'x=\"', x, '\" y=\"', y,\n            '\" width=\"', this.width, '\" height=\"', this.height,\n            '\" style=\"', this.getSvgStyles(),\n          '\"/>\\n'\n        );\n        this.fill = origFill;\n      }\n\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns source of an image\n     * @param {Boolean} filtered indicates if the src is needed for svg\n     * @return {String} Source of an image\n     */\n    getSrc: function(filtered) {\n      var element = filtered ? this._element : this._originalElement;\n      if (element) {\n        return fabric.isLikelyNode ? element._src : element.src;\n      }\n      else {\n        return this.src || '';\n      }\n    },\n\n    /**\n     * Sets source of an image\n     * @param {String} src Source string (URL)\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setSrc: function(src, callback, options) {\n      fabric.util.loadImage(src, function(img) {\n        return this.setElement(img, callback, options);\n      }, this, options && options.crossOrigin);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n    },\n\n    /**\n     * Applies filters assigned to this image (from \"filters\" array)\n     * @method applyFilters\n     * @param {Function} callback Callback is invoked when all filters have been applied and new image is generated\n     * @param {Array} filters to be applied\n     * @param {fabric.Image} imgElement image to filter ( default to this._element )\n     * @param {Boolean} forResizing\n     * @return {CanvasElement} canvasEl to be drawn immediately\n     * @chainable\n     */\n    applyFilters: function(callback, filters, imgElement, forResizing) {\n\n      filters = filters || this.filters;\n      imgElement = imgElement || this._originalElement;\n\n      if (!imgElement) {\n        return;\n      }\n\n      var replacement = fabric.util.createImage(),\n          retinaScaling = this.canvas ? this.canvas.getRetinaScaling() : fabric.devicePixelRatio,\n          minimumScale = this.minimumScaleTrigger / retinaScaling,\n          _this = this, scaleX, scaleY;\n\n      if (filters.length === 0) {\n        this._element = imgElement;\n        callback && callback(this);\n        return imgElement;\n      }\n\n      var canvasEl = fabric.util.createCanvasElement();\n      canvasEl.width = imgElement.width;\n      canvasEl.height = imgElement.height;\n      canvasEl.getContext('2d').drawImage(imgElement, 0, 0, imgElement.width, imgElement.height);\n\n      filters.forEach(function(filter) {\n        if (!filter) {\n          return;\n        }\n        if (forResizing) {\n          scaleX = _this.scaleX < minimumScale ? _this.scaleX : 1;\n          scaleY = _this.scaleY < minimumScale ? _this.scaleY : 1;\n          if (scaleX * retinaScaling < 1) {\n            scaleX *= retinaScaling;\n          }\n          if (scaleY * retinaScaling < 1) {\n            scaleY *= retinaScaling;\n          }\n        }\n        else {\n          scaleX = filter.scaleX;\n          scaleY = filter.scaleY;\n        }\n        filter.applyTo(canvasEl, scaleX, scaleY);\n        if (!forResizing && filter.type === 'Resize') {\n          _this.width *= filter.scaleX;\n          _this.height *= filter.scaleY;\n        }\n      });\n\n      /** @ignore */\n      replacement.width = canvasEl.width;\n      replacement.height = canvasEl.height;\n      if (fabric.isLikelyNode) {\n        replacement.src = canvasEl.toBuffer(undefined, fabric.Image.pngCompression);\n        // onload doesn't fire in some node versions, so we invoke callback manually\n        _this._element = replacement;\n        !forResizing && (_this._filteredEl = replacement);\n        callback && callback(_this);\n      }\n      else {\n        replacement.onload = function() {\n          _this._element = replacement;\n          !forResizing && (_this._filteredEl = replacement);\n          callback && callback(_this);\n          replacement.onload = canvasEl = null;\n        };\n        replacement.src = canvasEl.toDataURL('image/png');\n      }\n      return canvasEl;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n      var x, y, imageMargins = this._findMargins(), elementToDraw;\n\n      x = (noTransform ? this.left : -this.width / 2);\n      y = (noTransform ? this.top : -this.height / 2);\n\n      if (this.meetOrSlice === 'slice') {\n        ctx.beginPath();\n        ctx.rect(x, y, this.width, this.height);\n        ctx.clip();\n      }\n\n      if (this.isMoving === false && this.resizeFilters.length && this._needsResize()) {\n        this._lastScaleX = this.scaleX;\n        this._lastScaleY = this.scaleY;\n        elementToDraw = this.applyFilters(null, this.resizeFilters, this._filteredEl || this._originalElement, true);\n      }\n      else {\n        elementToDraw = this._element;\n      }\n      elementToDraw && ctx.drawImage(elementToDraw,\n                                     x + imageMargins.marginX,\n                                     y + imageMargins.marginY,\n                                     imageMargins.width,\n                                     imageMargins.height\n                                    );\n\n      this._stroke(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private, needed to check if image needs resize\n     */\n    _needsResize: function() {\n      return (this.scaleX !== this._lastScaleX || this.scaleY !== this._lastScaleY);\n    },\n\n    /**\n     * @private\n     */\n    _findMargins: function() {\n      var width = this.width, height = this.height, scales,\n          scale, marginX = 0, marginY = 0;\n\n      if (this.alignX !== 'none' || this.alignY !== 'none') {\n        scales = [this.width / this._element.width, this.height / this._element.height];\n        scale = this.meetOrSlice === 'meet'\n                ? Math.min.apply(null, scales) : Math.max.apply(null, scales);\n        width = this._element.width * scale;\n        height = this._element.height * scale;\n        if (this.alignX === 'Mid') {\n          marginX = (this.width - width) / 2;\n        }\n        if (this.alignX === 'Max') {\n          marginX = this.width - width;\n        }\n        if (this.alignY === 'Mid') {\n          marginY = (this.height - height) / 2;\n        }\n        if (this.alignY === 'Max') {\n          marginY = this.height - height;\n        }\n      }\n      return {\n        width:  width,\n        height: height,\n        marginX: marginX,\n        marginY: marginY\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resetWidthHeight: function() {\n      var element = this.getElement();\n\n      this.set('width', element.width);\n      this.set('height', element.height);\n    },\n\n    /**\n     * The Image class's initialization method. This method is automatically\n     * called by the constructor.\n     * @private\n     * @param {HTMLImageElement|String} element The element representing the image\n     * @param {Object} [options] Options object\n     */\n    _initElement: function(element, options, callback) {\n      this.setElement(fabric.util.getById(element), callback, options);\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initConfig: function(options) {\n      options || (options = { });\n      this.setOptions(options);\n      this._setWidthHeight(options);\n      if (this._element && this.crossOrigin) {\n        this._element.crossOrigin = this.crossOrigin;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Array} filters to be initialized\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n     */\n    _initFilters: function(filters, callback) {\n      if (filters && filters.length) {\n        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n          callback && callback(enlivenedObjects);\n        }, 'fabric.Image.filters');\n      }\n      else {\n        callback && callback();\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Object with width/height properties\n     */\n    _setWidthHeight: function(options) {\n      this.width = 'width' in options\n        ? options.width\n        : (this.getElement()\n            ? this.getElement().width || 0\n            : 0);\n\n      this.height = 'height' in options\n        ? options.height\n        : (this.getElement()\n            ? this.getElement().height || 0\n            : 0);\n    },\n  });\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  fabric.Image.CSS_CANVAS = 'canvas-img';\n\n  /**\n   * Alias for getSrc\n   * @static\n   */\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\n  /**\n   * Creates an instance of fabric.Image from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} callback Callback to invoke when an image instance is created\n   */\n  fabric.Image.fromObject = function(object, callback) {\n    fabric.util.loadImage(object.src, function(img, error) {\n      if (error) {\n        callback && callback(null, error);\n        return;\n      }\n      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n        object.filters = filters || [];\n        fabric.Image.prototype._initFilters.call(object, object.resizeFilters, function(resizeFilters) {\n          object.resizeFilters = resizeFilters || [];\n          return new fabric.Image(img, object, callback);\n        });\n      });\n    }, null, object.crossOrigin);\n  };\n\n  /**\n   * Creates an instance of fabric.Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n   * @param {Object} [imgOptions] Options object\n   */\n  fabric.Image.fromURL = function(url, callback, imgOptions) {\n    fabric.util.loadImage(url, function(img) {\n      callback && callback(new fabric.Image(img, imgOptions));\n    }, null, imgOptions && imgOptions.crossOrigin);\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  fabric.Image.ATTRIBUTE_NAMES =\n    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href crossOrigin'.split(' '));\n\n  /**\n   * Returns {@link fabric.Image} instance from an SVG element\n   * @static\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback Callback to execute when fabric.Image object is created\n   * @param {Object} [options] Options object\n   * @return {fabric.Image} Instance of fabric.Image\n   */\n  fabric.Image.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES),\n        preserveAR;\n\n    if (parsedAttributes.preserveAspectRatio) {\n      preserveAR = fabric.util.parsePreserveAspectRatioAttribute(parsedAttributes.preserveAspectRatio);\n      extend(parsedAttributes, preserveAR);\n    }\n\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @type Boolean\n   * @default\n   */\n  fabric.Image.async = true;\n\n  /**\n   * Indicates compression level used when generating PNG under Node (in applyFilters). Any of 0-9\n   * @static\n   * @type Number\n   * @default\n   */\n  fabric.Image.pngCompression = 1;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * @private\n   * @return {Number} angle value\n   */\n  _getAngleValueForStraighten: function() {\n    var angle = this.getAngle() % 360;\n    if (angle > 0) {\n      return Math.round((angle - 1) / 90) * 90;\n    }\n    return Math.round(angle / 90) * 90;\n  },\n\n  /**\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  straighten: function() {\n    this.setAngle(this._getAngleValueForStraighten());\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\n   * @param {Object} callbacks Object with callback functions\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  fxStraighten: function(callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: this.get('angle'),\n      endValue: this._getAngleValueForStraighten(),\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        _this.setAngle(value);\n        onChange();\n      },\n      onComplete: function() {\n        _this.setCoords();\n        onComplete();\n      },\n      onStart: function() {\n        _this.set('active', false);\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Straightens object, then rerenders canvas\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  straightenObject: function (object) {\n    object.straighten();\n    this.renderAll();\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxStraightenObject: function (object) {\n    object.fxStraighten({\n      onChange: this.renderAll.bind(this)\n    });\n    return this;\n  }\n});\n\n\n/**\n * @namespace fabric.Image.filters\n * @memberOf fabric.Image\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n */\nfabric.Image.filters = fabric.Image.filters || { };\n\n/**\n * Root filter class from which all filter classes inherit from\n * @class fabric.Image.filters.BaseFilter\n * @memberOf fabric.Image.filters\n */\nfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  type: 'BaseFilter',\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  initialize: function(options) {\n    if (options) {\n      this.setOptions(options);\n    }\n  },\n\n  /**\n   * Sets filter's properties from options\n   * @param {Object} [options] Options object\n   */\n  setOptions: function(options) {\n    for (var prop in options) {\n      this[prop] = options[prop];\n    }\n  },\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject: function() {\n    return { type: this.type };\n  },\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON: function() {\n    // delegate, not alias\n    return this.toObject();\n  }\n});\n\nfabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\n  var filter = new fabric.Image.filters[object.type](object);\n  callback && callback(filter);\n  return filter;\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Brightness filter class\n   * @class fabric.Image.filters.Brightness\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Brightness({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Brightness',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Brightness.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.brightness=0] Value to brighten the image up (-255..255)\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.brightness = options.brightness || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          brightness = this.brightness;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        data[i] += brightness;\n        data[i + 1] += brightness;\n        data[i + 2] += brightness;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        brightness: this.brightness\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n   */\n  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n   * @class fabric.Image.filters.Convolute\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Sharpen filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 0, -1,  0,\n   *            -1,  5, -1,\n   *             0, -1,  0 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Blur filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Emboss filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Emboss filter with opaqueness</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   opaque: true,\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Convolute',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Convolute.prototype\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n     * @param {Array} [options.matrix] Filter matrix\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.opaque = options.opaque;\n      this.matrix = options.matrix || [\n        0, 0, 0,\n        0, 1, 0,\n        0, 0, 0\n      ];\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n\n      var weights = this.matrix,\n          context = canvasEl.getContext('2d'),\n          pixels = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\n          side = Math.round(Math.sqrt(weights.length)),\n          halfSide = Math.floor(side / 2),\n          src = pixels.data,\n          sw = pixels.width,\n          sh = pixels.height,\n          output = context.createImageData(sw, sh),\n          dst = output.data,\n          // go through the destination image pixels\n          alphaFac = this.opaque ? 1 : 0,\n          r, g, b, a, dstOff,\n          scx, scy, srcOff, wt;\n\n      for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n          dstOff = (y * sw + x) * 4;\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          r = 0; g = 0; b = 0; a = 0;\n\n          for (var cy = 0; cy < side; cy++) {\n            for (var cx = 0; cx < side; cx++) {\n              scy = y + cy - halfSide;\n              scx = x + cx - halfSide;\n\n              // eslint-disable-next-line max-depth\n              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n                continue;\n              }\n\n              srcOff = (scy * sw + scx) * 4;\n              wt = weights[cy * side + cx];\n\n              r += src[srcOff] * wt;\n              g += src[srcOff + 1] * wt;\n              b += src[srcOff + 2] * wt;\n              a += src[srcOff + 3] * wt;\n            }\n          }\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n          dst[dstOff + 3] = a + alphaFac * (255 - a);\n        }\n      }\n\n      context.putImageData(output, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        opaque: this.opaque,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n   */\n  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * GradientTransparency filter class\n   * @class fabric.Image.filters.GradientTransparency\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.GradientTransparency#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.GradientTransparency({\n   *   threshold: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n   // eslint-disable-next-line max-len\n  filters.GradientTransparency = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.GradientTransparency.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'GradientTransparency',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.GradientTransparency.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.threshold=100] Threshold value\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.threshold = options.threshold || 100;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          threshold = this.threshold,\n          total = data.length;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        data[i + 3] = threshold + 255 * (total - i) / total;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        threshold: this.threshold\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.GradientTransparency} Instance of fabric.Image.filters.GradientTransparency\n   */\n  fabric.Image.filters.GradientTransparency.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Grayscale image filter class\n   * @class fabric.Image.filters.Grayscale\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Grayscale();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Grayscale',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Grayscale.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          len = imageData.width * imageData.height * 4,\n          index = 0,\n          average;\n\n      while (index < len) {\n        average = (data[index] + data[index + 1] + data[index + 2]) / 3;\n        data[index]     = average;\n        data[index + 1] = average;\n        data[index + 2] = average;\n        index += 4;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n   */\n  fabric.Image.filters.Grayscale.fromObject = function(object, callback) {\n    object = object || { };\n    object.type = 'Grayscale';\n    return fabric.Image.filters.BaseFilter.fromObject(object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Invert filter class\n   * @class fabric.Image.filters.Invert\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Invert();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Invert',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Invert.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i;\n\n      for (i = 0; i < iLen; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n   */\n  fabric.Image.filters.Invert.fromObject = function(object, callback) {\n    object = object || { };\n    object.type = 'Invert';\n    return fabric.Image.filters.BaseFilter.fromObject(object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Mask filter class\n   * See http://resources.aleph-1.com/mask/\n   * @class fabric.Image.filters.Mask\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Mask#initialize} for constructor definition\n   */\n  filters.Mask = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Mask.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Mask',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Mask.prototype\n     * @param {Object} [options] Options object\n     * @param {fabric.Image} [options.mask] Mask image object\n     * @param {Number} [options.channel=0] Rgb channel (0, 1, 2 or 3)\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.mask = options.mask;\n      this.channel = [0, 1, 2, 3].indexOf(options.channel) > -1 ? options.channel : 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      if (!this.mask) {\n        return;\n      }\n\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          maskEl = this.mask.getElement(),\n          maskCanvasEl = fabric.util.createCanvasElement(),\n          channel = this.channel,\n          i,\n          iLen = imageData.width * imageData.height * 4;\n\n      maskCanvasEl.width = canvasEl.width;\n      maskCanvasEl.height = canvasEl.height;\n\n      maskCanvasEl.getContext('2d').drawImage(maskEl, 0, 0, canvasEl.width, canvasEl.height);\n\n      var maskImageData = maskCanvasEl.getContext('2d').getImageData(0, 0, canvasEl.width, canvasEl.height),\n          maskData = maskImageData.data;\n\n      for (i = 0; i < iLen; i += 4) {\n        data[i + 3] = maskData[i + channel];\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        mask: this.mask.toObject(),\n        channel: this.channel\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when a mask filter instance is created\n   */\n  fabric.Image.filters.Mask.fromObject = function(object, callback) {\n    fabric.util.loadImage(object.mask.src, function(img) {\n      object.mask = new fabric.Image(img, object.mask);\n      return fabric.Image.filters.BaseFilter.fromObject(object, callback);\n    });\n  };\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @type Boolean\n   * @default\n   */\n  fabric.Image.filters.Mask.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Noise filter class\n   * @class fabric.Image.filters.Noise\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Noise({\n   *   noise: 700\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Noise',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Noise.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.noise=0] Noise value\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.noise = options.noise || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          noise = this.noise, rand;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n\n        rand = (0.5 - Math.random()) * noise;\n\n        data[i] += rand;\n        data[i + 1] += rand;\n        data[i + 2] += rand;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        noise: this.noise\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n   */\n  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Pixelate filter class\n   * @class fabric.Image.filters.Pixelate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Pixelate({\n   *   blocksize: 8\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Pixelate',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Pixelate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.blocksize=4] Blocksize for pixelate\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.blocksize = options.blocksize || 4;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = imageData.height,\n          jLen = imageData.width,\n          index, i, j, r, g, b, a;\n\n      for (i = 0; i < iLen; i += this.blocksize) {\n        for (j = 0; j < jLen; j += this.blocksize) {\n\n          index = (i * 4) * jLen + (j * 4);\n\n          r = data[index];\n          g = data[index + 1];\n          b = data[index + 2];\n          a = data[index + 3];\n\n          /*\n           blocksize: 4\n\n           [1,x,x,x,1]\n           [x,x,x,x,1]\n           [x,x,x,x,1]\n           [x,x,x,x,1]\n           [1,1,1,1,1]\n           */\n\n          for (var _i = i, _ilen = i + this.blocksize; _i < _ilen; _i++) {\n            for (var _j = j, _jlen = j + this.blocksize; _j < _jlen; _j++) {\n              index = (_i * 4) * jLen + (_j * 4);\n              data[index] = r;\n              data[index + 1] = g;\n              data[index + 2] = b;\n              data[index + 3] = a;\n            }\n          }\n        }\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        blocksize: this.blocksize\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n   */\n  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Remove white filter class\n   * @class fabric.Image.filters.RemoveWhite\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.RemoveWhite#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.RemoveWhite({\n   *   threshold: 40,\n   *   distance: 140\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.RemoveWhite = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveWhite.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'RemoveWhite',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.threshold=30] Threshold value\n     * @param {Number} [options.distance=20] Distance value\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.threshold = options.threshold || 30;\n      this.distance = options.distance || 20;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          threshold = this.threshold,\n          distance = this.distance,\n          limit = 255 - threshold,\n          abs = Math.abs,\n          r, g, b;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (r > limit &&\n            g > limit &&\n            b > limit &&\n            abs(r - g) < distance &&\n            abs(r - b) < distance &&\n            abs(g - b) < distance\n        ) {\n          data[i + 3] = 0;\n        }\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        threshold: this.threshold,\n        distance: this.distance\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.RemoveWhite} Instance of fabric.Image.filters.RemoveWhite\n   */\n  fabric.Image.filters.RemoveWhite.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Sepia filter class\n   * @class fabric.Image.filters.Sepia\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Sepia();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Sepia = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Sepia',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Sepia.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i, avg;\n\n      for (i = 0; i < iLen; i += 4) {\n        avg = 0.3  * data[i] + 0.59 * data[i + 1] + 0.11 * data[i + 2];\n        data[i] = avg + 100;\n        data[i + 1] = avg + 50;\n        data[i + 2] = avg + 255;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Sepia} Instance of fabric.Image.filters.Sepia\n   */\n  fabric.Image.filters.Sepia.fromObject = function(object, callback) {\n    object = object || { };\n    object.type = 'Sepia';\n    return new fabric.Image.filters.BaseFilter.fromObject(object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Sepia2 filter class\n   * @class fabric.Image.filters.Sepia2\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Sepia2();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Sepia2 = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Sepia2.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Sepia2',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Sepia.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i, r, g, b;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        data[i] = (r * 0.393 + g * 0.769 + b * 0.189 ) / 1.351;\n        data[i + 1] = (r * 0.349 + g * 0.686 + b * 0.168 ) / 1.203;\n        data[i + 2] = (r * 0.272 + g * 0.534 + b * 0.131 ) / 2.140;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Sepia2} Instance of fabric.Image.filters.Sepia2\n   */\n  fabric.Image.filters.Sepia2.fromObject = function(object, callback) {\n    object = object || { };\n    object.type = 'Sepia2';\n    return new fabric.Image.filters.BaseFilter.fromObject(object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Tint filter class\n   * Adapted from <a href=\"https://github.com/mezzoblue/PaintbrushJS\">https://github.com/mezzoblue/PaintbrushJS</a>\n   * @class fabric.Image.filters.Tint\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Tint#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Tint filter with hex color and opacity</caption>\n   * var filter = new fabric.Image.filters.Tint({\n   *   color: '#3513B0',\n   *   opacity: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Tint filter with rgba color</caption>\n   * var filter = new fabric.Image.filters.Tint({\n   *   color: 'rgba(53, 21, 176, 0.5)'\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Tint = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Tint.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Tint',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Tint.prototype\n     * @param {Object} [options] Options object\n     * @param {String} [options.color=#000000] Color to tint the image with\n     * @param {Number} [options.opacity] Opacity value that controls the tint effect's transparency (0..1)\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.color = options.color || '#000000';\n      this.opacity = typeof options.opacity !== 'undefined'\n                      ? options.opacity\n                      : new fabric.Color(this.color).getAlpha();\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i,\n          tintR, tintG, tintB,\n          r, g, b, alpha1,\n          source;\n\n      source = new fabric.Color(this.color).getSource();\n\n      tintR = source[0] * this.opacity;\n      tintG = source[1] * this.opacity;\n      tintB = source[2] * this.opacity;\n\n      alpha1 = 1 - this.opacity;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        // alpha compositing\n        data[i] = tintR + r * alpha1;\n        data[i + 1] = tintG + g * alpha1;\n        data[i + 2] = tintB + b * alpha1;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color,\n        opacity: this.opacity\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Tint} Instance of fabric.Image.filters.Tint\n   */\n  fabric.Image.filters.Tint.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Multiply filter class\n   * Adapted from <a href=\"http://www.laurenscorijn.com/articles/colormath-basics\">http://www.laurenscorijn.com/articles/colormath-basics</a>\n   * @class fabric.Image.filters.Multiply\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example <caption>Multiply filter with hex color</caption>\n   * var filter = new fabric.Image.filters.Multiply({\n   *   color: '#F0F'\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Multiply filter with rgb color</caption>\n   * var filter = new fabric.Image.filters.Multiply({\n   *   color: 'rgb(53, 21, 176)'\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Multiply = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Multiply.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Multiply',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Multiply.prototype\n     * @param {Object} [options] Options object\n     * @param {String} [options.color=#000000] Color to multiply the image pixels with\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.color = options.color || '#000000';\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i,\n          source;\n\n      source = new fabric.Color(this.color).getSource();\n\n      for (i = 0; i < iLen; i += 4) {\n        data[i] *= source[0] / 255;\n        data[i + 1] *= source[1] / 255;\n        data[i + 2] *= source[2] / 255;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Multiply} Instance of fabric.Image.filters.Multiply\n   */\n  fabric.Image.filters.Multiply.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Blend filter class\n   * @class fabric.Image.filter.Blend\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.Blend({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.Blend({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n\n  filters.Blend = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\n    type: 'Blend',\n\n    initialize: function(options) {\n      options = options || {};\n      this.color = options.color || '#000';\n      this.image = options.image || false;\n      this.mode = options.mode || 'multiply';\n      this.alpha = options.alpha || 1;\n    },\n\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          tr, tg, tb,\n          r, g, b,\n          _r, _g, _b,\n          source,\n          isImage = false;\n\n      if (this.image) {\n        // Blend images\n        isImage = true;\n\n        var _el = fabric.util.createCanvasElement();\n        _el.width = this.image.width;\n        _el.height = this.image.height;\n\n        var tmpCanvas = new fabric.StaticCanvas(_el);\n        tmpCanvas.add(this.image);\n        var context2 =  tmpCanvas.getContext('2d');\n        source = context2.getImageData(0, 0, tmpCanvas.width, tmpCanvas.height).data;\n      }\n      else {\n        // Blend color\n        source = new fabric.Color(this.color).getSource();\n\n        tr = source[0] * this.alpha;\n        tg = source[1] * this.alpha;\n        tb = source[2] * this.alpha;\n      }\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (isImage) {\n          tr = source[i] * this.alpha;\n          tg = source[i + 1] * this.alpha;\n          tb = source[i + 2] * this.alpha;\n        }\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            break;\n          case 'screen':\n            data[i] = 1 - (1 - r) * (1 - tr);\n            data[i + 1] = 1 - (1 - g) * (1 - tg);\n            data[i + 2] = 1 - (1 - b) * (1 - tb);\n            break;\n          case 'add':\n            data[i] = Math.min(255, r + tr);\n            data[i + 1] = Math.min(255, g + tg);\n            data[i + 2] = Math.min(255, b + tb);\n            break;\n          case 'diff':\n          case 'difference':\n            data[i] = Math.abs(r - tr);\n            data[i + 1] = Math.abs(g - tg);\n            data[i + 2] = Math.abs(b - tb);\n            break;\n          case 'subtract':\n            _r = r - tr;\n            _g = g - tg;\n            _b = b - tb;\n\n            data[i] = (_r < 0) ? 0 : _r;\n            data[i + 1] = (_g < 0) ? 0 : _g;\n            data[i + 2] = (_b < 0) ? 0 : _b;\n            break;\n          case 'darken':\n            data[i] = Math.min(r, tr);\n            data[i + 1] = Math.min(g, tg);\n            data[i + 2] = Math.min(b, tb);\n            break;\n          case 'lighten':\n            data[i] = Math.max(r, tr);\n            data[i + 1] = Math.max(g, tg);\n            data[i + 2] = Math.max(b, tb);\n            break;\n        }\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        color: this.color,\n        image: this.image,\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Blend} Instance of fabric.Image.filters.Blend\n   */\n  fabric.Image.filters.Blend.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n      sqrt = Math.sqrt, abs = Math.abs, max = Math.max, round = Math.round, sin = Math.sin,\n      ceil = Math.ceil,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Resize image filter class\n   * @class fabric.Image.filters.Resize\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Resize();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Resize',\n\n    /**\n     * Resize type\n     * @param {String} resizeType\n     * @default\n     */\n    resizeType: 'hermite',\n\n    /**\n     * Scale factor for resizing, x axis\n     * @param {Number} scaleX\n     * @default\n     */\n    scaleX: 0,\n\n    /**\n     * Scale factor for resizing, y axis\n     * @param {Number} scaleY\n     * @default\n     */\n    scaleY: 0,\n\n    /**\n     * LanczosLobes parameter for lanczos filter\n     * @param {Number} lanczosLobes\n     * @default\n     */\n    lanczosLobes: 3,\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Resize.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} scaleX\n     * @param {Number} scaleY\n     */\n    applyTo: function(canvasEl, scaleX, scaleY) {\n      if (scaleX === 1 && scaleY === 1) {\n        return;\n      }\n\n      this.rcpScaleX = 1 / scaleX;\n      this.rcpScaleY = 1 / scaleY;\n\n      var oW = canvasEl.width, oH = canvasEl.height,\n          dW = round(oW * scaleX), dH = round(oH * scaleY),\n          imageData;\n\n      if (this.resizeType === 'sliceHack') {\n        imageData = this.sliceByTwo(canvasEl, oW, oH, dW, dH);\n      }\n      if (this.resizeType === 'hermite') {\n        imageData = this.hermiteFastResize(canvasEl, oW, oH, dW, dH);\n      }\n      if (this.resizeType === 'bilinear') {\n        imageData = this.bilinearFiltering(canvasEl, oW, oH, dW, dH);\n      }\n      if (this.resizeType === 'lanczos') {\n        imageData = this.lanczosResize(canvasEl, oW, oH, dW, dH);\n      }\n      canvasEl.width = dW;\n      canvasEl.height = dH;\n      canvasEl.getContext('2d').putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Filter sliceByTwo\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    sliceByTwo: function(canvasEl, oW, oH, dW, dH) {\n      var context = canvasEl.getContext('2d'), imageData,\n          multW = 0.5, multH = 0.5, signW = 1, signH = 1,\n          doneW = false, doneH = false, stepW = oW, stepH = oH,\n          tmpCanvas = fabric.util.createCanvasElement(),\n          tmpCtx = tmpCanvas.getContext('2d');\n      dW = floor(dW);\n      dH = floor(dH);\n      tmpCanvas.width = max(dW, oW);\n      tmpCanvas.height = max(dH, oH);\n\n      if (dW > oW) {\n        multW = 2;\n        signW = -1;\n      }\n      if (dH > oH) {\n        multH = 2;\n        signH = -1;\n      }\n      imageData = context.getImageData(0, 0, oW, oH);\n      canvasEl.width = max(dW, oW);\n      canvasEl.height = max(dH, oH);\n      context.putImageData(imageData, 0, 0);\n\n      while (!doneW || !doneH) {\n        oW = stepW;\n        oH = stepH;\n        if (dW * signW < floor(stepW * multW * signW)) {\n          stepW = floor(stepW * multW);\n        }\n        else {\n          stepW = dW;\n          doneW = true;\n        }\n        if (dH * signH < floor(stepH * multH * signH)) {\n          stepH = floor(stepH * multH);\n        }\n        else {\n          stepH = dH;\n          doneH = true;\n        }\n        imageData = context.getImageData(0, 0, oW, oH);\n        tmpCtx.putImageData(imageData, 0, 0);\n        context.clearRect(0, 0, stepW, stepH);\n        context.drawImage(tmpCanvas, 0, 0, oW, oH, 0, 0, stepW, stepH);\n      }\n      return context.getImageData(0, 0, dW, dH);\n    },\n\n    /**\n     * Filter lanczosResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    lanczosResize: function(canvasEl, oW, oH, dW, dH) {\n\n      function lanczosCreate(lobes) {\n        return function(x) {\n          if (x > lobes) {\n            return 0;\n          }\n          x *= Math.PI;\n          if (abs(x) < 1e-16) {\n            return 1;\n          }\n          var xx = x / lobes;\n          return sin(x) * sin(xx) / x / xx;\n        };\n      }\n\n      function process(u) {\n        var v, i, weight, idx, a, red, green,\n            blue, alpha, fX, fY;\n        center.x = (u + 0.5) * ratioX;\n        icenter.x = floor(center.x);\n        for (v = 0; v < dH; v++) {\n          center.y = (v + 0.5) * ratioY;\n          icenter.y = floor(center.y);\n          a = 0; red = 0; green = 0; blue = 0; alpha = 0;\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n            if (i < 0 || i >= oW) {\n              continue;\n            }\n            fX = floor(1000 * abs(i - center.x));\n            if (!cacheLanc[fX]) {\n              cacheLanc[fX] = { };\n            }\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n              if (j < 0 || j >= oH) {\n                continue;\n              }\n              fY = floor(1000 * abs(j - center.y));\n              if (!cacheLanc[fX][fY]) {\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n              }\n              weight = cacheLanc[fX][fY];\n              if (weight > 0) {\n                idx = (j * oW + i) * 4;\n                a += weight;\n                red += weight * srcData[idx];\n                green += weight * srcData[idx + 1];\n                blue += weight * srcData[idx + 2];\n                alpha += weight * srcData[idx + 3];\n              }\n            }\n          }\n          idx = (v * dW + u) * 4;\n          destData[idx] = red / a;\n          destData[idx + 1] = green / a;\n          destData[idx + 2] = blue / a;\n          destData[idx + 3] = alpha / a;\n        }\n\n        if (++u < dW) {\n          return process(u);\n        }\n        else {\n          return destImg;\n        }\n      }\n\n      var context = canvasEl.getContext('2d'),\n          srcImg = context.getImageData(0, 0, oW, oH),\n          destImg = context.getImageData(0, 0, dW, dH),\n          srcData = srcImg.data, destData = destImg.data,\n          lanczos = lanczosCreate(this.lanczosLobes),\n          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n          cacheLanc = { }, center = { }, icenter = { };\n\n      return process(0);\n    },\n\n    /**\n     * bilinearFiltering\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    bilinearFiltering: function(canvasEl, oW, oH, dW, dH) {\n      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY, context = canvasEl.getContext('2d'),\n          w4 = 4 * (oW - 1), img = context.getImageData(0, 0, oW, oH),\n          pixels = img.data, destImage = context.getImageData(0, 0, dW, dH),\n          destPixels = destImage.data;\n      for (i = 0; i < dH; i++) {\n        for (j = 0; j < dW; j++) {\n          x = floor(ratioX * j);\n          y = floor(ratioY * i);\n          xDiff = ratioX * j - x;\n          yDiff = ratioY * i - y;\n          origPix = 4 * (y * oW + x);\n\n          for (chnl = 0; chnl < 4; chnl++) {\n            a = pixels[origPix + chnl];\n            b = pixels[origPix + 4 + chnl];\n            c = pixels[origPix + w4 + chnl];\n            d = pixels[origPix + w4 + 4 + chnl];\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n            destPixels[offset++] = color;\n          }\n        }\n      }\n      return destImage;\n    },\n\n    /**\n     * hermiteFastResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    hermiteFastResize: function(canvasEl, oW, oH, dW, dH) {\n      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n          ratioWHalf = ceil(ratioW / 2),\n          ratioHHalf = ceil(ratioH / 2),\n          context = canvasEl.getContext('2d'),\n          img = context.getImageData(0, 0, oW, oH), data = img.data,\n          img2 = context.getImageData(0, 0, dW, dH), data2 = img2.data;\n      for (var j = 0; j < dH; j++) {\n        for (var i = 0; i < dW; i++) {\n          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n                  w = sqrt(w0 + dx * dx);\n              /* eslint-disable max-depth */\n              if (w > 1 && w < -1) {\n                continue;\n              }\n              //hermite filter\n              weight = 2 * w * w * w - 3 * w * w + 1;\n              if (weight > 0) {\n                dx = 4 * (xx + yy * oW);\n                //alpha\n                gxA += weight * data[dx + 3];\n                weightsAlpha += weight;\n                //colors\n                if (data[dx + 3] < 255) {\n                  weight = weight * data[dx + 3] / 250;\n                }\n                gxR += weight * data[dx];\n                gxG += weight * data[dx + 1];\n                gxB += weight * data[dx + 2];\n                weights += weight;\n              }\n              /* eslint-enable max-depth */\n            }\n          }\n          data2[x2] = gxR / weights;\n          data2[x2 + 1] = gxG / weights;\n          data2[x2 + 2] = gxB / weights;\n          data2[x2 + 3] = gxA / weightsAlpha;\n        }\n      }\n      return img2;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        resizeType: this.resizeType,\n        lanczosLobes: this.lanczosLobes\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n   */\n  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Matrix filter class\n   * @class fabric.Image.filters.ColorMatrix\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n   * @example <caption>Kodachrome filter</caption>\n   * var filter = new fabric.Image.filters.ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'ColorMatrix',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.ColorMatrix.prototype\n     * @param {Object} [options] Options object\n     * @param {Array} [options.matrix] Color Matrix to modify the image data with\n     */\n    initialize: function( options ) {\n      options || ( options = {} );\n      this.matrix = options.matrix || [\n        1, 0, 0, 0, 0,\n        0, 1, 0, 0, 0,\n        0, 0, 1, 0, 0,\n        0, 0, 0, 1, 0\n      ];\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function( canvasEl ) {\n      var context = canvasEl.getContext( '2d' ),\n          imageData = context.getImageData( 0, 0, canvasEl.width, canvasEl.height ),\n          data = imageData.data,\n          iLen = data.length,\n          i,\n          r,\n          g,\n          b,\n          a,\n          m = this.matrix;\n\n      for ( i = 0; i < iLen; i += 4 ) {\n        r = data[ i ];\n        g = data[ i + 1 ];\n        b = data[ i + 2 ];\n        a = data[ i + 3 ];\n\n        data[ i ] = r * m[ 0 ] + g * m[ 1 ] + b * m[ 2 ] + a * m[ 3 ] + m[ 4 ];\n        data[ i + 1 ] = r * m[ 5 ] + g * m[ 6 ] + b * m[ 7 ] + a * m[ 8 ] + m[ 9 ];\n        data[ i + 2 ] = r * m[ 10 ] + g * m[ 11 ] + b * m[ 12 ] + a * m[ 13 ] + m[ 14 ];\n        data[ i + 3 ] = r * m[ 15 ] + g * m[ 16 ] + b * m[ 17 ] + a * m[ 18 ] + m[ 19 ];\n      }\n\n      context.putImageData( imageData, 0, 0 );\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        type: this.type,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] function to invoke after filter creation\n   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n   */\n  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Contrast filter class\n   * @class fabric.Image.filters.Contrast\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Contrast({\n   *   contrast: 40\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Contrast',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Contrast.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.contrast=0] Value to contrast the image up (-255...255)\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.contrast = options.contrast || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          contrastF = 259 * (this.contrast + 255) / (255 * (259 - this.contrast));\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        data[i] = contrastF * (data[i] - 128) + 128;\n        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        contrast: this.contrast\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n   */\n  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Saturate filter class\n   * @class fabric.Image.filters.Saturate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Saturate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Saturate({\n   *   saturate: 100\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Saturate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Saturate',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Saturate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.saturate=0] Value to saturate the image (-100...100)\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.saturate = options.saturate || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          max, adjust = -this.saturate * 0.01;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\n        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        saturate: this.saturate\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Saturate} Instance of fabric.Image.filters.Saturate\n   */\n  fabric.Image.filters.Saturate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed,\n      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n      MIN_TEXT_WIDTH = 2;\n\n  if (fabric.Text) {\n    fabric.warn('fabric.Text is already defined');\n    return;\n  }\n\n  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n  stateProperties.push(\n    'fontFamily',\n    'fontWeight',\n    'fontSize',\n    'text',\n    'textDecoration',\n    'textAlign',\n    'fontStyle',\n    'lineHeight',\n    'textBackgroundColor',\n    'charSpacing'\n  );\n\n  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n  cacheProperties.push(\n    'fontFamily',\n    'fontWeight',\n    'fontSize',\n    'text',\n    'textDecoration',\n    'textAlign',\n    'fontStyle',\n    'lineHeight',\n    'textBackgroundColor',\n    'charSpacing',\n    'styles'\n  );\n  /**\n   * Text class\n   * @class fabric.Text\n   * @extends fabric.Object\n   * @return {fabric.Text} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n   * @see {@link fabric.Text#initialize} for constructor definition\n   */\n  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: [\n      'fontSize',\n      'fontWeight',\n      'fontFamily',\n      'fontStyle',\n      'lineHeight',\n      'text',\n      'charSpacing',\n      'textAlign'\n    ],\n\n    /**\n     * @private\n     */\n    _reNewline: /\\r?\\n/,\n\n    /**\n     * Use this regular expression to filter for whitespace that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpacesAndTabs: /[ \\t\\r]+/g,\n\n    /**\n     * Retrieves object's fontSize\n     * @method getFontSize\n     * @memberOf fabric.Text.prototype\n     * @return {String} Font size (in pixels)\n     */\n\n    /**\n     * Sets object's fontSize\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontSize\n     * @memberOf fabric.Text.prototype\n     * @param {Number} fontSize Font size (in pixels)\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's fontWeight\n     * @method getFontWeight\n     * @memberOf fabric.Text.prototype\n     * @return {(String|Number)} Font weight\n     */\n\n    /**\n     * Sets object's fontWeight\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontWeight\n     * @memberOf fabric.Text.prototype\n     * @param {(Number|String)} fontWeight Font weight\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's fontFamily\n     * @method getFontFamily\n     * @memberOf fabric.Text.prototype\n     * @return {String} Font family\n     */\n\n    /**\n     * Sets object's fontFamily\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontFamily\n     * @memberOf fabric.Text.prototype\n     * @param {String} fontFamily Font family\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's text\n     * @method getText\n     * @memberOf fabric.Text.prototype\n     * @return {String} text\n     */\n\n    /**\n     * Sets object's text\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setText\n     * @memberOf fabric.Text.prototype\n     * @param {String} text Text\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's textDecoration\n     * @method getTextDecoration\n     * @memberOf fabric.Text.prototype\n     * @return {String} Text decoration\n     */\n\n    /**\n     * Sets object's textDecoration\n     * @method setTextDecoration\n     * @memberOf fabric.Text.prototype\n     * @param {String} textDecoration Text decoration\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's fontStyle\n     * @method getFontStyle\n     * @memberOf fabric.Text.prototype\n     * @return {String} Font style\n     */\n\n    /**\n     * Sets object's fontStyle\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontStyle\n     * @memberOf fabric.Text.prototype\n     * @param {String} fontStyle Font style\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's lineHeight\n     * @method getLineHeight\n     * @memberOf fabric.Text.prototype\n     * @return {Number} Line height\n     */\n\n    /**\n     * Sets object's lineHeight\n     * @method setLineHeight\n     * @memberOf fabric.Text.prototype\n     * @param {Number} lineHeight Line height\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's textAlign\n     * @method getTextAlign\n     * @memberOf fabric.Text.prototype\n     * @return {String} Text alignment\n     */\n\n    /**\n     * Sets object's textAlign\n     * @method setTextAlign\n     * @memberOf fabric.Text.prototype\n     * @param {String} textAlign Text alignment\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's textBackgroundColor\n     * @method getTextBackgroundColor\n     * @memberOf fabric.Text.prototype\n     * @return {String} Text background color\n     */\n\n    /**\n     * Sets object's textBackgroundColor\n     * @method setTextBackgroundColor\n     * @memberOf fabric.Text.prototype\n     * @param {String} textBackgroundColor Text background color\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type:                 'text',\n\n    /**\n     * Font size (in pixels)\n     * @type Number\n     * @default\n     */\n    fontSize:             40,\n\n    /**\n     * Font weight (e.g. bold, normal, 400, 600, 800)\n     * @type {(Number|String)}\n     * @default\n     */\n    fontWeight:           'normal',\n\n    /**\n     * Font family\n     * @type String\n     * @default\n     */\n    fontFamily:           'Times New Roman',\n\n    /**\n     * Text decoration Possible values: \"\", \"underline\", \"overline\" or \"line-through\".\n     * @type String\n     * @default\n     */\n    textDecoration:       '',\n\n    /**\n     * Text alignment. Possible values: \"left\", \"center\", \"right\" or \"justify\".\n     * @type String\n     * @default\n     */\n    textAlign:            'left',\n\n    /**\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n     * @type String\n     * @default\n     */\n    fontStyle:            '',\n\n    /**\n     * Line height\n     * @type Number\n     * @default\n     */\n    lineHeight:           1.16,\n\n    /**\n     * Background color of text lines\n     * @type String\n     * @default\n     */\n    textBackgroundColor:  '',\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties:      stateProperties,\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties:      cacheProperties,\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color.\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n     * @type String\n     * @default\n     */\n    stroke:               null,\n\n    /**\n     * Shadow object representing shadow of this shape.\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:               null,\n\n    /**\n     * @private\n     */\n    _fontSizeFraction: 0.25,\n\n    /**\n     * Text Line proportion to font Size (in pixels)\n     * @type Number\n     * @default\n     */\n    _fontSizeMult:             1.13,\n\n    /**\n     * additional space between characters\n     * expressed in thousands of em unit\n     * @type Number\n     * @default\n     */\n    charSpacing:             0,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    initialize: function(text, options) {\n      options = options || { };\n      this.text = text;\n      this.__skipDimension = true;\n      this.callSuper('initialize', options);\n      this.__skipDimension = false;\n      this._initDimensions();\n      this.setCoords();\n      this.setupState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @param {CanvasRenderingContext2D} [ctx] Context to render on\n     * @private\n     */\n    _initDimensions: function(ctx) {\n      if (this.__skipDimension) {\n        return;\n      }\n      if (!ctx) {\n        ctx = fabric.util.createCanvasElement().getContext('2d');\n        this._setTextStyles(ctx);\n      }\n      this._textLines = this._splitTextIntoLines();\n      this._clearCache();\n      this.width = this._getTextWidth(ctx) || this.cursorWidth || MIN_TEXT_WIDTH;\n      this.height = this._getTextHeight(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of text object\n     */\n    toString: function() {\n      return '#<fabric.Text (' + this.complexity() +\n        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var dim = this.callSuper('_getCacheCanvasDimensions');\n      var fontSize = this.fontSize;\n      dim.width += fontSize * dim.zoomX;\n      dim.height += fontSize * dim.zoomY;\n      return dim;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this._setTextStyles(ctx);\n      if (this.group && this.group.type === 'path-group') {\n        ctx.translate(this.left, this.top);\n      }\n      this._renderTextLinesBackground(ctx);\n      this._renderText(ctx);\n      this._renderTextDecoration(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderText: function(ctx) {\n      this._renderTextFill(ctx);\n      this._renderTextStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setTextStyles: function(ctx) {\n      ctx.textBaseline = 'alphabetic';\n      ctx.font = this._getFontDeclaration();\n    },\n\n    /**\n     * @private\n     * @return {Number} Height of fabric.Text object\n     */\n    _getTextHeight: function() {\n      return this._getHeightOfSingleLine() + (this._textLines.length - 1) * this._getHeightOfLine();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Maximum width of fabric.Text object\n     */\n    _getTextWidth: function(ctx) {\n      var maxWidth = this._getLineWidth(ctx, 0);\n\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        var currentLineWidth = this._getLineWidth(ctx, i);\n        if (currentLineWidth > maxWidth) {\n          maxWidth = currentLineWidth;\n        }\n      }\n      return maxWidth;\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} chars Chars to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     */\n    _renderChars: function(method, ctx, chars, left, top) {\n      // remove Text word from method var\n      var shortM = method.slice(0, -4), _char, width;\n      if (this[shortM].toLive) {\n        var offsetX = -this.width / 2 + this[shortM].offsetX || 0,\n            offsetY = -this.height / 2 + this[shortM].offsetY || 0;\n        ctx.save();\n        ctx.translate(offsetX, offsetY);\n        left -= offsetX;\n        top -= offsetY;\n      }\n      if (this.charSpacing !== 0) {\n        var additionalSpace = this._getWidthOfCharSpacing();\n        chars = chars.split('');\n        for (var i = 0, len = chars.length; i < len; i++) {\n          _char = chars[i];\n          width = ctx.measureText(_char).width + additionalSpace;\n          ctx[method](_char, left, top);\n          left += width > 0 ? width : 0;\n        }\n      }\n      else {\n        ctx[method](chars, left, top);\n      }\n      this[shortM].toLive && ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Text to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     * @param {Number} lineIndex Index of a line in a text\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      // lift the line by quarter of fontSize\n      top -= this.fontSize * this._fontSizeFraction;\n\n      // short-circuit\n      var lineWidth = this._getLineWidth(ctx, lineIndex);\n      if (this.textAlign !== 'justify' || this.width < lineWidth) {\n        this._renderChars(method, ctx, line, left, top, lineIndex);\n        return;\n      }\n\n      // stretch the line\n      var words = line.split(/\\s+/),\n          charOffset = 0,\n          wordsWidth = this._getWidthOfWords(ctx, words.join(' '), lineIndex, 0),\n          widthDiff = this.width - wordsWidth,\n          numSpaces = words.length - 1,\n          spaceWidth = numSpaces > 0 ? widthDiff / numSpaces : 0,\n          leftOffset = 0, word;\n\n      for (var i = 0, len = words.length; i < len; i++) {\n        while (line[charOffset] === ' ' && charOffset < line.length) {\n          charOffset++;\n        }\n        word = words[i];\n        this._renderChars(method, ctx, word, left + leftOffset, top, lineIndex, charOffset);\n        leftOffset += this._getWidthOfWords(ctx, word, lineIndex, charOffset) + spaceWidth;\n        charOffset += word.length;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} word\n     */\n    _getWidthOfWords: function (ctx, word) {\n      var width = ctx.measureText(word).width, charCount, additionalSpace;\n      if (this.charSpacing !== 0) {\n        charCount = word.split('').length;\n        additionalSpace = charCount * this._getWidthOfCharSpacing();\n        width += additionalSpace;\n      }\n      return width > 0 ? width : 0;\n    },\n\n    /**\n     * @private\n     * @return {Number} Left offset\n     */\n    _getLeftOffset: function() {\n      return -this.width / 2;\n    },\n\n    /**\n     * @private\n     * @return {Number} Top offset\n     */\n    _getTopOffset: function() {\n      return -this.height / 2;\n    },\n\n    /**\n     * Returns true because text has no style\n     */\n    isEmptyStyles: function() {\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     */\n    _renderTextCommon: function(ctx, method) {\n\n      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset();\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this._getHeightOfLine(ctx, i),\n            maxHeight = heightOfLine / this.lineHeight,\n            lineWidth = this._getLineWidth(ctx, i),\n            leftOffset = this._getLineLeftOffset(lineWidth);\n        this._renderTextLine(\n          method,\n          ctx,\n          this._textLines[i],\n          left + leftOffset,\n          top + lineHeights + maxHeight,\n          i\n        );\n        lineHeights += heightOfLine;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextFill: function(ctx) {\n      if (!this.fill && this.isEmptyStyles()) {\n        return;\n      }\n\n      this._renderTextCommon(ctx, 'fillText');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextStroke: function(ctx) {\n      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray);\n      ctx.beginPath();\n      this._renderTextCommon(ctx, 'strokeText');\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @return {Number} height of line\n     */\n    _getHeightOfLine: function() {\n      return this._getHeightOfSingleLine() * this.lineHeight;\n    },\n\n    /**\n     * @private\n     * @return {Number} height of line without lineHeight\n     */\n    _getHeightOfSingleLine: function() {\n      return this.fontSize * this._fontSizeMult;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      if (!this.textBackgroundColor) {\n        return;\n      }\n      var lineTopOffset = 0, heightOfLine,\n          lineWidth, lineLeftOffset, originalFill = ctx.fillStyle;\n\n      ctx.fillStyle = this.textBackgroundColor;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this._getHeightOfLine(ctx, i);\n        lineWidth = this._getLineWidth(ctx, i);\n        if (lineWidth > 0) {\n          lineLeftOffset = this._getLineLeftOffset(lineWidth);\n          ctx.fillRect(\n            this._getLeftOffset() + lineLeftOffset,\n            this._getTopOffset() + lineTopOffset,\n            lineWidth,\n            heightOfLine / this.lineHeight\n          );\n        }\n        lineTopOffset += heightOfLine;\n      }\n      ctx.fillStyle = originalFill;\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {Number} lineWidth Width of text line\n     * @return {Number} Line left offset\n     */\n    _getLineLeftOffset: function(lineWidth) {\n      if (this.textAlign === 'center') {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'right') {\n        return this.width - lineWidth;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.__lineWidths = [];\n      this.__lineHeights = [];\n    },\n\n    /**\n     * @private\n     */\n    _shouldClearDimensionCache: function() {\n      var shouldClear = this._forceClearCache;\n      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\n      if (shouldClear) {\n        this.saveState({ propertySet: '_dimensionAffectingProps' });\n        this.dirty = true;\n      }\n      return shouldClear;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    _getLineWidth: function(ctx, lineIndex) {\n      if (this.__lineWidths[lineIndex]) {\n        return this.__lineWidths[lineIndex] === -1 ? this.width : this.__lineWidths[lineIndex];\n      }\n\n      var width, wordCount, line = this._textLines[lineIndex];\n\n      if (line === '') {\n        width = 0;\n      }\n      else {\n        width = this._measureLine(ctx, lineIndex);\n      }\n      this.__lineWidths[lineIndex] = width;\n\n      if (width && this.textAlign === 'justify') {\n        wordCount = line.split(/\\s+/);\n        if (wordCount.length > 1) {\n          this.__lineWidths[lineIndex] = -1;\n        }\n      }\n      return width;\n    },\n\n    _getWidthOfCharSpacing: function() {\n      if (this.charSpacing !== 0) {\n        return this.fontSize * this.charSpacing / 1000;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    _measureLine: function(ctx, lineIndex) {\n      var line = this._textLines[lineIndex],\n          width = ctx.measureText(line).width,\n          additionalSpace = 0, charCount, finalWidth;\n      if (this.charSpacing !== 0) {\n        charCount = line.split('').length;\n        additionalSpace = (charCount - 1) * this._getWidthOfCharSpacing();\n      }\n      finalWidth = width + additionalSpace;\n      return finalWidth > 0 ? finalWidth : 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx) {\n      if (!this.textDecoration) {\n        return;\n      }\n      var halfOfVerticalBox = this.height / 2,\n          _this = this, offsets = [];\n\n      /** @ignore */\n      function renderLinesAtOffset(offsets) {\n        var i, lineHeight = 0, len, j, oLen, lineWidth,\n            lineLeftOffset, heightOfLine;\n\n        for (i = 0, len = _this._textLines.length; i < len; i++) {\n\n          lineWidth = _this._getLineWidth(ctx, i);\n          lineLeftOffset = _this._getLineLeftOffset(lineWidth);\n          heightOfLine = _this._getHeightOfLine(ctx, i);\n\n          for (j = 0, oLen = offsets.length; j < oLen; j++) {\n            ctx.fillRect(\n              _this._getLeftOffset() + lineLeftOffset,\n              lineHeight + (_this._fontSizeMult - 1 + offsets[j] ) * _this.fontSize - halfOfVerticalBox,\n              lineWidth,\n              _this.fontSize / 15);\n          }\n          lineHeight += heightOfLine;\n        }\n      }\n\n      if (this.textDecoration.indexOf('underline') > -1) {\n        offsets.push(0.85); // 1 - 3/16\n      }\n      if (this.textDecoration.indexOf('line-through') > -1) {\n        offsets.push(0.43);\n      }\n      if (this.textDecoration.indexOf('overline') > -1) {\n        offsets.push(-0.12);\n      }\n      if (offsets.length > 0) {\n        renderLinesAtOffset(offsets);\n      }\n    },\n\n    /**\n     * return font declaration string for canvas context\n     * @returns {String} font declaration formatted for canvas context.\n     */\n    _getFontDeclaration: function() {\n      return [\n        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n        (fabric.isLikelyNode ? this.fontWeight : this.fontStyle),\n        (fabric.isLikelyNode ? this.fontStyle : this.fontWeight),\n        this.fontSize + 'px',\n        (fabric.isLikelyNode ? ('\"' + this.fontFamily + '\"') : this.fontFamily)\n      ].join(' ');\n    },\n\n    /**\n     * Renders text instance on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    render: function(ctx, noTransform) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      if (this._shouldClearDimensionCache()) {\n        this._setTextStyles(ctx);\n        this._initDimensions(ctx);\n      }\n      this.callSuper('render', ctx, noTransform);\n    },\n\n    /**\n     * Returns the text as an array of lines.\n     * @returns {Array} Lines in the text\n     */\n    _splitTextIntoLines: function() {\n      return this.text.split(this._reNewline);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var additionalProperties = [\n        'text',\n        'fontSize',\n        'fontWeight',\n        'fontFamily',\n        'fontStyle',\n        'lineHeight',\n        'textDecoration',\n        'textAlign',\n        'textBackgroundColor',\n        'charSpacing'\n      ].concat(propertiesToInclude);\n      return this.callSuper('toObject', additionalProperties);\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      if (!this.ctx) {\n        this.ctx = fabric.util.createCanvasElement().getContext('2d');\n      }\n      var markup = this._createBaseSVGMarkup(),\n          offsets = this._getSVGLeftTopOffsets(this.ctx),\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n      this._wrapSVGTextAndBg(markup, textAndBg);\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLeftTopOffsets: function(ctx) {\n      var lineTop = this._getHeightOfLine(ctx, 0),\n          textLeft = -this.width / 2,\n          textTop = 0;\n\n      return {\n        textLeft: textLeft + (this.group && this.group.type === 'path-group' ? this.left : 0),\n        textTop: textTop + (this.group && this.group.type === 'path-group' ? -this.top : 0),\n        lineTop: lineTop\n      };\n    },\n\n    /**\n     * @private\n     */\n    _wrapSVGTextAndBg: function(markup, textAndBg) {\n      var noShadow = true, filter = this.getSvgFilter(),\n          style = filter === '' ? '' : ' style=\"' + filter + '\"';\n\n      markup.push(\n        '\\t<g ', this.getSvgId(), 'transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\"',\n          style, '>\\n',\n          textAndBg.textBgRects.join(''),\n          '\\t\\t<text xml:space=\"preserve\" ',\n            (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n            (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\n            (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\n            (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\n            (this.textDecoration ? 'text-decoration=\"' + this.textDecoration + '\" ' : ''),\n            'style=\"', this.getSvgStyles(noShadow), '\" >\\n',\n            textAndBg.textSpans.join(''),\n          '\\t\\t</text>\\n',\n        '\\t</g>\\n'\n      );\n    },\n\n    getSvgStyles: function(skipShadow) {\n      var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\n      return svgStyle + ' white-space: pre;';\n    },\n\n    /**\n     * @private\n     * @param {Number} textTopOffset Text top offset\n     * @param {Number} textLeftOffset Text left offset\n     * @return {Object}\n     */\n    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n      var textSpans = [],\n          textBgRects = [],\n          height = 0;\n      // bounding-box background\n      this._setSVGBg(textBgRects);\n\n      // text and text-background\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this.textBackgroundColor) {\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset, textTopOffset, height);\n        }\n        this._setSVGTextLineText(i, textSpans, height, textLeftOffset, textTopOffset, textBgRects);\n        height += this._getHeightOfLine(this.ctx, i);\n      }\n\n      return {\n        textSpans: textSpans,\n        textBgRects: textBgRects\n      };\n    },\n\n    _setSVGTextLineText: function(i, textSpans, height, textLeftOffset, textTopOffset) {\n      var yPos = this.fontSize * (this._fontSizeMult - this._fontSizeFraction)\n        - textTopOffset + height - this.height / 2;\n      if (this.textAlign === 'justify') {\n        // i call from here to do not intefere with IText\n        this._setSVGTextLineJustifed(i, textSpans, yPos, textLeftOffset);\n        return;\n      }\n      textSpans.push(\n        '\\t\\t\\t<tspan x=\"',\n          toFixed(textLeftOffset + this._getLineLeftOffset(this._getLineWidth(this.ctx, i)), NUM_FRACTION_DIGITS), '\" ',\n          'y=\"',\n          toFixed(yPos, NUM_FRACTION_DIGITS),\n          '\" ',\n          // doing this on <tspan> elements since setting opacity\n          // on containing <text> one doesn't work in Illustrator\n          this._getFillAttributes(this.fill), '>',\n          fabric.util.string.escapeXml(this._textLines[i]),\n        '</tspan>\\n'\n      );\n    },\n\n    _setSVGTextLineJustifed: function(i, textSpans, yPos, textLeftOffset) {\n      var ctx = fabric.util.createCanvasElement().getContext('2d');\n\n      this._setTextStyles(ctx);\n\n      var line = this._textLines[i],\n          words = line.split(/\\s+/),\n          wordsWidth = this._getWidthOfWords(ctx, words.join('')),\n          widthDiff = this.width - wordsWidth,\n          numSpaces = words.length - 1,\n          spaceWidth = numSpaces > 0 ? widthDiff / numSpaces : 0,\n          word, attributes = this._getFillAttributes(this.fill),\n          len;\n\n      textLeftOffset += this._getLineLeftOffset(this._getLineWidth(ctx, i));\n\n      for (i = 0, len = words.length; i < len; i++) {\n        word = words[i];\n        textSpans.push(\n          '\\t\\t\\t<tspan x=\"',\n            toFixed(textLeftOffset, NUM_FRACTION_DIGITS), '\" ',\n            'y=\"',\n            toFixed(yPos, NUM_FRACTION_DIGITS),\n            '\" ',\n            // doing this on <tspan> elements since setting opacity\n            // on containing <text> one doesn't work in Illustrator\n            attributes, '>',\n            fabric.util.string.escapeXml(word),\n          '</tspan>\\n'\n        );\n        textLeftOffset += this._getWidthOfWords(ctx, word) + spaceWidth;\n      }\n    },\n\n    _setSVGTextLineBg: function(textBgRects, i, textLeftOffset, textTopOffset, height) {\n      textBgRects.push(\n        '\\t\\t<rect ',\n          this._getFillAttributes(this.textBackgroundColor),\n          ' x=\"',\n          toFixed(textLeftOffset + this._getLineLeftOffset(this._getLineWidth(this.ctx, i)), NUM_FRACTION_DIGITS),\n          '\" y=\"',\n          toFixed(height - this.height / 2, NUM_FRACTION_DIGITS),\n          '\" width=\"',\n          toFixed(this._getLineWidth(this.ctx, i), NUM_FRACTION_DIGITS),\n          '\" height=\"',\n          toFixed(this._getHeightOfLine(this.ctx, i) / this.lineHeight, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n');\n    },\n\n    _setSVGBg: function(textBgRects) {\n      if (this.backgroundColor) {\n        textBgRects.push(\n          '\\t\\t<rect ',\n            this._getFillAttributes(this.backgroundColor),\n            ' x=\"',\n            toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n            '\" y=\"',\n            toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n            '\" width=\"',\n            toFixed(this.width, NUM_FRACTION_DIGITS),\n            '\" height=\"',\n            toFixed(this.height, NUM_FRACTION_DIGITS),\n          '\"></rect>\\n');\n      }\n    },\n\n    /**\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n     *\n     * @private\n     * @param {*} value\n     * @return {String}\n     */\n    _getFillAttributes: function(value) {\n      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n        return 'fill=\"' + value + '\"';\n      }\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Sets specified property to a specified value\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Text} thisArg\n     * @chainable\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (this._dimensionAffectingProps.indexOf(key) > -1) {\n        this._initDimensions();\n        this.setCoords();\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n   * @static\n   * @memberOf fabric.Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n    'x y dx dy font-family font-style font-weight font-size text-decoration text-anchor'.split(' '));\n\n  /**\n   * Default SVG font size\n   * @static\n   * @memberOf fabric.Text\n   */\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\n  /**\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf fabric.Text\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Text} Instance of fabric.Text\n   */\n  fabric.Text.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES);\n    options = fabric.util.object.extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes);\n\n    options.top = options.top || 0;\n    options.left = options.left || 0;\n    if ('dx' in parsedAttributes) {\n      options.left += parsedAttributes.dx;\n    }\n    if ('dy' in parsedAttributes) {\n      options.top += parsedAttributes.dy;\n    }\n    if (!('fontSize' in options)) {\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n    }\n\n    if (!options.originX) {\n      options.originX = 'left';\n    }\n\n    var textContent = '';\n\n    // The XML is not properly parsed in IE9 so a workaround to get\n    // textContent is through firstChild.data. Another workaround would be\n    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n    if (!('textContent' in element)) {\n      if ('firstChild' in element && element.firstChild !== null) {\n        if ('data' in element.firstChild && element.firstChild.data !== null) {\n          textContent = element.firstChild.data;\n        }\n      }\n    }\n    else {\n      textContent = element.textContent;\n    }\n\n    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n\n    var text = new fabric.Text(textContent, options),\n        textHeightScaleFactor = text.getHeight() / text.height,\n        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n        textHeight = text.getHeight() + scaledDiff,\n        offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        top/left properties in Fabric correspond to center point of text bounding box\n    */\n    if (text.originX === 'left') {\n      offX = text.getWidth() / 2;\n    }\n    if (text.originX === 'right') {\n      offX = -text.getWidth() / 2;\n    }\n    text.set({\n      left: text.getLeft() + offX,\n      top: text.getTop() - textHeight / 2 + text.fontSize * (0.18 + text._fontSizeFraction) / text.lineHeight /* 0.3 is the old lineHeight */\n    });\n\n    return text;\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Text instance from an object representation\n   * @static\n   * @memberOf fabric.Text\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Text} Instance of fabric.Text\n   */\n  fabric.Text.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Text', object, callback, forceAsync, 'text');\n  };\n\n  fabric.util.createAccessors(fabric.Text);\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  /**\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n   * prefix when observing canvas.\n   * @class fabric.IText\n   * @extends fabric.Text\n   * @mixes fabric.Observable\n   *\n   * @fires changed\n   * @fires selection:changed\n   * @fires editing:entered\n   * @fires editing:exited\n   *\n   * @return {fabric.IText} thisArg\n   * @see {@link fabric.IText#initialize} for constructor definition\n   *\n   * <p>Supported key combinations:</p>\n   * <pre>\n   *   Move cursor:                    left, right, up, down\n   *   Select character:               shift + left, shift + right\n   *   Select text vertically:         shift + up, shift + down\n   *   Move cursor by word:            alt + left, alt + right\n   *   Select words:                   shift + alt + left, shift + alt + right\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n   *   Jump to start/end of text:      cmd + up, cmd + down\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n   *   Delete character:               backspace\n   *   Delete word:                    alt + backspace\n   *   Delete line:                    cmd + backspace\n   *   Forward delete:                 delete\n   *   Copy text:                      ctrl/cmd + c\n   *   Paste text:                     ctrl/cmd + v\n   *   Cut text:                       ctrl/cmd + x\n   *   Select entire text:             ctrl/cmd + a\n   *   Quit editing                    tab or esc\n   * </pre>\n   *\n   * <p>Supported mouse/touch combination</p>\n   * <pre>\n   *   Position cursor:                click/touch\n   *   Create selection:               click/touch & drag\n   *   Create selection:               click & shift + click\n   *   Select word:                    double click\n   *   Select line:                    triple click\n   * </pre>\n   */\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'i-text',\n\n    /**\n     * Index where text selection starts (or where cursor is when there is no selection)\n     * @type Number\n     * @default\n     */\n    selectionStart: 0,\n\n    /**\n     * Index where text selection ends\n     * @type Number\n     * @default\n     */\n    selectionEnd: 0,\n\n    /**\n     * Color of text selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(17,119,255,0.3)',\n\n    /**\n     * Indicates whether text is in editing mode\n     * @type Boolean\n     * @default\n     */\n    isEditing: false,\n\n    /**\n     * Indicates whether a text can be edited\n     * @type Boolean\n     * @default\n     */\n    editable: true,\n\n    /**\n     * Border color of text object while it's in editing mode\n     * @type String\n     * @default\n     */\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n\n    /**\n     * Width of cursor (in px)\n     * @type Number\n     * @default\n     */\n    cursorWidth: 2,\n\n    /**\n     * Color of default cursor (when not overwritten by character style)\n     * @type String\n     * @default\n     */\n    cursorColor: '#333',\n\n    /**\n     * Delay between cursor blink (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDelay: 1000,\n\n    /**\n     * Duration of cursor fadein (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDuration: 600,\n\n    /**\n     * Object containing character styles\n     * (where top-level properties corresponds to line number and 2nd-level properties -- to char number in a line)\n     * @type Object\n     * @default\n     */\n    styles: null,\n\n    /**\n     * Indicates whether internal text char widths can be cached\n     * @type Boolean\n     * @default\n     */\n    caching: true,\n\n    /**\n     * @private\n     */\n    _reSpace: /\\s|\\n/,\n\n    /**\n     * @private\n     */\n    _currentCursorOpacity: 0,\n\n    /**\n     * @private\n     */\n    _selectionDirection: null,\n\n    /**\n     * @private\n     */\n    _abortCursorAnimation: false,\n\n    /**\n     * @private\n     */\n    __widthOfSpace: [],\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.IText} thisArg\n     */\n    initialize: function(text, options) {\n      this.styles = options ? (options.styles || { }) : { };\n      this.callSuper('initialize', text, options);\n      this.initBehavior();\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.callSuper('_clearCache');\n      this.__widthOfSpace = [];\n    },\n\n    /**\n     * Returns true if object has no styling\n     */\n    isEmptyStyles: function() {\n      if (!this.styles) {\n        return true;\n      }\n      var obj = this.styles;\n\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          // eslint-disable-next-line no-unused-vars\n          for (var p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Sets selection start (left boundary of a selection)\n     * @param {Number} index Index to set selection start to\n     */\n    setSelectionStart: function(index) {\n      index = Math.max(index, 0);\n      this._updateAndFire('selectionStart', index);\n    },\n\n    /**\n     * Sets selection end (right boundary of a selection)\n     * @param {Number} index Index to set selection end to\n     */\n    setSelectionEnd: function(index) {\n      index = Math.min(index, this.text.length);\n      this._updateAndFire('selectionEnd', index);\n    },\n\n    /**\n     * @private\n     * @param {String} property 'selectionStart' or 'selectionEnd'\n     * @param {Number} index new position of property\n     */\n    _updateAndFire: function(property, index) {\n      if (this[property] !== index) {\n        this._fireSelectionChanged();\n        this[property] = index;\n      }\n      this._updateTextarea();\n    },\n\n    /**\n     * Fires the even of selection changed\n     * @private\n     */\n    _fireSelectionChanged: function() {\n      this.fire('selection:changed');\n      this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n    },\n\n    /**\n     * Gets style of a current selection/cursor (at the start position)\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at\n     * @return {Object} styles Style object at a specified (or current) index\n     */\n    getSelectionStyles: function(startIndex, endIndex) {\n\n      if (arguments.length === 2) {\n        var styles = [];\n        for (var i = startIndex; i < endIndex; i++) {\n          styles.push(this.getSelectionStyles(i));\n        }\n        return styles;\n      }\n\n      var loc = this.get2DCursorLocation(startIndex),\n          style = this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n\n      return style || {};\n    },\n\n    /**\n     * Sets style of a current selection\n     * @param {Object} [styles] Styles object\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    setSelectionStyles: function(styles) {\n      if (this.selectionStart === this.selectionEnd) {\n        this._extendStyles(this.selectionStart, styles);\n      }\n      else {\n        for (var i = this.selectionStart; i < this.selectionEnd; i++) {\n          this._extendStyles(i, styles);\n        }\n      }\n      /* not included in _extendStyles to avoid clearing cache more than once */\n      this._forceClearCache = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _extendStyles: function(index, styles) {\n      var loc = this.get2DCursorLocation(index);\n\n      if (!this._getLineStyle(loc.lineIndex)) {\n        this._setLineStyle(loc.lineIndex, {});\n      }\n\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n      }\n\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @param {CanvasRenderingContext2D} [ctx] Context to render on\n     * @private\n     */\n    _initDimensions: function(ctx) {\n      if (!ctx) {\n        this.clearContextTop();\n      }\n      this.callSuper('_initDimensions', ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    render: function(ctx, noTransform) {\n      this.clearContextTop();\n      this.callSuper('render', ctx, noTransform);\n      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n      // the correct position but not at every cursor animation.\n      this.cursorOffsetCache = { };\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this.callSuper('_render', ctx);\n      this.ctx = ctx;\n    },\n\n    /**\n     * Prepare and clean the contextTop\n     */\n    clearContextTop: function() {\n      if (!this.active || !this.isEditing) {\n        return;\n      }\n      if (this.canvas && this.canvas.contextTop) {\n        var ctx = this.canvas.contextTop;\n        ctx.save();\n        ctx.transform.apply(ctx, this.canvas.viewportTransform);\n        this.transform(ctx);\n        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n        this._clearTextArea(ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Renders cursor or selection (depending on what exists)\n     */\n    renderCursorOrSelection: function() {\n      if (!this.active || !this.isEditing) {\n        return;\n      }\n      var chars = this.text.split(''),\n          boundaries, ctx;\n      if (this.canvas && this.canvas.contextTop) {\n        ctx = this.canvas.contextTop;\n        ctx.save();\n        ctx.transform.apply(ctx, this.canvas.viewportTransform);\n        this.transform(ctx);\n        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n        this._clearTextArea(ctx);\n      }\n      else {\n        ctx = this.ctx;\n        ctx.save();\n      }\n      if (this.selectionStart === this.selectionEnd) {\n        boundaries = this._getCursorBoundaries(chars, 'cursor');\n        this.renderCursor(boundaries, ctx);\n      }\n      else {\n        boundaries = this._getCursorBoundaries(chars, 'selection');\n        this.renderSelection(chars, boundaries, ctx);\n      }\n      ctx.restore();\n    },\n\n    _clearTextArea: function(ctx) {\n      // we add 4 pixel, to be sure to do not leave any pixel out\n      var width = this.width + 4, height = this.height + 4;\n      ctx.clearRect(-width / 2, -height / 2, width, height);\n    },\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     */\n    get2DCursorLocation: function(selectionStart) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n      var len = this._textLines.length;\n      for (var i = 0; i < len; i++) {\n        if (selectionStart <= this._textLines[i].length) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart\n          };\n        }\n        selectionStart -= this._textLines[i].length + 1;\n      }\n      return {\n        lineIndex: i - 1,\n        charIndex: this._textLines[i - 1].length < selectionStart ? this._textLines[i - 1].length : selectionStart\n      };\n    },\n\n    /**\n     * Returns complete style of char at the current cursor\n     * @param {Number} lineIndex Line index\n     * @param {Number} charIndex Char index\n     * @return {Object} Character style\n     */\n    getCurrentCharStyle: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\n      return {\n        fontSize: style && style.fontSize || this.fontSize,\n        fill: style && style.fill || this.fill,\n        textBackgroundColor: style && style.textBackgroundColor || this.textBackgroundColor,\n        textDecoration: style && style.textDecoration || this.textDecoration,\n        fontFamily: style && style.fontFamily || this.fontFamily,\n        fontWeight: style && style.fontWeight || this.fontWeight,\n        fontStyle: style && style.fontStyle || this.fontStyle,\n        stroke: style && style.stroke || this.stroke,\n        strokeWidth: style && style.strokeWidth || this.strokeWidth\n      };\n    },\n\n    /**\n     * Returns fontSize of char at the current cursor\n     * @param {Number} lineIndex Line index\n     * @param {Number} charIndex Char index\n     * @return {Number} Character font size\n     */\n    getCurrentCharFontSize: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n      return style && style.fontSize ? style.fontSize : this.fontSize;\n    },\n\n    /**\n     * Returns color (fill) of char at the current cursor\n     * @param {Number} lineIndex Line index\n     * @param {Number} charIndex Char index\n     * @return {String} Character color (fill)\n     */\n    getCurrentCharColor: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n      return style && style.fill ? style.fill : this.cursorColor;\n    },\n\n    /**\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n     * @private\n     * @param {Array} chars Array of characters\n     * @param {String} typeOfBoundaries\n     */\n    _getCursorBoundaries: function(chars, typeOfBoundaries) {\n\n      // left/top are left/top of entire text box\n      // leftOffset/topOffset are offset from that left/top point of a text box\n\n      var left = Math.round(this._getLeftOffset()),\n          top = this._getTopOffset(),\n\n          offsets = this._getCursorBoundariesOffsets(\n                      chars, typeOfBoundaries);\n\n      return {\n        left: left,\n        top: top,\n        leftOffset: offsets.left + offsets.lineLeft,\n        topOffset: offsets.top\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n        return this.cursorOffsetCache;\n      }\n      var lineLeftOffset = 0,\n          lineIndex = 0,\n          charIndex = 0,\n          topOffset = 0,\n          leftOffset = 0,\n          boundaries;\n\n      for (var i = 0; i < this.selectionStart; i++) {\n        if (chars[i] === '\\n') {\n          leftOffset = 0;\n          topOffset += this._getHeightOfLine(this.ctx, lineIndex);\n\n          lineIndex++;\n          charIndex = 0;\n        }\n        else {\n          leftOffset += this._getWidthOfChar(this.ctx, chars[i], lineIndex, charIndex);\n          charIndex++;\n        }\n\n        lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex));\n      }\n      if (typeOfBoundaries === 'cursor') {\n        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, lineIndex) / this.lineHeight\n          - this.getCurrentCharFontSize(lineIndex, charIndex) * (1 - this._fontSizeFraction);\n      }\n      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n        leftOffset -= this._getWidthOfCharSpacing();\n      }\n      boundaries = {\n        top: topOffset,\n        left: leftOffset > 0 ? leftOffset : 0,\n        lineLeft: lineLeftOffset\n      };\n      this.cursorOffsetCache = boundaries;\n      return this.cursorOffsetCache;\n    },\n\n    /**\n     * Renders cursor\n     * @param {Object} boundaries\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderCursor: function(boundaries, ctx) {\n\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n          leftOffset = boundaries.leftOffset,\n          multiplier = this.scaleX * this.canvas.getZoom(),\n          cursorWidth = this.cursorWidth / multiplier;\n\n      ctx.fillStyle = this.getCurrentCharColor(lineIndex, charIndex);\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n\n      ctx.fillRect(\n        boundaries.left + leftOffset - cursorWidth / 2,\n        boundaries.top + boundaries.topOffset,\n        cursorWidth,\n        charHeight);\n    },\n\n    /**\n     * Renders text selection\n     * @param {Array} chars Array of characters\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderSelection: function(chars, boundaries, ctx) {\n\n      ctx.fillStyle = this.selectionColor;\n\n      var start = this.get2DCursorLocation(this.selectionStart),\n          end = this.get2DCursorLocation(this.selectionEnd),\n          startLine = start.lineIndex,\n          endLine = end.lineIndex;\n      for (var i = startLine; i <= endLine; i++) {\n        var lineOffset = this._getLineLeftOffset(this._getLineWidth(ctx, i)) || 0,\n            lineHeight = this._getHeightOfLine(this.ctx, i),\n            realLineHeight = 0, boxWidth = 0, line = this._textLines[i];\n\n        if (i === startLine) {\n          for (var j = 0, len = line.length; j < len; j++) {\n            if (j >= start.charIndex && (i !== endLine || j < end.charIndex)) {\n              boxWidth += this._getWidthOfChar(ctx, line[j], i, j);\n            }\n            if (j < start.charIndex) {\n              lineOffset += this._getWidthOfChar(ctx, line[j], i, j);\n            }\n          }\n          if (j === line.length) {\n            boxWidth -= this._getWidthOfCharSpacing();\n          }\n        }\n        else if (i > startLine && i < endLine) {\n          boxWidth += this._getLineWidth(ctx, i) || 5;\n        }\n        else if (i === endLine) {\n          for (var j2 = 0, j2len = end.charIndex; j2 < j2len; j2++) {\n            boxWidth += this._getWidthOfChar(ctx, line[j2], i, j2);\n          }\n          if (end.charIndex === line.length) {\n            boxWidth -= this._getWidthOfCharSpacing();\n          }\n        }\n        realLineHeight = lineHeight;\n        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n          lineHeight /= this.lineHeight;\n        }\n        ctx.fillRect(\n          boundaries.left + lineOffset,\n          boundaries.top + boundaries.topOffset,\n          boxWidth > 0 ? boxWidth : 0,\n          lineHeight);\n\n        boundaries.topOffset += realLineHeight;\n      }\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _renderChars: function(method, ctx, line, left, top, lineIndex, charOffset) {\n\n      if (this.isEmptyStyles()) {\n        return this._renderCharsFast(method, ctx, line, left, top);\n      }\n\n      charOffset = charOffset || 0;\n\n      // set proper line offset\n      var lineHeight = this._getHeightOfLine(ctx, lineIndex),\n          prevStyle,\n          thisStyle,\n          charsToRender = '';\n\n      ctx.save();\n      top -= lineHeight / this.lineHeight * this._fontSizeFraction;\n      for (var i = charOffset, len = line.length + charOffset; i <= len; i++) {\n        prevStyle = prevStyle || this.getCurrentCharStyle(lineIndex, i);\n        thisStyle = this.getCurrentCharStyle(lineIndex, i + 1);\n\n        if (this._hasStyleChanged(prevStyle, thisStyle) || i === len) {\n          this._renderChar(method, ctx, lineIndex, i - 1, charsToRender, left, top, lineHeight);\n          charsToRender = '';\n          prevStyle = thisStyle;\n        }\n        charsToRender += line[i - charOffset];\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     */\n    _renderCharsFast: function(method, ctx, line, left, top) {\n\n      if (method === 'fillText' && this.fill) {\n        this.callSuper('_renderChars', method, ctx, line, left, top);\n      }\n      if (method === 'strokeText' && ((this.stroke && this.strokeWidth > 0) || this.skipFillStrokeCheck)) {\n        this.callSuper('_renderChars', method, ctx, line, left, top);\n      }\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} i\n     * @param {String} _char\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     * @param {Number} lineHeight Height of the line\n     */\n    _renderChar: function(method, ctx, lineIndex, i, _char, left, top, lineHeight) {\n      var charWidth, charHeight, shouldFill, shouldStroke,\n          decl = this._getStyleDeclaration(lineIndex, i),\n          offset, textDecoration, chars, additionalSpace, _charWidth;\n\n      if (decl) {\n        charHeight = this._getHeightOfChar(ctx, _char, lineIndex, i);\n        shouldStroke = decl.stroke;\n        shouldFill = decl.fill;\n        textDecoration = decl.textDecoration;\n      }\n      else {\n        charHeight = this.fontSize;\n      }\n\n      shouldStroke = (shouldStroke || this.stroke) && method === 'strokeText';\n      shouldFill = (shouldFill || this.fill) && method === 'fillText';\n\n      decl && ctx.save();\n\n      charWidth = this._applyCharStylesGetWidth(ctx, _char, lineIndex, i, decl || null);\n      textDecoration = textDecoration || this.textDecoration;\n\n      if (decl && decl.textBackgroundColor) {\n        this._removeShadow(ctx);\n      }\n      if (this.charSpacing !== 0) {\n        additionalSpace = this._getWidthOfCharSpacing();\n        chars = _char.split('');\n        charWidth = 0;\n        for (var j = 0, len = chars.length, jChar; j < len; j++) {\n          jChar = chars[j];\n          shouldFill && ctx.fillText(jChar, left + charWidth, top);\n          shouldStroke && ctx.strokeText(jChar, left + charWidth, top);\n          _charWidth = ctx.measureText(jChar).width + additionalSpace;\n          charWidth += _charWidth > 0 ? _charWidth : 0;\n        }\n      }\n      else {\n        shouldFill && ctx.fillText(_char, left, top);\n        shouldStroke && ctx.strokeText(_char, left, top);\n      }\n\n      if (textDecoration || textDecoration !== '') {\n        offset = this._fontSizeFraction * lineHeight / this.lineHeight;\n        this._renderCharDecoration(ctx, textDecoration, left, top, offset, charWidth, charHeight);\n      }\n\n      decl && ctx.restore();\n      ctx.translate(charWidth, 0);\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChanged: function(prevStyle, thisStyle) {\n      return (prevStyle.fill !== thisStyle.fill ||\n              prevStyle.fontSize !== thisStyle.fontSize ||\n              prevStyle.textBackgroundColor !== thisStyle.textBackgroundColor ||\n              prevStyle.textDecoration !== thisStyle.textDecoration ||\n              prevStyle.fontFamily !== thisStyle.fontFamily ||\n              prevStyle.fontWeight !== thisStyle.fontWeight ||\n              prevStyle.fontStyle !== thisStyle.fontStyle ||\n              prevStyle.stroke !== thisStyle.stroke ||\n              prevStyle.strokeWidth !== thisStyle.strokeWidth\n      );\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderCharDecoration: function(ctx, textDecoration, left, top, offset, charWidth, charHeight) {\n\n      if (!textDecoration) {\n        return;\n      }\n\n      var decorationWeight = charHeight / 15,\n          positions = {\n            underline: top + charHeight / 10,\n            'line-through': top - charHeight * (this._fontSizeFraction + this._fontSizeMult - 1) + decorationWeight,\n            overline: top - (this._fontSizeMult - this._fontSizeFraction) * charHeight\n          },\n          decorations = ['underline', 'line-through', 'overline'], i, decoration;\n\n      for (i = 0; i < decorations.length; i++) {\n        decoration = decorations[i];\n        if (textDecoration.indexOf(decoration) > -1) {\n          ctx.fillRect(left, positions[decoration], charWidth , decorationWeight);\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      // to \"cancel\" this.fontSize subtraction in fabric.Text#_renderTextLine\n      // the adding 0.03 is just to align text with itext by overlap test\n      if (!this.isEmptyStyles()) {\n        top += this.fontSize * (this._fontSizeFraction + 0.03);\n      }\n      this.callSuper('_renderTextLine', method, ctx, line, left, top, lineIndex);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx) {\n      if (this.isEmptyStyles()) {\n        return this.callSuper('_renderTextDecoration', ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      this.callSuper('_renderTextLinesBackground', ctx);\n\n      var lineTopOffset = 0, heightOfLine,\n          lineWidth, lineLeftOffset,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          colorCache = '',\n          line, _char, style, leftCache,\n          topCache, widthCache, heightCache;\n      ctx.save();\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this._getHeightOfLine(ctx, i);\n        line = this._textLines[i];\n\n        if (line === '' || !this.styles || !this._getLineStyle(i)) {\n          lineTopOffset += heightOfLine;\n          continue;\n        }\n\n        lineWidth = this._getLineWidth(ctx, i);\n        lineLeftOffset = this._getLineLeftOffset(lineWidth);\n        leftCache = topCache = widthCache = heightCache = 0;\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          style = this._getStyleDeclaration(i, j) || {};\n\n          if (colorCache !== style.textBackgroundColor) {\n            if (heightCache && widthCache) {\n              ctx.fillStyle = colorCache;\n              ctx.fillRect(leftCache, topCache, widthCache, heightCache);\n            }\n            leftCache = topCache = widthCache = heightCache = 0;\n            colorCache = style.textBackgroundColor || '';\n          }\n\n          if (!style.textBackgroundColor) {\n            colorCache = '';\n            continue;\n          }\n          _char = line[j];\n\n          if (colorCache === style.textBackgroundColor) {\n            colorCache = style.textBackgroundColor;\n            if (!leftCache) {\n              leftCache = leftOffset + lineLeftOffset + this._getWidthOfCharsAt(ctx, i, j);\n            }\n            topCache = topOffset + lineTopOffset;\n            widthCache += this._getWidthOfChar(ctx, _char, i, j);\n            heightCache = heightOfLine / this.lineHeight;\n          }\n        }\n        // if a textBackgroundColor ends on the last character of a line\n        if (heightCache && widthCache) {\n          ctx.fillStyle = colorCache;\n          ctx.fillRect(leftCache, topCache, widthCache, heightCache);\n          leftCache = topCache = widthCache = heightCache = 0;\n        }\n        lineTopOffset += heightOfLine;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     */\n    _getCacheProp: function(_char, styleDeclaration) {\n      return _char +\n             styleDeclaration.fontSize +\n             styleDeclaration.fontWeight +\n             styleDeclaration.fontStyle;\n    },\n\n    /**\n     * @private\n     * @param {String} fontFamily name\n     * @return {Object} reference to cache\n     */\n    _getFontCache: function(fontFamily) {\n      if (!fabric.charWidthsCache[fontFamily]) {\n        fabric.charWidthsCache[fontFamily] = { };\n      }\n      return fabric.charWidthsCache[fontFamily];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} _char\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} [decl]\n     */\n    _applyCharStylesGetWidth: function(ctx, _char, lineIndex, charIndex, decl) {\n      var charDecl = decl || this._getStyleDeclaration(lineIndex, charIndex),\n          styleDeclaration = clone(charDecl),\n          width, cacheProp, charWidthsCache;\n\n      this._applyFontStyles(styleDeclaration);\n      charWidthsCache = this._getFontCache(styleDeclaration.fontFamily);\n      cacheProp = this._getCacheProp(_char, styleDeclaration);\n\n      // short-circuit if no styles for this char\n      // global style from object is always applyed and handled by save and restore\n      if (!charDecl && charWidthsCache[cacheProp] && this.caching) {\n        return charWidthsCache[cacheProp];\n      }\n\n      if (typeof styleDeclaration.shadow === 'string') {\n        styleDeclaration.shadow = new fabric.Shadow(styleDeclaration.shadow);\n      }\n\n      var fill = styleDeclaration.fill || this.fill;\n      ctx.fillStyle = fill.toLive\n        ? fill.toLive(ctx, this)\n        : fill;\n\n      if (styleDeclaration.stroke) {\n        ctx.strokeStyle = (styleDeclaration.stroke && styleDeclaration.stroke.toLive)\n          ? styleDeclaration.stroke.toLive(ctx, this)\n          : styleDeclaration.stroke;\n      }\n\n      ctx.lineWidth = styleDeclaration.strokeWidth || this.strokeWidth;\n      ctx.font = this._getFontDeclaration.call(styleDeclaration);\n\n      //if we want this._setShadow.call to work with styleDeclarion\n      //we have to add those references\n      if (styleDeclaration.shadow) {\n        styleDeclaration.scaleX = this.scaleX;\n        styleDeclaration.scaleY = this.scaleY;\n        styleDeclaration.canvas = this.canvas;\n        styleDeclaration.getObjectScaling = this.getObjectScaling;\n        this._setShadow.call(styleDeclaration, ctx);\n      }\n\n      if (!this.caching || !charWidthsCache[cacheProp]) {\n        width = ctx.measureText(_char).width;\n        this.caching && (charWidthsCache[cacheProp] = width);\n        return width;\n      }\n\n      return charWidthsCache[cacheProp];\n    },\n\n    /**\n     * @private\n     * @param {Object} styleDeclaration\n     */\n    _applyFontStyles: function(styleDeclaration) {\n      if (!styleDeclaration.fontFamily) {\n        styleDeclaration.fontFamily = this.fontFamily;\n      }\n      if (!styleDeclaration.fontSize) {\n        styleDeclaration.fontSize = this.fontSize;\n      }\n      if (!styleDeclaration.fontWeight) {\n        styleDeclaration.fontWeight = this.fontWeight;\n      }\n      if (!styleDeclaration.fontStyle) {\n        styleDeclaration.fontStyle = this.fontStyle;\n      }\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Boolean} [returnCloneOrEmpty=false]\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n      if (returnCloneOrEmpty) {\n        return (this.styles[lineIndex] && this.styles[lineIndex][charIndex])\n          ? clone(this.styles[lineIndex][charIndex])\n          : { };\n      }\n\n      return this.styles[lineIndex] && this.styles[lineIndex][charIndex] ? this.styles[lineIndex][charIndex] : null;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     *\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      return this.styles[lineIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      this.styles[lineIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      delete this.styles[lineIndex];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getWidthOfChar: function(ctx, _char, lineIndex, charIndex) {\n      if (!this._isMeasuring && this.textAlign === 'justify' && this._reSpacesAndTabs.test(_char)) {\n        return this._getWidthOfSpace(ctx, lineIndex);\n      }\n      ctx.save();\n      var width = this._applyCharStylesGetWidth(ctx, _char, lineIndex, charIndex);\n      if (this.charSpacing !== 0) {\n        width += this._getWidthOfCharSpacing();\n      }\n      ctx.restore();\n      return width > 0 ? width : 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     */\n    _getHeightOfChar: function(ctx, lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex);\n      return style && style.fontSize ? style.fontSize : this.fontSize;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     */\n    _getWidthOfCharsAt: function(ctx, lineIndex, charIndex) {\n      var width = 0, i, _char;\n      for (i = 0; i < charIndex; i++) {\n        _char = this._textLines[lineIndex][i];\n        width += this._getWidthOfChar(ctx, _char, lineIndex, i);\n      }\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    _measureLine: function(ctx, lineIndex) {\n      this._isMeasuring = true;\n      var width = this._getWidthOfCharsAt(ctx, lineIndex, this._textLines[lineIndex].length);\n      if (this.charSpacing !== 0) {\n        width -= this._getWidthOfCharSpacing();\n      }\n      this._isMeasuring = false;\n      return width > 0 ? width : 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     */\n    _getWidthOfSpace: function (ctx, lineIndex) {\n      if (this.__widthOfSpace[lineIndex]) {\n        return this.__widthOfSpace[lineIndex];\n      }\n      var line = this._textLines[lineIndex],\n          wordsWidth = this._getWidthOfWords(ctx, line, lineIndex, 0),\n          widthDiff = this.width - wordsWidth,\n          numSpaces = line.length - line.replace(this._reSpacesAndTabs, '').length,\n          width = Math.max(widthDiff / numSpaces, ctx.measureText(' ').width);\n      this.__widthOfSpace[lineIndex] = width;\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _getWidthOfWords: function (ctx, line, lineIndex, charOffset) {\n      var width = 0;\n\n      for (var charIndex = 0; charIndex < line.length; charIndex++) {\n        var _char = line[charIndex];\n\n        if (!_char.match(/\\s/)) {\n          width += this._getWidthOfChar(ctx, _char, lineIndex, charIndex + charOffset);\n        }\n      }\n\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getHeightOfLine: function(ctx, lineIndex) {\n      if (this.__lineHeights[lineIndex]) {\n        return this.__lineHeights[lineIndex];\n      }\n\n      var line = this._textLines[lineIndex],\n          maxHeight = this._getHeightOfChar(ctx, lineIndex, 0);\n\n      for (var i = 1, len = line.length; i < len; i++) {\n        var currentCharHeight = this._getHeightOfChar(ctx, lineIndex, i);\n        if (currentCharHeight > maxHeight) {\n          maxHeight = currentCharHeight;\n        }\n      }\n      this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n      return this.__lineHeights[lineIndex];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getTextHeight: function(ctx) {\n      var lineHeight, height = 0;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineHeight = this._getHeightOfLine(ctx, i);\n        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\n      }\n      return height;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return fabric.util.object.extend(this.callSuper('toObject', propertiesToInclude), {\n        styles: clone(this.styles, true)\n      });\n    }\n  });\n\n  /**\n   * Returns fabric.IText instance from an object representation\n   * @static\n   * @memberOf fabric.IText\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as argument\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.IText} instance of fabric.IText\n   */\n  fabric.IText.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('IText', object, callback, forceAsync, 'text');\n  };\n})();\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Initializes all the interactive behavior of IText\n     */\n    initBehavior: function() {\n      this.initAddedHandler();\n      this.initRemovedHandler();\n      this.initCursorSelectionHandlers();\n      this.initDoubleClickSimulation();\n      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    },\n\n    onDeselect: function() {\n      this.isEditing && this.exitEditing();\n      this.selected = false;\n      this.callSuper('onDeselect');\n    },\n\n    /**\n     * Initializes \"added\" event handler\n     */\n    initAddedHandler: function() {\n      var _this = this;\n      this.on('added', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          if (!canvas._hasITextHandlers) {\n            canvas._hasITextHandlers = true;\n            _this._initCanvasHandlers(canvas);\n          }\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          canvas._iTextInstances.push(_this);\n        }\n      });\n    },\n\n    initRemovedHandler: function() {\n      var _this = this;\n      this.on('removed', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n          if (canvas._iTextInstances.length === 0) {\n            canvas._hasITextHandlers = false;\n            _this._removeCanvasHandlers(canvas);\n          }\n        }\n      });\n    },\n\n    /**\n     * register canvas event to manage exiting on other instances\n     * @private\n     */\n    _initCanvasHandlers: function(canvas) {\n      canvas._mouseUpITextHandler = (function() {\n        if (canvas._iTextInstances) {\n          canvas._iTextInstances.forEach(function(obj) {\n            obj.__isMousedown = false;\n          });\n        }\n      }).bind(this);\n      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * remove canvas event to manage exiting on other instances\n     * @private\n     */\n    _removeCanvasHandlers: function(canvas) {\n      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * @private\n     */\n    _tick: function() {\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n    },\n\n    /**\n     * @private\n     */\n    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\n      var tickState;\n\n      tickState = {\n        isAborted: false,\n        abort: function() {\n          this.isAborted = true;\n        },\n      };\n\n      obj.animate('_currentCursorOpacity', targetOpacity, {\n        duration: duration,\n        onComplete: function() {\n          if (!tickState.isAborted) {\n            obj[completeMethod]();\n          }\n        },\n        onChange: function() {\n          // we do not want to animate a selection, only cursor\n          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n            obj.renderCursorOrSelection();\n          }\n        },\n        abort: function() {\n          return tickState.isAborted;\n        }\n      });\n      return tickState;\n    },\n\n    /**\n     * @private\n     */\n    _onTickComplete: function() {\n\n      var _this = this;\n\n      if (this._cursorTimeout1) {\n        clearTimeout(this._cursorTimeout1);\n      }\n      this._cursorTimeout1 = setTimeout(function() {\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n      }, 100);\n    },\n\n    /**\n     * Initializes delayed cursor\n     */\n    initDelayedCursor: function(restart) {\n      var _this = this,\n          delay = restart ? 0 : this.cursorDelay;\n\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this._cursorTimeout2 = setTimeout(function() {\n        _this._tick();\n      }, delay);\n    },\n\n    /**\n     * Aborts cursor animation and clears all timeouts\n     */\n    abortCursorAnimation: function() {\n      var shouldClear = this._currentTickState || this._currentTickCompleteState;\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\n      clearTimeout(this._cursorTimeout1);\n      clearTimeout(this._cursorTimeout2);\n\n      this._currentCursorOpacity = 0;\n      // to clear just itext area we need to transform the context\n      // it may not be worth it\n      if (shouldClear) {\n        this.canvas && this.canvas.clearContext(this.canvas.contextTop || this.ctx);\n      }\n\n    },\n\n    /**\n     * Selects entire text\n     */\n    selectAll: function() {\n      this.selectionStart = 0;\n      this.selectionEnd = this.text.length;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    },\n\n    /**\n     * Returns selected text\n     * @return {String}\n     */\n    getSelectedText: function() {\n      return this.text.slice(this.selectionStart, this.selectionEnd);\n    },\n\n    /**\n     * Find new selection index representing start of current word according to current selection index\n     * @param {Number} startFrom Surrent selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      // remove space before cursor first\n      if (this._reSpace.test(this.text.charAt(index))) {\n        while (this._reSpace.test(this.text.charAt(index))) {\n          offset++;\n          index--;\n        }\n      }\n      while (/\\S/.test(this.text.charAt(index)) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      // remove space after cursor first\n      if (this._reSpace.test(this.text.charAt(index))) {\n        while (this._reSpace.test(this.text.charAt(index))) {\n          offset++;\n          index++;\n        }\n      }\n      while (/\\S/.test(this.text.charAt(index)) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Find new selection index representing start of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      while (!/\\n/.test(this.text.charAt(index)) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      while (!/\\n/.test(this.text.charAt(index)) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Returns number of newlines in selected text\n     * @return {Number} Number of newlines in selected text\n     */\n    getNumNewLinesInSelectedText: function() {\n      var selectedText = this.getSelectedText(),\n          numNewLines  = 0;\n\n      for (var i = 0, len = selectedText.length; i < len; i++) {\n        if (selectedText[i] === '\\n') {\n          numNewLines++;\n        }\n      }\n      return numNewLines;\n    },\n\n    /**\n     * Finds index corresponding to beginning or end of a word\n     * @param {Number} selectionStart Index of a character\n     * @param {Number} direction 1 or -1\n     * @return {Number} Index of the beginning or end of a word\n     */\n    searchWordBoundary: function(selectionStart, direction) {\n      var index     = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,\n          _char     = this.text.charAt(index),\n          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\n      while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\n        index += direction;\n        _char = this.text.charAt(index);\n      }\n      if (reNonWord.test(_char) && _char !== '\\n') {\n        index += direction === 1 ? 0 : 1;\n      }\n      return index;\n    },\n\n    /**\n     * Selects a word based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectWord: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * Selects a line based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectLine: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    },\n\n    /**\n     * Enters editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    enterEditing: function(e) {\n      if (this.isEditing || !this.editable) {\n        return;\n      }\n\n      if (this.canvas) {\n        this.exitEditingOnOthers(this.canvas);\n      }\n\n      this.isEditing = true;\n      this.selected = true;\n      this.initHiddenTextarea(e);\n      this.hiddenTextarea.focus();\n      this._updateTextarea();\n      this._saveEditingProps();\n      this._setEditingProps();\n      this._textBeforeEdit = this.text;\n\n      this._tick();\n      this.fire('editing:entered');\n      this._fireSelectionChanged();\n      if (!this.canvas) {\n        return this;\n      }\n      this.canvas.fire('text:editing:entered', { target: this });\n      this.initMouseMoveHandler();\n      this.canvas.renderAll();\n      return this;\n    },\n\n    exitEditingOnOthers: function(canvas) {\n      if (canvas._iTextInstances) {\n        canvas._iTextInstances.forEach(function(obj) {\n          obj.selected = false;\n          if (obj.isEditing) {\n            obj.exitEditing();\n          }\n        });\n      }\n    },\n\n    /**\n     * Initializes \"mousemove\" event handler\n     */\n    initMouseMoveHandler: function() {\n      this.canvas.on('mouse:move', this.mouseMoveHandler);\n    },\n\n    /**\n     * @private\n     */\n    mouseMoveHandler: function(options) {\n      if (!this.__isMousedown || !this.isEditing) {\n        return;\n      }\n\n      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n          currentStart = this.selectionStart,\n          currentEnd = this.selectionEnd;\n      if (\n        (newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd)\n        &&\n        (currentStart === newSelectionStart || currentEnd === newSelectionStart)\n      ) {\n        return;\n      }\n      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n        this.selectionStart = this.__selectionStartOnMouseDown;\n        this.selectionEnd = newSelectionStart;\n      }\n      else {\n        this.selectionStart = newSelectionStart;\n        this.selectionEnd = this.__selectionStartOnMouseDown;\n      }\n      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n        this.restartCursorIfNeeded();\n        this._fireSelectionChanged();\n        this._updateTextarea();\n        this.renderCursorOrSelection();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setEditingProps: function() {\n      this.hoverCursor = 'text';\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n      }\n\n      this.borderColor = this.editingBorderColor;\n\n      this.hasControls = this.selectable = false;\n      this.lockMovementX = this.lockMovementY = true;\n    },\n\n    /**\n     * @private\n     */\n    _updateTextarea: function() {\n      if (!this.hiddenTextarea || this.inCompositionMode) {\n        return;\n      }\n      this.cursorOffsetCache = { };\n      this.hiddenTextarea.value = this.text;\n      this.hiddenTextarea.selectionStart = this.selectionStart;\n      this.hiddenTextarea.selectionEnd = this.selectionEnd;\n      if (this.selectionStart === this.selectionEnd) {\n        var style = this._calcTextareaPosition();\n        this.hiddenTextarea.style.left = style.left;\n        this.hiddenTextarea.style.top = style.top;\n        this.hiddenTextarea.style.fontSize = style.fontSize;\n      }\n    },\n\n    /**\n     * @private\n     * @return {Object} style contains style for hiddenTextarea\n     */\n    _calcTextareaPosition: function() {\n      if (!this.canvas) {\n        return { x: 1, y: 1 };\n      }\n      var chars = this.text.split(''),\n          boundaries = this._getCursorBoundaries(chars, 'cursor'),\n          cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n          leftOffset = boundaries.leftOffset,\n          m = this.calcTransformMatrix(),\n          p = {\n            x: boundaries.left + leftOffset,\n            y: boundaries.top + boundaries.topOffset + charHeight\n          },\n          upperCanvas = this.canvas.upperCanvasEl,\n          maxWidth = upperCanvas.width - charHeight,\n          maxHeight = upperCanvas.height - charHeight;\n\n      p = fabric.util.transformPoint(p, m);\n      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n\n      if (p.x < 0) {\n        p.x = 0;\n      }\n      if (p.x > maxWidth) {\n        p.x = maxWidth;\n      }\n      if (p.y < 0) {\n        p.y = 0;\n      }\n      if (p.y > maxHeight) {\n        p.y = maxHeight;\n      }\n\n      // add canvas offset on document\n      p.x += this.canvas._offset.left;\n      p.y += this.canvas._offset.top;\n\n      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight };\n    },\n\n    /**\n     * @private\n     */\n    _saveEditingProps: function() {\n      this._savedProps = {\n        hasControls: this.hasControls,\n        borderColor: this.borderColor,\n        lockMovementX: this.lockMovementX,\n        lockMovementY: this.lockMovementY,\n        hoverCursor: this.hoverCursor,\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\n        moveCursor: this.canvas && this.canvas.moveCursor\n      };\n    },\n\n    /**\n     * @private\n     */\n    _restoreEditingProps: function() {\n      if (!this._savedProps) {\n        return;\n      }\n\n      this.hoverCursor = this._savedProps.overCursor;\n      this.hasControls = this._savedProps.hasControls;\n      this.borderColor = this._savedProps.borderColor;\n      this.lockMovementX = this._savedProps.lockMovementX;\n      this.lockMovementY = this._savedProps.lockMovementY;\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n        this.canvas.moveCursor = this._savedProps.moveCursor;\n      }\n    },\n\n    /**\n     * Exits from editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    exitEditing: function() {\n      var isTextChanged = (this._textBeforeEdit !== this.text);\n      this.selected = false;\n      this.isEditing = false;\n      this.selectable = true;\n\n      this.selectionEnd = this.selectionStart;\n\n      if (this.hiddenTextarea) {\n        this.hiddenTextarea.blur && this.hiddenTextarea.blur();\n        this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n        this.hiddenTextarea = null;\n      }\n\n      this.abortCursorAnimation();\n      this._restoreEditingProps();\n      this._currentCursorOpacity = 0;\n\n      this.fire('editing:exited');\n      isTextChanged && this.fire('modified');\n      if (this.canvas) {\n        this.canvas.off('mouse:move', this.mouseMoveHandler);\n        this.canvas.fire('text:editing:exited', { target: this });\n        isTextChanged && this.canvas.fire('object:modified', { target: this });\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this.styles) {\n        if (!this._textLines[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _removeCharsFromTo: function(start, end) {\n      while (end !== start) {\n        this._removeSingleCharAndStyle(start + 1);\n        end--;\n      }\n      this.selectionStart = start;\n      this.selectionEnd = start;\n    },\n\n    _removeSingleCharAndStyle: function(index) {\n      var isBeginningOfLine = this.text[index - 1] === '\\n',\n          indexStyle        = isBeginningOfLine ? index : index - 1;\n      this.removeStyleObject(isBeginningOfLine, indexStyle);\n      this.text = this.text.slice(0, index - 1) +\n        this.text.slice(index);\n\n      this._textLines = this._splitTextIntoLines();\n    },\n\n    /**\n     * Inserts characters where cursor is (replacing selection if one exists)\n     * @param {String} _chars Characters to insert\n     * @param {Boolean} useCopiedStyle use fabric.copiedTextStyle\n     */\n    insertChars: function(_chars, useCopiedStyle) {\n      var style;\n\n      if (this.selectionEnd - this.selectionStart > 1) {\n        this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n      }\n      //short circuit for block paste\n      if (!useCopiedStyle && this.isEmptyStyles()) {\n        this.insertChar(_chars, false);\n        return;\n      }\n      for (var i = 0, len = _chars.length; i < len; i++) {\n        if (useCopiedStyle) {\n          style = fabric.util.object.clone(fabric.copiedTextStyle[i], true);\n        }\n        this.insertChar(_chars[i], i < len - 1, style);\n      }\n    },\n\n    /**\n     * Inserts a character where cursor is\n     * @param {String} _char Characters to insert\n     * @param {Boolean} skipUpdate trigger rendering and updates at the end of text insert\n     * @param {Object} styleObject Style to be inserted for the new char\n     */\n    insertChar: function(_char, skipUpdate, styleObject) {\n      var isEndOfLine = this.text[this.selectionStart] === '\\n';\n      this.text = this.text.slice(0, this.selectionStart) +\n        _char + this.text.slice(this.selectionEnd);\n      this._textLines = this._splitTextIntoLines();\n      this.insertStyleObjects(_char, isEndOfLine, styleObject);\n      this.selectionStart += _char.length;\n      this.selectionEnd = this.selectionStart;\n      if (skipUpdate) {\n        return;\n      }\n      this._updateTextarea();\n      this.setCoords();\n      this._fireSelectionChanged();\n      this.fire('changed');\n      this.restartCursorIfNeeded();\n      if (this.canvas) {\n        this.canvas.fire('text:changed', { target: this });\n        this.canvas.renderAll();\n      }\n    },\n\n    restartCursorIfNeeded: function() {\n      if (!this._currentTickState || this._currentTickState.isAborted\n        || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted\n      ) {\n        this.initDelayedCursor();\n      }\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Boolean} isEndOfLine True if it's end of line\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n\n      this.shiftLineStyles(lineIndex, +1);\n\n      var currentCharStyle = {},\n          newLineStyles    = {};\n\n      if (this.styles[lineIndex] && this.styles[lineIndex][charIndex - 1]) {\n        currentCharStyle = this.styles[lineIndex][charIndex - 1];\n      }\n\n      // if there's nothing after cursor,\n      // we clone current char style onto the next (otherwise empty) line\n      if (isEndOfLine && currentCharStyle) {\n        newLineStyles[0] = clone(currentCharStyle);\n        this.styles[lineIndex + 1] = newLineStyles;\n      }\n      // otherwise we clone styles of all chars\n      // after cursor onto the next line, from the beginning\n      else {\n        var somethingAdded = false;\n        for (var index in this.styles[lineIndex]) {\n          var numIndex = parseInt(index, 10);\n          if (numIndex >= charIndex) {\n            somethingAdded = true;\n            newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n            // remove lines from the previous line since they're on a new line now\n            delete this.styles[lineIndex][index];\n          }\n        }\n        somethingAdded && (this.styles[lineIndex + 1] = newLineStyles);\n      }\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Object} [style] Style object to insert, if given\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, style) {\n\n      var currentLineStyles       = this.styles[lineIndex],\n          currentLineStylesCloned = clone(currentLineStyles);\n\n      if (charIndex === 0 && !style) {\n        charIndex = 1;\n      }\n\n      // shift all char styles by 1 forward\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n      for (var index in currentLineStylesCloned) {\n        var numericIndex = parseInt(index, 10);\n\n        if (numericIndex >= charIndex) {\n          currentLineStyles[numericIndex + 1] = currentLineStylesCloned[numericIndex];\n\n          // only delete the style if there was nothing moved there\n          if (!currentLineStylesCloned[numericIndex - 1]) {\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n      var newStyle = style || clone(currentLineStyles[charIndex - 1]);\n      newStyle && (this.styles[lineIndex][charIndex] = newStyle);\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object(s)\n     * @param {String} _chars Characters at the location where style is inserted\n     * @param {Boolean} isEndOfLine True if it's end of line\n     * @param {Object} [styleObject] Style to insert\n     */\n    insertStyleObjects: function(_chars, isEndOfLine, styleObject) {\n      // removed shortcircuit over isEmptyStyles\n\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex      = cursorLocation.lineIndex,\n          charIndex      = cursorLocation.charIndex;\n\n      if (!this._getLineStyle(lineIndex)) {\n        this._setLineStyle(lineIndex, {});\n      }\n\n      if (_chars === '\\n') {\n        this.insertNewlineStyleObject(lineIndex, charIndex, isEndOfLine);\n      }\n      else {\n        this.insertCharStyleObject(lineIndex, charIndex, styleObject);\n      }\n    },\n\n    /**\n     * Shifts line styles up or down\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can be -1 or +1\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by 1 upward or downward\n      var clonedStyles = clone(this.styles);\n      for (var line in clonedStyles) {\n        var numericLine = parseInt(line, 10);\n        if (numericLine <= lineIndex) {\n          delete clonedStyles[numericLine];\n        }\n      }\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n      //TODO: evaluate if delete old style lines with offset -1\n    },\n\n    /**\n     * Removes style object\n     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n     */\n    removeStyleObject: function(isBeginningOfLine, index) {\n\n      var cursorLocation = this.get2DCursorLocation(index),\n          lineIndex      = cursorLocation.lineIndex,\n          charIndex      = cursorLocation.charIndex;\n\n      this._removeStyleObject(isBeginningOfLine, cursorLocation, lineIndex, charIndex);\n    },\n\n    _getTextOnPreviousLine: function(lIndex) {\n      return this._textLines[lIndex - 1];\n    },\n\n    _removeStyleObject: function(isBeginningOfLine, cursorLocation, lineIndex, charIndex) {\n\n      if (isBeginningOfLine) {\n        var textOnPreviousLine     = this._getTextOnPreviousLine(cursorLocation.lineIndex),\n            newCharIndexOnPrevLine = textOnPreviousLine ? textOnPreviousLine.length : 0;\n\n        if (!this.styles[lineIndex - 1]) {\n          this.styles[lineIndex - 1] = {};\n        }\n        for (charIndex in this.styles[lineIndex]) {\n          this.styles[lineIndex - 1][parseInt(charIndex, 10) + newCharIndexOnPrevLine]\n            = this.styles[lineIndex][charIndex];\n        }\n        this.shiftLineStyles(cursorLocation.lineIndex, -1);\n      }\n      else {\n        var currentLineStyles = this.styles[lineIndex];\n\n        if (currentLineStyles) {\n          delete currentLineStyles[charIndex];\n        }\n        var currentLineStylesCloned = clone(currentLineStyles);\n        // shift all styles by 1 backwards\n        for (var i in currentLineStylesCloned) {\n          var numericIndex = parseInt(i, 10);\n          if (numericIndex >= charIndex && numericIndex !== 0) {\n            currentLineStyles[numericIndex - 1] = currentLineStylesCloned[numericIndex];\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n    },\n\n    /**\n     * Inserts new line\n     */\n    insertNewline: function() {\n      this.insertChars('\\n');\n    },\n\n    /**\n     * Set the selectionStart and selectionEnd according to the ne postion of cursor\n     * mimic the key - mouse navigation when shift is pressed.\n     */\n    setSelectionStartEndWithShift: function(start, end, newSelection) {\n      if (newSelection <= start) {\n        if (end === start) {\n          this._selectionDirection = 'left';\n        }\n        else if (this._selectionDirection === 'right') {\n          this._selectionDirection = 'left';\n          this.selectionEnd = start;\n        }\n        this.selectionStart = newSelection;\n      }\n      else if (newSelection > start && newSelection < end) {\n        if (this._selectionDirection === 'right') {\n          this.selectionEnd = newSelection;\n        }\n        else {\n          this.selectionStart = newSelection;\n        }\n      }\n      else {\n        // newSelection is > selection start and end\n        if (end === start) {\n          this._selectionDirection = 'right';\n        }\n        else if (this._selectionDirection === 'left') {\n          this._selectionDirection = 'right';\n          this.selectionStart = end;\n        }\n        this.selectionEnd = newSelection;\n      }\n    },\n\n    setSelectionInBoundaries: function() {\n      var length = this.text.length;\n      if (this.selectionStart > length) {\n        this.selectionStart = length;\n      }\n      else if (this.selectionStart < 0) {\n        this.selectionStart = 0;\n      }\n      if (this.selectionEnd > length) {\n        this.selectionEnd = length;\n      }\n      else if (this.selectionEnd < 0) {\n        this.selectionEnd = 0;\n      }\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n  /**\n   * Initializes \"dbclick\" event handler\n   */\n  initDoubleClickSimulation: function() {\n\n    // for double click\n    this.__lastClickTime = +new Date();\n\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n\n    this.__lastPointer = { };\n\n    this.on('mousedown', this.onMouseDown.bind(this));\n  },\n\n  onMouseDown: function(options) {\n\n    this.__newClickTime = +new Date();\n    var newPointer = this.canvas.getPointer(options.e);\n\n    if (this.isTripleClick(newPointer, options.e)) {\n      this.fire('tripleclick', options);\n      this._stopEvent(options.e);\n    }\n    else if (this.isDoubleClick(newPointer)) {\n      this.fire('dblclick', options);\n      this._stopEvent(options.e);\n    }\n\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastIsEditing = this.isEditing;\n    this.__lastSelected = this.selected;\n  },\n\n  isDoubleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y && this.__lastIsEditing;\n  },\n\n  isTripleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y;\n  },\n\n  /**\n   * @private\n   */\n  _stopEvent: function(e) {\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  },\n\n  /**\n   * Initializes event handlers related to cursor or selection\n   */\n  initCursorSelectionHandlers: function() {\n    this.initMousedownHandler();\n    this.initMouseupHandler();\n    this.initClicks();\n  },\n\n  /**\n   * Initializes double and triple click event handlers\n   */\n  initClicks: function() {\n    this.on('dblclick', function(options) {\n      this.selectWord(this.getSelectionStartFromPointer(options.e));\n    });\n    this.on('tripleclick', function(options) {\n      this.selectLine(this.getSelectionStartFromPointer(options.e));\n    });\n  },\n\n  /**\n   * Initializes \"mousedown\" event handler\n   */\n  initMousedownHandler: function() {\n    this.on('mousedown', function(options) {\n      if (!this.editable || (options.e.button && options.e.button !== 1)) {\n        return;\n      }\n      var pointer = this.canvas.getPointer(options.e);\n      this.__mousedownX = pointer.x;\n      this.__mousedownY = pointer.y;\n      this.__isMousedown = true;\n\n      if (this.selected) {\n        this.setCursorByClick(options.e);\n      }\n\n      if (this.isEditing) {\n        this.__selectionStartOnMouseDown = this.selectionStart;\n        if (this.selectionStart === this.selectionEnd) {\n          this.abortCursorAnimation();\n        }\n        this.renderCursorOrSelection();\n      }\n    });\n  },\n\n  /**\n   * @private\n   */\n  _isObjectMoved: function(e) {\n    var pointer = this.canvas.getPointer(e);\n\n    return this.__mousedownX !== pointer.x ||\n           this.__mousedownY !== pointer.y;\n  },\n\n  /**\n   * Initializes \"mouseup\" event handler\n   */\n  initMouseupHandler: function() {\n    this.on('mouseup', function(options) {\n      this.__isMousedown = false;\n      if (!this.editable || this._isObjectMoved(options.e) || (options.e.button && options.e.button !== 1)) {\n        return;\n      }\n\n      if (this.__lastSelected && !this.__corner) {\n        this.enterEditing(options.e);\n        if (this.selectionStart === this.selectionEnd) {\n          this.initDelayedCursor(true);\n        }\n        else {\n          this.renderCursorOrSelection();\n        }\n      }\n      this.selected = true;\n    });\n  },\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {Event} e Event object\n   */\n  setCursorByClick: function(e) {\n    var newSelection = this.getSelectionStartFromPointer(e),\n        start = this.selectionStart, end = this.selectionEnd;\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    }\n    else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {Event} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer: function(e) {\n    var mouseOffset = this.getLocalPointer(e),\n        prevWidth = 0,\n        width = 0,\n        height = 0,\n        charIndex = 0,\n        newSelectionStart,\n        line;\n\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\n      line = this._textLines[i];\n      height += this._getHeightOfLine(this.ctx, i) * this.scaleY;\n\n      var widthOfLine = this._getLineWidth(this.ctx, i),\n          lineLeftOffset = this._getLineLeftOffset(widthOfLine);\n\n      width = lineLeftOffset * this.scaleX;\n\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\n\n        prevWidth = width;\n\n        width += this._getWidthOfChar(this.ctx, line[j], i, this.flipX ? jlen - j : j) *\n                 this.scaleX;\n\n        if (height <= mouseOffset.y || width <= mouseOffset.x) {\n          charIndex++;\n          continue;\n        }\n\n        return this._getNewSelectionStartFromOffset(\n          mouseOffset, prevWidth, width, charIndex + i, jlen);\n      }\n\n      if (mouseOffset.y < height) {\n        //this happens just on end of lines.\n        return this._getNewSelectionStartFromOffset(\n          mouseOffset, prevWidth, width, charIndex + i - 1, jlen);\n      }\n    }\n\n    // clicked somewhere after all chars, so set at the end\n    if (typeof newSelectionStart === 'undefined') {\n      return this.text.length;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ? 0 : 1,\n        newSelectionStart = index + offset;\n\n    // if object is horizontally flipped, mirror cursor location from the end\n    if (this.flipX) {\n      newSelectionStart = jlen - newSelectionStart;\n    }\n\n    if (newSelectionStart > this.text.length) {\n      newSelectionStart = this.text.length;\n    }\n\n    return newSelectionStart;\n  }\n});\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea: function() {\n    this.hiddenTextarea = fabric.document.createElement('textarea');\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n    this.hiddenTextarea.setAttribute('autocorrect', 'off');\n    this.hiddenTextarea.setAttribute('autocomplete', 'off');\n    this.hiddenTextarea.setAttribute('spellcheck', 'false');\n    this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\n    this.hiddenTextarea.setAttribute('wrap', 'off');\n    var style = this._calcTextareaPosition();\n    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top +\n    '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' +\n    ' line-height: 1px; paddingｰtop: ' + style.fontSize + ';';\n    fabric.document.body.appendChild(this.hiddenTextarea);\n\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'cut', this.cut.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\n    if (!this._clickHandlerInitialized && this.canvas) {\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n      this._clickHandlerInitialized = true;\n    }\n  },\n\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behaviour for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the fabric.Itext or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = fabric.util.object.clone(this.keysMap);\n   * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\n   */\n  keysMap: {\n    8:  'removeChars',\n    9:  'exitEditing',\n    27: 'exitEditing',\n    13: 'insertNewline',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorRight',\n    36: 'moveCursorLeft',\n    37: 'moveCursorLeft',\n    38: 'moveCursorUp',\n    39: 'moveCursorRight',\n    40: 'moveCursorDown',\n    46: 'forwardDelete'\n  },\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  ctrlKeysMapUp: {\n    67: 'copy',\n    88: 'cut'\n  },\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  ctrlKeysMapDown: {\n    65: 'selectAll'\n  },\n\n  onClick: function() {\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n    this.hiddenTextarea && this.hiddenTextarea.focus();\n  },\n\n  /**\n   * Handles keyup event\n   * @param {Event} e Event object\n   */\n  onKeyDown: function(e) {\n    if (!this.isEditing) {\n      return;\n    }\n    if (e.keyCode in this.keysMap) {\n      this[this.keysMap[e.keyCode]](e);\n    }\n    else if ((e.keyCode in this.ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapDown[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    }\n    else {\n      this.canvas && this.canvas.renderAll();\n    }\n  },\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {Event} e Event object\n   */\n  onKeyUp: function(e) {\n    if (!this.isEditing || this._copyDone) {\n      this._copyDone = false;\n      return;\n    }\n    if ((e.keyCode in this.ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapUp[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.renderAll();\n  },\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput: function(e) {\n    if (!this.isEditing || this.inCompositionMode) {\n      return;\n    }\n    var offset = this.selectionStart || 0,\n        offsetEnd = this.selectionEnd || 0,\n        textLength = this.text.length,\n        newTextLength = this.hiddenTextarea.value.length,\n        diff, charsToInsert, start;\n    if (newTextLength > textLength) {\n      //we added some character\n      start = this._selectionDirection === 'left' ? offsetEnd : offset;\n      diff = newTextLength - textLength;\n      charsToInsert = this.hiddenTextarea.value.slice(start, start + diff);\n    }\n    else {\n      //we selected a portion of text and then input something else.\n      //Internet explorer does not trigger this else\n      diff = newTextLength - textLength + offsetEnd - offset;\n      charsToInsert = this.hiddenTextarea.value.slice(offset, offset + diff);\n    }\n    this.insertChars(charsToInsert);\n    e.stopPropagation();\n  },\n\n  /**\n   * Composition start\n   */\n  onCompositionStart: function() {\n    this.inCompositionMode = true;\n    this.prevCompositionLength = 0;\n    this.compositionStart = this.selectionStart;\n  },\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd: function() {\n    this.inCompositionMode = false;\n  },\n\n  /**\n   * Composition update\n   */\n  onCompositionUpdate: function(e) {\n    var data = e.data;\n    this.selectionStart = this.compositionStart;\n    this.selectionEnd = this.selectionEnd === this.selectionStart ?\n      this.compositionStart + this.prevCompositionLength : this.selectionEnd;\n    this.insertChars(data, false);\n    this.prevCompositionLength = data.length;\n  },\n\n  /**\n   * Forward delete\n   */\n  forwardDelete: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      if (this.selectionStart === this.text.length) {\n        return;\n      }\n      this.moveCursorRight(e);\n    }\n    this.removeChars(e);\n  },\n\n  /**\n   * Copies selected text\n   * @param {Event} e Event object\n   */\n  copy: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n    var selectedText = this.getSelectedText(),\n        clipboardData = this._getClipboardData(e);\n\n    // Check for backward compatibility with old browsers\n    if (clipboardData) {\n      clipboardData.setData('text', selectedText);\n    }\n\n    fabric.copiedText = selectedText;\n    fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd);\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this._copyDone = true;\n  },\n\n  /**\n   * Pastes text\n   * @param {Event} e Event object\n   */\n  paste: function(e) {\n    var copiedText = null,\n        clipboardData = this._getClipboardData(e),\n        useCopiedStyle = true;\n\n    // Check for backward compatibility with old browsers\n    if (clipboardData) {\n      copiedText = clipboardData.getData('text').replace(/\\r/g, '');\n      if (!fabric.copiedTextStyle || fabric.copiedText !== copiedText) {\n        useCopiedStyle = false;\n      }\n    }\n    else {\n      copiedText = fabric.copiedText;\n    }\n\n    if (copiedText) {\n      this.insertChars(copiedText, useCopiedStyle);\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n  },\n\n  /**\n   * Cuts text\n   * @param {Event} e Event object\n   */\n  cut: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      return;\n    }\n\n    this.copy(e);\n    this.removeChars(e);\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @return {Object} Clipboard data object\n   */\n  _getClipboardData: function(e) {\n    return (e && e.clipboardData) || fabric.window.clipboardData;\n  },\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor: function(lineIndex, charIndex) {\n    var textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\n        widthOfLine = this._getLineWidth(this.ctx, lineIndex),\n        widthBeforeCursor = this._getLineLeftOffset(widthOfLine), _char;\n\n    for (var i = 0, len = textBeforeCursor.length; i < len; i++) {\n      _char = textBeforeCursor[i];\n      widthBeforeCursor += this._getWidthOfChar(this.ctx, _char, lineIndex, i);\n    }\n    return widthBeforeCursor;\n  },\n\n  /**\n   * Gets start offset of a selection\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    // if on last line, down cursor goes to end of line\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n      // move to the end of a text\n      return this.text.length - selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n\n    return textAfterCursor.length + indexOnOtherLine + 2;\n  },\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset: function(e, isRight) {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    }\n    else {\n      return this.selectionStart;\n    }\n  },\n\n  /**\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex);\n    // return a negative offset\n    return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length;\n  },\n\n  /**\n   * find for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine: function(lineIndex, width) {\n\n    var widthOfLine = this._getLineWidth(this.ctx, lineIndex),\n        textOnLine = this._textLines[lineIndex],\n        lineLeftOffset = this._getLineLeftOffset(widthOfLine),\n        widthOfCharsOnLine = lineLeftOffset,\n        indexOnLine = 0,\n        foundMatch;\n\n    for (var j = 0, jlen = textOnLine.length; j < jlen; j++) {\n\n      var _char = textOnLine[j],\n          widthOfChar = this._getWidthOfChar(this.ctx, _char, lineIndex, j);\n\n      widthOfCharsOnLine += widthOfChar;\n\n      if (widthOfCharsOnLine > width) {\n\n        foundMatch = true;\n\n        var leftEdge = widthOfCharsOnLine - widthOfChar,\n            rightEdge = widthOfCharsOnLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - width),\n            offsetFromRightEdge = Math.abs(rightEdge - width);\n\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnLine = textOnLine.length - 1;\n    }\n\n    return indexOnLine;\n  },\n\n\n  /**\n   * Moves cursor down\n   * @param {Event} e Event object\n   */\n  moveCursorDown: function(e) {\n    if (this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length) {\n      return;\n    }\n    this._moveCursorUpOrDown('Down', e);\n  },\n\n  /**\n   * Moves cursor up\n   * @param {Event} e Event object\n   */\n  moveCursorUp: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorUpOrDown('Up', e);\n  },\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {Event} e Event object\n   */\n  _moveCursorUpOrDown: function(direction, e) {\n    // getUpCursorOffset\n    // getDownCursorOffset\n    var action = 'get' + direction + 'CursorOffset',\n        offset = this[action](e, this._selectionDirection === 'right');\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    }\n    else {\n      this.moveCursorWithoutShift(offset);\n    }\n    if (offset !== 0) {\n      this.setSelectionInBoundaries();\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift: function(offset) {\n    var newSelection = this._selectionDirection === 'left'\n    ? this.selectionStart + offset\n    : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift: function(offset) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor left\n   * @param {Event} e Event object\n   */\n  moveCursorLeft: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Left', e);\n  },\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   */\n  _move: function(e, prop, direction) {\n    var newValue;\n    if (e.altKey) {\n      newValue = this['findWordBoundary' + direction](this[prop]);\n    }\n    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n      newValue = this['findLineBoundary' + direction](this[prop]);\n    }\n    else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n    if (typeof newValue !== undefined && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _moveLeft: function(e, prop) {\n    return this._move(e, prop, 'Left');\n  },\n\n  /**\n   * @private\n   */\n  _moveRight: function(e, prop) {\n    return this._move(e, prop, 'Right');\n  },\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithoutShift: function(e) {\n    var change = true;\n    this._selectionDirection = 'left';\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n      change = this._moveLeft(e, 'selectionStart');\n\n    }\n    this.selectionEnd = this.selectionStart;\n    return change;\n  },\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithShift: function(e) {\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n      return this._moveLeft(e, 'selectionEnd');\n    }\n    else if (this.selectionStart !== 0){\n      this._selectionDirection = 'left';\n      return this._moveLeft(e, 'selectionStart');\n    }\n  },\n\n  /**\n   * Moves cursor right\n   * @param {Event} e Event object\n   */\n  moveCursorRight: function(e) {\n    if (this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Right', e);\n  },\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {Event} e Event object\n   */\n  _moveCursorLeftOrRight: function(direction, e) {\n    var actionName = 'moveCursor' + direction + 'With';\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      actionName += 'Shift';\n    }\n    else {\n      actionName += 'outShift';\n    }\n    if (this[actionName](e)) {\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {Event} e\n   */\n  moveCursorRightWithShift: function(e) {\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n      return this._moveRight(e, 'selectionStart');\n    }\n    else if (this.selectionEnd !== this.text.length) {\n      this._selectionDirection = 'right';\n      return this._moveRight(e, 'selectionEnd');\n    }\n  },\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {Event} e Event object\n   */\n  moveCursorRightWithoutShift: function(e) {\n    var changed = true;\n    this._selectionDirection = 'right';\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionStart = this.selectionEnd;\n    }\n    return changed;\n  },\n\n  /**\n   * Removes characters selected by selection\n   * @param {Event} e Event object\n   */\n  removeChars: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      this._removeCharsNearCursor(e);\n    }\n    else {\n      this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n    }\n\n    this.set('dirty', true);\n    this.setSelectionEnd(this.selectionStart);\n\n    this._removeExtraneousStyles();\n\n    this.canvas && this.canvas.renderAll();\n\n    this.setCoords();\n    this.fire('changed');\n    this.canvas && this.canvas.fire('text:changed', { target: this });\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   */\n  _removeCharsNearCursor: function(e) {\n    if (this.selectionStart === 0) {\n      return;\n    }\n    if (e.metaKey) {\n      // remove all till the start of current line\n      var leftLineBoundary = this.findLineBoundaryLeft(this.selectionStart);\n\n      this._removeCharsFromTo(leftLineBoundary, this.selectionStart);\n      this.setSelectionStart(leftLineBoundary);\n    }\n    else if (e.altKey) {\n      // remove all till the start of current word\n      var leftWordBoundary = this.findWordBoundaryLeft(this.selectionStart);\n\n      this._removeCharsFromTo(leftWordBoundary, this.selectionStart);\n      this.setSelectionStart(leftWordBoundary);\n    }\n    else {\n      this._removeSingleCharAndStyle(this.selectionStart);\n      this.setSelectionStart(this.selectionStart - 1);\n    }\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  var toFixed = fabric.util.toFixed,\n      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * @private\n     */\n    _setSVGTextLineText: function(lineIndex, textSpans, height, textLeftOffset, textTopOffset, textBgRects) {\n      if (!this._getLineStyle(lineIndex)) {\n        fabric.Text.prototype._setSVGTextLineText.call(this,\n          lineIndex, textSpans, height, textLeftOffset, textTopOffset);\n      }\n      else {\n        this._setSVGTextLineChars(\n          lineIndex, textSpans, height, textLeftOffset, textBgRects);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGTextLineChars: function(lineIndex, textSpans, height, textLeftOffset, textBgRects) {\n\n      var chars = this._textLines[lineIndex],\n          charOffset = 0,\n          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex)) - this.width / 2,\n          lineOffset = this._getSVGLineTopOffset(lineIndex),\n          heightOfLine = this._getHeightOfLine(this.ctx, lineIndex);\n\n      for (var i = 0, len = chars.length; i < len; i++) {\n        var styleDecl = this._getStyleDeclaration(lineIndex, i) || { };\n\n        textSpans.push(\n          this._createTextCharSpan(\n            chars[i], styleDecl, lineLeftOffset, lineOffset.lineTop + lineOffset.offset, charOffset));\n\n        var charWidth = this._getWidthOfChar(this.ctx, chars[i], lineIndex, i);\n\n        if (styleDecl.textBackgroundColor) {\n          textBgRects.push(\n            this._createTextCharBg(\n              styleDecl, lineLeftOffset, lineOffset.lineTop, heightOfLine, charWidth, charOffset));\n        }\n\n        charOffset += charWidth;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineTopOffset: function(lineIndex) {\n      var lineTopOffset = 0, lastHeight = 0;\n      for (var j = 0; j < lineIndex; j++) {\n        lineTopOffset += this._getHeightOfLine(this.ctx, j);\n      }\n      lastHeight = this._getHeightOfLine(this.ctx, j);\n      return {\n        lineTop: lineTopOffset,\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n      };\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharBg: function(styleDecl, lineLeftOffset, lineTopOffset, heightOfLine, charWidth, charOffset) {\n      return [\n        '\\t\\t<rect fill=\"', styleDecl.textBackgroundColor,\n        '\" x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS),\n        '\" y=\"', toFixed(lineTopOffset - this.height / 2, NUM_FRACTION_DIGITS),\n        '\" width=\"', toFixed(charWidth, NUM_FRACTION_DIGITS),\n        '\" height=\"', toFixed(heightOfLine / this.lineHeight, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n'\n      ].join('');\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharSpan: function(_char, styleDecl, lineLeftOffset, lineTopOffset, charOffset) {\n\n      var fillStyles = this.getSvgStyles.call(fabric.util.object.extend({\n        visible: true,\n        fill: this.fill,\n        stroke: this.stroke,\n        type: 'text',\n        getSvgFilter: fabric.Object.prototype.getSvgFilter\n      }, styleDecl));\n\n      return [\n        '\\t\\t\\t<tspan x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS), '\" y=\"',\n        toFixed(lineTopOffset - this.height / 2, NUM_FRACTION_DIGITS), '\" ',\n          (styleDecl.fontFamily ? 'font-family=\"' + styleDecl.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n          (styleDecl.fontSize ? 'font-size=\"' + styleDecl.fontSize + '\" ' : ''),\n          (styleDecl.fontStyle ? 'font-style=\"' + styleDecl.fontStyle + '\" ' : ''),\n          (styleDecl.fontWeight ? 'font-weight=\"' + styleDecl.fontWeight + '\" ' : ''),\n          (styleDecl.textDecoration ? 'text-decoration=\"' + styleDecl.textDecoration + '\" ' : ''),\n        'style=\"', fillStyles, '\">',\n        fabric.util.string.escapeXml(_char),\n        '</tspan>\\n'\n      ].join('');\n    },\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  /**\n   * Textbox class, based on IText, allows the user to resize the text rectangle\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n   * user can only change width. Height is adjusted automatically based on the\n   * wrapping of lines.\n   * @class fabric.Textbox\n   * @extends fabric.IText\n   * @mixes fabric.Observable\n   * @return {fabric.Textbox} thisArg\n   * @see {@link fabric.Textbox#initialize} for constructor definition\n   */\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'textbox',\n\n    /**\n     * Minimum width of textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    minWidth: 20,\n\n    /**\n     * Minimum calculated width of a textbox, in pixels.\n     * fixed to 2 so that an empty textbox cannot go to 0\n     * and is still selectable without text.\n     * @type Number\n     * @default\n     */\n    dynamicMinWidth: 2,\n\n    /**\n     * Cached array of text wrapping.\n     * @type Array\n     */\n    __cachedLines: null,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingY: true,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingFlip: true,\n\n    /**\n     * Override standard Object class values\n     * Textbox needs this on false\n     */\n    noScaleCache: false,\n\n    /**\n     * Constructor. Some scaling related property values are forced. Visibility\n     * of controls is also fixed; only the rotation and width controls are\n     * made available.\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Textbox} thisArg\n     */\n    initialize: function(text, options) {\n\n      this.callSuper('initialize', text, options);\n      this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n      this.ctx = this.objectCaching ? this._cacheContext : fabric.util.createCanvasElement().getContext('2d');\n      // add width to this list of props that effect line wrapping.\n      this._dimensionAffectingProps.push('width');\n    },\n\n    /**\n     * Unlike superclass's version of this function, Textbox does not update\n     * its width.\n     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n     * @private\n     * @override\n     */\n    _initDimensions: function(ctx) {\n      if (this.__skipDimension) {\n        return;\n      }\n\n      if (!ctx) {\n        ctx = fabric.util.createCanvasElement().getContext('2d');\n        this._setTextStyles(ctx);\n        this.clearContextTop();\n      }\n\n      // clear dynamicMinWidth as it will be different after we re-wrap line\n      this.dynamicMinWidth = 0;\n\n      // wrap lines\n      this._textLines = this._splitTextIntoLines(ctx);\n      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n      if (this.dynamicMinWidth > this.width) {\n        this._set('width', this.dynamicMinWidth);\n      }\n\n      // clear cache and re-calculate height\n      this._clearCache();\n      this.height = this._getTextHeight(ctx);\n    },\n\n    /**\n     * Generate an object that translates the style object so that it is\n     * broken up by visual lines (new lines and automatic wrapping).\n     * The original text styles object is broken up by actual lines (new lines only),\n     * which is only sufficient for Text / IText\n     * @private\n     */\n    _generateStyleMap: function() {\n      var realLineCount     = 0,\n          realLineCharCount = 0,\n          charCount         = 0,\n          map               = {};\n\n      for (var i = 0; i < this._textLines.length; i++) {\n        if (this.text[charCount] === '\\n' && i > 0) {\n          realLineCharCount = 0;\n          charCount++;\n          realLineCount++;\n        }\n        else if (this.text[charCount] === ' ' && i > 0) {\n          // this case deals with space's that are removed from end of lines when wrapping\n          realLineCharCount++;\n          charCount++;\n        }\n\n        map[i] = { line: realLineCount, offset: realLineCharCount };\n\n        charCount += this._textLines[i].length;\n        realLineCharCount += this._textLines[i].length;\n      }\n\n      return map;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Boolean} [returnCloneOrEmpty=false]\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n      if (this._styleMap) {\n        var map = this._styleMap[lineIndex];\n        if (!map) {\n          return returnCloneOrEmpty ? { } : null;\n        }\n        lineIndex = map.line;\n        charIndex = map.offset + charIndex;\n      }\n      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex, returnCloneOrEmpty);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      return this.styles[map.line];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      var map = this._styleMap[lineIndex];\n      this.styles[map.line] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      delete this.styles[map.line];\n    },\n\n    /**\n     * Wraps text using the 'width' property of Textbox. First this function\n     * splits text on newlines, so we preserve newlines entered by the user.\n     * Then it wraps each line using the width of the Textbox by calling\n     * _wrapLine().\n     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n     * @param {String} text The string of text that is split into lines\n     * @returns {Array} Array of lines\n     */\n    _wrapText: function(ctx, text) {\n      var lines = text.split(this._reNewline), wrapped = [], i;\n\n      for (i = 0; i < lines.length; i++) {\n        wrapped = wrapped.concat(this._wrapLine(ctx, lines[i], i));\n      }\n\n      return wrapped;\n    },\n\n    /**\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n     *\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {number} lineIndex\n     * @param {number} charOffset\n     * @returns {number}\n     * @private\n     */\n    _measureText: function(ctx, text, lineIndex, charOffset) {\n      var width = 0;\n      charOffset = charOffset || 0;\n      for (var i = 0, len = text.length; i < len; i++) {\n        width += this._getWidthOfChar(ctx, text[i], lineIndex, i + charOffset);\n      }\n      return width;\n    },\n\n    /**\n     * Wraps a line of text using the width of the Textbox and a context.\n     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n     * @param {String} text The string of text to split into lines\n     * @param {Number} lineIndex\n     * @returns {Array} Array of line(s) into which the given text is wrapped\n     * to.\n     */\n    _wrapLine: function(ctx, text, lineIndex) {\n      var lineWidth        = 0,\n          lines            = [],\n          line             = '',\n          words            = text.split(' '),\n          word             = '',\n          offset           = 0,\n          infix            = ' ',\n          wordWidth        = 0,\n          infixWidth       = 0,\n          largestWordWidth = 0,\n          lineJustStarted = true,\n          additionalSpace = this._getWidthOfCharSpacing();\n\n      for (var i = 0; i < words.length; i++) {\n        word = words[i];\n        wordWidth = this._measureText(ctx, word, lineIndex, offset);\n\n        offset += word.length;\n\n        lineWidth += infixWidth + wordWidth - additionalSpace;\n\n        if (lineWidth >= this.width && !lineJustStarted) {\n          lines.push(line);\n          line = '';\n          lineWidth = wordWidth;\n          lineJustStarted = true;\n        }\n        else {\n          lineWidth += additionalSpace;\n        }\n\n        if (!lineJustStarted) {\n          line += infix;\n        }\n        line += word;\n\n        infixWidth = this._measureText(ctx, infix, lineIndex, offset);\n        offset++;\n        lineJustStarted = false;\n        // keep track of largest word\n        if (wordWidth > largestWordWidth) {\n          largestWordWidth = wordWidth;\n        }\n      }\n\n      i && lines.push(line);\n\n      if (largestWordWidth > this.dynamicMinWidth) {\n        this.dynamicMinWidth = largestWordWidth - additionalSpace;\n      }\n\n      return lines;\n    },\n    /**\n     * Gets lines of text to render in the Textbox. This function calculates\n     * text wrapping on the fly everytime it is called.\n     * @returns {Array} Array of lines in the Textbox.\n     * @override\n     */\n    _splitTextIntoLines: function(ctx) {\n      ctx = ctx || this.ctx;\n      var originalAlign = this.textAlign;\n      this._styleMap = null;\n      ctx.save();\n      this._setTextStyles(ctx);\n      this.textAlign = 'left';\n      var lines = this._wrapText(ctx, this.text);\n      this.textAlign = originalAlign;\n      ctx.restore();\n      this._textLines = lines;\n      this._styleMap = this._generateStyleMap();\n      return lines;\n    },\n\n    /**\n     * When part of a group, we don't want the Textbox's scale to increase if\n     * the group's increases. That's why we reduce the scale of the Textbox by\n     * the amount that the group's increases. This is to maintain the effective\n     * scale of the Textbox at 1, so that font-size values make sense. Otherwise\n     * the same font-size value would result in different actual size depending\n     * on the value of the scale.\n     * @param {String} key\n     * @param {*} value\n     */\n    setOnGroup: function(key, value) {\n      if (key === 'scaleX') {\n        this.set('scaleX', Math.abs(1 / value));\n        this.set('width', (this.get('width') * value) /\n          (typeof this.__oldScaleX === 'undefined' ? 1 : this.__oldScaleX));\n        this.__oldScaleX = value;\n      }\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start).\n     * Overrides the superclass function to take into account text wrapping.\n     *\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     */\n    get2DCursorLocation: function(selectionStart) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n\n      var numLines = this._textLines.length,\n          removed  = 0;\n\n      for (var i = 0; i < numLines; i++) {\n        var line    = this._textLines[i],\n            lineLen = line.length;\n\n        if (selectionStart <= removed + lineLen) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart - removed\n          };\n        }\n\n        removed += lineLen;\n\n        if (this.text[removed] === '\\n' || this.text[removed] === ' ') {\n          removed++;\n        }\n      }\n\n      return {\n        lineIndex: numLines - 1,\n        charIndex: this._textLines[numLines - 1].length\n      };\n    },\n\n    /**\n     * Overrides superclass function and uses text wrapping data to get cursor\n     * boundary offsets instead of the array of chars.\n     * @param {Array} chars Unused\n     * @param {String} typeOfBoundaries Can be 'cursor' or 'selection'\n     * @returns {Object} Object with 'top', 'left', and 'lineLeft' properties set.\n     */\n    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n      var topOffset      = 0,\n          leftOffset     = 0,\n          cursorLocation = this.get2DCursorLocation(),\n          lineChars      = this._textLines[cursorLocation.lineIndex].split(''),\n          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, cursorLocation.lineIndex));\n\n      for (var i = 0; i < cursorLocation.charIndex; i++) {\n        leftOffset += this._getWidthOfChar(this.ctx, lineChars[i], cursorLocation.lineIndex, i);\n      }\n\n      for (i = 0; i < cursorLocation.lineIndex; i++) {\n        topOffset += this._getHeightOfLine(this.ctx, i);\n      }\n\n      if (typeOfBoundaries === 'cursor') {\n        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, cursorLocation.lineIndex)\n          / this.lineHeight - this.getCurrentCharFontSize(cursorLocation.lineIndex, cursorLocation.charIndex)\n          * (1 - this._fontSizeFraction);\n      }\n\n      return {\n        top: topOffset,\n        left: leftOffset,\n        lineLeft: lineLeftOffset\n      };\n    },\n\n    getMinWidth: function() {\n      return Math.max(this.minWidth, this.dynamicMinWidth);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['minWidth'].concat(propertiesToInclude));\n    }\n  });\n\n  /**\n   * Returns fabric.Textbox instance from an object representation\n   * @static\n   * @memberOf fabric.Textbox\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Textbox} instance of fabric.Textbox\n   */\n  fabric.Textbox.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Textbox', object, callback, forceAsync, 'text');\n  };\n\n  /**\n   * Returns the default controls visibility required for Textboxes.\n   * @returns {Object}\n   */\n  fabric.Textbox.getTextboxControlVisibility = function() {\n    return {\n      tl: false,\n      tr: false,\n      br: false,\n      bl: false,\n      ml: true,\n      mt: false,\n      mr: true,\n      mb: false,\n      mtr: true\n    };\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /**\n   * Override _setObjectScale and add Textbox specific resizing behavior. Resizing\n   * a Textbox doesn't scale text, it only changes width and makes text wrap automatically.\n   */\n  var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\n\n  fabric.Canvas.prototype._setObjectScale = function(localMouse, transform,\n                                                     lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\n    var t = transform.target;\n    if (t instanceof fabric.Textbox) {\n      var w = t.width * ((localMouse.x / transform.scaleX) / (t.width + t.strokeWidth));\n      if (w >= t.getMinWidth()) {\n        t.set('width', w);\n        return true;\n      }\n    }\n    else {\n      return setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform,\n        lockScalingX, lockScalingY, by, lockScalingFlip, _dim);\n    }\n  };\n\n  /**\n   * Sets controls of this group to the Textbox's special configuration if\n   * one is present in the group. Deletes _controlsVisibility otherwise, so that\n   * it gets initialized to default value at runtime.\n   */\n  fabric.Group.prototype._refreshControlsVisibility = function() {\n    if (typeof fabric.Textbox === 'undefined') {\n      return;\n    }\n    for (var i = this._objects.length; i--;) {\n      if (this._objects[i] instanceof fabric.Textbox) {\n        this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n        return;\n      }\n    }\n  };\n\n  fabric.util.object.extend(fabric.Textbox.prototype, /** @lends fabric.IText.prototype */ {\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this._styleMap) {\n        if (!this._textLines[prop]) {\n          delete this.styles[this._styleMap[prop].line];\n        }\n      }\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Object} [style] Style object to insert, if given\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, style) {\n      // adjust lineIndex and charIndex\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      fabric.IText.prototype.insertCharStyleObject.apply(this, [lineIndex, charIndex, style]);\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Boolean} isEndOfLine True if it's end of line\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n      // adjust lineIndex and charIndex\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      fabric.IText.prototype.insertNewlineStyleObject.apply(this, [lineIndex, charIndex, isEndOfLine]);\n    },\n\n    /**\n     * Shifts line styles up or down. This function is slightly different than the one in\n     * itext_behaviour as it takes into account the styleMap.\n     *\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can be -1 or +1\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by 1 upward\n      var map = this._styleMap[lineIndex];\n      // adjust line index\n      lineIndex = map.line;\n      fabric.IText.prototype.shiftLineStyles.call(this, lineIndex, offset);\n    },\n\n    /**\n     * Figure out programatically the text on previous actual line (actual = separated by \\n);\n     *\n     * @param {Number} lIndex\n     * @returns {String}\n     * @private\n     */\n    _getTextOnPreviousLine: function(lIndex) {\n      var textOnPreviousLine = this._textLines[lIndex - 1];\n\n      while (this._styleMap[lIndex - 2] && this._styleMap[lIndex - 2].line === this._styleMap[lIndex - 1].line) {\n        textOnPreviousLine = this._textLines[lIndex - 2] + textOnPreviousLine;\n\n        lIndex--;\n      }\n\n      return textOnPreviousLine;\n    },\n\n    /**\n     * Removes style object\n     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n     */\n    removeStyleObject: function(isBeginningOfLine, index) {\n\n      var cursorLocation = this.get2DCursorLocation(index),\n          map            = this._styleMap[cursorLocation.lineIndex],\n          lineIndex      = map.line,\n          charIndex      = map.offset + cursorLocation.charIndex;\n      this._removeStyleObject(isBeginningOfLine, cursorLocation, lineIndex, charIndex);\n    }\n  });\n})();\n\n\n(function() {\n  var override = fabric.IText.prototype._getNewSelectionStartFromOffset;\n  /**\n   * Overrides the IText implementation and adjusts character index as there is not always a linebreak\n   *\n   * @param {Number} mouseOffset\n   * @param {Number} prevWidth\n   * @param {Number} width\n   * @param {Number} index\n   * @param {Number} jlen\n   * @returns {Number}\n   */\n  fabric.IText.prototype._getNewSelectionStartFromOffset = function(mouseOffset, prevWidth, width, index, jlen) {\n    index = override.call(this, mouseOffset, prevWidth, width, index, jlen);\n\n    // the index passed into the function is padded by the amount of lines from _textLines (to account for \\n)\n    // we need to remove this padding, and pad it by actual lines, and / or spaces that are meant to be there\n    var tmp     = 0,\n        removed = 0;\n\n    // account for removed characters\n    for (var i = 0; i < this._textLines.length; i++) {\n      tmp += this._textLines[i].length;\n\n      if (tmp + removed >= index) {\n        break;\n      }\n\n      if (this.text[tmp + removed] === '\\n' || this.text[tmp + removed] === ' ') {\n        removed++;\n      }\n    }\n\n    return index - i + removed;\n  };\n})();\n\n\n(function() {\n\n  if (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    return;\n  }\n\n  var DOMParser = require('xmldom').DOMParser,\n      URL = require('url'),\n      HTTP = require('http'),\n      HTTPS = require('https'),\n\n      Canvas = require('canvas'),\n      Image = require('canvas').Image;\n\n  /** @private */\n  function request(url, encoding, callback) {\n    var oURL = URL.parse(url);\n\n    // detect if http or https is used\n    if ( !oURL.port ) {\n      oURL.port = ( oURL.protocol.indexOf('https:') === 0 ) ? 443 : 80;\n    }\n\n    // assign request handler based on protocol\n    var reqHandler = (oURL.protocol.indexOf('https:') === 0 ) ? HTTPS : HTTP,\n        req = reqHandler.request({\n          hostname: oURL.hostname,\n          port: oURL.port,\n          path: oURL.path,\n          method: 'GET'\n        }, function(response) {\n          var body = '';\n          if (encoding) {\n            response.setEncoding(encoding);\n          }\n          response.on('end', function () {\n            callback(body);\n          });\n          response.on('data', function (chunk) {\n            if (response.statusCode === 200) {\n              body += chunk;\n            }\n          });\n        });\n\n    req.on('error', function(err) {\n      if (err.errno === process.ECONNREFUSED) {\n        fabric.log('ECONNREFUSED: connection refused to ' + oURL.hostname + ':' + oURL.port);\n      }\n      else {\n        fabric.log(err.message);\n      }\n      callback(null);\n    });\n\n    req.end();\n  }\n\n  /** @private */\n  function requestFs(path, callback) {\n    var fs = require('fs');\n    fs.readFile(path, function (err, data) {\n      if (err) {\n        fabric.log(err);\n        throw err;\n      }\n      else {\n        callback(data);\n      }\n    });\n  }\n\n  fabric.util.loadImage = function(url, callback, context) {\n    function createImageAndCallBack(data) {\n      if (data) {\n        img.src = new Buffer(data, 'binary');\n        // preserving original url, which seems to be lost in node-canvas\n        img._src = url;\n        callback && callback.call(context, img);\n      }\n      else {\n        img = null;\n        callback && callback.call(context, null, true);\n      }\n    }\n    var img = new Image();\n    if (url && (url instanceof Buffer || url.indexOf('data') === 0)) {\n      img.src = img._src = url;\n      callback && callback.call(context, img);\n    }\n    else if (url && url.indexOf('http') !== 0) {\n      requestFs(url, createImageAndCallBack);\n    }\n    else if (url) {\n      request(url, 'binary', createImageAndCallBack);\n    }\n    else {\n      callback && callback.call(context, url);\n    }\n  };\n\n  fabric.loadSVGFromURL = function(url, callback, reviver) {\n    url = url.replace(/^\\n\\s*/, '').replace(/\\?.*$/, '').trim();\n    if (url.indexOf('http') !== 0) {\n      requestFs(url, function(body) {\n        fabric.loadSVGFromString(body.toString(), callback, reviver);\n      });\n    }\n    else {\n      request(url, '', function(body) {\n        fabric.loadSVGFromString(body, callback, reviver);\n      });\n    }\n  };\n\n  fabric.loadSVGFromString = function(string, callback, reviver) {\n    var doc = new DOMParser().parseFromString(string);\n    fabric.parseSVGDocument(doc.documentElement, function(results, options) {\n      callback && callback(results, options);\n    }, reviver);\n  };\n\n  fabric.util.getScript = function(url, callback) {\n    request(url, '', function(body) {\n      // eslint-disable-next-line no-eval\n      eval(body);\n      callback && callback();\n    });\n  };\n\n  // fabric.util.createCanvasElement = function(_, width, height) {\n  //   return new Canvas(width, height);\n  // }\n\n  /**\n   * Only available when running fabric on node.js\n   * @param {Number} width Canvas width\n   * @param {Number} height Canvas height\n   * @param {Object} [options] Options to pass to FabricCanvas.\n   * @param {Object} [nodeCanvasOptions] Options to pass to NodeCanvas.\n   * @return {Object} wrapped canvas instance\n   */\n  fabric.createCanvasForNode = function(width, height, options, nodeCanvasOptions) {\n    nodeCanvasOptions = nodeCanvasOptions || options;\n\n    var canvasEl = fabric.document.createElement('canvas'),\n        nodeCanvas = new Canvas(width || 600, height || 600, nodeCanvasOptions),\n        nodeCacheCanvas = new Canvas(width || 600, height || 600, nodeCanvasOptions);\n\n    // jsdom doesn't create style on canvas element, so here be temp. workaround\n    canvasEl.style = { };\n\n    canvasEl.width = nodeCanvas.width;\n    canvasEl.height = nodeCanvas.height;\n    options = options || { };\n    options.nodeCanvas = nodeCanvas;\n    options.nodeCacheCanvas = nodeCacheCanvas;\n    var FabricCanvas = fabric.Canvas || fabric.StaticCanvas,\n        fabricCanvas = new FabricCanvas(canvasEl, options);\n    fabricCanvas.nodeCanvas = nodeCanvas;\n    fabricCanvas.nodeCacheCanvas = nodeCacheCanvas;\n    fabricCanvas.contextContainer = nodeCanvas.getContext('2d');\n    fabricCanvas.contextCache = nodeCacheCanvas.getContext('2d');\n    fabricCanvas.Font = Canvas.Font;\n    return fabricCanvas;\n  };\n\n  var originaInitStatic = fabric.StaticCanvas.prototype._initStatic;\n  fabric.StaticCanvas.prototype._initStatic = function(el, options) {\n    el = el || fabric.document.createElement('canvas');\n    this.nodeCanvas = new Canvas(el.width, el.height);\n    this.nodeCacheCanvas = new Canvas(el.width, el.height);\n    originaInitStatic.call(this, el, options);\n    this.contextContainer = this.nodeCanvas.getContext('2d');\n    this.contextCache = this.nodeCacheCanvas.getContext('2d');\n    this.Font = Canvas.Font;\n  };\n\n  /** @ignore */\n  fabric.StaticCanvas.prototype.createPNGStream = function() {\n    return this.nodeCanvas.createPNGStream();\n  };\n\n  fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n    return this.nodeCanvas.createJPEGStream(opts);\n  };\n\n  fabric.StaticCanvas.prototype._initRetinaScaling = function() {\n    if (!this._isRetinaScaling()) {\n      return;\n    }\n\n    this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n    this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n    this.nodeCanvas.width = this.width * fabric.devicePixelRatio;\n    this.nodeCanvas.height = this.height * fabric.devicePixelRatio;\n    this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    return this;\n  };\n  if (fabric.Canvas) {\n    fabric.Canvas.prototype._initRetinaScaling = fabric.StaticCanvas.prototype._initRetinaScaling;\n  }\n\n  var origSetBackstoreDimension = fabric.StaticCanvas.prototype._setBackstoreDimension;\n  fabric.StaticCanvas.prototype._setBackstoreDimension = function(prop, value) {\n    origSetBackstoreDimension.call(this, prop, value);\n    this.nodeCanvas[prop] = value;\n    return this;\n  };\n  if (fabric.Canvas) {\n    fabric.Canvas.prototype._setBackstoreDimension = fabric.StaticCanvas.prototype._setBackstoreDimension;\n  }\n\n})();\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fabric/dist/fabric.js\n// module id = 0\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/index.js\n// module id = 1\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/node-libs-browser/node_modules/process/browser.js\n// module id = 2\n// module chunks = 0","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 3\n// module chunks = 0","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {fabric} from 'fabric';\nimport diff from 'deep-diff';\nimport observable from '../mixin/observable.js';\n\nexport default class FabricObject extends React.Component {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\n\t\t// Observable\n\t\tobservable(this);\n\n\t\t//Object\n\t\tthis.adjustPosition = to => this.state.object &&\n\t\t\tthis.state.object.adjustPosition(to);\n\t\tthis.animate = (property, value, opts) => this.state.object &&\n\t\t\tthis.state.object.animate(property, value, opts);\n\t\tthis.bringForward = intersecting => this.state.object &&\n\t\t\tthis.state.object.bringForward(intersecting);\n\t\tthis.bringToFront = () => this.state.object &&\n\t\t\tthis.state.object.bringToFront();\n\t\tthis.center = () => this.state.object &&\n\t\t\tthis.state.object.center();\n\t\tthis.centerH = () => this.state.object &&\n\t\t\tthis.state.object.centerH();\n\t\tthis.centerV = () => this.state.object &&\n\t\t\tthis.state.object.centerV();\n\t\tthis.clone = (callback, propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.clone(callback, propertiesToInclude);\n\t\tthis.cloneAsImage = (callback) => this.state.object &&\n\t\t\tthis.state.object.cloneAsImage(callback);\n\t\tthis.complexity = () => this.state.object &&\n\t\t\tthis.state.object.complexity();\n\t\tthis.containsPoint = (point) => this.state.object &&\n\t\t\tthis.state.object.containsPoint(point);\n\t\tthis.drawBorders = (ctx) => this.state.object &&\n\t\t\tthis.state.object.drawBorders(ctx);\n\t\tthis.drawControls = (ctx) => this.state.object &&\n\t\t\tthis.state.object.drawControls(ctx);\n\t\tthis.fxStraighten = (callbacks) => this.state.object &&\n\t\t\tthis.state.object.fxStraighten(callbacks);\n\t\tthis.get = (property) => this.state.object &&\n\t\t\tthis.state.object.get(property);\n\t\tthis.getAngle = () => this.state.object &&\n\t\t\tthis.state.object.getAngle();\n\t\tthis.getBoundingRect = () => this.state.object &&\n\t\t\tthis.state.object.getBoundingRect();\n\t\tthis.getBoundingRectHeight = () => this.state.object &&\n\t\t\tthis.state.object.getBoundingRectHeight();\n\t\tthis.getBoundingRectWidth = () => this.state.object &&\n\t\t\tthis.state.object.getBoundingRectWidth();\n\t\tthis.getCenterPoint = () => this.state.object &&\n\t\t\tthis.state.object.getCenterPoint();\n\t\tthis.getClipTo = () => this.state.object &&\n\t\t\tthis.state.object.getClipTo();\n\t\tthis.getFill = () => this.state.object &&\n\t\t\tthis.state.object.getFill();\n\t\tthis.getFlipX = () => this.state.object &&\n\t\t\tthis.state.object.getFlipX();\n\t\tthis.getFlipY = () => this.state.object &&\n\t\t\tthis.state.object.getFlipY();\n\t\tthis.getLeft = () => this.state.object &&\n\t\t\tthis.state.object.getLeft();\n\t\tthis.getLocalPointer = (e, pointer) => this.state.object &&\n\t\t\tthis.state.object.getLocalPointer(e, pointer);\n\t\tthis.getOpacity = () => this.state.object &&\n\t\t\tthis.state.object.getOpacity();\n\t\tthis.getOriginX = () => this.state.object &&\n\t\t\tthis.state.object.getOriginX();\n\t\tthis.getOriginY = () => this.state.object &&\n\t\t\tthis.state.object.getOriginY();\n\t\tthis.getPointByOrigin = (originX, originY) => this.state.object &&\n\t\t\tthis.state.object.getPointByOrigin(originX, originY);\n\n\t\tthis.getScaleX = () => this.state.object &&\n\t\t\tthis.state.object.getScaleX();\n\t\tthis.getScaleY = () => this.state.object &&\n\t\t\tthis.state.object.getScaleY();\n\t\tthis.getShadow = () => this.state.object &&\n\t\t\tthis.state.object.getShadow();\n\t\tthis.getStrokeWidth = () => this.state.object &&\n\t\t\tthis.state.object.getStrokeWidth();\n\t\tthis.getSvgStyles = () => this.state.object &&\n\t\t\tthis.state.object.getSvgStyles();\n\t\tthis.getSvgTransform = () => this.state.object &&\n\t\t\tthis.state.object.getSvgTransform();\n\t\tthis.getSvgTransformMatrix = () => this.state.object &&\n\t\t\tthis.state.object.getSvgTransformMatrix();\n\t\tthis.getTop = () => this.state.object &&\n\t\t\tthis.state.object.getTop();\n\t\tthis.getTransformMatrix = () => this.state.object &&\n\t\t\tthis.state.object.getTransformMatrix();\n\t\tthis.getViewportTransform = () => this.state.object &&\n\t\t\tthis.state.object.getViewportTransform();\n\t\tthis.getVisible = () => this.state.object &&\n\t\t\tthis.state.object.getVisible();\n\t\tthis.getWidth = () => this.state.object &&\n\t\t\tthis.state.object.getWidth();\n\t\tthis.hasStateChanged = () => this.state.object &&\n\t\t\tthis.state.object.hasStateChanged();\n\t\tthis.intersectsWithObject = (other) => this.state.object &&\n\t\t\tthis.state.object.intersectsWithObject(other);\n\t\tthis.intersectsWithRect = (pointTL, pointBR) => this.state.object &&\n\t\t\tthis.state.object.intersectsWithRect(pointTL, pointBR);\n\t\tthis.isContainedWithinObject = (other) => this.state.object &&\n\t\t\tthis.state.object.isContainedWithinObject(other);\n\t\tthis.isContainedWithinRect = (pointTL, pointBR) => this.state.object &&\n\t\t\tthis.state.object.isContainedWithinRect(pointTL, pointBR);\n\t\tthis.isControlVisible = (controlName) => this.state.object &&\n\t\t\tthis.state.object.isControlVisible(controlName);\n\t\tthis.isType = (type) => this.state.object &&\n\t\t\tthis.state.object.isType(type);\n\t\tthis.moveTo = (index) => this.state.object &&\n\t\t\tthis.state.object.moveTo(index);\n\t\tthis.remove = () => this.state.object &&\n\t\t\tthis.state.object.remove();\n\t\tthis.renderf = (ctx, noTransform) => this.state.object &&\n\t\t\tthis.state.object.render(ctx, noTransform);\n\t\tthis.saveState = (options) => this.state.object &&\n\t\t\tthis.state.object.saveState(options);\n\t\tthis.scale = (value) => this.state.object &&\n\t\t\tthis.state.object.scale(value);\n\t\tthis.scaleToHeight = (value) => this.state.object &&\n\t\t\tthis.state.object.scaleToHeight(value);\n\t\tthis.scaleToWidth = (value) => this.state.object &&\n\t\t\tthis.state.object.scaleToWidth(value);\n\t\tthis.sendBackwards = () => this.state.object &&\n\t\t\tthis.state.object.sendBackwards();\n\t\tthis.sendToBack = () => this.state.object &&\n\t\t\tthis.state.object.sendToBack();\n\t\tthis.set = (key, value) => this.state.object &&\n\t\t\tthis.state.object.set(key, value);\n\t\tthis.setAngle = (value) => this.state.object &&\n\t\t\tthis.state.object.setAngle(value);\n\t\tthis.setClipTo = (clipTo) => this.state.object &&\n\t\t\tthis.state.object.setClipTo(clipTo);\n\t\tthis.setColor = (color) => this.state.object &&\n\t\t\tthis.state.object.setColor(color);\n\t\tthis.setControlsVisibility = (options) => this.state.object &&\n\t\t\tthis.state.object.setControlsVisibility(options);\n\t\tthis.setControlVisible = (controlName, visible) => this.state.object &&\n\t\t\tthis.state.object.setControlVisible(controlName, visible);\n\t\tthis.setCoords = (value) => this.state.object &&\n\t\t\tthis.state.object.setCoords(value);\n\t\tthis.setFill = (value) => this.state.object &&\n\t\t\tthis.state.object.setFill(value);\n\t\tthis.setFlipX = (value) => this.state.object &&\n\t\t\tthis.state.object.setFlipX(value);\n\t\tthis.setFlipY = (value) => this.state.object &&\n\t\t\tthis.state.object.setFlipY(value);\n\t\tthis.setGradient = (property, options) => this.state.object &&\n\t\t\tthis.state.object.setGradient(property, options);\n\t\tthis.setLeft = (value) => this.state.object &&\n\t\t\tthis.state.object.setLeft(value);\n\t\tthis.setOpacity = (value) => this.state.object &&\n\t\t\tthis.state.object.setOpacity(value);\n\t\tthis.setOptions = (options) => this.state.object &&\n\t\t\tthis.state.object.setOptions(options);\n\t\tthis.setOriginX = (value) => this.state.object &&\n\t\t\tthis.state.object.setOriginX(value);\n\t\tthis.setOriginY = (value) => this.state.object &&\n\t\t\tthis.state.object.setOriginY(value);\n\t\tthis.setPatternFill = (options) => this.state.object &&\n\t\t\tthis.state.object.setPatternFill(options);\n\t\tthis.setPositionByOrigin = (pos, originX, originY) => this.state.object &&\n\t\t\tthis.state.object.setPositionByOrigin(pos, originX, originY);\n\t\tthis.setScaleX = (value) => this.state.object &&\n\t\t\tthis.state.object.setScaleX(value);\n\t\tthis.setScaleY = (value) => this.state.object &&\n\t\t\tthis.state.object.setScaleY(value);\n\t\tthis.setShadow = (options) => this.state.object &&\n\t\t\tthis.state.object.setShadow(options);\n\t\tthis.setSourcePath = (value) => this.state.object &&\n\t\t\tthis.state.object.setSourcePath(value);\n\t\tthis.setStroke = (value) => this.state.object &&\n\t\t\tthis.state.object.setStroke(value);\n\t\tthis.setStrokeWidth = (value) => this.state.object &&\n\t\t\tthis.state.object.setStrokeWidth(value);\n\t\tthis.setTop = (value) => this.state.object &&\n\t\t\tthis.state.object.setTop(value);\n\t\tthis.setTransformMatrix = (transformMatrix) => this.state.object &&\n\t\t\tthis.state.object.setTransformMatrix(transformMatrix);\n\t\tthis.setupState = () => this.state.object &&\n\t\t\tthis.state.object.setupState(value);\n\t\tthis.setVisible = (value) => this.state.object &&\n\t\t\tthis.state.object.setVisible(value);\n\t\tthis.straighten = () => this.state.object &&\n\t\t\tthis.state.object.straighten();\n\t\tthis.toDatalessObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toDatalessObject();\n\t\tthis.toDataURL = () => this.state.object &&\n\t\t\tthis.state.object.toDataURL(options);\n\t\tthis.toggle = (property) => this.state.object &&\n\t\t\tthis.state.object.toggle(property);\n\t\tthis.toJSON = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toJSON(propertiesToInclude);\n\t\tthis.toLocalPoint = (point, originX, originY) => this.state.object &&\n\t\t\tthis.state.object.toLocalPoint(point, originX, originY);\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.toString = () => this.state.object &&\n\t\t\tthis.state.object.toString();\n\t\tthis.transform = (ctx, fromLeft) => this.state.object &&\n\t\t\tthis.state.object.transform(ctx, fromLeft);\n\t\tthis.translateToCenterPoint = (point, originX, originY) => this.state.object &&\n\t\t\tthis.state.object.translateToCenterPoint(point, originX, originY);\n\t\tthis.translateToOriginPoint = (point, originX, originY) => this.state.object &&\n\t\t\tthis.state.object.translateToOriginPoint(point, originX, originY);\n\n\t\t// React\n\t\tthis.getObject = () => this.state.object;\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tconst difference = diff(this.props, nextProps);\n\t\tif (difference) {\n\t\t\tdifference.forEach(comparsion => {\n\t\t\t\tthis.set(comparsion.path[0], comparsion.rhs);\n\t\t\t});\n\t\t}\n\n\t\tthis.eventChanged(nextProps);\n\t}\n\n\tdraw(object, cb) {\n\t\tthis.setState({object}, () => {\n\t\t\tcb && cb(object);\n\t\t\tthis.initEvent();\n\t\t});\n\t}\n\n\tinitEvent() {\n\t\tconst {object} = this.state;\n\t\tif (!(object instanceof fabric.Object)) return;\n\n\t\tif (this.props.onAdded instanceof Function) {\n\t\t\tobject.on('added', this.props.onAdded);\n\t\t}\n\t\tif (this.props.onRemoved instanceof Function) {\n\t\t\tobject.on('removed', this.props.onRemoved);\n\t\t}\n\t\tif (this.props.onSelected instanceof Function) {\n\t\t\tobject.on('selected', this.props.onSelected);\n\t\t}\n        if (this.props.onDeSelected instanceof Function) {\n            object.on('deselected', this.props.onDeSelected);\n        }\n\t\tif (this.props.onModified instanceof Function) {\n\t\t\tobject.on('modified', this.props.onModified);\n\t\t}\n\t\tif (this.props.onRotating instanceof Function) {\n\t\t\tobject.on('rotating', this.props.onRotating);\n\t\t}\n\t\tif (this.props.onScaling instanceof Function) {\n\t\t\tobject.on('scaling', this.props.onScaling);\n\t\t}\n\t\tif (this.props.onMoving instanceof Function) {\n\t\t\tobject.on('moving', this.props.onMoving);\n\t\t}\n        if (this.props.onSkewing instanceof Function) {\n            object.on('skewing', this.props.onSkewing);\n        }\n\t\tif (this.props.onMousedown instanceof Function) {\n\t\t\tobject.on('mousedown', this.props.onMousedown);\n\t\t}\n\t\tif (this.props.onMouseup instanceof Function) {\n\t\t\tobject.on('mouseup', this.props.onMouseup);\n\t\t}\n        if (this.props.onMouseover instanceof Function) {\n            object.on('mouseover', this.props.onMouseover);\n        }\n        if (this.props.onMouseout instanceof Function) {\n            object.on('mouseout', this.props.onMouseout);\n        }\n        if (this.props.onMousewheel instanceof Function) {\n            object.on('mousewheel', this.props.onMousewheel);\n        }\n        if (this.props.onMousedbclick instanceof Function) {\n            object.on('mousedbclick', this.props.onMousedbclick);\n        }\n\t}\n\n\teventChanged(nextProps) {\n\t\tconst {object} = this.state;\n\t\tif (!(object instanceof fabric.Object)) return;\n\n\t\tif (this.props.onAdded && !nextProps.onAdded) {\n\t\t\tobject.off('added');\n\t\t} else if (nextProps.onAdded instanceof Function) {\n            object.off('added');\n            object.on('added', this.props.onAdded);\n\t\t}\n\n\t\tif (this.props.onRemoved && !nextProps.onRemoved) {\n\t\t\tobject.off('removed');\n\t\t} else if (nextProps.onRemoved instanceof Function) {\n            object.off('removed');\n            object.on('removed', this.props.onRemoved);\n\t\t}\n\n\t\tif (this.props.onSelected && !nextProps.onSelected) {\n\t\t\tobject.off('selected');\n\t\t} else if (nextProps.onSelected instanceof Function) {\n            object.off('selected');\n            object.on('selected', this.props.onSelected);\n\t\t}\n\n        if (this.props.onDeSelected && !nextProps.onDeSelected) {\n            object.off('deselected');\n        } else if (nextProps.onDeSelected instanceof Function) {\n            object.off('deselected');\n            object.on('deselected', this.props.onDeSelected);\n        }\n\n\t\tif (this.props.onModified && !nextProps.onModified) {\n\t\t\tobject.off('modified');\n\t\t} else if (nextProps.onModified instanceof Function) {\n            object.off('modified');\n            object.on('modified', this.props.onModified);\n\t\t}\n\n\t\tif (this.props.onRotating && !nextProps.onRotating) {\n\t\t\tobject.off('rotating');\n\t\t} else if (nextProps.onRotating instanceof Function) {\n            object.off('rotating');\n            object.on('rotating', this.props.onRotating);\n\t\t}\n\n\t\tif (this.props.onScaling && !nextProps.onScaling) {\n\t\t\tobject.off('scaling');\n\t\t} else if (nextProps.onScaling instanceof Function) {\n            object.off('scaling');\n            object.on('scaling', this.props.onScaling);\n\t\t}\n\n\t\tif (this.props.onMoving && !nextProps.onMoving) {\n\t\t\tobject.off('moving');\n\t\t} else if (nextProps.onMoving instanceof Function) {\n            object.off('moving');\n            object.on('moving', this.props.onMoving);\n\t\t}\n\n        if (this.props.onSkewing && !nextProps.onSkewing) {\n            object.off('skewing');\n        } else if (nextProps.onSkewing instanceof Function) {\n            object.off('skewing');\n            object.on('skewing', this.props.onSkewing);\n        }\n\n\t\tif (this.props.onMousedown && !nextProps.onMousedown) {\n\t\t\tobject.off('mousedown');\n\t\t} else if (nextProps.onMousedown instanceof Function) {\n            object.off('mousedown');\n            object.on('mousedown', this.props.onMousedown);\n\t\t}\n\n\t\tif (this.props.onMouseup && !nextProps.onMouseup) {\n\t\t\tobject.off('mouseup');\n\t\t} else if (nextProps.onMouseup instanceof Function) {\n            object.off('mouseup');\n            object.on('mouseup', this.props.onMouseup);\n\t\t}\n\n        if (this.props.onMouseover && !nextProps.onMouseover) {\n            object.off('mouseover');\n        } else if (nextProps.onMouseover instanceof Function) {\n            object.off('mouseover');\n            object.on('mouseover', this.props.onMouseover);\n        }\n\n        if (this.props.onMouseout && !nextProps.onMouseout) {\n            object.off('mouseout');\n        } else if (nextProps.onMouseout instanceof Function) {\n            object.off('mouseout');\n            object.on('mouseout', this.props.onMouseout);\n        }\n\n        if (this.props.onMousewheel && !nextProps.onMousewheel) {\n            object.off('mousewheel');\n        } else if (nextProps.onMousewheel instanceof Function) {\n            object.off('mousewheel');\n            object.on('mousewheel', this.props.onMousewheel);\n        }\n\n        if (this.props.onMousedbclick && !nextProps.onMousedbclick) {\n            object.off('mousedbclick');\n        } else if (nextProps.onMousedbclick instanceof Function) {\n            object.off('mousedbclick');\n            object.on('mousedbclick', this.props.onMousedbclick);\n        }\n\n\t}\n\n\trender() {\n\t\treturn null;\n\t}\n}\n\nFabricObject.__uid = fabric.Object.__uid;\nFabricObject.NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\nFabricObject.rotate = fabric.Object.rotate;\n\nFabricObject.propTypes = {\n\tangle: PropTypes.number,\n\tbackgroundColor: PropTypes.string,\n\tborderColor: PropTypes.string,\n\tborderOpacityWhenMoving: PropTypes.number,\n\tborderScaleFactor: PropTypes.number,\n\tcenteredRotation: PropTypes.bool,\n\tcenteredScaling: PropTypes.bool,\n\tclipTo: PropTypes.func,\n\tcornerColor: PropTypes.string,\n\tcornerSize: PropTypes.number,\n\tevented: PropTypes.bool,\n\tfill: PropTypes.string,\n\tfillRule: PropTypes.string,\n\tflipX: PropTypes.bool,\n\tflipY: PropTypes.bool,\n\tglobalCompositeOperation: PropTypes.string,\n\thasBorders: PropTypes.bool,\n\thasControls: PropTypes.bool,\n\thasRotatingPoint: PropTypes.bool,\n\theight: PropTypes.number,\n\thoverCursor: PropTypes.string,\n\tincludeDefaultValues: PropTypes.bool,\n\tleft: PropTypes.number,\n\tlockMovementX: PropTypes.bool,\n\tlockMovementY: PropTypes.bool,\n\tlockRotation: PropTypes.bool,\n\tlockScalingFlip: PropTypes.bool,\n\tlockScalingX: PropTypes.bool,\n\tlockScalingY: PropTypes.bool,\n\tlockUniScaling: PropTypes.bool,\n\tminScaleLimit: PropTypes.number,\n\toCoords: PropTypes.object,\n\topacity: PropTypes.number,\n\toriginX: PropTypes.oneOf(['left', 'right', 'center']),\n\toriginY: PropTypes.oneOf(['top', 'bottom', 'center']),\n\tpadding: PropTypes.number,\n\tperPixelTargetFind: PropTypes.bool,\n\trotatingPointOffset: PropTypes.number,\n\tscaleX: PropTypes.number,\n\tscaleY: PropTypes.number,\n\tselectable: PropTypes.bool,\n\tshadow: PropTypes.oneOfType([PropTypes.instanceOf(fabric.Shadow), PropTypes.string]),\n\tstateProperties: PropTypes.array,\n\tstroke: PropTypes.string,\n\tstrokeDashArray: PropTypes.array,\n\tstrokeLineCap: PropTypes.oneOf(['butt', 'round', 'square']),\n\tstrokeLineJoin: PropTypes.oneOf(['bevil', 'round', 'miter']),\n\tstrokeMiterLimit: PropTypes.number,\n\tstrokeWidth: PropTypes.number,\n\ttop: PropTypes.number,\n\ttransformMatrix: PropTypes.array,\n\ttransparentCorners: PropTypes.bool,\n\ttype: PropTypes.string,\n\tvisible: PropTypes.bool,\n\twidth: PropTypes.number,\n};\n\nFabricObject.defaultProps = {\n\ttype: 'object',\n\toriginX: 'left',\n\toriginY: 'top',\n\ttop: 0,\n\tleft: 0,\n\twidth: 0,\n\theight: 0,\n\tscaleX: 1,\n\tscaleY: 1,\n\tflipX: false,\n\tflipY: false,\n\topacity: 1,\n\tangle: 0,\n\tskewX: 0,\n\tskewY: 0,\n\tcornerSize: 12,\n\ttransparentCorners: true,\n\thoverCursor: null,\n\tpadding: 0,\n\tborderColor: 'rgba(102,153,255,0.75)',\n\tcornerColor: 'rgba(102,153,255,0.5)',\n\tcenteredScaling: false,\n\tcenteredRotation: true,\n\tfill: 'rgb(0,0,0)',\n\tfillRule: 'nonzero',\n\tglobalCompositeOperation: 'source-over',\n\tbackgroundColor: '',\n\tstroke: null,\n\tstrokeWidth: 1,\n\tstrokeDashArray: null,\n\tstrokeLineCap: 'butt',\n\tstrokeLineJoin: 'miter',\n\tstrokeMiterLimit: 10,\n\tshadow: null,\n\tborderOpacityWhenMoving: 0.4,\n\tborderScaleFactor: 1,\n\ttransformMatrix: null,\n\tminScaleLimit: 0.01,\n\tselectable: true,\n\tevented: true,\n\tvisible: true,\n\thasControls: true,\n\thasBorders: true,\n\thasRotatingPoint: true,\n\trotatingPointOffset: 40,\n\tperPixelTargetFind: false,\n\tincludeDefaultValues: true,\n\n\tclipTo: null,\n\n\tlockMovementX: false,\n\tlockMovementY: false,\n\tlockRotation: false,\n\tlockScalingX: false,\n\tlockScalingY: false,\n\tlockUniScaling: false,\n\tlockSkewingX: false,\n\tlockSkewingY: false,\n\tlockScalingFlip: false,\n\n\t// oCoords: null,\n\n\tstateProperties:  (\n\t\t'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n\t\t'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' +\n\t\t'angle opacity fill fillRule globalCompositeOperation shadow clipTo visible backgroundColor ' +\n\t\t'alignX alignY meetOrSlice skewX skewY'\n\t).split(' ')\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/base/Object.jsx","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/buffer/index.js\n// module id = 5\n// module chunks = 0","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inherits/inherits_browser.js\n// module id = 6\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nvar keys = objectKeys(Writable.prototype);\nfor (var v = 0; v < keys.length; v++) {\n  var method = keys[v];\n  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  processNextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  processNextTick(cb, err);\n};\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/lib/_stream_duplex.js\n// module id = 7\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-util-is/lib/util.js\n// module id = 8\n// module chunks = 0","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = nextTick;\n} else {\n  module.exports = process.nextTick;\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process-nextick-args/index.js\n// module id = 9\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 10\n// module chunks = 0","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/emptyFunction.js\n// module id = 11\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/invariant.js\n// module id = 12\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/lib/ReactPropTypesSecret.js\n// module id = 13\n// module chunks = 0","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/safe-buffer/index.js\n// module id = 15\n// module chunks = 0","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {fabric} from 'fabric';\nimport diff from 'deep-diff';\nimport collection from './mixin/collection.js';\nimport observable from './mixin/observable.js';\n\nexport default class StaticCanvas extends React.Component {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\n\t\tthis.state = {\n\t\t\tcanvas: null,\n\t\t};\n\n\t\tcollection(this);\n\t\tobservable(this);\n\n\t\t//Static Canvas\n\t\tthis.absolutePan = (point) => this.state.canvas &&\n\t\t\tthis.state.canvas.absolutePan(point);\n\t\tthis.bringForward = (object, intersecting) => this.state.canvas &&\n\t\t\tthis.state.canvas.bringForward(object, intersecting);\n\t\tthis.bringToFront = (object) => this.state.canvas &&\n\t\t\tthis.state.canvas.bringToFront(object);\n\t\tthis.centerObject = (object) => this.state.canvas &&\n\t\t\tthis.state.canvas.centerObject(object);\n\t\tthis.centerObjectH = (object) => this.state.canvas &&\n\t\t\tthis.state.canvas.centerObjectH(object);\n\t\tthis.centerObjectV = (object) => this.state.canvas &&\n\t\t\tthis.state.canvas.centerObjectV(object);\n\t\tthis.clear = () => this.state.canvas &&\n\t\t\tthis.state.canvas.clear();\n\t\tthis.clearContext = (ctx) => this.state.canvas &&\n\t\t\tthis.state.canvas.clearContext(ctx);\n\t\tthis.clone = (callback, properties) => this.state.canvas &&\n\t\t\tthis.state.canvas.clone(callback, properties);\n\t\tthis.cloneWithoutData = (callback) => this.state.canvas &&\n\t\t\tthis.state.canvas.cloneWithoutData(callback);\n\t\tthis.dispose = () => this.state.canvas &&\n\t\t\tthis.state.canvas.dispose();\n\t\tthis.fxCenterObjectH = (object, callbacks) => this.state.canvas &&\n\t\t\tthis.state.canvas.fxCenterObjectH(object, callbacks);\n\t\tthis.fxCenterObjectV = (object, callbacks) => this.state.canvas &&\n\t\t\tthis.state.canvas.fxCenterObjectV(object, callbacks);\n\t\tthis.fxRemove = (object, callbacks) => this.state.canvas &&\n\t\t\tthis.state.canvas.fxRemove(object, callbacks);\n\t\tthis.fxStraightenObject = (object) => this.state.canvas &&\n\t\t\tthis.state.canvas.fxStraightenObject(object);\n\t\tthis.getActiveGroup = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getActiveGroup();\n\t\tthis.getActiveObject = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getActiveObject();\n\t\tthis.getCenter = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getCenter();\n\t\tthis.getContext = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getContext();\n\t\tthis.getElement = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getElement();\n\t\tthis.getHeight = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getHeight();\n\t\tthis.getWidth = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getWidth();\n\t\tthis.getZoom = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getZoom();\n\t\tthis.loadFromDatalessJSON = (json, callback, reviver) => this.state.canvas &&\n\t\t\tthis.state.canvas.loadFromDatalessJSON(json, callback, reviver);\n\t\tthis.loadFromJSON = (json, callback, reviver) => this.state.canvas &&\n\t\t\tthis.state.canvas.loadFromJSON(json, callback, reviver);\n\t\tthis.moveTo = (object, index) => this.state.canvas &&\n\t\t\tthis.state.canvas.moveTo(object, index);\n\t\tthis.onBeforeScaleRotate = () => this.state.canvas &&\n\t\t\tthis.state.canvas.onBeforeScaleRotate();\n\t\tthis.relativePan = (point) => this.state.canvas &&\n\t\t\tthis.state.canvas.relativePan(point);\n\t\tthis.renderAll = (allOnTop) => this.state.canvas &&\n\t\t\tthis.state.canvas.renderAll(allOnTop);\n\t\tthis.renderTop = () => this.state.canvas &&\n\t\t\tthis.state.canvas.renderTop();\n\t\tthis.sendBackwards = (object, intersecting) => this.state.canvas &&\n\t\t\tthis.state.canvas.sendBackwards(object, intersecting);\n\t\tthis.sendToBack = (object) => this.state.canvas &&\n\t\t\tthis.state.canvas.sendToBack(object);\n\t\tthis.setBackgroundColor = (backgroundColor, callback) => this.state.canvas &&\n\t\t\tthis.state.canvas.setBackgroundColor(backgroundColor, callback);\n\t\tthis.setBackgroundImage = (image, callback, options) => this.state.canvas &&\n\t\t\tthis.state.canvas.setBackgroundImage(image, callback, options);\n\t\tthis.setDimensions = (dimensions, options) => this.state.canvas &&\n\t\t\tthis.state.canvas.setDimensions(dimensions, options);\n\t\tthis.setHeight = (value, options) => this.state.canvas &&\n\t\t\tthis.state.canvas.setHeight(value, options);\n\t\tthis.setOverlayColor = (overlayColor, callback) => this.state.canvas &&\n\t\t\tthis.state.canvas.setOverlayColor(overlayColor, callback);\n\t\tthis.setOverlayImage = (image, callback, options) => this.state.canvas &&\n\t\t\tthis.state.canvas.setOverlayImage(image, callback, options);\n\t\tthis.setViewportTransform = (vpt) => this.state.canvas &&\n\t\t\tthis.state.canvas.setViewportTransform(vpt);\n\t\tthis.setWidth = (value, options) => this.state.canvas &&\n\t\t\tthis.state.canvas.setWidth(value, options);\n\t\tthis.setZoom = (value) => this.state.canvas &&\n\t\t\tthis.state.canvas.setZoom(value);\n\t\tthis.straightenObject = (object) => this.state.canvas &&\n\t\t\tthis.state.canvas.straightenObject(object);\n\t\tthis.toDatalessJSON = (propertiesToInclude) => this.state.canvas &&\n\t\t\tthis.state.canvas.toDatalessJSON(propertiesToInclude);\n\t\tthis.toDatalessObject = (propertiesToInclude) => this.state.canvas &&\n\t\t\tthis.state.canvas.toDatalessObject(propertiesToInclude);\n\t\tthis.toDataURL = (options) => this.state.canvas &&\n\t\t\tthis.state.canvas.toDataURL(options);\n\t\tthis.toDataURLWithMultiplier = (format, multiplier, quality) => this.state.canvas &&\n\t\t\tthis.state.canvas.toDataURLWithMultiplier(format, multiplier, quality);\n\t\tthis.toJSON = (propertiesToInclude) => this.state.canvas &&\n\t\t\tthis.state.canvas.toJSON(propertiesToInclude);\n\t\tthis.toObject = (propertiesToInclude) => this.state.canvas &&\n\t\t\tthis.state.canvas.toObject(propertiesToInclude);\n\t\tthis.toString = () => this.state.canvas &&\n\t\t\tthis.state.canvas.toString();\n\t\tthis.toSVG = (options, reviver) => this.state.canvas &&\n\t\t\tthis.state.canvas.toSVG(options, reviver);\n\t\tthis.zoomToPoint = (point, value) => this.state.canvas &&\n\t\t\tthis.state.canvas.zoomToPoint(point, value);\n\n\t\t// React\n\t\tthis.getChild = this.getChild.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tconst canvas = new fabric.Canvas(this.props.id,  { selection: this.props.selection });\n\n\t\tthis.setState({canvas}, () => {\n\t\t\tthis.initEvent.call(this);\n\t\t\tObject.keys(this.ref).forEach(key => {\n\t\t\t\tconst ref = this.ref[key];\n\t\t\t\tref.draw(obj => this.add(obj));\n\t\t\t});\n\t\t});\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tthis.prevRef = {};\n\t\tObject.keys(this.ref).forEach(key => {\n\t\t\tthis.prevRef[key] = this.ref[key];\n\t\t});\n\t\tthis.ref = {};\n\n\t\t/* Options Changed */\n\t\tif (diff(this.props.backgroundColor, nextProps.backgroundColor)) {\n\t\t\tthis.setBackgroundColor(nextProps.backgroundColor);\n\t\t}\n\t\tif (diff(this.props.backgroundImage, nextProps.backgroundImage)) {\n\t\t\tthis.setBackgroundImage(nextProps.backgroundImage);\n\t\t}\n\n\t\tif (this.props.height !== nextProps.height) {\n\t\t\tthis.state.canvas.setHeight(nextProps.height);\n\t\t}\n\t\tif (this.props.width !== nextProps.width) {\n\t\t\tthis.state.canvas.setHeight(nextProps.width);\n\t\t}\n\n\t\tif (diff(this.props.overlayColor, nextProps.overlayColor)) {\n\t\t\tthis.setOverlayColor(nextProps.overlayColor);\n\t\t}\n\t\tif (diff(this.props.overlayImage, nextProps.overlayImage)) {\n\t\t\tthis.setOverlayImage(nextProps.overlayImage);\n\t\t}\n\n\t\tif (diff(this.props.viewportTransform, nextProps.viewportTransform)) {\n\t\t\tthis.setViewportTransform(nextProps.viewportTransform);\n\t\t}\n\n\t\t/* TODO: Event Changed */\n\t\tthis.eventChanged(nextProps);\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\t/* TODO: Children Changed */\n\n\t\tif (prevState.canvas) {\n\t\t\tReact.Children.map(\n\t\t\t\tthis.props.children,\n\t\t\t\t(child, i) => {\n\t\t\t\t\tif (!child) return;\n\n\t\t\t\t\tconst key = child.ref ? child.ref : `layer${i}`;\n\t\t\t\t\tconst ref = this.ref[key];\n\t\t\t\t\tref.draw(obj => {\n\t\t\t\t\t\t// because this callback is called asynchronously, if multiple updates occur in quick\n\t\t\t\t\t\t// succession then it's possible we'll attempt to remove an object (below) before it has been\n\t\t\t\t\t\t// added (here) - the result of which is duplicate objects on the canvas\n\t\t\t\t\t\tif (!obj.doNotAdd) {\n\t\t\t\t\t\t\tthis.add(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif (this.prevRef !== undefined) {\n                Object.keys(this.prevRef).forEach(key => {\n                    const object = this.prevRef[key].getObject();\n                    // in case this object hasn't actually been added yet, set a flag so that we don't add it later\n                    object.doNotAdd = true;\n                    this.remove(object);\n                });\n\t\t\t}\n\t\t}\n\n\t\tthis.state.canvas && this.state.canvas.renderAll();\n\t}\n\n\t// childAddedrRemove(oldChild, child, index) {\n\t\t// \tconst ref = child.ref ? this.ref[child.ref] : this.ref[`layer${index}`];\n\t\t// \tref.draw(obj => this.insertAt(obj, index));\n\t\t// } else if (oldChild && !child) {\n\t\t// \tconst key = oldChild.ref;\n\t\t// \tconst ref = key ? this.ref[key] : this.ref[`layer${index}`];\n\t\t// \tconst obj = ref.getObject();\n\t\t//\n\t\t// \tthis.remove(obj);\n\t\t// \tthis.ref[ref] = null;\n\t\t// }\n\t// }\n\n\tinitEvent() {\n\t\tconst {canvas} = this.state;\n\t\tif (!canvas) return;\n\n\t\tif (this.props.beforeRender instanceof Function) {\n\t\t\tcanvas.on('before:render', this.props.beforeRender);\n\t\t}\n        if (this.props.beforeSelectionCleared instanceof Function) {\n            canvas.on('before:selection:cleared', this.props.beforeSelectionCleared);\n        }\n\t\tif (this.props.afterRender instanceof Function) {\n\t\t\tcanvas.on('after:render', this.props.afterRender);\n\t\t}\n\t\tif (this.props.onCanvasCleared instanceof Function) {\n\t\t\tcanvas.on('canvas:cleared', this.props.onCanvasCleared);\n\t\t}\n        if (this.props.onMouseDown instanceof Function) {\n            canvas.on('mouse:down', this.props.onMouseDown);\n        }\n        if (this.props.onMouseMove instanceof Function) {\n            canvas.on('mouse:move', this.props.onMouseMove);\n        }\n        if (this.props.onMouseUp instanceof Function) {\n            canvas.on('mouse:up', this.props.onMouseUp);\n        }\n        if (this.props.onMouseOver instanceof Function) {\n            canvas.on('mouse:over', this.props.onMouseOver);\n        }\n        if (this.props.onMouseOut instanceof Function) {\n            canvas.on('mouse:out', this.props.onMouseOut);\n        }\n        if (this.props.onMouseDbclick instanceof Function) {\n            canvas.on('mouse:dbclick', this.props.onMouseDbclick);\n        }\n\t\tif (this.props.onObjectAdded instanceof Function) {\n\t\t\tcanvas.on('object:added', this.props.onObjectAdded);\n\t\t}\n        if (this.props.onObjectModified instanceof Function) {\n            canvas.on('object:modified', this.props.onObjectModified);\n        }\n\t\tif (this.props.onObjectRemoved instanceof Function) {\n\t\t\tcanvas.on('object:removed', this.props.onObjectRemoved);\n\t\t}\n        if (this.props.onObjectRotating instanceof Function) {\n            canvas.on('object:rotating', this.props.onObjectRotating);\n        }\n        if (this.props.onObjectMoving instanceof Function) {\n            canvas.on('object:moving', this.props.onObjectMoving);\n        }\n        if (this.props.onObjectScaling instanceof Function) {\n            canvas.on('object:scaling', this.props.onObjectScaling);\n        }\n        if (this.props.onObjectSelected instanceof Function) {\n            canvas.on('object:selected', this.props.onObjectSelected);\n        }\n        if (this.props.onPathCreated instanceof Function) {\n            canvas.on('path:created', this.props.onPathCreated);\n        }\n        if (this.props.onSelectionCleared instanceof Function) {\n            canvas.on('selection:cleared', this.props.onSelectionCleared);\n        }\n\n\t}\n\n\teventChanged(nextProps) {\n\t\tconst {canvas} = this.state;\n\t\tif (!canvas) return;\n\n\t\tif (this.props.beforeRender && !nextProps.beforeRender) {\n\t\t\tcanvas.off('before:render');\n\t\t} else if (nextProps.beforeRender instanceof Function) {\n            canvas.off('before:render');\n            canvas.on('before:render', this.props.beforeRender);\n\t\t}\n\n        if (this.props.beforeSelectionCleared && !nextProps.beforeSelectionCleared) {\n            canvas.off('before:selection:cleared');\n        } else if (nextProps.beforeSelectionCleared instanceof Function) {\n            canvas.off('before:selection:cleared');\n            canvas.on('before:selection:cleared', this.props.beforeSelectionCleared);\n        }\n\n\t\tif (this.props.afterRender && !nextProps.afterRender) {\n\t\t\tcanvas.off('after:render');\n\t\t} else if (nextProps.afterRender instanceof Function) {\n            canvas.off('after:render');\n            canvas.on('after:render', this.props.afterRender);\n\t\t}\n\n\t\tif (this.props.onCanvasCleared && !nextProps.onCanvasCleared) {\n\t\t\tcanvas.off('canvas:cleared');\n\t\t} else if (nextProps.onCanvasCleared instanceof Function) {\n            canvas.off('canvas:cleared');\n            canvas.on('canvas:cleared', this.props.onCanvasCleared);\n\t\t}\n\n        if (this.props.onMouseDown && !nextProps.onMouseDown) {\n            canvas.off('mouse:down');\n        } else if (nextProps.onMouseDown instanceof Function) {\n            canvas.off('mouse:down');\n            canvas.on('mouse:down', this.props.onMouseDown);\n        }\n\n        if (this.props.onMouseMove && !nextProps.onMouseMove) {\n            canvas.off('mouse:move');\n        } else if (nextProps.onMouseMove instanceof Function) {\n            canvas.off('mouse:move');\n            canvas.on('mouse:move', this.props.onMouseMove);\n        }\n\n        if (this.props.onMouseUp && !nextProps.onMouseUp) {\n            canvas.off('mouse:up');\n        } else if (nextProps.onMouseUp instanceof Function) {\n            canvas.off('mouse:up');\n            canvas.on('mouse:up', this.props.onMouseUp);\n        }\n\n        if (this.props.onMouseOver && !nextProps.onMouseOver) {\n            canvas.off('mouse:over');\n        } else if (nextProps.onMouseOver instanceof Function) {\n            canvas.off('mouse:over');\n            canvas.on('mouse:over', this.props.onMouseOver);\n        }\n\n        if (this.props.onMouseOut && !nextProps.onMouseOut) {\n            canvas.off('mouse:out');\n        } else if (nextProps.onMouseOut instanceof Function) {\n            canvas.off('mouse:out');\n            canvas.on('mouse:out', this.props.onMouseOut);\n        }\n\n        if (this.props.onMouseDbclick && !nextProps.onMouseDbclick) {\n            canvas.off('mouse:dbclick');\n        } else if (nextProps.onMouseDbclick instanceof Function) {\n            canvas.off('mouse:dbclick');\n            canvas.on('mouse:dbclick', this.props.onMouseDbclick);\n        }\n\n\t\tif (this.props.onObjectAdded && !nextProps.onObjectAdded) {\n\t\t\tcanvas.off('object:added');\n\t\t} else if (nextProps.onObjectAdded instanceof Function) {\n            canvas.off('object:added');\n            canvas.on('object:added', this.props.onObjectAdded);\n\t\t}\n\n        if (this.props.onObjectModified && !nextProps.onObjectModified) {\n            canvas.off('object:modified');\n        } else if (nextProps.onObjectModified instanceof Function) {\n            canvas.off('object:modified');\n            canvas.on('object:modified', this.props.onObjectModified);\n        }\n\n\t\tif (this.props.onObjectRemoved && !nextProps.onObjectRemoved) {\n\t\t\tcanvas.off('object:removed');\n\t\t} else if (nextProps.onObjectRemoved instanceof Function) {\n            canvas.off('object:removed');\n            canvas.on('object:removed', this.props.onObjectRemoved);\n\t\t}\n\n        if (this.props.onObjectRotating && !nextProps.onObjectRotating) {\n            canvas.off('object:rotating');\n        } else if (nextProps.onObjectRotating instanceof Function) {\n            canvas.off('object:rotating');\n            canvas.on('object:rotating', this.props.onObjectRotating);\n        }\n\n        if (this.props.onObjectMoving && !nextProps.onObjectMoving) {\n            canvas.off('object:moving');\n        } else if (nextProps.onObjectMoving instanceof Function) {\n            canvas.off('object:moving');\n            canvas.on('object:moving', this.props.onObjectMoving);\n        }\n\n        if (this.props.onObjectScaling && !nextProps.onObjectScaling) {\n            canvas.off('object:scaling');\n        } else if (nextProps.onObjectScaling instanceof Function) {\n            canvas.off('object:scaling');\n            canvas.on('object:scaling', this.props.onObjectScaling);\n        }\n\n        if (this.props.onObjectSelected && !nextProps.onObjectSelected) {\n            canvas.off('object:selected');\n        } else if (nextProps.onObjectSelected instanceof Function) {\n            canvas.off('object:selected');\n            canvas.on('object:selected', this.props.onObjectSelected);\n        }\n\n        if (this.props.onPathCreated && !nextProps.onPathCreated) {\n            canvas.off('path:created');\n        } else if (nextProps.onPathCreated instanceof Function) {\n            canvas.off('path:created');\n            canvas.on('path:created', this.props.onPathCreated);\n        }\n\n        if (this.props.onSelectionCleared && !nextProps.onSelectionCleared) {\n            canvas.off('selection:cleared');\n        } else if (nextProps.onSelectionCleared instanceof Function) {\n            canvas.off('selection:cleared');\n            canvas.on('selection:cleared', this.props.onSelectionCleared);\n        }\n\n\t}\n\n\tgetChild(ref) {\n\t\treturn this.ref[ref];\n\t}\n\n\trender() {\n\t\tconst {id, children} = this.props;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<canvas id={id} width={this.props.width} height={this.props.height}/>\n\n\t\t\t\t<div>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.state.canvas &&\n\t\t\t\t\t\tReact.Children.map(\n\t\t\t\t\t\t\tchildren,\n\t\t\t\t\t\t\t(child, i) => child && React.cloneElement(child, {\n\t\t\t\t\t\t\t\tref: c => {\n\t\t\t\t\t\t\t\t\tif (c) {\n\t\t\t\t\t\t\t\t\t\tthis.ref[child.ref||`layer${i}`] = c;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t);\n\n\t}\n}\n\nStaticCanvas.emptyJSON = fabric.StaticCanvas.EMPTY_JSON;\nStaticCanvas.supports = (methodName) =>  fabric.StaticCanvas.supports(methodName);\n\nStaticCanvas.propTypes = {\n\tallowTouchScrolling: PropTypes.bool,\n\tbackgroundColor: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(fabric.Pattern)\n\t]),\n\tbackgroundImage: PropTypes.instanceOf(fabric.Image),\n\tclipTo: PropTypes.func,\n\tcontrolsAboveOverlay: PropTypes.bool,\n\tFX_DURATION: PropTypes.number,\n\timageSmoothingEnabled: PropTypes.bool,\n\tincludeDefaultValues: PropTypes.bool,\n\toverlayColor: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(fabric.Pattern)\n\t]),\n\toverlayImage: PropTypes.instanceOf(fabric.Image),\n\tpreserveObjectStacking: PropTypes.bool,\n\trenderOnAddRemove: PropTypes.bool,\n\tstateful: PropTypes.bool,\n\tsvgViewportTransformation: PropTypes.bool,\n\tviewportTransform: PropTypes.array,\n\n\twidth: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string,\n\t]),\n\n\theight: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string,\n\t]),\n\n\tid: PropTypes.string,\n    afterRender: PropTypes.func,\n    beforeRender: PropTypes.func,\n    beforeSelectionCleared: PropTypes.func,\n\tonCanvasCleared: PropTypes.func,\n    onMouseDown: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseUp: PropTypes.func,\n    onMouseOver: PropTypes.func,\n    onMouseOut: PropTypes.func,\n    onMouseDbclick: PropTypes.func,\n\tonObjectAdded: PropTypes.func,\n\tonObjectRemoved: PropTypes.func,\n    onObjectRotating: PropTypes.func,\n    onObjectMoving: PropTypes.func,\n\tonObjectScaling: PropTypes.func,\n    onObjectSelected: PropTypes.func,\n    onObjectModified: PropTypes.func,\n    onPathCreated: PropTypes.func,\n    onSelectionCleared: PropTypes.func,\n};\n\nStaticCanvas.defaultProps = {\n\tallowTouchScrolling: false,\n\tbackgroundColor: '',\n\tbackgroundImage: null,\n\tclipTo: null,\n\tcontrolsAboveOverlay: false,\n\tFX_DURATION: 500,\n\timageSmoothingEnabled: true,\n\tincludeDefaultValues: true,\n\toverlayColor: '',\n\toverlayImage: null,\n\tpreserveObjectStacking: false,\n\trenderOnAddRemove: true,\n\tstateful: true,\n\tsvgViewportTransformation: true,\n\tviewportTransform: null,\n\n\twidth: 100,\n\theight: 100,\n\n\tid: 'c',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/StaticCanvas.jsx","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  var printWarning = function printWarning(format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  warning = function warning(condition, format) {\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n\n    if (format.indexOf('Failed Composite propType: ') === 0) {\n      return; // Ignore CompositeComponent proptype check.\n    }\n\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/warning.js\n// module id = 17\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/isarray/index.js\n// module id = 18\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/url/url.js\n// module id = 19\n// module chunks = 0","var ClientRequest = require('./lib/request')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/stream-http/index.js\n// module id = 20\n// module chunks = 0","exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.blobConstructor = false\ntry {\n\tnew Blob([new ArrayBuffer(1)])\n\texports.blobConstructor = true\n} catch (e) {}\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// For some strange reason, Safari 7.0 reports typeof global.ArrayBuffer === 'object'.\n// Safari 7.1 appears to have fixed this bug.\nvar haveArrayBuffer = typeof global.ArrayBuffer !== 'undefined'\nvar haveSlice = haveArrayBuffer && isFunction(global.ArrayBuffer.prototype.slice)\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || (haveArrayBuffer && checkTypeSupport('arraybuffer'))\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && haveSlice && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && haveArrayBuffer &&\n\tcheckTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nexports.vbArray = isFunction(global.VBArray)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/stream-http/lib/capability.js\n// module id = 21\n// module chunks = 0","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/readable-browser.js\n// module id = 22\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n// TODO(bmeurer): Change this back to const once hole checks are\n// properly optimized away early in Ignition+TurboFan.\n/*<replacement>*/\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') {\n    return emitter.prependListener(event, fn);\n  } else {\n    // This is a hack to make sure that our error handler is attached before any\n    // userland ones.  NEVER DO THIS. This is here only because this code needs\n    // to continue to work with older versions of Node.js that do not include\n    // the prependListener() method. The goal is to eventually remove this hack.\n    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n  }\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    processNextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        processNextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    processNextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], self.emit.bind(self, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    processNextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/lib/_stream_readable.js\n// module id = 23\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/events/events.js\n// module id = 24\n// module chunks = 0","module.exports = require('events').EventEmitter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/lib/internal/streams/stream-browser.js\n// module id = 25\n// module chunks = 0","'use strict';\n\n/*<replacement>*/\n\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      processNextTick(emitErrorNT, this, err);\n    }\n    return;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      processNextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/lib/internal/streams/destroy.js\n// module id = 26\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  processNextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    processNextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = _isUint8Array(chunk) && !state.objectMode;\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    processNextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    processNextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequestCount = 0;\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      processNextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) processNextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/lib/_stream_writable.js\n// module id = 27\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = require('buffer').Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/node-libs-browser/node_modules/string_decoder/index.js\n// module id = 28\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction TransformState(stream) {\n  this.afterTransform = function (er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n  this.writeencoding = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return stream.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined) stream.push(data);\n\n  cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(this);\n\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.once('prefinish', function () {\n    if (typeof this._flush === 'function') this._flush(function (er, data) {\n      done(stream, er, data);\n    });else done(stream);\n  });\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data !== null && data !== undefined) stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (ts.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/lib/_stream_transform.js\n// module id = 29\n// module chunks = 0","'use strict';\nvar $scope, conflict, conflictResolution = [];\nif (typeof global === 'object' && global) {\n  $scope = global;\n} else if (typeof window !== 'undefined') {\n  $scope = window;\n} else {\n  $scope = {};\n}\nconflict = $scope.DeepDiff;\nif (conflict) {\n  conflictResolution.push(\n    function() {\n      if ('undefined' !== typeof conflict && $scope.DeepDiff === accumulateDiff) {\n        $scope.DeepDiff = conflict;\n        conflict = undefined;\n      }\n    });\n}\n\n// nodejs compatible on server side and in the browser.\nfunction inherits(ctor, superCtor) {\n  ctor.super_ = superCtor;\n  ctor.prototype = Object.create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n}\n\nfunction Diff(kind, path) {\n  Object.defineProperty(this, 'kind', {\n    value: kind,\n    enumerable: true\n  });\n  if (path && path.length) {\n    Object.defineProperty(this, 'path', {\n      value: path,\n      enumerable: true\n    });\n  }\n}\n\nfunction DiffEdit(path, origin, value) {\n  DiffEdit.super_.call(this, 'E', path);\n  Object.defineProperty(this, 'lhs', {\n    value: origin,\n    enumerable: true\n  });\n  Object.defineProperty(this, 'rhs', {\n    value: value,\n    enumerable: true\n  });\n}\ninherits(DiffEdit, Diff);\n\nfunction DiffNew(path, value) {\n  DiffNew.super_.call(this, 'N', path);\n  Object.defineProperty(this, 'rhs', {\n    value: value,\n    enumerable: true\n  });\n}\ninherits(DiffNew, Diff);\n\nfunction DiffDeleted(path, value) {\n  DiffDeleted.super_.call(this, 'D', path);\n  Object.defineProperty(this, 'lhs', {\n    value: value,\n    enumerable: true\n  });\n}\ninherits(DiffDeleted, Diff);\n\nfunction DiffArray(path, index, item) {\n  DiffArray.super_.call(this, 'A', path);\n  Object.defineProperty(this, 'index', {\n    value: index,\n    enumerable: true\n  });\n  Object.defineProperty(this, 'item', {\n    value: item,\n    enumerable: true\n  });\n}\ninherits(DiffArray, Diff);\n\nfunction arrayRemove(arr, from, to) {\n  var rest = arr.slice((to || from) + 1 || arr.length);\n  arr.length = from < 0 ? arr.length + from : from;\n  arr.push.apply(arr, rest);\n  return arr;\n}\n\nfunction realTypeOf(subject) {\n  var type = typeof subject;\n  if (type !== 'object') {\n    return type;\n  }\n\n  if (subject === Math) {\n    return 'math';\n  } else if (subject === null) {\n    return 'null';\n  } else if (Array.isArray(subject)) {\n    return 'array';\n  } else if (Object.prototype.toString.call(subject) === '[object Date]') {\n    return 'date';\n  } else if (typeof subject.toString === 'function' && /^\\/.*\\//.test(subject.toString())) {\n    return 'regexp';\n  }\n  return 'object';\n}\n\nfunction deepDiff(lhs, rhs, changes, prefilter, path, key, stack) {\n  path = path || [];\n  stack = stack || [];\n  var currentPath = path.slice(0);\n  if (typeof key !== 'undefined') {\n    if (prefilter) {\n      if (typeof(prefilter) === 'function' && prefilter(currentPath, key)) {\n        return; } else if (typeof(prefilter) === 'object') {\n        if (prefilter.prefilter && prefilter.prefilter(currentPath, key)) {\n          return; }\n        if (prefilter.normalize) {\n          var alt = prefilter.normalize(currentPath, key, lhs, rhs);\n          if (alt) {\n            lhs = alt[0];\n            rhs = alt[1];\n          }\n        }\n      }\n    }\n    currentPath.push(key);\n  }\n\n  // Use string comparison for regexes\n  if (realTypeOf(lhs) === 'regexp' && realTypeOf(rhs) === 'regexp') {\n    lhs = lhs.toString();\n    rhs = rhs.toString();\n  }\n\n  var ltype = typeof lhs;\n  var rtype = typeof rhs;\n\n  var ldefined = ltype !== 'undefined' || (stack && stack[stack.length - 1].lhs && stack[stack.length - 1].lhs.hasOwnProperty(key));\n  var rdefined = rtype !== 'undefined' || (stack && stack[stack.length - 1].rhs && stack[stack.length - 1].rhs.hasOwnProperty(key));\n\n  if (!ldefined && rdefined) {\n    changes(new DiffNew(currentPath, rhs));\n  } else if (!rdefined && ldefined) {\n    changes(new DiffDeleted(currentPath, lhs));\n  } else if (realTypeOf(lhs) !== realTypeOf(rhs)) {\n    changes(new DiffEdit(currentPath, lhs, rhs));\n  } else if (realTypeOf(lhs) === 'date' && (lhs - rhs) !== 0) {\n    changes(new DiffEdit(currentPath, lhs, rhs));\n  } else if (ltype === 'object' && lhs !== null && rhs !== null) {\n    if (!stack.filter(function(x) {\n        return x.lhs === lhs; }).length) {\n      stack.push({ lhs: lhs, rhs: rhs });\n      if (Array.isArray(lhs)) {\n        var i, len = lhs.length;\n        for (i = 0; i < lhs.length; i++) {\n          if (i >= rhs.length) {\n            changes(new DiffArray(currentPath, i, new DiffDeleted(undefined, lhs[i])));\n          } else {\n            deepDiff(lhs[i], rhs[i], changes, prefilter, currentPath, i, stack);\n          }\n        }\n        while (i < rhs.length) {\n          changes(new DiffArray(currentPath, i, new DiffNew(undefined, rhs[i++])));\n        }\n      } else {\n        var akeys = Object.keys(lhs);\n        var pkeys = Object.keys(rhs);\n        akeys.forEach(function(k, i) {\n          var other = pkeys.indexOf(k);\n          if (other >= 0) {\n            deepDiff(lhs[k], rhs[k], changes, prefilter, currentPath, k, stack);\n            pkeys = arrayRemove(pkeys, other);\n          } else {\n            deepDiff(lhs[k], undefined, changes, prefilter, currentPath, k, stack);\n          }\n        });\n        pkeys.forEach(function(k) {\n          deepDiff(undefined, rhs[k], changes, prefilter, currentPath, k, stack);\n        });\n      }\n      stack.length = stack.length - 1;\n    } else if (lhs !== rhs) {\n      // lhs is contains a cycle at this element and it differs from rhs\n      changes(new DiffEdit(currentPath, lhs, rhs));\n    }\n  } else if (lhs !== rhs) {\n    if (!(ltype === 'number' && isNaN(lhs) && isNaN(rhs))) {\n      changes(new DiffEdit(currentPath, lhs, rhs));\n    }\n  }\n}\n\nfunction accumulateDiff(lhs, rhs, prefilter, accum) {\n  accum = accum || [];\n  deepDiff(lhs, rhs,\n    function(diff) {\n      if (diff) {\n        accum.push(diff);\n      }\n    },\n    prefilter);\n  return (accum.length) ? accum : undefined;\n}\n\nfunction applyArrayChange(arr, index, change) {\n  if (change.path && change.path.length) {\n    var it = arr[index],\n      i, u = change.path.length - 1;\n    for (i = 0; i < u; i++) {\n      it = it[change.path[i]];\n    }\n    switch (change.kind) {\n      case 'A':\n        applyArrayChange(it[change.path[i]], change.index, change.item);\n        break;\n      case 'D':\n        delete it[change.path[i]];\n        break;\n      case 'E':\n      case 'N':\n        it[change.path[i]] = change.rhs;\n        break;\n    }\n  } else {\n    switch (change.kind) {\n      case 'A':\n        applyArrayChange(arr[index], change.index, change.item);\n        break;\n      case 'D':\n        arr = arrayRemove(arr, index);\n        break;\n      case 'E':\n      case 'N':\n        arr[index] = change.rhs;\n        break;\n    }\n  }\n  return arr;\n}\n\nfunction applyChange(target, source, change) {\n  if (target && source && change && change.kind) {\n    var it = target,\n      i = -1,\n      last = change.path ? change.path.length - 1 : 0;\n    while (++i < last) {\n      if (typeof it[change.path[i]] === 'undefined') {\n        it[change.path[i]] = (typeof change.path[i] === 'number') ? [] : {};\n      }\n      it = it[change.path[i]];\n    }\n    switch (change.kind) {\n      case 'A':\n        applyArrayChange(change.path ? it[change.path[i]] : it, change.index, change.item);\n        break;\n      case 'D':\n        delete it[change.path[i]];\n        break;\n      case 'E':\n      case 'N':\n        it[change.path[i]] = change.rhs;\n        break;\n    }\n  }\n}\n\nfunction revertArrayChange(arr, index, change) {\n  if (change.path && change.path.length) {\n    // the structure of the object at the index has changed...\n    var it = arr[index],\n      i, u = change.path.length - 1;\n    for (i = 0; i < u; i++) {\n      it = it[change.path[i]];\n    }\n    switch (change.kind) {\n      case 'A':\n        revertArrayChange(it[change.path[i]], change.index, change.item);\n        break;\n      case 'D':\n        it[change.path[i]] = change.lhs;\n        break;\n      case 'E':\n        it[change.path[i]] = change.lhs;\n        break;\n      case 'N':\n        delete it[change.path[i]];\n        break;\n    }\n  } else {\n    // the array item is different...\n    switch (change.kind) {\n      case 'A':\n        revertArrayChange(arr[index], change.index, change.item);\n        break;\n      case 'D':\n        arr[index] = change.lhs;\n        break;\n      case 'E':\n        arr[index] = change.lhs;\n        break;\n      case 'N':\n        arr = arrayRemove(arr, index);\n        break;\n    }\n  }\n  return arr;\n}\n\nfunction revertChange(target, source, change) {\n  if (target && source && change && change.kind) {\n    var it = target,\n      i, u;\n    u = change.path.length - 1;\n    for (i = 0; i < u; i++) {\n      if (typeof it[change.path[i]] === 'undefined') {\n        it[change.path[i]] = {};\n      }\n      it = it[change.path[i]];\n    }\n    switch (change.kind) {\n      case 'A':\n        // Array was modified...\n        // it will be an array...\n        revertArrayChange(it[change.path[i]], change.index, change.item);\n        break;\n      case 'D':\n        // Item was deleted...\n        it[change.path[i]] = change.lhs;\n        break;\n      case 'E':\n        // Item was edited...\n        it[change.path[i]] = change.lhs;\n        break;\n      case 'N':\n        // Item is new...\n        delete it[change.path[i]];\n        break;\n    }\n  }\n}\n\nfunction applyDiff(target, source, filter) {\n  if (target && source) {\n    var onChange = function(change) {\n      if (!filter || filter(target, source, change)) {\n        applyChange(target, source, change);\n      }\n    };\n    deepDiff(target, source, onChange);\n  }\n}\n\nObject.defineProperties(accumulateDiff, {\n\n  diff: {\n    value: accumulateDiff,\n    enumerable: true\n  },\n  observableDiff: {\n    value: deepDiff,\n    enumerable: true\n  },\n  applyDiff: {\n    value: applyDiff,\n    enumerable: true\n  },\n  applyChange: {\n    value: applyChange,\n    enumerable: true\n  },\n  revertChange: {\n    value: revertChange,\n    enumerable: true\n  },\n  isConflict: {\n    value: function() {\n      return 'undefined' !== typeof conflict;\n    },\n    enumerable: true\n  },\n  noConflict: {\n    value: function() {\n      if (conflictResolution) {\n        conflictResolution.forEach(function(it) {\n          it();\n        });\n        conflictResolution = null;\n      }\n      return accumulateDiff;\n    },\n    enumerable: true\n  }\n});\n\nexport default accumulateDiff;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deep-diff/index.es.js\n// module id = 30\n// module chunks = 0","function observableMixin(delgete) {\n\tdelgete.observe = (eventName, handler) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.observe(eventName, handler);\n\tdelgete.stopObserving = (eventName, handler) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.stopObserving(eventName, handler);\n\tdelgete.fire = (eventName, options) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.fire(eventName, options);\n\tdelgete.on = delgete.observe;\n\tdelgete.off = delgete.stopObserving;\n\tdelgete.trigger = delgete.fire;\n}\n\nexport default observableMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/mixin/observable.js","'use strict';\n\nimport PropTypes from 'prop-types';\nimport FabricObject from '../base/Object.jsx';\nimport {fabric} from 'fabric';\n\nexport default class Path extends FabricObject {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\tobject: null,\n\t\t};\n\n\t\tthis.draw = this.draw.bind(this);\n\n\t\tthis.toString = () => this.state.object &&\n\t\t\tthis.state.object.toString();\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.toDatalessObject = (propertiesToInclude) =>\n\t\t\tthis.state.object.toDatalessObject(propertiesToInclude);\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\tthis.state.object.toSVG(reviver);\n\t\tthis.complexity = () => this.state.object &&\n\t\t\tthis.state.object.complexity();\n\t}\n\n\tdraw(cb) {\n\t\tif (this.props.element instanceof Object) {\n\t\t\tfabric.Path.fromElement(\n\t\t\t\tthis.props.element,\n\t\t\t\t(instance) => super.draw(instance, cb),\n\t\t\t\tthis.props\n\t\t\t);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tfabric.Path.fromObject(\n\t\t\t\tthis.props.object,\n\t\t\t\t(instance) => super.draw(instance, cb)\n\t\t\t);\n\t\t} else {\n\t\t\tconst object = new fabric.Path(this.props.path, this.props);\n\t\t\tsuper.draw(object, cb);\n\n\t\t\treturn object;\n\t\t}\n\t}\n\n}\n\nPath.fromElement = (element, callback, options) => fabric.Path.fromElement(element, callback, options);\nPath.fromObject = (object, callback) => fabric.Path.fromObject(object, callback);\nPath.attribute = fabric.Path.ATTRIBUTE_NAMES;\n\nPath.propTypes = Object.assign({}, FabricObject.propTypes, {\n\tpath: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n\tminX: PropTypes.number,\n\tminY: PropTypes.number,\n});\n\nPath.defaultProps = Object.assign({}, FabricObject.defaultProps, {\n\ttype: 'path',\n\tpath: null,\n\tminX: 0,\n\tminY: 0,\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/shape/Path.jsx","'use strict';\n\nimport PropTypes from 'prop-types';\nimport FabricObject from './base/Object.jsx';\nimport { fabric } from 'fabric';\n\nexport default class Text extends FabricObject {\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = { object: null };\n\n        this.toString = () => this.state.object &&\n            this.state.object.toString();\n        this.isEmptyStyles = () => this.state.object &&\n            this.state.object.isEmptyStyles();\n        this.renderf = (ctx) => this.state.object &&\n            this.state.object.render(ctx);\n        this.toObject = (propertiesToInclude) => this.state.object &&\n            this.state.object.toObject(propertiesToInclude);\n        this.toSVG = (reviver) => this.state.object &&\n            this.state.object.toSVG(reviver);\n        this.complexity = () => 1;\n    }\n\n    draw(cb, obj) {\n        let object;\n        if (this.props.object instanceof Object) {\n            object = fabric.Text.fromObject(this.props.object);\n        } else if (this.props.element instanceof Object) {\n            object = fabric.Text.fromElement(this.props.element, this.props);\n        } else {\n            object = new fabric.Text(this.props.text, this.props);\n        }\n\n        if (obj === undefined) {\n            // use Text\n            super.draw(object, cb);\n        } else {\n            // use IText\n            super.draw(obj, cb);\n        }\n    }\n}\n\nText.attribute = fabric.Text.ATTRIBUTE_NAMES;\nText.defaultSvgFontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\nText.fromElement = (element, options) => fabric.Text.fromElement(element, options);\nText.fromObject = (object) => fabric.Text.fromObject(object);\n\nText.propTypes = Object.assign({}, FabricObject.propTypes, {\n    fontSize: PropTypes.number,\n    fontWeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    fontFamily: PropTypes.string,\n    textDecoration: PropTypes.oneOf(['', 'underline', 'overline', 'line-through']),\n    textAlign: PropTypes.oneOf(['left', 'center', 'right', 'justify']),\n    fontStyle: PropTypes.oneOf(['', 'normal', 'italic', 'oblique']),\n    lineHeight: PropTypes.number,\n    textBackgroundColor: PropTypes.string,\n});\n\nText.defaultProps = Object.assign({}, FabricObject.defaultProps, {\n    type: 'text',\n    stateProperties: FabricObject.defaultProps.stateProperties.concat(['fontFamily',\n        'fontWeight',\n        'fontSize',\n        'text',\n        'textDecoration',\n        'textAlign',\n        'fontStyle',\n        'lineHeight',\n        'textBackgroundColor',\n    ]),\n    fontSize: 40,\n    fontWeight: 'normal',\n    fontFamily: 'Times New Roman',\n    textDecoration: '',\n    textAlign: 'left',\n    fontStyle: '',\n    lineHeight: 1.16,\n    textBackgroundColor: '',\n    stroke: null,\n    shadow: null,\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/Text.jsx","'use strict';\n\nimport _StaticCanvas from './StaticCanvas.jsx';\nimport _Canvas from './Canvas.jsx';\n\nimport _Circle from './shape/Circle.jsx';\nimport _Ellipse from './shape/Ellipse.jsx';\nimport _Line from './shape/Line.jsx';\nimport _Path from './shape/Path.jsx';\nimport _PathGroup from './shape/PathGroup.jsx';\nimport _Polygon from './shape/Polygon.jsx';\nimport _Polyline from './shape/Polyline.jsx';\nimport _Rect from './shape/Rect.jsx';\nimport _Triangle from './shape/Triangle.jsx';\n\nimport _Image from './Image.jsx';\nimport _Text from './Text.jsx';\nimport _Itext from './IText.jsx';\n\nimport _imageFilter from './ImageFilters.js';\nimport _color from './Color.js';\n\n// Main Bundle\nexport default {\n\tStaticCanvas: _StaticCanvas,\n\tCanvas: _Canvas,\n\n\tCircle: _Circle,\n\tEllipse: _Ellipse,\n\tLine: _Line,\n\tPath: _Path,\n\tPathGroup: _PathGroup,\n\tPolygon: _Polygon,\n\tPolyline: _Polyline,\n\tRect: _Rect,\n\tTriangle: _Triangle,\n\n\tImage: _Image,\n\tText: _Text,\n\tItext: _Itext,\n\n\timageFilter: _imageFilter,\n\tcolor: _color,\n};\n\n// Canvas\nexport let StaticCanvas = _StaticCanvas;\nexport let Canvas = _Canvas;\n\n// Shape\nexport let Circle = _Circle;\nexport let Ellipse = _Ellipse;\nexport let Line = _Line;\nexport let Path = _Path;\nexport let PathGroup = _PathGroup;\nexport let Polygon = _Polygon;\nexport let Polyline = _Polyline;\nexport let Rect = _Rect;\nexport let Triangle = _Triangle;\n\nexport let Image = _Image;\nexport let Text = _Text;\nexport let Itext = _Itext;\n\n// utils\nexport let imageFilter = _imageFilter;\nexport let color = _color; \n\n\n\n// WEBPACK FOOTER //\n// ./src/react-fabric.js","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar checkPropTypes = require('./checkPropTypes');\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          invariant(\n            false,\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            warning(\n              false,\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `%s` prop on `%s`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',\n              propFullName,\n              componentName\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunction.thatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues);\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (propValue.hasOwnProperty(key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        warning(\n          false,\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received %s at index %s.',\n          getPostfixForTypeWarning(checker),\n          i\n        );\n        return emptyFunction.thatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/factoryWithTypeCheckers.js\n// module id = 35\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-assign/index.js\n// module id = 36\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== 'production') {\n  var invariant = require('fbjs/lib/invariant');\n  var warning = require('fbjs/lib/warning');\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = checkPropTypes;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/checkPropTypes.js\n// module id = 37\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/factoryWithThrowingShims.js\n// module id = 38\n// module chunks = 0","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/base64-js/index.js\n// module id = 39\n// module chunks = 0","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ieee754/index.js\n// module id = 40\n// module chunks = 0","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/punycode/punycode.js\n// module id = 43\n// module chunks = 0","module.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif(!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 44\n// module chunks = 0","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/url/util.js\n// module id = 45\n// module chunks = 0","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/querystring-es3/index.js\n// module id = 46\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/querystring-es3/decode.js\n// module id = 47\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/querystring-es3/encode.js\n// module id = 48\n// module chunks = 0","var capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\nvar toArrayBuffer = require('to-arraybuffer')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else if (capability.vbArray && preferBinary) {\n\t\treturn 'text:vbarray'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + new Buffer(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || 'timeout' in opts) {\n\t\t// If the use of XHR should be preferred and includes preserving the 'content-type' header.\n\t\t// Force XHR to be used since the Fetch API does not yet support timeouts.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n\t\tif (capability.blobConstructor) {\n\t\t\tbody = new global.Blob(self._body.map(function (buffer) {\n\t\t\t\treturn toArrayBuffer(buffer)\n\t\t\t}), {\n\t\t\t\ttype: (headersObj['content-type'] || {}).value || ''\n\t\t\t})\n\t\t} else {\n\t\t\t// get utf8 string\n\t\t\tbody = Buffer.concat(self._body).toString()\n\t\t}\n\t}\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin'\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode.split(':')[0]\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('timeout' in opts) {\n\t\t\txhr.timeout = opts.timeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('timeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress()\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode)\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {\n\tvar self = this\n\tself._destroyed = true\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\t// Currently, there isn't a way to truly abort a fetch.\n\t// If you like bikeshedding, see https://github.com/whatwg/fetch/issues/27\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setTimeout = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'user-agent',\n\t'via'\n]\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/stream-http/lib/request.js\n// module id = 49\n// module chunks = 0","var capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function(header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\n\t\t// TODO: this doesn't respect backpressure. Once WritableStream is available, this can be fixed\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tif (result.done) {\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(new Buffer(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function(err) {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {}\n\nIncomingMessage.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text:vbarray': // For IE9\n\t\t\tif (xhr.readyState !== rStates.DONE)\n\t\t\t\tbreak\n\t\t\ttry {\n\t\t\t\t// This fails in IE8\n\t\t\t\tresponse = new global.VBArray(xhr.responseBody).toArray()\n\t\t\t} catch (e) {}\n\t\t\tif (response !== null) {\n\t\t\t\tself.push(new Buffer(response))\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// Falls through in IE8\t\n\t\tcase 'text':\n\t\t\ttry { // This will fail when readyState = 3 in IE9. Switch mode and wait for readyState = 4\n\t\t\t\tresponse = xhr.responseText\n\t\t\t} catch (e) {\n\t\t\t\tself._mode = 'text:vbarray'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = new Buffer(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(new Buffer(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tself.push(null)\n\t}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/stream-http/lib/response.js\n// module id = 50\n// module chunks = 0","'use strict';\n\n/*<replacement>*/\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/lib/internal/streams/BufferList.js\n// module id = 52\n// module chunks = 0","var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/timers-browserify/main.js\n// module id = 53\n// module chunks = 0","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/setimmediate/setImmediate.js\n// module id = 54\n// module chunks = 0","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/util-deprecate/browser.js\n// module id = 55\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/lib/_stream_passthrough.js\n// module id = 56\n// module chunks = 0","var Buffer = require('buffer').Buffer\n\nmodule.exports = function (buf) {\n\t// If the buffer is backed by a Uint8Array, a faster version will work\n\tif (buf instanceof Uint8Array) {\n\t\t// If the buffer isn't a subarray, return the underlying ArrayBuffer\n\t\tif (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {\n\t\t\treturn buf.buffer\n\t\t} else if (typeof buf.buffer.slice === 'function') {\n\t\t\t// Otherwise we need to get a proper copy\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength)\n\t\t}\n\t}\n\n\tif (Buffer.isBuffer(buf)) {\n\t\t// This is the slow version that will work with any Buffer\n\t\t// implementation (even in old browsers)\n\t\tvar arrayCopy = new Uint8Array(buf.length)\n\t\tvar len = buf.length\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tarrayCopy[i] = buf[i]\n\t\t}\n\t\treturn arrayCopy.buffer\n\t} else {\n\t\tthrow new Error('Argument must be a Buffer')\n\t}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/to-arraybuffer/index.js\n// module id = 57\n// module chunks = 0","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xtend/immutable.js\n// module id = 58\n// module chunks = 0","module.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/builtin-status-codes/browser.js\n// module id = 59\n// module chunks = 0","var http = require('http');\n\nvar https = module.exports;\n\nfor (var key in http) {\n    if (http.hasOwnProperty(key)) https[key] = http[key];\n};\n\nhttps.request = function (params, cb) {\n    if (!params) params = {};\n    params.scheme = 'https';\n    params.protocol = 'https:';\n    return http.request.call(this, params, cb);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/https-browserify/index.js\n// module id = 60\n// module chunks = 0","function collectionMixin(delgete) {\n\tdelgete.add = (...args) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.add(...args);\n\tdelgete.insertAt = (object, index, nonSplicing) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.insertAt(object, index, nonSplicing);\n\tdelgete.remove = (...args) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.remove(...args);// arguments\n\tdelgete.forEachObject = (callback, context) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.forEachObject(callback, context);\n\tdelgete.getObjects = (type) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.getObjects(type);\n\tdelgete.item = (index) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.item(index);\n\tdelgete.isEmpty = () => delgete.state.canvas &&\n\t\tdelgete.state.canvas.isEmpty();\n\tdelgete.size = () => delgete.state.canvas &&\n\t\tdelgete.state.canvas.size();\n\tdelgete.contains = (object) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.contains(object);\n\tdelgete.complexity = () => delgete.state.canvas &&\n\t\tdelgete.state.canvas.complexity(object);\n};\n\nexport default collectionMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/mixin/collection.js","'use strict';\n\nimport PropTypes from 'prop-types';\nimport StaticCanvas from './StaticCanvas.jsx';\n\nexport default class Canvas extends StaticCanvas {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\n\t\tthis.state = {\n\t\t\tcanvas: null,\n\t\t};\n\n\t\tthis.ref = {};\n\t\tthis.containsPoint = (e, target) => this.state.canvas &&\n\t\t\tthis.state.canvas.containsPoint(e, target);\n\t\tthis.isTargetTransparent = (target, x, y) => this.state.canvas &&\n\t\t\tthis.state.canvas.isTargetTransparent(target, x, y);\n\t\tthis.setCursor = (value) => this.state.canvas &&\n\t\t\tthis.state.canvas.setCursor(value);\n\t\tthis.findTarget = (e, skipGroup) => this.state.canvas &&\n\t\t\tthis.state.canvas.findTarget(e, skipGroup);\n\t\tthis.getPointer = (e, ignoreZoom, upperCanvasEl) => this.state.canvas &&\n\t\t\tthis.state.canvas.getPointer(e, ignoreZoom, upperCanvasEl);\n\t\tthis.getSelectionContext = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getSelectionContext();\n\t\tthis.getSelectionElement = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getSelectionElement();\n\t\tthis.setActiveObject = (object, e) => this.state.canvas &&\n\t\t\tthis.state.canvas.setActiveObject(object, e);\n\t\tthis.getActiveObject = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getActiveObject();\n\t\tthis.discardActiveObject = (e) => this.state.canvas &&\n\t\t\tthis.state.canvas.discardActiveObject(e);\n\t\tthis.setActiveGroup = (group, e) => this.state.canvas &&\n\t\t\tthis.state.canvas.setActiveGroup(group, e);\n\t\tthis.discardActiveGroup = (e) => this.state.canvas &&\n\t\t\tthis.state.canvas.discardActiveGroup(e);\n\t\tthis.deactivateAll = () => this.state.canvas &&\n\t\t\tthis.state.canvas.deactivateAll();\n\t\tthis.deactivateAllWithDispatch = (e) => this.state.canvas &&\n\t\t\tthis.state.canvas.deactivateAllWithDispatch(e);\n\t\tthis.dispose = () => this.state.canvas &&\n\t\t\tthis.state.canvas.dispose();\n\t\tthis.drawControls = (ctx) => this.state.canvas &&\n\t\t\tthis.state.canvas.drawControls(ctx);\n\t}\n}\n\nCanvas.propTypes = Object.assign({}, StaticCanvas.propTypes, {\n\tuniScaleTransform: PropTypes.bool,\n\tcenteredScaling: PropTypes.bool,\n\tcenteredRotation: PropTypes.bool,\n\tinteractive: PropTypes.bool,\n\tselection: PropTypes.bool,\n\tselectionColor: PropTypes.string,\n\tselectionDashArray: PropTypes.array,\n\tselectionBorderColor: PropTypes.string,\n\tselectionLineWidth: PropTypes.number,\n\thoverCursor: PropTypes.string,\n\tmoveCursor: PropTypes.string,\n\tdefaultCursor: PropTypes.string,\n\tfreeDrawingCursor: PropTypes.string,\n\trotationCursor: PropTypes.string,\n\tcontainerClass: PropTypes.string,\n\tperPixelTargetFind: PropTypes.bool,\n\ttargetFindTolerance: PropTypes.number,\n\tskipTargetFind: PropTypes.bool,\n\tisDrawingMode: PropTypes.bool,\n});\n\nCanvas.defaultProps = Object.assign({}, StaticCanvas.defaultProps, {\n\tuniScaleTransform: false,\n\tcenteredScaling: false,\n\tcenteredRotation: false,\n\tinteractive: true,\n\tselection: true,\n\tselectionColor: 'rgba(100, 100, 255, 0.3)',\n\tselectionDashArray: [],\n\tselectionBorderColor: 'rgba(255, 255, 255, 0.3)',\n\tselectionLineWidth: 1,\n\thoverCursor: 'move',\n\tmoveCursor: 'move',\n\tdefaultCursor: 'default',\n\tfreeDrawingCursor: 'crosshair',\n\trotationCursor: 'crosshair',\n\tcontainerClass: 'canvas-container',\n\tperPixelTargetFind: false,\n\ttargetFindTolerance: 0,\n\tskipTargetFind: false,\n\tisDrawingMode: false,\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/Canvas.jsx","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FabricObject from '../base/Object.jsx';\nimport {fabric} from 'fabric';\nconst PI = Math.PI;\n\nexport default class Circle extends FabricObject {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\tobject: null,\n\t\t};\n\n\t\tthis.draw = this.draw.bind(this);\n\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\tthis.state.object.toSVG(reviver);\n\t\tthis.getRadiusX = () => this.state.object &&\n\t\t\tthis.state.object.getRadiusX();\n\t\tthis.getRadiusY = () => this.state.object &&\n\t\t\tthis.state.object.getRadiusY();\n\t\tthis.setRadius = (value) => this.state.object &&\n\t\t\tthis.state.object.setRadius(value);\n\t\tthis.renderf = (ctx, noTransform) => this.state.object &&\n\t\t\tthis.state.object.render(ctx, noTransform);\n\t\tthis.complexity = () => 1;\n\t}\n\n\tdraw(cb) {\n\t\tlet object;\n\t\tif (this.props.element instanceof Object) {\n\t\t\tobject = fabric.Circle.fromElement(this.props.element, this.props);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tobject = fabric.Circle.fromObject(this.props.object);\n\t\t} else {\n\t\t\tobject = new fabric.Circle(this.props);\n\t\t}\n\n\t\tsuper.draw(object, cb);\n\t}\n}\n\nCircle.fromElement = (element, options) => fabric.Circle.fromElement(element, options);\nCircle.fromObject = (object) => fabric.Circle.fromObject(object);\nCircle.attribute = fabric.Circle.ATTRIBUTE_NAMES;\n\nCircle.propTypes = Object.assign({}, FabricObject.propTypes, {\n\tendAngle: PropTypes.number,\n\tradius: PropTypes.number,\n\tstartAngle: PropTypes.number,\n});\n\nCircle.defaultProps = Object.assign({}, FabricObject.defaultProps, {\n\tendAngle: 2 * PI,\n\tradius: 0,\n\tstartAngle: 0,\n\ttype: 'circle',\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/shape/Circle.jsx","'use strict';\n\nimport PropTypes from 'prop-types';\nimport FabricObject from '../base/Object.jsx';\nimport {fabric} from 'fabric';\n\nexport default class Ellipse extends FabricObject {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\tobject: null,\n\t\t};\n\n\t\tthis.draw = this.draw.bind(this);\n\n\t\tthis.getRx = () => this.state.object &&\n\t\t\tthis.state.object.getRx();\n\t\tthis.getRy = () => this.state.object &&\n\t\t\tthis.state.object.getRy();\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\tthis.state.object.toObject(reviver);\n\t\tthis.renderf = () => this.state.object &&\n\t\t\t\tthis.state.object.render();\n\t\tthis.complexity = () => 1;\n\t}\n\n\tdraw(cb) {\n\t\tlet object;\n\t\tif (this.props.element instanceof Object) {\n\t\t\tobject = fabric.Ellipse.fromElement(this.props.element, this.props);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tobject = fabric.Ellipse.fromObject(this.props.object);\n\t\t} else {\n\t\t\tobject = new fabric.Ellipse(this.props);\n\t\t}\n\t\tsuper.draw(object, cb);\n\t}\n\n}\n\nEllipse.fromElement = (element, options) => fabric.Ellipse.fromElement(element, options);\nEllipse.fromObject = (object) => fabric.Ellipse.fromObject(object);\nEllipse.attribute = fabric.Ellipse.ATTRIBUTE_NAMES;\n\nEllipse.propTypes = Object.assign({}, FabricObject.propTypes, {\n\trx: PropTypes.number,\n\try: PropTypes.number,\n});\n\nEllipse.defaultProps = Object.assign({}, FabricObject.defaultProps, {\n\trx: 0,\n\try: 0,\n\ttype: 'ellipse',\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/shape/Ellipse.jsx","'use strict';\n\nimport PropTypes from 'prop-types';\nimport FabricObject from '../base/Object.jsx';\nimport {fabric} from 'fabric';\n\nexport default class Line extends FabricObject {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\tobject: null,\n\t\t};\n\n\t\tthis.draw = this.draw.bind(this);\n\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.calcLinePoints = () => this.state.object &&\n\t\t\tthis.state.object.calcLinePoints();\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\t\tthis.state.object.toSVG(reviver);\n\t\tthis.complexity = () => 1;\n\n\t}\n\n\tdraw(cb) {\n\t\tlet object;\n\t\tif (this.props.element instanceof Object) {\n\t\t\tobject = fabric.Line.fromElement(this.props.element, this.props);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tobject = fabric.Line.fromObject(this.props.object);\n\t\t} else {\n\t\t\tconst {x1, y1, x2, y2} = this.props;\n\t\t\tconst coords = [x1, y1, x2, y2];\n\t\t\tobject = new fabric.Line(coords, this.props);\n\t\t}\n\t\tsuper.draw(object, cb);\n\t}\n\n}\n\nLine.fromElement = (element, options) => fabric.Line.fromElement(element, options);\nLine.fromObject = (object) => fabric.Line.fromObject(object);\nLine.attribute = fabric.Line.ATTRIBUTE_NAMES;\n\nLine.propTypes = Object.assign({}, FabricObject.propTypes, {\n\tx1: PropTypes.number,\n\ty1: PropTypes.number,\n\tx2: PropTypes.number,\n\ty2: PropTypes.number,\n});\n\nLine.defaultProps = Object.assign({}, FabricObject.defaultProps, {\n\ttype: 'line',\n\tx1: 0,\n\ty1: 0,\n\tx2: 0,\n\ty2: 0,\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/shape/Line.jsx","'use strict';\n\nimport PropTypes from 'prop-types';\nimport Path from './Path';\nimport {fabric} from 'fabric';\n\nexport default class PathGroup extends Path {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\tobject: null,\n\t\t};\n\n\t\tthis.draw = this.draw.bind(this);\n\n\t\tthis.parseDimensionsFromPaths = (options) => this.state.object &&\n\t\t\tthis.state.object.parseDimensionsFromPaths(options);\n\t\tthis.renderf = (ctx) => this.state.object &&\n\t\t\tthis.state.object.renderf(ctx);\n\t\tthis.toObject = (propertiesToInclude) =>\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.toDatalessObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toDatalessObject(propertiesToInclude);\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\tthis.state.object.toSVG(reviver);\n\t\tthis.toString =  () => this.state.object &&\n\t\t\tthis.state.object.toSVG();\n\t\tthis.isSameColor =  () => this.state.object &&\n\t\t\tthis.state.object.isSameColor();\n\t\tthis.complexity =  () => this.state.object &&\n\t\t\tthis.state.object.complexity();\n\t\tthis.getObjects =  () => this.state.object &&\n\t\t\tthis.state.object.getObjects();\n\n\t}\n\n\tdraw(cb) {\n\t\tif (this.props.element instanceof Object) {\n\t\t\tfabric.PathGroup.fromElement(\n\t\t\t\tthis.props.element,\n\t\t\t\t(instance) => super.draw(instance, cb),\n\t\t\t\tthis.props\n\t\t\t);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tfabric.PathGroup.fromObject(\n\t\t\t\tthis.props.object,\n\t\t\t\t(instance) => super.draw(instance, cb)\n\t\t\t);\n\t\t} else {\n\t\t\tconst paths = [];\n\t\t\tif (this.props.children instanceof Array) {\n\t\t\t\tthis.props.children.forEach(child => paths.push(new fabric.Path(child.props.path, child.props)));\n\t\t\t} else {\n\t\t\t\tpaths.push(new fabric.Path(this.props.children.props.path, this.props.children.props));\n\t\t\t}\n\n\t\t\tconst object = new fabric.PathGroup(paths, this.props);\n\t\t\tsuper.draw(object, cb);\n\t\t}\n\t}\n\n}\n\nPathGroup.fromElement = (element, callback, options) => fabric.PathGroup.fromElement(element, callback, options);\nPathGroup.fromObject = (object, callback) => fabric.PathGroup.fromObject(object, callback);\nPathGroup.attribute = fabric.PathGroup.ATTRIBUTE_NAMES;\n\nPathGroup.defaultProps = Object.assign({}, Path.defaultProps, {\n\ttype: 'path-group',\n\tfill: '',\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/shape/PathGroup.jsx","'use strict';\n\nimport PropTypes from 'prop-types';\nimport FabricObject from '../base/Object.jsx';\nimport {fabric} from 'fabric';\n\nexport default class Polygon extends FabricObject {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\tobject: null,\n\t\t};\n\n\t\tthis.draw = this.draw.bind(this);\n\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\tthis.state.object.toSVG(reviver);\n\t\tthis.commonRender = () => this.state.object &&\n\t\t\tthis.state.object.commonRender();\n\n\t\tthis.complexity = () => this.props.points ? this.props.points.length : 0;\n\n\t}\n\n\tdraw(cb) {\n\t\tlet object;\n\t\tif (this.props.element instanceof Object) {\n\t\t\tobject = fabric.Polygon.fromElement(this.props.element, this.props);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tobject = fabric.Polygon.fromObject(this.props.object);\n\t\t} else {\n\t\t\tobject = new fabric.Polygon(this.props.points, this.props);\n\t\t}\n\t\tsuper.draw(object, cb);\n\t}\n}\n\nPolygon.fromElement = (element, options) => fabric.Polygon.fromElement(element, options);\nPolygon.fromObject = (object) => fabric.Polygon.fromObject(object);\nPolygon.attribute = fabric.Polygon.ATTRIBUTE_NAMES;\n\nPolygon.propTypes = Object.assign({}, FabricObject.propTypes, {\n\tpoints: PropTypes.array,\n\tminX: PropTypes.number,\n\tminY: PropTypes.number,\n});\n\nPolygon.defaultProps = Object.assign({}, FabricObject.defaultProps, {\n\ttype: 'polygon',\n\tpoints: null,\n\tminX: 0,\n\tminY: 0,\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/shape/Polygon.jsx","'use strict';\n\nimport PropTypes from 'prop-types';\nimport FabricObject from '../base/Object.jsx';\nimport {fabric} from 'fabric';\n\nexport default class Polyline extends FabricObject {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\tobject: null,\n\t\t};\n\n\t\tthis.draw = this.draw.bind(this);\n\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\tthis.state.object.toSVG(reviver);\n\n\t\tthis.complexity = () => this.props.points ? this.props.points.length : 0;\n\t}\n\n\tdraw(cb) {\n\t\tlet object;\n\t\tif (this.props.element instanceof Object) {\n\t\t\tobject = fabric.Polyline.fromElement(this.props.element, this.props);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tobject = fabric.Polyline.fromObject(this.props.object);\n\t\t} else {\n\t\t\tobject = new fabric.Polyline(this.props.points, this.props);\n\t\t}\n\t\tsuper.draw(object, cb);\n\t}\n\n}\n\nPolyline.fromElement = (element, options) => fabric.Polyline.fromElement(element, options);\nPolyline.fromObject = (object) => fabric.Polyline.fromObject(object);\nPolyline.attribute = fabric.Polyline.ATTRIBUTE_NAMES;\n\nPolyline.propTypes = Object.assign({}, FabricObject.propTypes, {\n\tpoints: PropTypes.array,\n\tminX: PropTypes.number,\n\tminY: PropTypes.number,\n});\n\nPolyline.defaultProps = Object.assign({}, FabricObject.defaultProps, {\n\ttype: 'polyline',\n\tpoints: null,\n\tminX: 0,\n\tminY: 0,\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/shape/Polyline.jsx","'use strict';\n\nimport PropTypes from 'prop-types';\nimport FabricObject from '../base/Object.jsx';\nimport {fabric} from 'fabric';\n\nexport default class Rect extends FabricObject {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\tobject: null,\n\t\t};\n\n\t\tthis.draw = this.draw.bind(this);\n\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\tthis.state.object.toSVG(reviver);\n\n\t\tthis.complexity = () => 1;\n\t}\n\n\tdraw(cb) {\n\t\tlet object;\n\t\tif (this.props.element instanceof Object) {\n\t\t\tobject = fabric.Rect.fromElement(this.props.element, this.props);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tobject = fabric.Rect.fromObject(this.props.object);\n\t\t} else {\n\t\t\tobject = new fabric.Rect(this.props);\n\t\t}\n\t\tsuper.draw(object, cb);\n\t}\n\n}\n\nRect.fromElement = (element, options) => fabric.Rect.fromElement(element, options);\nRect.fromObject = (object) => fabric.Rect.fromObject(object);\nRect.attribute = fabric.Rect.ATTRIBUTE_NAMES;\n\nRect.propTypes = Object.assign({}, FabricObject.propTypes, {\n\trx: PropTypes.number,\n\try: PropTypes.number,\n});\n\nRect.defaultProps = Object.assign({}, FabricObject.defaultProps, {\n\ttype: 'rect',\n\trx: 0,\n\try: 0,\n\tstrokeDashArray: null,\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/shape/Rect.jsx","'use strict';\n\n// import {PropTypes} from 'react';\nimport FabricObject from '../base/Object.jsx';\nimport {fabric} from 'fabric';\n\nexport default class Triangle extends FabricObject {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\tobject: null,\n\t\t};\n\n\t\tthis.draw = this.draw.bind(this);\n\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\tthis.state.object.toSVG(reviver);\n\n\t\tthis.complexity = () => 1;\n\t}\n\n\tdraw(cb) {\n\t\tlet object;\n\t\tif (this.props.element instanceof Object) {\n\t\t\tobject = fabric.Triangle.fromElement(this.props.element, this.props);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tobject = fabric.Triangle.fromObject(this.props.object);\n\t\t} else {\n\t\t\tobject = new fabric.Triangle(this.props);\n\t\t}\n\t\tsuper.draw(object, cb);\n\t}\n\n}\n\nTriangle.fromObject = (object) => fabric.Triangle.fromObject(object);\n\nTriangle.propTypes = Object.assign({}, FabricObject.propTypes);\nTriangle.defaultProps = Object.assign({}, FabricObject.defaultProps, {\n\ttype: 'triangle',\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/shape/Triangle.jsx","'use strict';\n\nimport PropTypes from 'prop-types';\nimport FabricObject from './base/Object.jsx';\nimport {fabric} from 'fabric';\n\nexport default class Image extends FabricObject {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\n\t\tthis.state = {object: null};\n\n\t\tthis.getElement = () => this.state.object &&\n\t\t\tthis.state.object.getElement();\n\t\tthis.setElement = (element, callback, options) => this.state.object &&\n\t\t\tthis.state.object.setElement(element, callback, options);\n\t\tthis.setCrossOrigin = (value) => this.state.object &&\n\t\t\tthis.state.object.setCrossOrigin(value);\n\t\tthis.getOriginalSize = () => this.state.object &&\n\t\t\tthis.state.object.getOriginalSize();\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\tthis.state.object.toSVG(reviver);\n\t\tthis.getSrc = () => this.state.object &&\n\t\t\tthis.state.object.getSrc();\n\t\tthis.setSrc = (src, callback, options) => this.state.object &&\n\t\t\tthis.state.object.setSrc(src, callback, options);\n\t\tthis.toString = () => this.state.object &&\n\t\t\tthis.state.object.toString();\n\t\tthis.clone = (callback, propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.clone(callback, propertiesToInclude);\n\t\tthis.applyFilters = (callback, filters, imgElement, forResizing) => this.state.object &&\n\t\t\tthis.state.object.applyFilters(callback, filters, imgElement, forResizing);\n\t\tthis.complexity = () => 1;\n\t}\n\n\tdraw(cb) {\n\t\tif (typeof(this.props.src) === 'string') {\n\t\t\tfabric.Image.fromURL(\n\t\t\t\tthis.props.src,\n\t\t\t\t(instance) => super.draw(instance, cb),\n\t\t\t\tthis.props\n\t\t\t);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tfabric.Image.fromObject(\n\t\t\t\tthis.props.object,\n\t\t\t\t(instance) => super.draw(instance, cb)\n\t\t\t);\n\t\t} else if (this.props.element instanceof Object) {\n\t\t\tfabric.Image.fromElement(\n\t\t\t\tthis.props.element,\n\t\t\t\t(instance) => super.draw(instance, cb),\n\t\t\t\tthis.props\n\t\t\t);\n\t\t} else {\n\t\t\tconst instance = new fabric.Image(this.props.imgElement, this.props);\n\t\t\tsuper.draw(instance, cb);\n\t\t}\n\t}\n}\n\nImage.getSvgSrc = fabric.Image.prototype.getSrc;\nImage.css = fabric.Image.CSS_CANVAS;\nImage.fromObject = (object, callback) => fabric.Image.fromObject(object, callback);\nImage.fromURL = (url, callback, imgOptions) => fabric.Image.fromURL(url, callback, imgOptions);\nImage.fromElement = (element, callback, options) => fabric.Image.fromElement(element, callback, options);\nImage.attribute = fabric.Image.ATTRIBUTE_NAMES;\nImage.async = true;\nImage.pngCompression = 1;\n\nImage.propTypes = Object.assign({}, FabricObject.propTypes, {\n\tcrossOrigin: PropTypes.oneOf(['', 'anonymous', 'use-credentials']),\n\talignX: PropTypes.oneOf(['none', 'mid', 'min', 'max']),\n\talignY: PropTypes.oneOf(['none', 'mid', 'min', 'max']),\n\tmeetOrSlice: PropTypes.oneOf(['meet', 'slice']),\n});\n\nImage.defaultProps = Object.assign({}, FabricObject.defaultProps, {\n\ttype: 'image',\n\tcrossOrigin: '',\n\talignX: 'none',\n\talignY: 'none',\n\tmeetOrSlice: 'meet',\n\tstrokeWidth: 0,\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/Image.jsx","'use strict';\n\nimport PropTypes from 'prop-types';\nimport Text from './Text';\nimport FabricObject from './base/Object.jsx';\nimport { fabric } from 'fabric';\n\nexport default class IText extends Text {\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = { object: null };\n\n        this.isEmptyStyles = () => this.state.object &&\n            this.state.object.isEmptyStyles();\n        this.setSelectionStart = (index) => this.state.object &&\n            this.state.object.setSelectionStart(index);\n        this.setSelectionEnd = (index) => this.state.object &&\n            this.state.object.setSelectionEnd(index);\n        this.getSelectionStyles = () => this.state.object &&\n            this.state.object.getSelectionStyles();\n        this.setSelectionStyles = (styles) => this.state.object &&\n            this.state.object.setSelectionStyles(styles);\n        this.renderCursorOrSelection = () => this.state.object &&\n            this.state.object.renderCursorOrSelection();\n        this.get2DCursorLocation = (selectionStart) => this.state.object &&\n            this.state.object.get2DCursorLocation(selectionStart);\n        this.getCurrentCharStyle = (lineIndex, charIndex) => this.state.object &&\n            this.state.object.getCurrentCharStyle(lineIndex, charIndex);\n        this.getCurrentCharFontSize = (lineIndex, charIndex) => this.state.object &&\n            this.state.object.getCurrentCharFontSize(lineIndex, charIndex);\n        this.getCurrentCharColor = (lineIndex, charIndex) => this.state.object &&\n            this.state.object.getCurrentCharColor(lineIndex, charIndex);\n        this.renderCursor = (boundaries, ctx) => this.state.object &&\n            this.state.object.renderCursor(boundaries, ctx);\n        this.renderSelection = (chars, boundaries, ctx) => this.state.object &&\n            this.state.object.renderSelection(chars, boundaries, ctx);\n        this.toObject = (propertiesToInclude) => this.state.object &&\n            this.state.object.toObject(propertiesToInclude);\n    }\n\n    draw(canvas) {\n        let object;\n        if (this.props.object instanceof Object) {\n            object = fabric.IText.fromObject(this.props.object);\n        } else {\n            object = new fabric.IText(this.props.text, this.props);\n        }\n\n        super.draw(canvas, object);\n    }\n\n    initEvent() {\n        const { object } = this.state;\n        if (!(object instanceof fabric.Object)) return;\n\n        super.initEvent();\n        if (this.props.onChanged instanceof Function) {\n            object.on('changed', this.props.onChanged);\n        }\n        if (this.props.onSelectionChanged instanceof Function) {\n            object.on('selection:changed', this.props.onSelectionChanged);\n        }\n        if (this.props.onEditingEntered instanceof Function) {\n            object.on('editing:entered', this.props.onEditingEntered);\n        }\n        if (this.props.onEditingExited instanceof Function) {\n            object.on('editing:exited', this.props.onEditingExited);\n        }\n    }\n\n    eventChanged(nextProps) {\n        const { object } = this.state;\n        if (!(object instanceof fabric.Object)) return;\n\n        super.eventChanged(nextProps);\n        if (this.props.onChanged && !nextProps.onChanged) {\n            object.off('changed');\n        } else if (nextProps.onChanged instanceof Function) {\n            object.off('changed');\n            object.on('changed', this.props.onChanged);\n        }\n        if (this.props.onSelectionChanged && !nextProps.onSelectionChanged) {\n            object.off('selection:changed');\n        } else if (nextProps.onSelectionChanged instanceof Function) {\n            object.off('selection:changed');\n            object.on('selection:changed', this.props.onSelectionChanged);\n        }\n        if (this.props.onEditingEntered && !nextProps.onEditingEntered) {\n            object.off('editing:entered');\n        } else if (nextProps.onEditingEntered instanceof Function) {\n            object.off('editing:entered');\n            object.on('editing:entered', this.props.onEditingEntered);\n        }\n        if (this.props.onEditingExited && !nextProps.onEditingExited) {\n            object.off('editing:exited');\n        } else if (nextProps.onEditingExited instanceof Function) {\n            object.off('editing:exited');\n            object.on('editing:exited', this.props.onEditingExited);\n        }\n    }\n}\nIText.fromObject = (object) => fabric.IText.fromObject(object);\n\nIText.propTypes = Object.assign({}, Text.propTypes, {\n    selectionStart: PropTypes.number,\n    selectionEnd: PropTypes.number,\n    selectionColor: PropTypes.string,\n    isEditing: PropTypes.bool,\n    editable: PropTypes.bool,\n    editingBorderColor: PropTypes.string,\n    cursorWidth: PropTypes.number,\n    cursorColor: PropTypes.string,\n    cursorDelay: PropTypes.number,\n    cursorDuration: PropTypes.number,\n    styles: PropTypes.object,\n    caching: PropTypes.bool,\n});\n\nIText.defaultProps = Object.assign({}, Text.defaultProps, {\n    type: 'i-text',\n    selectionStart: 0,\n    selectionEnd: 0,\n    selectionColor: 'rgba(17,119,255,0.3)',\n    isEditing: false,\n    editable: true,\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n    cursorWidth: 2,\n    cursorColor: '#333',\n    cursorDelay: 1000,\n    cursorDuration: 600,\n    // styles: [],\n    // caching: true,\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/IText.jsx","'use strict';\n\nimport {fabric} from 'fabric';\n\nexport const BaseFilter = fabric.Image.filters.BaseFilter;\nexport const Brightness = fabric.Image.filters.Brightness;\nexport const Convolute = fabric.Image.filters.Convolute;\nexport const GradientTransparency = fabric.Image.filters.GradientTransparency;\nexport const Grayscale = fabric.Image.filters.Grayscale;\nexport const Invert = fabric.Image.filters.Invert;\nexport const Mask = fabric.Image.filters.Mask;\nexport const Multiply = fabric.Image.filters.Multiply;\n\nexport const Noise = fabric.Image.filters.Noise;\nexport const Pixelate = fabric.Image.filters.Pixelate;\nexport const RemoveWhite = fabric.Image.filters.RemoveWhite;\nexport const Resize = fabric.Image.filters.Resize;\nexport const Sepia = fabric.Image.filters.Sepia;\nexport const Sepia2 = fabric.Image.filters.Sepia2;\nexport const Tint = fabric.Image.filters.Tint;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ImageFilters.js","'use strict';\n\nimport {fabric} from 'fabric';\nexport default fabric.Color;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Color.js"],"sourceRoot":""}